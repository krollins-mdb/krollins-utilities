[
  {
    "code": "   :emphasize-lines: 4\n\n   curl --user '{USERNAME}:{APIKEY}' --digest \\\n     --header 'Accept: application/json' \\\n     --include \\\n     --request GET \"https://cloud.mongodb.com/api/atlas/v1.0?pretty=true\"\n\nResponse Codes\n--------------\n\nResponses use the standard |http| response codes, including:\n\n.. list-table::\n   :widths: 5 20 75\n   :header-rows: 1\n\n   * - Code\n     - Meaning\n     - Notes\n\n   * - 200\n     - OK\n     - The request was successful. This is typically the response to a\n       successful ``GET`` request.\n\n   * - 201\n     - Created\n     - A new resource was created. This is typically the response to a\n       successful ``POST`` request.\n\n   * - 202\n     - Accepted\n     - A request for an asynchronous operation was accepted.\n\n   * - 400\n     - Bad Request\n     - Something was wrong with the client request.\n\n   * - 401\n     - Unauthorized\n     - Authentication is required but was not present in the request.\n       Typically this means that the digest authentication information\n       was omitted from the request, the provided credentials are\n       incorrect, or the user associated with the given\n       {+atlas-admin-api+} key is not allowed to access the requested\n       resource. \n\n   * - 403\n     - Forbidden\n     - Access to the specified resource is not permitted.\n\n   * - 404\n     - Not Found\n     - The requested resource does not exist.\n\n   * - 405\n     - Method Not Allowed\n     - The |http| method is not supported for the specified resource.\n       Keep in mind that each resource may only support a subset of |http| methods.\n       For example, you can't ``DELETE`` the root resource.\n\n   * - 409\n     - Conflict\n     - This is the response to a request to create or modify\n       a property of an entity that is unique when an existing entity\n       already exists with the same value for that property.\n\n   * - 5xx\n     - Various server errors\n     - Something unexpected went wrong. Try again later and consider\n       notifying |service| Support.\n\nErrors\n------\n\nWhen a request returns an error, the response body contains a |json|\ndocument. This document includes details about why the\n{+atlas-admin-api+} request failed. The document contains five\nparameters: \n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 14 66\n\n   * - Parameter\n     - Data Type\n     - Description\n\n   * - detail\n     - string\n     - Human-readable description that |service| returns for the errant\n       {+atlas-admin-api+} request.\n\n   * - error\n     - integer\n     - :rfc:`Status code <2616#section-6.1.1>` returned in the\n       header of the |http| response.\n\n   * - errorCode\n     - string\n     - Named constant that represents the errant {+atlas-admin-api+}\n       request. To learn about these constants, see\n       :ref:`atlas-api-error-codes`. \n\n   * - parameters\n     - array\n     - List of parameters included in the {+atlas-admin-api+} request.\n\n   * - reason\n     - string\n     - :rfc:`Status code definition <2616#section-6.1.1>` returned in\n       the header of the |http| response.\n\n.. example::\n\n   |service| returns the following response body when you make a\n   request in the incorrect format:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/api/atlas-admin-api-ref.txt"
  },
  {
    "code": "      :copyable: false\n      :linenos:\n\n      {\n        \"detail\" : \"Cannot find resource /api/atlas/v1.0/softwareComponents/version.\",\n        \"error\" : 404,\n        \"errorCode\" : \"RESOURCE_NOT_FOUND\",\n        \"parameters\" : [ \"/api/atlas/v1.0/softwareComponents/version\" ],\n        \"reason\" : \"Not Found\"\n      }\n\n.. _group-id:\n.. _project-id:\n\nProject ID\n----------\n\nYour Project ID is a string value that uniquely identifies a\n|service| project.\n\n|service| projects were previously identified as \"groups\". Some\n|service| endpoints reference ``group`` or ``{GROUP-ID}`` as part of\nthe request path, query, or body parameters. For any endpoint that\nrequires your ``{GROUP-ID}``, specify your Project ID instead.\n\nTo retrieve your project ID:\n\n.. include:: /includes/steps-view-project-id.rst\n\nAuthentication\n--------------\n\nThe {+atlas-admin-api+} uses |http| Digest Authentication to authenticate\nrequests. Digest authentication requires a username and a password, where \nthe |api| public key serves as the username and its corresponding |api| private key \nserves as the password. To learn more, see :ref:`api-authentication`.\n\n.. include:: /includes/fact-api-authentication.rst\n\n.. _api-rate-limiting:\n\nRate Limiting\n-------------\n\nCertain resources limit how many requests they can process per minute.\n\nFor these resources, |service| allows up to 100 requests per minute\n*per project*. {+atlas-admin-api+} keys belong to an organization, but\ncan be granted access multiple projects.\n\n.. example::\n\n   Consider two users: A and B. User A belongs to project X, and user B\n   belongs to projects X and Y.\n\n   - At 1:00:00pm, User A makes 50 requests to a rate limited resource\n     in project X, all of which are complete by 1:00:20pm.\n\n   - At 1:00:30pm, User B attempts to make 60 requests to a rate\n     limited resource in project X.\n\n     Since User A has already used up 50 requests within the 1:00pm\n     minute for project X, the last 10 requests User B attempts to make\n     are rejected.\n\n     However, User B can make requests to a rate limited resource in\n     project Y, since each project maintains a separate request\n     counter.\n\n   - At 1:01:00pm, requests to project X may proceed, because the\n     request counter used for rate limiting resets each minute.\n\nIf you exceed the rate limit, the {+atlas-admin-api+} returns a `429\n<https://httpstatuses.com/429>`__ (Too Many Requests) |http| status\ncode.\n\nNext Steps\n----------\n\nTo get started, see :ref:`atlas-admin-api-access`.\n\nTo manage programmatic access to the {+atlas-admin-api+}, see \nany of the following procedures:\n\n- :ref:`atlas-admin-api-access-org`.\n\n- :ref:`prog-access-mult-orgs`.\n\n- :ref:`atlas-admin-api-access-project`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/api/atlas-admin-api-ref.txt"
  },
  {
    "code": "         :caption: Base URL\n\n         https://cloud.mongodb.com/api/atlas/<version-number>/ \n\n      .. example:: \n\n         Consider the following base |url| for the legacy version of an\n         {+atlas-admin-api+} resource: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/api/migrate-to-new-version.txt"
  },
  {
    "code": "         :copyable: false \n\n         Deprecation: Wed, 1 Feb 2023 00:00:00 GMT\n         Sunset: Sun, 1 Jun 2025 00:00:00 GMT\n\n   You can continue to send requests to older resource versions of the\n   endpoint until they are removed. However, you should migrate to the\n   latest resource version as soon as possible to mitigate disruptions\n   when older resource versions are removed. To learn more about\n   migrating to a new resource version, see\n   :ref:`atlas-migrate-api-version`. \n\n.. expression:: sunset \n\n   |service| automatically removes resource versions after one year of\n   deprecation. If you send a request to a removed resource version,\n   |service| returns the `410 Gone\n   <https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/410>`__  \n   error response code. \n\n.. example:: \n\n   The following example illustrates the lifecycle of a resource and its\n   impact on versioning. \n\n   .. figure:: /images/admin-api-versioning-strategy.png\n      :alt: Illustration of admin API versioning lifecycle\n      :figwidth: 650px\n\n   The preceding illustration shows the following: \n\n   .. list-table:: \n      :stub-columns: 1\n\n      * - Release Date \n        - Release Details \n        - API Lifecyle \n\n      * - 2023-06-01 \n        - First release of a resource in the Versioned API.\n          It has a deprecation period of 12 months. \n        - - ``#stable``: ``application/vnd.atlas.2023-06-01+json``\n          - ``#deprecated``: None \n          - ``#sunset``: None \n      \n      * - 2024-06-01\n        - New resource version created, older versions are automatically\n          deprecated.\n        - - ``#stable``: ``application/vnd.atlas.2024-06-01+json``\n          - ``#deprecated``: ``application/vnd.atlas.2023-06-01+json`` \n          - ``#sunset``: None \n\n      * - 2025-01-01\n        - New stable version created, with short sunset \n        - - ``#stable``: ``application/vnd.atlas.2025-01-01+json``\n          - ``#deprecated``: \n            \n            - ``application/vnd.atlas.2024-12-01~preview+json``\n            - ``application/vnd.atlas.2024-06-01+json``\n          \n          - ``#sunset``: ``application/vnd.atlas.2023-06-01+json`` \n\n|api| Endpoints \n~~~~~~~~~~~~~~~\n\nFor legacy unversioned {+atlas-admin-api+} endpoints, |service|\nintroduced new and breaking changes in the same version. Starting in \nversioned {+atlas-admin-api+} (v2), |service| introduces breaking\nchanges only in a new resurce version. |service| will continue to\nintroduce non-breaking changes to existing ``stable`` version. Use the\nrelease date of a resource to submit a request to a specific version of\na versioned {+atlas-admin-api+} (v2) endpoint. \n\nThe following table shows the legacy |api| endpoint versions, whether\nthe version has a corresponding versioned {+atlas-admin-api+} (v2)\nendpoint, and the release date of the versioned {+atlas-admin-api+} \n(v2) resource. Note that an equivalent of v1.0 in the unversioned\n{+atlas-admin-api+} is represented by ``2023-01-01`` in the versioned\n{+atlas-admin-api+}, which is now deprecated.  \n\n.. list-table:: \n   :header-rows: 1 \n\n   * - Version Number \n     - Supported in v2?\n     - v2 Resource Version (in ``yyyy-mm-dd`` format) \n\n   * - ``v1.0``\n     - √\n     - ``2023-01-01`` \n\n   * - ``v1.5`` \n     - √\n     - ``2023-02-01`` \n\nNext Steps\n----------\n\n1. Review the :ref:`API changelog <versioned-api-changelog>`, which\n   gives you visibility into all |api| changes across different versions.\n#. Review the :atlas:`API Specification\n   </reference/api-resources-spec/>`, which contains information for all\n   stable and deprecated resource versions. \n#. Follow the steps in the :ref:`Migration Guide\n   <atlas-migrate-api-version>` to migrate from the current unversioned\n   {+atlas-admin-api+} to the new versioned {+atlas-admin-api+}.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/api/versioned-api-overview.txt"
  },
  {
    "code": "   :copyable: false\n\n   2023-03-09T13:35:23.446-04:00 I COMMAND  [conn1] command internal.clients\n     appName: \"MongoDB Shell\"\n     command: insert {\n        insert: \"clients\",\n        documents: [ {\n              _id: ObjectId('593adc5b99001b7d119d0c97'),\n               \"key1_string\": \"value1\",\n               \"key2_number\": 1234,\n               \"key3_array\": [\"a\", \"b\" ],\n               \"key4_dict\": { subkey1: \"subkeyvalue\" }\n           } ],\n        ordered: true\n     }\n     ...\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-data-processing.txt"
  },
  {
    "code": "     :copyable: true\n\n     {\n       \"mappings\": {\n         \"dynamic\": false,\n         \"fields\": {\n           \"released\": {\n             \"type\": \"date\"\n           }\n         }\n       }\n     }\n\n   The following query searches for movies released near September \n   01, 2011 using the :pipeline:`$search` stage. The query includes \n   a:\n    \n   - :pipeline:`$project` stage to exclude all fields in the documents \n     except ``title`` and ``released``. \n   - :pipeline:`$facet` stage that outputs a: \n \n     - ``docs`` field with an array of the top ``5`` search results\n     - ``meta`` field with the value of ``$$SEARCH_META`` variable\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/aggregation-stages/search.txt"
  },
  {
    "code": "     :copyable: true\n\n     .. input::\n         :language: json\n\n         db.movies.aggregate([\n           {\n             \"$search\": {\n               \"near\": {\n                 \"path\": \"released\",\n                 \"origin\": ISODate(\"2011-09-01T00:00:00.000+00:00\"),\n                 \"pivot\": 7776000000\n               }\n             }\n           },\n           {\n             $project: {\n               \"_id\": 0,\n               \"title\": 1,\n               \"released\": 1\n             }\n           },\n           { \"$limit\": 5 },\n           { \n             \"$facet\": {\n               \"docs\": [],\n               \"meta\": [\n                 {\"$replaceWith\": \"$$SEARCH_META\"}, \n                 {\"$limit\": 1}\n               ] \n             }\n           } \n         ])\n\n     .. output::\n         :language: json\n         :visible: true\n\n         { \n           \"docs\" : [ \n             { \n               \"title\" : \"Submarino\", \n               \"released\" : ISODate(\"2011-09-01T00:00:00Z\") \n             }, \n             { \n               \"title\" : \"Devil's Playground\", \n               \"released\" : ISODate(\"2011-09-01T00:00:00Z\") \n             }, \n             { \n               \"title\" : \"Bag It\", \n               \"released\" : ISODate(\"2011-09-01T00:00:00Z\") \n             }, \n             { \n               \"title\" : \"Dos\", \n               \"released\" : ISODate(\"2011-09-01T00:00:00Z\") \n             }, \n             { \n               \"title\" : \"We Were Here\", \n               \"released\" : ISODate(\"2011-09-01T00:00:00Z\") \n             }\n           ], \n           \"meta\" : [ \n             { \"count\" : { \"lowerBound\" : NumberLong(17373) } } \n           ] \n         }\n\n   To learn more about the ``$$SEARCH_META`` variable and its usage, \n   see: \n\n   - :ref:`facet <fts-facet-aggregation-variable>`\n   - :ref:`count <fts-count-aggregation-variable>`\n\nTroubleshooting\n---------------\n\n.. include:: /includes/fact-fts-troubleshooting \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/aggregation-stages/search.txt"
  },
  {
    "code": "   :copyable: true\n\n   {\n     \"mappings\": {\n       \"dynamic\": false,\n       \"fields\": {\n         \"year\": {\n           \"type\": \"number\"\n         }\n       }\n     }\n   }\n\nThe following query searches for the number of movies released in 1998\nusing the :pipeline:`$searchMeta` stage.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/aggregation-stages/searchMeta.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.movies.aggregate([\n        {\n          \"$searchMeta\": {\n            \"range\": {\n              \"path\": \"year\",\n              \"gte\": 1998,\n              \"lt\": 1999\n            },\n            \"count\": {\n              \"type\": \"total\"\n            }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n      \n      [ { count: { total: Long(\"552\") } } ]\n\nTroubleshooting\n---------------\n\n.. include:: /includes/fact-fts-troubleshooting \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/aggregation-stages/searchMeta.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n          {\n            \"mappings\": {\n              \"fields\": {\n                \"text\": {\n                  \"type\": \"document\",\n                  \"dynamic\": true,\n                  \"fields\": {\n                    \"en_US\": {\n                      \"analyzer\": \"htmlStrippingAnalyzer\",\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            },\n            \"analyzers\": [{\n              \"name\": \"htmlStrippingAnalyzer\",\n              \"charFilters\": [{\n                \"type\": \"htmlStrip\",\n                \"ignoredTags\": [\"a\"]\n              }],\n              \"tokenizer\": {\n                \"type\": \"standard\"\n              },\n              \"tokenFilters\": []\n            }]\n          }\n\nThe following query looks for occurrences of the string ``head`` in\nthe ``text.en_US`` field of the ``minutes`` collection. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos:\n\n      db.minutes.aggregate([   \n        {     \n          \"$search\": {\n            \"text\": {\n              \"query\": \"head\",\n              \"path\": \"text.en_US\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.en_US\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n    \n      [\n        {\n          _id: 2,\n          text: { en_US: \"The head of the sales department spoke first.\" }\n        },\n        {\n          _id: 3,\n          text: {\n            en_US: \"<body>We'll head out to the conference room by noon.</body>\"\n          }\n        }\n      ]\n\n|fts| doesn't return the document with ``_id: 1`` because the \nstring ``head`` is part of the HTML tag ``<head>``. The \ndocument with ``_id: 3`` contains HTML tags, but the string \n``head`` is elsewhere so the document is a match. The following\ntable shows the tokens that |fts| generates for the ``text.en_US``\nfield values in documents ``_id: 1``, ``_id: 2``, and  ``_id: 3`` in\nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using the\n``htmlStrippingAnalyzer``. \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 20 80\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 1``\n     - ``This``, ``page``, ``deals``, ``with``, ``department``,\n       ``meetings``  \n\n   * - ``_id: 2``\n     - ``The``, ``head``, ``of``, ``the``, ``sales``, ``department``,\n       ``spoke``, ``first`` \n\n   * - ``_id: 3``\n     - ``We'll``, ``head``, ``out``, ``to``, ``the``, ``conference``,\n       ``room``, ``by``, ``noon``\n\n.. _icuNormalize-ref:\n\nicuNormalize\n------------\n\nThe ``icuNormalize`` character filter normalizes text with the `ICU \n<http://site.icu-project.org/>`__ Normalizer. It is based on Lucene's \n`ICUNormalizer2CharFilter <https://lucene.apache.org/core/8_3_0/analyzers-icu/org/apache/lucene/analysis/icu/ICUNormalizer2CharFilter.html>`__. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attribute:\n\n.. list-table::\n   :widths: 12 12 11 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this character filter type. \n       Value must be ``icuNormalize``.\n\nExample\n~~~~~~~\n\nThe following index definition example indexes the ``message`` field\nin the :ref:`minutes <custom-analyzers-eg-coll>` collection using a\ncustom analyzer named ``normalizingAnalyzer``. The custom analyzer\nspecifies the following:  \n   \n- Normalize the text in the ``message`` field value using the\n  ``icuNormalize`` character filter. \n- Tokenize the words in the field based on occurrences of whitespace\n  between words using the :ref:`whitespace-tokenizer-ref` tokenizer. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``normalizingAnalyzer``\n      .. |fts-char-filter| replace:: :guilabel:`icuNormalize`\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |minutes-collection-field| replace:: **message**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-character-filter-config-steps-without-options.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"message\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"normalizingAnalyzer\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"normalizingAnalyzer\",\n               \"charFilters\": [\n                 {\n                   \"type\": \"icuNormalize\"\n                 }\n               ],\n               \"tokenizer\": {\n                 \"type\": \"whitespace\"\n               },\n               \"tokenFilters\": []\n             }\n           ]\n         }\n\nThe following query searches for occurrences of the string \n``no`` (for  number) in the ``message`` field of the ``minutes``\ncollection. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos:\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"no\",\n              \"path\": \"message\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"message\": 1,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 4,\n          title: 'The daily huddle on tHe StandUpApp2',\n          message: 'write down your signature or phone №'\n        }\n      ]\n\n|fts| matched document with ``_id: 4`` to the query term ``no``\nbecause it normalized the numero symbol ``№`` in the field using the \n``icuNormalize`` character filter and created the token ``no`` for\nthat typographic abbreviation of the word \"number\". |fts| generates\nthe following tokens for the ``message`` field value in document\n``_id: 4`` using the ``normalizingAnalyzer``:\n\n.. list-table:: \n   :header-rows: 1\n   :widths: 20 80\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 4``\n     - ``write``, ``down``, ``your``, ``signature``, ``or``, ``phone``, ``no``\n\n.. _mapping-ref:\n\nmapping\n-------\n\nThe ``mapping`` character filter applies user-specified normalization \nmappings to characters. It is based on Lucene's `MappingCharFilter \n<https://lucene.apache.org/core/8_0_0/analyzers-common/org/apache/lucene/analysis/charfilter/MappingCharFilter.html>`__. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this character filter type. \n       Value must be ``mapping``.\n \n   * - ``mappings``\n     - object\n     - yes\n     - Object that contains a comma-separated list of mappings. A \n       mapping indicates that one character or group of characters \n       should be substituted for another, in the format \n       ``<original> : <replacement>``.\n\nExample\n~~~~~~~\n         \nThe following index definition example indexes the \n``page_updated_by.phone`` field in the :ref:`minutes \n<custom-analyzers-eg-coll>` collection using a custom analyzer named \n``mappingAnalyzer``. The custom analyzer specifies the  following:  \n         \n- Remove instances of hyphen (``-``), dot (``.``), open parenthesis \n  (``(``), close parenthesis ( ``)``), and space characters in \n  the phone field using the ``mapping`` character filter.  \n- Tokenize the entire input as a single token using the \n  :ref:`keyword-tokenizer-ref` tokenizer.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``mappingAnalyzer``\n      .. |fts-char-filter| replace:: :guilabel:`mapping`\n      .. |fts-char-filter-options| replace:: :guilabel:`mappings`\n      .. |fts-tokenizer| replace:: :guilabel:`keyword`\n      .. |minutes-collection-field| replace:: **page_updated_by.phone** (:manual:`nested </core/document/#dot-notation>`) \n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-char-filter-mapping-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"page_updated_by\": {\n                 \"fields\": {\n                   \"phone\": {\n                     \"analyzer\": \"mappingAnalyzer\",\n                     \"type\": \"string\"\n                   }\n                 },\n                 \"type\": \"document\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"mappingAnalyzer\",\n               \"charFilters\": [\n                 {\n                   \"mappings\": {\n                     \"-\": \"\",\n                     \".\": \"\",\n                     \"(\": \"\",\n                     \")\": \"\",\n                     \" \": \"\"\n                   },\n                   \"type\": \"mapping\"\n                 }\n               ],\n               \"tokenizer\": {\n                 \"type\": \"keyword\"\n               }\n             }\n           ]\n         }\n\nThe following query searches the ``page_updated_by.phone`` field for\nthe string ``1234567890``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"1234567890\",\n              \"path\": \"page_updated_by.phone\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"page_updated_by.phone\": 1,\n            \"page_updated_by.last_name\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 1,\n          page_updated_by: { last_name: 'AUERBACH', phone: '(123)-456-7890' }\n        }\n      ]\n\nThe |fts| results contain one document where the numbers in the\n``phone`` string match the query string. |fts| matched the\ndocument to the query string even though the query doesn't\ninclude the parentheses around the phone area code and the\nhyphen between the numbers because |fts| removed these\ncharacters using the ``mapping`` character filter and created a\nsingle token for the field value. Specifically, |fts| generated\nthe following token for the ``phone`` field in document with\n``_id: 1``:  \n         \n.. list-table:: \n   :header-rows: 1\n   :widths: 20 80\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 1``\n     - ``1234567890``\n         \n|fts| would also match document with  ``_id: 1`` for searches\nfor ``(123)-456-7890``, ``123-456-7890``, ``123.456.7890``, and\nso on because for :ref:`bson-data-types-string` fields, |fts| also\nanalyzes search query terms using the index analyzer (or if\nspecified, using the ``searchAnalyzer``). The following table shows\nthe tokens that |fts| creates by removing instances of hyphen\n(``-``), dot (``.``), open parenthesis (``(``), close parenthesis (\n``)``), and space characters in the query term:\n\n.. list-table:: \n   :header-rows: 1\n   :widths: 20 80\n\n   * - Query Term \n     - Output Tokens \n\n   * - ``(123)-456-7890``\n     - ``1234567890``\n\n   * - ``123-456-7890``\n     - ``1234567890``\n\n   * - ``123.456.7890``\n     - ``1234567890``\n\n.. seealso:: Additional Sample Index Definitions and Queries\n   \n   - :ref:`shingle-tf-ref` token filter\n   - :ref:`regexcapturegroup-tokenizer-ref` tokenizer\n\n.. _persian-ref:\n\npersian\n-------\n\nThe ``persian`` character filter replaces instances of `zero-width \nnon-joiner <https://en.wikipedia.org/wiki/Zero-width_non-joiner>`__ \nwith the space character. This character filter is based on Lucene's \n`PersianCharFilter <https://lucene.apache.org/core/8_0_0/analyzers-common/org/apache/lucene/analysis/fa/PersianCharFilter.html>`__. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attribute:\n\n.. list-table::\n   :widths: 12 12 11 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this character filter type. \n       Value must be ``persian``.\n\nExample\n~~~~~~~\n\nThe following index definition example indexes the ``text.fa_IR``\nfield in the :ref:`minutes <custom-analyzers-eg-coll>` collection\nusing a custom analyzer named ``persianCharacterIndex``. The \ncustom analyzer specifies the following:  \n\n- Apply the ``persian`` character filter to replace non-printing\n  characters in the field value with the space character.\n- Use the :ref:`whitespace-tokenizer-ref` tokenizer to create tokens\n  based on occurrences of whitespace between words.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``persianCharacterIndex``\n      .. |fts-char-filter| replace:: :guilabel:`persian`\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |minutes-collection-field| replace:: **text.fa_IR** (:manual:`nested </core/document/#dot-notation>`)\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-character-filter-config-steps-without-options.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n         {\n           \"analyzer\": \"lucene.standard\",\n           \"mappings\": {\n             \"fields\": {\n               \"text\": {\n                 \"dynamic\": true,\n                 \"fields\": {\n                   \"fa_IR\": {\n                     \"analyzer\": \"persianCharacterIndex\",\n                     \"type\": \"string\"\n                   }\n                 },\n                 \"type\": \"document\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"persianCharacterIndex\",\n               \"charFilters\": [\n                 {\n                   \"type\": \"persian\"\n                 }\n               ],\n               \"tokenizer\": {\n                 \"type\": \"whitespace\"\n               }\n             }\n           ]\n         }\n      \nThe following query searches the ``text.fa_IR`` field for the term\n``صحبت``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"صحبت\",\n              \"path\": \"text.fa_IR\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.fa_IR\": 1,\n            \"page_updated_by.last_name\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 2,\n          page_updated_by: { last_name: 'OHRBACH' },\n          text: { fa_IR: 'ابتدا رئیس بخش فروش صحبت کرد' }\n        }\n      ]\n\n|fts| returns the  ``_id: 2`` document that contains the query term.\n|fts| matches the query term to the document by first replacing\ninstances of zero-width non-joiners with the space character and\nthen creating individual tokens for each word in the field value\nbased on occurrences of whitespace between words. Specifically, |fts|\ngenerates the following tokens for document with ``_id: 2``: \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 20 80\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 2``\n     - ``ابتدا``, ``رئیس``, ``بخش``, ``فروش``, ``صحبت``, ``کرد``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/character-filters.txt"
  },
  {
    "code": "            :copyable: true\n            :emphasize-lines: 6\n      \n            {\n              \"mappings\": {\n                \"fields\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"analyzer\": \"lucene.keyword\"\n                  }\n                }\n              }\n            }\n\n      #. Click :guilabel:`Next`.\n      #. Click :guilabel:`Create Search Index`.\n\nThe following query searches for the phrase ``Class Action`` in the\n``title`` field. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/keyword.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        { \n          \"$search\": {\n            \"text\": {\n               \"query\": \"Class Action\",\n               \"path\": \"title\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [\n        { \n          title: 'Class Action' \n        }\n      ]\n\n|fts| returned the document because it matched the query term ``Class\nAction`` to the single token ``Class Action`` that it creates for the\ntext in the field using the ``lucene.keyword`` analyzer. By contrast,\n|fts| doesn't return any results for the following query: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/keyword.txt"
  },
  {
    "code": "   :copyable: true \n\n   db.cases.aggregate([\n     {\n       \"$search\": {\n         \"text\": {\n           \"query\": \"action\",\n           \"path\": \"title\"\n         }\n       }\n     }\n   ])\n\nMany documents in the collection contain the string ``action``, but the \n``keyword`` analyzer only matches documents in which the search term\nmatches the entire contents of the field exactly. For the preceding\nquery, the ``keyword`` analyzer wouldn't return any results. However, if\nyou indexed the field using the :ref:`ref-standard-analyzer` or\n:ref:`ref-simple-analyzer`, |fts| would return multiple documents in the\nresults, including the document with the title field value ``Class \nAction``, because it would create tokens similar to the following, which\nit would then match to the query term:\n\n.. list-table:: Tokens\n   :header-rows: 1\n\n   * - Analyzer \n     - Output Tokens\n     - Matches ``action`` \n     - Matches ``Class Action``\n\n   * - Keyword Analyzer Tokens \n     - ``Class Action``\n     - X\n     - √\n     \n   * - Standard Analyzer Tokens \n     - ``class``, ``action``\n     - √\n     - √\n\n   * - Simple Analyzer Tokens\n     - ``class``, ``action``\n     - √\n     - √\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/keyword.txt"
  },
  {
    "code": "   :copyable: true\n\n   { \n     \"_id\": 1,  \n     \"subject\": {\n       \"en\": \"It is better to equip our cars to understand the causes of the accident.\",\n       \"fr\": \"Mieux équiper nos voitures pour comprendre les causes d'un accident.\",\n       \"he\": \"עדיף לצייד את המכוניות שלנו כדי להבין את הגורמים לתאונה.\"\n     } \n   } \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/language.txt"
  },
  {
    "code": "   :copyable: true\n   \n   { \n     \"_id\": 2,  \n     \"subject\": {\n       \"en\": \"The best time to do this is immediately after you've filled up with fuel\",\n       \"fr\": \"Le meilleur moment pour le faire c'est immédiatement après que vous aurez fait le plein de carburant.\",\n       \"he\": \"הזמן הטוב ביותר לעשות זאת הוא מיד לאחר שמילאת דלק.\"\n     } \n   } \n\n.. _builtin-language-analyzer-eg:\n\nBuilt-In Language Analyzer Example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example index definition specifies an index on\nthe ``subject.fr`` field using the ``french`` analyzer:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/language.txt"
  },
  {
    "code": "   :copyable: true\n\n   {\n     \"mappings\": {\n       \"fields\": {\n         \"subject\": {\n           \"fields\": {\n             \"fr\": {\n               \"analyzer\": \"lucene.french\",\n               \"type\": \"string\"\n             }\n           },\n           \"type\": \"document\"\n         }\n       }\n     }\n   }\n\nThe following query searches for the string ``pour`` in the\n``subject.fr`` field:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/language.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: shell\n\n      db.cars.aggregate([\n        { \n          $search: {\n            \"text\": {\n              \"query\": \"pour\",\n              \"path\": \"subject.fr\"\n            }\n          }\n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"subject.fr\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\nThe previous query returns no results when using the ``french`` analyzer,\nbecause ``pour`` is a built-in stop word. Using the ``standard``\nanalyzer, the same query would return both documents.\n\nThe following query searches for the string ``carburant`` in the\n``subject.fr`` field:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/language.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: shell\n\n      db.cars.aggregate([\n        { \n          $search: {\n            \"text\": {\n              \"query\": \"carburant\",\n              \"path\": \"subject.fr\"\n            }\n          } \n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"subject.fr\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { subject: { fr: \"Le meilleur moment pour le faire c'est immédiatement après que vous aurez fait le plein de carburant.\" } }\n\n|fts| returns a document with ``_id: 1`` in the results because the query\nmatched a token that the ``lucene.french`` analyzer created for the\ndocument. The ``lucene.french`` analyzer creates the following tokens\nfor the ``subject.fr`` field in document with ``_id: 1``:\n\n.. list-table::\n   :widths: 33 33 33\n   \n   * - ``meileu``\n     - ``moment`` \n     - ``fair``\n\n   * - ``est``\n     - ``imediat``\n     - ``aprè``\n\n   * - ``fait``\n     - ``plein``\n     - ``carburant``\n\n.. _custom-language-analyzer-eg:\n\nCustom Language Analyzer Example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can also create indexes for unsupported languages by\ncreating a :ref:`custom analyzer <custom-analyzers>` with the\n:ref:`icuFolding <icufolding-tf-ref>` and :ref:`stopword\n<stopword-tf-ref>` token filters.\n\nThe following example index definition specifies an index on\nthe ``subject.he`` field using a :ref:`custom analyzer\n<custom-analyzers>` called ``myHebrewAnalyzer`` to analyze and create\ntokens for Hebrew text:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/language.txt"
  },
  {
    "code": "   :copyable: true\n\n   {\n     \"analyzer\": \"lucene.standard\",\n     \"mappings\": {\n       \"dynamic\": false,\n       \"fields\": {\n         \"subject\": {\n           \"fields\": {\n             \"he\": {\n               \"analyzer\": \"myHebrewAnalyzer\",\n               \"type\": \"string\"\n             }\n           },\n           \"type\": \"document\"\n         }\n       }\n     },\n     \"analyzers\": [\n       {\n         \"charFilters\": [],\n         \"name\": \"myHebrewAnalyzer\",\n         \"tokenFilters\": [\n           {\n             \"type\": \"icuFolding\"\n           },\n           {\n             \"tokens\": [\n               \"אן\",\n               \"שלנו\",\n               \"זה\",\n               \"אל\"\n             ],\n             \"type\": \"stopword\"\n           }\n         ],\n         \"tokenizer\": {\n           \"type\": \"standard\"\n         }\n       }\n     ]\n   }\n\nThe following query searches for the string ``המכוניות`` in the\n``subject.he`` field:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/language.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: sh\n\n      db.cars.aggregate([\n        {\n          $search: {\n            \"text\": {\n              \"query\": \"המכוניות\",\n              \"path\": \"subject.he\"\n            }\n          }\n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"subject.he\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { subject: { he: 'עדיף לצייד את המכוניות שלנו כדי להבין את הגורמים לתאונה.' } }\n  \n|fts| returns a document with ``_id: 1`` in the results because the\nquery matched a token that the ``myHebrewAnalyzer`` analyzer created for\ndocument. The ``myHebrewAnalyzer`` analyzer creates the following tokens\nfor the ``subject.he`` field in document with ``_id: 1``:\n\n.. list-table::\n   :widths: 33 33 33\n   \n   * - ``עדיף``\n     - ``לצייד`` \n     - ``את``\n\n   * - ``המכוניות``\n     - ``כדי``\n     - ``להבין``\n\n   * - ``את``\n     - ``הגורמים``\n     - ``לתאונה``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/language.txt"
  },
  {
    "code": "            :copyable: true\n            :emphasize-lines: 8-13\n            :linenos:\n\n            {\n              \"mappings\": {\n                \"dynamic\": false,\n                \"fields\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"analyzer\": \"lucene.standard\",\n                    \"multi\": {\n                      \"keywordAnalyzer\": {\n                        \"type\": \"string\",\n                        \"analyzer\": \"lucene.keyword\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n\n      #. Click :guilabel:`Next`.\n      #. Click :guilabel:`Create Search Index`.\n\nThe following query uses the alternate analyzer, named \n``keywordAnalyzer``, to search for exact matches on the string ``The \nCount of Monte Cristo``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/multi.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"The Count of Monte Cristo\",\n              \"path\": { \"value\": \"title\", \"multi\": \"keywordAnalyzer\" }\n            }\n          }\n        }, \n        { \n          \"$project\": { \n            \"title\": 1,\n            \"year\": 1,\n            \"_id\": 0 \n          } \n        }\n      ])\n\n   .. output:: \n      :language: json\n\n      { \"title\" : \"The Count of Monte Cristo\", \"year\" : 1934 }\n      { \"title\" : \"The Count of Monte Cristo\", \"year\" : 1954 }\n      { \"title\" : \"The Count of Monte Cristo\", \"year\" : 1998 }\n\nBy contrast, the same query using the ``standard`` analyzer would find \nall the movies with the word ``the`` or ``Count`` or ``of`` or ``Monte``\nor ``Cristo`` in the title.\n\n|fts| creates the following tokens (searchable terms) for the documents\nin the results using the analyzers: \n\n.. list-table:: Tokens\n   :header-rows: 1\n   :stub-columns: 1\n\n   * - Title \n     - Standard Analyzer Tokens \n     - Keyword Analyzer Tokens\n\n   * - ``The Count of Monte Cristo`` \n     - ``the``, ``count``, ``of``, ``monte``, ``cristo``\n     - ``The Count of Monte Cristo``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/multi.txt"
  },
  {
    "code": "            :copyable: true\n            :emphasize-lines: 6\n   \n            {\n              \"mappings\": {\n                \"fields\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"analyzer\": \"lucene.simple\"\n                  }\n                }\n              }\n            }\n\n      #. Click :guilabel:`Next`.\n      #. Click :guilabel:`Create Search Index`.\n\nThe following query searches for the term ``lion`` in the ``title``\nfield and limits the output to five results. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/simple.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos:\n\n      db.movies.aggregate([\n        { \n          \"$search\": {\n            \"text\": {\n               \"query\": \"lion\",\n               \"path\": \"title\"\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [\n        { title: 'White Lion' },\n        { title: 'The Lion King' },\n        { title: 'The Lion King 1 1/2' },\n        { title: 'The Lion King 1 1/2' },\n        { title: 'Lion's Den' },\n      ]\n\n|fts| returns these documents by doing the following for the text in the\n``title`` field using the ``lucene.simple`` analyzer:\n\n-  Convert text to lowercase.\n-  Create separate tokens by dividing text wherever there is a\n   non-letter character. \n\nThe following table shows the tokens that |fts| creates using the\n:ref:`ref-simple-analyzer` and, by contrast, the\n:ref:`ref-standard-analyzer` and :ref:`ref-whitespace-analyzer` for the\ndocuments in the results:  \n\n.. list-table:: Tokens\n   :header-rows: 1\n\n   * - Title \n     - Simple Analyzer Tokens \n     - Standard Analyzer Tokens\n     - Whitespace Analyzer Tokens\n\n   * - ``White Lion`` \n     - ``white``, ``lion``\n     - ``white``, ``lion``\n     - ``White``, ``Lion``\n\n   * - ``The Lion King`` \n     - ``the``, ``lion``, ``king``\n     - ``the``, ``lion``, ``king``\n     - ``The``, ``Lion``, ``King``\n\n   * - ``The Lion King 1 1/2`` \n     - ``the``, ``lion``, ``king``\n     - ``the``, ``lion``, ``king``, ``1``, ``1``, ``2``\n     - ``The``, ``Lion``, ``King``, ``1``, ``1/2``\n\n   * - ``Lion's Den`` \n     - ``lion``, ``s``, ``den``\n     - ``lion's``, ``den``\n     - ``Lion's``, ``Den``\n\n|fts| returns document ``Lion's Den`` in the results because the\n``simple`` analyzer creates a separate token for ``lion``, which matches\nthe query term ``lion``. By contrast, if you index the field using the\n:ref:`ref-standard-analyzer` or :ref:`ref-whitespace-analyzer`, |fts|\nwould return some of the documents in the results for the query, but not\n``Lion's Den`` because these analyzers would create the tokens\n``lion's`` and ``Lion's`` respectively, but don't create a token for\n``lion``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/simple.txt"
  },
  {
    "code": "            :copyable: true\n            :emphasize-lines: 6\n\n            {\n              \"mappings\": {\n                \"fields\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"analyzer\": \"lucene.standard\"\n                  }\n                }\n              }\n            }\n      \n      #. Click :guilabel:`Next`.\n      #. Click :guilabel:`Create Search Index`.\n\nThe following query searches the ``title`` field for the term ``action``\nand limits the output to two results.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/standard.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        { \n          \"$search\": {\n            \"text\": {\n               \"query\": \"action\",\n               \"path\": \"title\"\n            }\n          }\n        },\n        {\n          \"$limit\": 2\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [\n        {\n          title: 'Action Jackson'\n        },\n        { \n          title: 'Class Action' \n        }\n      ]\n\n|fts| returned these documents because it matched the query term\n``action`` to the token ``action`` for the documents, which |fts|\ncreated by doing the following for the text in the ``title`` field\nusing the ``lucene.standard`` analyzer: \n\n- Convert the text to lowercase. \n- Split the text based on word boundaries and create separate tokens.\n\nThe following table shows the tokens (searchable terms) that |fts|\ncreates using the :ref:`ref-standard-analyzer` and, by contrast, the\ntokens that |fts| creates for the :ref:`ref-keyword-analyzer` and\n:ref:`ref-whitespace-analyzer` for the documents in the results: \n\n.. list-table:: Tokens\n   :header-rows: 1\n   :stub-columns: 1\n\n   * - Title \n     - Standard Analyzer Tokens \n     - Keyword Analyzer Tokens\n     - Whitespace Analyzer Tokens\n\n   * - ``Action Jackson`` \n     - ``action``, ``jackson``\n     - ``Action Jackson``\n     - ``Action``, ``Jackson``\n\n   * - ``Class Action`` \n     - ``class``, ``action``\n     - ``Class Action``\n     - ``Class``, ``Action``\n\nIf you index the field using the: \n\n- :ref:`ref-keyword-analyzer`, |fts| wouldn't match the documents in the\n  results for the query term ``action`` because the ``keyword`` analyzer\n  matches only documents in which the search term matches the entire\n  contents of the field (``Action Jackson`` and ``Class Action``)\n  exactly.    \n- :ref:`ref-whitespace-analyzer`, |fts| wouldn't match the documents in\n  the results for the query term ``action`` because the ``whitespace``\n  analyzer tokenizes the ``title`` field value in its original case\n  (``Action``) and the query term has the lowercase ``action``, which\n  doesn't match the ``whitespace`` analyzer token. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/standard.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"page_updated_by\": {\n                 \"type\": \"document\",\n                 \"dynamic\": false,\n                 \"fields\": {\n                   \"first_name\": {\n                     \"type\": \"string\",\n                     \"analyzer\": \"asciiConverter\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"asciiConverter\",\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"asciiFolding\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``first_name`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection for names \nusing their ASCII equivalent.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json  \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"Sian\",\n              \"path\": \"page_updated_by.first_name\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"page_updated_by.last_name\": 1,\n            \"page_updated_by.first_name\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [\n       {\n          _id: 1,\n          page_updated_by: { last_name: 'AUERBACH', first_name: 'Siân'}\n       }\n      ]\n\n|fts| returns document with ``_id: 1`` in the results because |fts|\ncreated the following tokens (searchable terms) for the\n``page_updated_by.first_name`` field in the document, which it then\nused to match to the query term ``Sian``: \n\n.. list-table::\n   :header-rows: 1\n\n   * - Field Name \n     - Output Tokens \n\n   * - ``page_updated_by.first_name``\n     - ``Sian``\n\n.. _daitchmokotoffsoundex-tf-ref: \n\ndaitchMokotoffSoundex\n---------------------\n\nThe ``daitchMokotoffSoundex`` token filter creates tokens for words \nthat sound the same based on the `Daitch-Mokotoff Soundex \n<https://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex>`__ \nphonetic algorithm. This filter can generate multiple encodings for \neach input, where each encoded token is a 6 digit number. \n\n.. note:: \n\n   Don't use the ``daitchMokotoffSoundex`` token filter in: \n          \n   - :ref:`Synonym <synonyms-ref>` or :ref:`autocomplete \n     <bson-data-types-autocomplete>` type mapping definitions.\n   - Operators where ``fuzzy`` is enabled. |fts| supports the ``fuzzy`` \n     option for the following operators: \n\n     - :ref:`autocomplete-ref`\n     - :ref:`text-ref` \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 17 12 11 50\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``daitchMokotoffSoundex``.\n\n   * - ``originalTokens`` \n     - string\n     - no \n     - String that specifies whether to include or omit the original \n       tokens in the output of the token filter. Value can be one of \n       the following: \n\n       - ``include`` - include the original tokens with the encoded \n         tokens in the output of the token filter. We recommend this \n         value if you want queries on both the original tokens as well \n         as the encoded forms. \n       - ``omit`` - omit the original tokens and include only the \n         encoded tokens in the output of the token filter. Use this \n         value if you want to only query on the encoded forms of the \n         original tokens.\n\n       *Default*: ``include``\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``page_updated_by.last_name``\nfield in the :ref:`minutes <custom-analyzers-eg-coll>` collection using\na custom analyzer named ``dmsAnalyzer``. The custom analyzer specifies\nthe following:  \n   \na. Apply the :ref:`standard tokenizer <standard-tokenizer-ref>` to\n   create tokens based on word break rules. \n#. Apply the ``daitchMokotoffSoundex`` token filter to encode the\n   tokens for words that sound the same.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``dmsAnalyzer`` \n      .. |fts-tokenizer| replace:: :guilabel:`standard` \n      .. |fts-token-filter| replace:: :guilabel:`daitchMokotoffSoundex` \n      .. |fts-token-filter-option-name| replace:: :guilabel:`originalTokens` \n      .. |minutes-collection-field| replace:: **page_updated_by.last_name** \n      .. |fts-field-type| replace:: **String** \n\n      .. include:: /includes/extracts/fts-token-filter-daitchmokotoffsoundex-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "        :copyable: true\n\n        {\n          \"mappings\": {\n            \"dynamic\": false,\n            \"fields\": {\n              \"page_updated_by\": {\n                \"type\": \"document\",\n                \"dynamic\": false,\n                \"fields\": {\n                  \"last_name\": {\n                    \"type\": \"string\",\n                    \"analyzer\": \"dmsAnalyzer\"\n                  }\n                }\n              }\n            }\n          },\n          \"analyzers\": [\n            {\n              \"name\": \"dmsAnalyzer\",\n              \"tokenizer\": {\n                \"type\": \"standard\"\n              },\n              \"tokenFilters\": [\n                {\n                  \"type\": \"daitchMokotoffSoundex\",\n                  \"originalTokens\": \"include\"\n                }\n              ]\n            }\n          ]\n        }\n\nThe following query searches for terms that sound similar to \n``AUERBACH`` in the ``page_updated_by.last_name`` field of \nthe :ref:`minutes <custom-analyzers-eg-coll>` collection.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json  \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n           \"index\": \"default\",\n           \"text\": {\n              \"query\": \"AUERBACH\",\n              \"path\": \"page_updated_by.last_name\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"page_updated_by.last_name\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [\n       { \"_id\" : 1, \"page_updated_by\" : { \"last_name\" : \"AUERBACH\" } }\n       { \"_id\" : 2, \"page_updated_by\" : { \"last_name\" : \"OHRBACH\" } }\n      ]\n\n|fts| returns documents with ``_id: 1`` and ``_id: 2`` because the\nterms in both documents are phonetically similar, and are coded using\nthe same six digit numbers (``097400`` and ``097500``). The following\ntable shows the tokens (searchable terms and six digit encodings)\nthat |fts| creates for the documents in the results:  \n\n.. list-table::\n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens    \n\n   * - ``\"_id\": 1`` \n     - ``AUERBACH``, ``097400``, ``097500``\n\n   * - ``\"_id\": 2`` \n     - ``OHRBACH``, ``097400``, ``097500`` \n\n.. _edgegram-tf-ref:\n\nedgeGram\n--------\n\nThe ``edgeGram`` token filter tokenizes input from the left side, or \n\"edge\", of a text input into n-grams of configured sizes. \n\n.. note::\n  Typically, token filters operate similarly to a pipeline, with each input token\n  yielding no more than 1 output token that is then inputted into the subsequent token. \n  The ``edgeGram`` token filter, by contrast, is a graph-producing filter that yields \n  multiple output tokens from a single input token. \n  \n  Because :ref:`synonym <synonyms-ref>` and :ref:`autocomplete <bson-data-types-autocomplete>` \n  field type mapping definitions only work when used with non-graph-producing \n  token filters, you can't use the :ref:`edgeGram <edgegram-tf-ref>` token filter in :ref:`synonym \n  <synonyms-ref>` or :ref:`autocomplete <bson-data-types-autocomplete>` \n  field type mapping definitions. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 17 12 11 50\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type. \n       Value must be ``edgeGram``.\n\n   * - ``minGram``\n     - integer\n     - yes\n     - Number that specifies the minimum length of generated n-grams.\n       Value must be less than or \n       equal to ``maxGram``.\n\n   * - ``maxGram``\n     - integer\n     - yes\n     - Number that specifies the maximum length of generated n-grams.\n       Value must be greater than or \n       equal to ``minGram``.\n\n   * - ``termNotInBounds``\n     - string\n     - no\n     - String that specifies whether to index tokens shorter than\n       ``minGram`` or longer than ``maxGram``. Accepted\n       values are:\n\n       - ``include``\n       - ``omit``\n\n       If ``include`` is specified, tokens shorter than ``minGram`` or\n       longer than ``maxGram`` are indexed as-is. If ``omit`` is \n       specified, those tokens are not indexed.\n\n       *Default*: ``omit``\n\nExample\n~~~~~~~\n\nThe following index definition indexes the ``title`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection using a custom \nanalyzer named ``titleAutocomplete``. The custom analyzer specifies\nthe following:  \n\na. Apply the :ref:`standard tokenizer <standard-tokenizer-ref>` to\n   create tokens based on word break rules.\n#. Apply the following filters on the tokens: \n    \n   - ``icuFolding`` token filter to apply character foldings to the\n     tokens.  \n   - ``edgeGram`` token filter to create 4 to 7 character long tokens\n     from the left side.  \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``titleAutocomplete``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`icuFolding`\n      .. |fts-token-filter-b| replace:: :guilabel:`edgeGram`\n      .. |minutes-collection-field| replace:: **title**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-edgegram-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"analyzer\": \"titleAutocomplete\",\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"title\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"titleAutocomplete\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"titleAutocomplete\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"icuFolding\"\n                 },\n                 {\n                   \"type\": \"edgeGram\",\n                   \"minGram\": 4,\n                   \"maxGram\": 7\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``title`` field of the :ref:`minutes\n<custom-analyzers-eg-coll>` collection for terms that begin with\n``mee``, followed by any number of other characters. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json  \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"wildcard\": {\n              \"query\": \"mee*\",\n              \"path\": \"title\",\n              \"allowAnalyzedField\": true\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [\n        { _id: 1, title: 'The team's weekly meeting' },\n        { _id: 3, title: 'The regular board meeting' }\n      ]\n\n|fts| returns documents with ``_id: 1`` and ``_id: 3`` because the\ndocuments contain the term ``meeting``, which matches the query\ncriteria. Specifically, |fts| creates the following 4 to 7 character\ntokens (searchable terms) for the documents in the results, which it\nthen matches to the query term ``mee*``:  \n\n.. list-table::\n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens    \n\n   * - ``\"_id\": 1`` \n     - ``team``, ``team'``, ``team's``, ``week``, ``weekl``,\n       ``weekly``, ``meet``, ``meeti``, ``meetin``, ``meeting``\n\n   * - ``\"_id\": 3`` \n     - ``regu``, ``regul``, ``regula``, ``regular``, ``boar``,\n       ``board``, ``meet``, ``meeti``, ``meetin``, ``meeting``\n\n.. _englishPossessive-tf-ref:\n\nenglishPossessive\n---------------------\n\nThe ``englishPossessive`` token filter removes possessives \n(trailing ``'s``) from words. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``englishPossessive``.\n\nExample\n~~~~~~~\n\nThe following index definition indexes the ``title`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection using a custom\nanalyzer named ``englishPossessiveStemmer``. The custom analyzer\nspecifies the following: \n   \na. Apply the :ref:`standard <standard-tokenizer-ref>` tokenizer to\n   create tokens (search terms) based on word break rules.\n#. Apply the :ref:`englishPossessive <englishPossessive-tf-ref>`\n   token filter to remove possessives (trailing ``'s``) from the\n   tokens. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``englishPossessiveStemmer``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter| replace:: :guilabel:`englishPossessive`\n      .. |minutes-collection-field| replace:: **title**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-englishpossessive-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {  \n           \"mappings\": {\n             \"fields\": {\n               \"title\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"englishPossessiveStemmer\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"englishPossessiveStemmer\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"englishPossessive\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``title`` field in the \n:ref:`minutes <custom-analyzers-eg-coll>` collection for the term \n``team``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"team\",\n              \"path\": \"title\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 1,\n          title: 'The team's weekly meeting'\n        },\n        { \n          _id: 2,\n          title: 'The check-in with sales team'\n        }\n      ]\n\n|fts| returns results that contain the term ``team`` in the \n``title`` field. |fts| returns the document with ``_id: 1`` because \n|fts| transforms ``team's`` in the ``title`` field to the token \n``team`` during analysis. Specifically, |fts| creates the following\ntokens (searchable terms) for the documents in the results, which it\nthen matches to the query term:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens    \n\n   * - ``\"_id\": 1`` \n     - ``The``, ``team``, ``weekly``, ``meeting``\n\n   * - ``\"_id\": 2`` \n     - ``The``, ``check``, ``in``, ``with``, ``sales``, ``team``\n\n.. _flattenGraph-tf-ref:\n\nflattenGraph\n------------\n\nThe ``flattenGraph`` token filter transforms a token filter graph into \na flat form suitable for indexing. If you use the \n:ref:`wordDelimiterGraph <wordDelimiterGraph-tf-ref>` token filter, use \nthis filter after the :ref:`wordDelimiterGraph \n<wordDelimiterGraph-tf-ref>` token filter. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``flattenGraph``.\n\nExample\n~~~~~~~\n\nThe following index definition indexes the ``message`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection using a custom\nanalyzer called ``wordDelimiterGraphFlatten``. The custom analyzer\nspecifies the following: \n   \na. Apply the :ref:`whitespace <whitespace-tokenizer-ref>` tokenizer\n   to create tokens based on occurrences of whitespace between words.\n#. Apply the following filters to the tokens: \n      \n   - :ref:`wordDelimiterGraph <wordDelimiterGraph-tf-ref>` token\n     filter to split tokens based on sub-words, generate tokens for\n     the original words, and also protect the word ``SIGN_IN`` from   \n     delimination. \n   - :ref:`flattenGraph <flattenGraph-tf-ref>` token filter to\n     flatten the tokens to a flat form.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``wordDelimiterGraphFlatten``\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |fts-token-filter-a| replace:: :guilabel:`wordDelimiterGraph`\n      .. |fts-token-filter-b| replace:: :guilabel:`flattenGraph`\n      .. |minutes-collection-field| replace:: **message**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-flattengraph-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {  \n           \"mappings\": {\n             \"fields\": {\n               \"message\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"wordDelimiterGraphFlatten\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"wordDelimiterGraphFlatten\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"whitespace\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"wordDelimiterGraph\",\n                   \"delimiterOptions\" : {\n                     \"generateWordParts\" : true,\n                     \"preserveOriginal\" : true\n                   },\n                   \"protectedWords\": {\n                     \"words\": [\n                       \"SIGN_IN\"\n                     ],\n                     \"ignoreCase\": false\n                   }\n                 },\n                 {\n                   \"type\": \"flattenGraph\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``message`` field in the \n:ref:`minutes <custom-analyzers-eg-coll>` collection for the term \n``sign``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"sign\",\n              \"path\": \"message\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"message\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 3,\n          message: 'try to sign-in'\n        }  \n      ]\n\n|fts| returns the document with ``_id: 3`` in the results for the \nquery term ``sign`` even though the document contains the \nhyphenated term ``sign-in`` in the ``title`` field. The \n:ref:`wordDelimiterGraph <wordDelimiterGraph-tf-ref>` token \nfilter creates a token filter graph and the :ref:`flattenGraph \n<flattenGraph-tf-ref>` token filter transforms the token filter \ngraph into a flat form suitable for indexing. Specifically, |fts|\ncreates the following tokens (searchable terms) for the document in\nthe results, which it then matches to the query term ``sign``: \n\n.. list-table:: \n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 3``\n     - ``try``, ``to``, ``sign-in``, ``sign``, ``in``\n\n.. _icufolding-tf-ref:\n\nicuFolding\n----------\n\nThe ``icuFolding`` token filter applies character folding from `Unicode \nTechnical Report #30 <http://www.unicode.org/reports/tr30/tr30-4.html>`__\nsuch as accent removal, case folding, canonical duplicates folding, and\nmany others detailed in the report. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attribute:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``icuFolding``.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``text.sv_FI`` field in\nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using a\ncustom analyzer named ``diacriticFolder``. The custom analyzer\nspecifies the following:  \n   \na. Apply the :ref:`keyword tokenizer <keyword-tokenizer-ref>` to\n   tokenize all the terms in the string field as a single term. \n#. Use the ``icuFolding`` token filter to apply foldings such as\n   accent removal, case folding, canonical duplicates folding, and so  \n   on. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``diacriticFolder``\n      .. |fts-tokenizer| replace:: :guilabel:`keyword`\n      .. |fts-token-filter| replace:: :guilabel:`icuFolding`\n      .. |minutes-collection-field| replace:: **text.sv_FI** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-icufolding-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"analyzer\": \"diacriticFolder\",\n           \"mappings\": {\n             \"fields\": {\n               \"text\": {\n                 \"type\": \"document\",\n                 \"fields\": {\n                   \"sv_FI\": {\n                     \"analyzer\": \"diacriticFolder\",\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"diacriticFolder\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"keyword\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"icuFolding\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query uses the the :ref:`wildcard-ref` operator to search\nthe ``text.sv_FI`` field in the :ref:`minutes\n<custom-analyzers-eg-coll>` collection for all terms that contain the \nterm ``avdelning``, preceded and followed by any number of other\ncharacters.   \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"wildcard\": {\n              \"query\": \"*avdelning*\",\n              \"path\": \"text.sv_FI\",\n              \"allowAnalyzedField\": true\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.sv_FI\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 1,\n          text: { sv_FI: 'Den här sidan behandlar avdelningsmöten' }\n        },\n        {\n          _id: 2,\n          text: { sv_FI: 'Först talade chefen för försäljningsavdelningen' }\n        }\n      ]\n\n|fts| returns the document with ``_id: 1`` and ``_id: 2`` in the results\nbecause the documents contain the query term ``avdelning`` followed by\nother characters in the document with ``_id: 1`` and preceded and\nfollowed by other characters in the document with ``_id: 2``.\nSpecifically, |fts| creates the following tokens for the documents in\nthe results, which it then matches to the query term ``*avdelning*``. \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 1``\n     - ``den har sidan behandlar avdelningsmoten``\n\n   * - ``_id: 2``\n     - ``forst talade chefen for forsaljningsavdelningen``\n\n.. _icunormalizer-tf-ref:\n\nicuNormalizer\n-------------\n\nThe ``icuNormalizer`` token filter normalizes tokens using a standard \n`Unicode Normalization Mode <https://unicode.org/reports/tr15/>`__. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 17 12 11 50\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``icuNormalizer``.\n\n   * - ``normalizationForm``\n     - string\n     - no\n     - Normalization form to apply. Accepted values are:\n\n       - ``nfd`` (Canonical Decomposition)\n       - ``nfc`` (Canonical Decomposition, followed by Canonical \n         Composition)\n       - ``nfkd`` (Compatibility Decomposition)\n       - ``nfkc`` (Compatibility Decomposition, followed by Canonical \n         Composition)\n\n       To learn more about the supported normalization forms, see\n       `Section 1.2: Normalization Forms, UTR#15 \n       <https://unicode.org/reports/tr15/#Norm_Forms>`__.\n\n       *Default*: ``nfc``\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``message`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection using a custom\nanalyzer named ``textNormalizer``. The custom analyzer specifies\nthe following:  \n   \na. Use the :ref:`whitespace tokenizer <whitespace-tokenizer-ref>` to\n   create tokens based on occurrences of whitespace between words.\n#. Use the ``icuNormalizer`` token filter to normalize tokens by\n   Compatibility Decomposition, followed by Canonical Composition.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``textNormalizer``\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |fts-token-filter| replace:: :guilabel:`icuNormalizer`\n      .. |minutes-collection-field| replace:: **message** \n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-icunormalizer-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"analyzer\": \"textNormalizer\",\n           \"mappings\": {\n             \"fields\": {\n               \"message\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"textNormalizer\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"textNormalizer\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"whitespace\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"icuNormalizer\",\n                   \"normalizationForm\": \"nfkc\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``message`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection for the term \n``1``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"1\",\n              \"path\": \"message\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"message\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [ { _id: 2, message: 'do not forget to SIGN-IN. See ① for details.' } ] \n\n|fts| returns the document with ``_id: 2`` in the results for the \nquery term ``1`` even though the document contains the circled number\n``①`` in the ``message`` field because the ``icuNormalizer`` token \nfilter creates the token ``1`` for this character using the ``nfkc``\nnormalization form. The following table shows the tokens (searchable\nterms) that |fts| creates for the document in the results using the\n``nfkc`` normalization form and by comparison, the tokens it creates\nfor the other normalization forms.\n\n.. list-table:: \n\n   * - Normalization Forms \n     - Output Tokens \n     - Matches ``1``\n\n   * - ``nfd``\n     - ``do``, ``not``, ``forget``, ``to``, ``SIGN-IN.``, ``See``,\n       ``①``, ``for``, ``details.`` \n     - X\n\n   * - ``nfc``\n     - ``do``, ``not``, ``forget``, ``to``, ``SIGN-IN.``, ``See``,\n       ``①``, ``for``, ``details.`` \n     - X\n\n   * - ``nfkd``\n     - ``do``, ``not``, ``forget``, ``to``, ``SIGN-IN.``, ``See``,\n       ``1``, ``for``, ``details.`` \n     - √\n\n   * - ``nfkc``\n     - ``do``, ``not``, ``forget``, ``to``, ``SIGN-IN.``, ``See``,\n       ``1``, ``for``, ``details.`` \n     - √\n\n.. _kStemming-tf-ref:\n\nkStemming\n---------\n\nThe ``kStemming`` token filter combines algorithmic stemming with a \nbuilt-in dictionary for the english language to stem words. It expects \nlowercase text and doesn't modify uppercase text. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``kStemming``.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``text.en_US`` field in\nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using a\ncustom analyzer named ``kStemmer``. The custom analyzer specifies the\nfollowing: \n   \na. Apply the :ref:`standard <standard-tokenizer-ref>` tokenizer to\n   create tokens based on word break rules.\n#. Apply the following filters on the tokens: \n      \n   - :ref:`lowercase <lowercase-tf-ref>` token filter to convert the\n     tokens to lowercase.  \n   - :ref:`kStemming <kStemming-tf-ref>` token filter to stem words\n     using a combination of algorithmic stemming and a built-in \n     dictionary for the english language.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``kStemmer``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`lowercase`\n      .. |fts-token-filter-b| replace:: :guilabel:`kStemming`\n      .. |minutes-collection-field| replace:: **text.en_US** nested \n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-kstemming-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n   \n         {  \n           \"analyzer\": \"kStemmer\", \n           \"mappings\": {\n             \"dynamic\": true\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"kStemmer\",\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"lowercase\"\n                 },\n                 {\n                   \"type\": \"kStemming\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``text.en_US`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection for the term \n``Meeting``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n       {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"Meeting\",\n              \"path\": \"text.en_US\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.en_US\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 1,\n          text: {\n            en_US: '<head> This page deals with department meetings. </head>'\n          }\n        }\n      ]\n\n|fts| returns the document with ``_id: 1``, which contains the plural\nterm ``meetings`` in lowercase. |fts| matches the query term to the \ndocument because the :ref:`lowercase <lowercase-tf-ref>` token filter\nnormalizes token text to lowercase and the :ref:`kStemming\n<kStemming-tf-ref>` token  filter lets |fts| match the plural\n``meetings`` in the ``text.en_US`` field of the document to the\nsingular query term. |fts| also analyzes the query term using the\nindex analyzer (or if specified, using the ``searchAnalyzer``).\nSpecifically, |fts| creates the following tokens (searchable terms)\nfor the document in the results, which it then uses to match to the\nquery term: \n\n``head``, ``this``, ``page``, ``deal``, ``with``, ``department``, ``meeting``, ``head``\n\n.. _length-tf-ref:\n\nlength\n------\n\nThe ``length`` token filter removes tokens that are too short or too \nlong. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``length``.\n\n   * - ``min``\n     - integer\n     - no\n     - Number that specifies the minimum length of a token.\n       Value must be less than or equal to \n       ``max``.\n\n       *Default*: ``0``\n\n   * - ``max``\n     - integer\n     - no\n     - Number that specifies the maximum length of a token.\n       Value must be greater than or equal to \n       ``min``.\n\n       *Default*: ``255``\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``text.sv_FI`` field in\nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using a\ncustom analyzer named ``longOnly``. The custom analyzer specifies the\nfollowing:  \n   \na. Use the :ref:`standard tokenizer <standard-tokenizer-ref>` to\n   create tokens based on word break rules. \n#. Apply the following filters on the tokens:  \n      \n   - :ref:`icufolding-tf-ref` token filter to apply character\n     foldings. \n   - ``length`` token filter to index only tokens that are at\n     least 20 UTF-16 code units long after tokenizing. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``longOnly``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`icuFolding`\n      .. |fts-token-filter-b| replace:: :guilabel:`length`\n      .. |minutes-collection-field| replace:: **text.sv.FI** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-length-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"text\": {\n                 \"type\": \"document\",\n                 \"dynamic\": true,\n                 \"fields\": {\n                   \"sv_FI\": {\n                     \"type\": \"string\",\n                     \"analyzer\": \"longOnly\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"longOnly\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"icuFolding\"\n                 },\n                 {\n                   \"type\": \"length\",\n                   \"min\": 20\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``text.sv_FI`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection for the term  \n``forsaljningsavdelningen``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"forsaljningsavdelningen\",\n              \"path\": \"text.sv_FI\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.sv_FI\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 2,\n          text: {\n            sv_FI: 'Först talade chefen för försäljningsavdelningen'\n          }\n        }\n      ]\n\n|fts| returns the document with ``_id: 2``, which contains the term\n``försäljningsavdelningen``. |fts| matches the document to the query\nterm because the term has more than 20 characters. Additionally,\nalthough the query term ``forsaljningsavdelningen`` doesn't include\nthe diacritic characters, |fts| matches the query term to the\ndocument by folding the diacritics in the original term in the\ndocument. Specifically, |fts| creates the following tokens\n(searchable terms) for the document with ``_id: 2``.    \n   \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: false \n\n   forsaljningsavdelningen\n\n|fts| won't return any results for a search for any other term in the\n``text.sv_FI`` field in the collection because all other terms in the\nfield have less than 20 characters. \n\n.. _lowercase-tf-ref:\n\nlowercase\n---------\n\nThe ``lowercase`` token filter normalizes token text to lowercase. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attribute:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``lowercase``.\n\nExamples \n~~~~~~~~\n\n.. tabs:: \n\n   .. tab:: Simple Example \n      :tabid: simple \n\n      The following example index definition indexes the ``title``\n      field in the :ref:`minutes  <custom-analyzers-eg-coll>`\n      collection as type :ref:`autocomplete\n      <bson-data-types-autocomplete>` with the ``nGram`` tokenization\n      strategy. It applies a custom analyzer named ``keywordLowerer``\n      on the ``title`` field. The custom analyzer specifies the\n      following: \n         \n      a. Apply :ref:`keyword-tokenizer-ref` tokenizer to create a\n         single token for a string or array of strings.\n      #. Apply the ``lowercase`` token filter to convert token text\n         to lowercase. \n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            .. |analyzer-name| replace:: ``keywordLowerer``\n            .. |fts-tokenizer| replace:: :guilabel:`keyword`\n            .. |fts-token-filter| replace:: :guilabel:`lowercase`\n            .. |minutes-collection-field| replace:: **title** \n            .. |fts-field-type| replace:: **Autocomplete**\n            .. |fts-autocomplete-tokenization| replace:: **nGram**\n\n            .. include:: /includes/extracts/fts-token-filter-lowercase-config-simple.rst \n\n         .. tab:: JSON Editor \n            :tabid: jsoneditor\n\n            Replace the default index definition with the following:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                 \"mappings\": {\n                   \"fields\": {\n                     \"title\": {\n                       \"analyzer\": \"keywordLowerer\",\n                       \"tokenization\": \"nGram\",\n                       \"type\": \"autocomplete\"\n                     }\n                   }\n                 },\n                 \"analyzers\": [\n                   {\n                     \"name\": \"keywordLowerer\",\n                     \"charFilters\": [],\n                     \"tokenizer\": {\n                       \"type\": \"keyword\"\n                     },\n                     \"tokenFilters\": [\n                       {\n                         \"type\": \"lowercase\"\n                       }\n                     ]\n                   }\n                 ]\n               }\n\n      The following query searches the ``title`` field using the\n      :ref:`autocomplete <autocomplete-ref>` operator for the\n      characters ``standup``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n   \n         .. input::\n            :language: json\n\n            db.minutes.aggregate([\n              {\n                \"$search\": {\n                  \"index\": \"default\",\n                  \"autocomplete\": {\n                    \"query\": \"standup\",\n                    \"path\": \"title\"\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"_id\": 1,\n                  \"title\": 1\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json \n\n            [ { _id: 4, title: 'The daily huddle on tHe StandUpApp2' } ]\n               \n      |fts| returns the document with ``_id: 4`` in the results\n      because the document contains the query term ``standup``. |fts|\n      creates tokens for the ``title`` field using the ``keyword``\n      tokenizer, ``lowercase`` token filter, and the ``nGram``\n      tokenization strategy for the :ref:`autocomplete\n      <bson-data-types-autocomplete>` type. Specifically, |fts| uses\n      the ``keyword`` tokenizer to tokenize the entire string as a\n      single token, which supports only exact matches on the entire\n      string, and then it uses the ``lowercase`` token filter to\n      convert the tokens to lowercase. For the document in the\n      results, |fts| creates the following token using the custom\n      analyzer:  \n\n      .. list-table:: \n\n         * - Document ID \n           - Output Tokens \n\n         * - ``_id: 4``\n           - ``the daily huddle on the standupapp2``\n\n      After applying the custom analyzer, |fts| creates further\n      tokens of n-grams because |fts| indexes the ``title`` field as\n      the :ref:`autocomplete <bson-data-types-autocomplete>` type as\n      specified in the index definition. |fts| uses the tokens of\n      n-grams, which includes a token for ``standup``, to match the\n      document to the query term ``standup``. \n\n   .. tab:: Advanced Example \n      :tabid: advanced\n         \n      The following index definition indexes the ``message`` field in the  \n      :ref:`minutes  <custom-analyzers-eg-coll>` collection using a custom \n      analyzer named ``lowerCaser``. The custom analyzer specifies the \n      following: \n   \n      a. Apply :ref:`standard-tokenizer-ref` tokenizer to create tokens \n         based on word break rules.  \n      #. Apply the following filters on the tokens: \n      \n         - :ref:`icunormalizer-tf-ref` to normalize the tokens using a \n           standard Unicode Normalization Mode. \n         - ``lowercase`` token filter to convert token text to lowercase.\n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            .. |analyzer-name| replace:: ``lowerCaser``\n            .. |fts-tokenizer| replace:: :guilabel:`standard`\n            .. |fts-token-filter-a| replace:: :guilabel:`icuNormalizer`\n            .. |fts-token-filter-b| replace:: :guilabel:`lowercase`\n            .. |minutes-collection-field| replace:: **message** \n            .. |fts-field-type| replace:: **String**\n\n            .. include:: /includes/extracts/fts-token-filter-lowercase-config-advanced.rst \n\n         .. tab:: JSON Editor \n            :tabid: jsoneditor\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                 \"mappings\": {\n                   \"fields\": {\n                     \"message\": {\n                       \"type\": \"string\",\n                       \"analyzer\": \"lowerCaser\"\n                     }\n                   }\n                 },\n                 \"analyzers\": [\n                   {\n                     \"name\": \"lowerCaser\",\n                     \"charFilters\": [],\n                     \"tokenizer\": {\n                       \"type\": \"standard\"\n                     },\n                     \"tokenFilters\": [\n                       {\n                         \"type\": \"icuNormalizer\",\n                         \"normalizationForm\": \"nfkd\"\n                       },\n                       {\n                         \"type\": \"lowercase\"\n                       }\n                     ]\n                   }\n                 ]\n               }\n\n      The following query searches the ``message`` field for the term\n      ``sign-in``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n   \n         .. input::\n            :language: json\n\n            db.minutes.aggregate([\n              {\n                \"$search\": {\n                  \"index\": \"default\",\n                  \"text\": {\n                    \"query\": \"sign-in\",\n                    \"path\": \"message\"\n                  }\n                } \n              },\n              {\n                \"$project\": {\n                  \"_id\": 1,\n                  \"message\": 1\n                }\n              }\n            ])\n\n         .. output::\n            :language: json\n\n            [\n              { _id: 1, message: 'try to siGn-In' },\n              { _id: 3, message: 'try to sign-in' },\n              { _id: 2, message: 'do not forget to SIGN-IN. See ① for details.' }\n            ]\n\n      |fts| returns the documents with ``_id: 1``, ``_id: 3``, and ``_id: \n      2`` in the results for the query term ``sign-in`` because the\n      ``icuNormalizer`` tokenizer first creates separate tokens by\n      splitting the text, including the hyphenated word, but retains the\n      original letter case in the document and then the ``lowercase`` token \n      filter converts the tokens to lowercase. |fts| also analyzes the\n      query term using the index analyzer (or if specified, using the \n      ``searchAnalyzer``) to split the query term and match it to the\n      document. \n\n      .. list-table:: \n\n         * - Normalization Forms \n           - Output Tokens \n\n         * - ``_id: 1``\n           - ``try``, ``to``, ``sign``, ``in``\n\n         * - ``_id: 3``\n           - ``try``, ``to``, ``sign``, ``in``\n\n         * - ``_id: 2``\n           - ``do``, ``not``, ``forget``, ``to``, ``sign``, ``in``,\n             ``see``, ``for``, ``details``\n\n.. _ngram-tf-ref:\n\nnGram\n-----\n\nThe ``nGram`` token filter tokenizes input into n-grams of configured \nsizes. You can't use the :ref:`nGram <ngram-tf-ref>` token filter in \n:ref:`synonym <synonyms-ref>` or :ref:`autocomplete \n<bson-data-types-autocomplete>` mapping definitions. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 17 12 11 50\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type. Value must be ``nGram``.\n\n   * - ``minGram``\n     - integer\n     - yes\n     - Number that specifies the minimum length of generated n-grams.\n       Value must be less than or \n       equal to ``maxGram``.\n\n   * - ``maxGram``\n     - integer\n     - yes\n     - Number that specifies the maximum length of generated n-grams.\n       Value must be greater than or \n       equal to ``minGram``.\n\n   * - ``termNotInBounds``\n     - string\n     - no\n     - String that specifies whether to index tokens shorter than\n       ``minGram`` or longer than ``maxGram``. Accepted values are:\n\n       - ``include``\n       - ``omit``\n\n       If ``include`` is specified, tokens shorter than ``minGram`` or\n       longer than ``maxGram`` are indexed as-is. If ``omit`` is \n       specified, those tokens are not indexed.\n\n       *Default*: ``omit``\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``title`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection using the custom  \nanalyzer named ``titleAutocomplete``. The custom analyzer function \nspecifies the following:\n   \na. Apply the :ref:`standard  <standard-tokenizer-ref>` tokenizer to\n   create tokens based on the word break rules. \n#. Apply a series of token filters on the tokens: \n   \n   - ``englishPossessive`` to remove possessives (trailing ``'s``)\n     from words. \n   - ``nGram`` to tokenize words into 4 to 7 characters in length. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``titleAutocomplete``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`englishPossessive`\n      .. |fts-token-filter-b| replace:: :guilabel:`nGram`\n      .. |minutes-collection-field| replace:: **title** \n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-ngram-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n          \"mappings\": {\n             \"fields\": {\n               \"title\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"titleAutocomplete\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"titleAutocomplete\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"englishPossessive\"\n                 },\n                 {\n                   \"type\": \"nGram\",\n                   \"minGram\": 4,\n                   \"maxGram\": 7\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query uses the :ref:`wildcard-ref` operator to search \nthe ``title`` field in the :ref:`minutes <custom-analyzers-eg-coll>`\ncollection for the term ``meet`` followed by any number of other\ncharacters after the term.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"wildcard\": {\n              \"query\": \"meet*\",\n              \"path\": \"title\",\n              \"allowAnalyzedField\": true\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        { _id: 1, title: 'The team's weekly meeting' },\n        { _id: 3, title: 'The regular board meeting' }\n      ]\n\n|fts| returns the documents with ``_id: 1`` and ``_id: 3`` because\nthe documents contain the term ``meeting``, which |fts| matches to\nthe query criteria ``meet*`` by creating the following tokens\n(searchable terms). \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Normalization Forms \n     - Output Tokens \n\n   * - ``_id: 2``\n     - ``team``, ``week``, ``weekl``, ``weekly``, ``eekl``,\n       ``eekly``, ``ekly``, ``meet``, ``meeti``, ``meetin``,\n       ``meeting``, ``eeti``, ``eeti``, ``eeting``, ``etin``,\n       ``eting``, ``ting``\n\n   * - ``_id: 3``\n     - ``regu``, ``regul``, ``regula``, ``regular``, ``egul``,\n       ``egula``, ``egular``, ``gula``, ``gular``, ``ular``,\n       ``boar``, ``board``, ``oard``, ``meet``, ``meeti``, ``meetin``,\n       ``meeting``, ``eeti``, ``eeti``, ``eeting``, ``etin``,\n       ``eting``, ``ting``\n\n.. note:: \n\n   |fts| doesn't create tokens for terms less than 4 characters (such\n   as ``the``) and greater than 7 characters because the\n   ``termNotInBounds`` parameter is set to ``omit`` by default. If\n   you set the value for ``termNotInBounds`` parameter to\n   ``include``, |fts| would create tokens for the term ``the`` also.\n\n.. _porterStemming-tf-ref:\n\nporterStemming\n--------------\n\nThe ``porterStemming`` token filter uses the porter stemming algorithm \nto remove the common morphological and inflectional suffixes from \nwords in English. It expects lowercase text and doesn't work as \nexpected for uppercase text. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``porterStemming``.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``title`` field in the \n:ref:`minutes <custom-analyzers-eg-coll>` collection using a custom\nanalyzer named ``porterStemmer``. The custom analyzer specifies the\nfollowing: \n   \na. Apply the :ref:`standard <standard-tokenizer-ref>` tokenizer to\n   create tokens based on word break rules. \n#. Apply the following token filters on the tokens: \n     \n   - :ref:`lowercase <lowercase-tf-ref>` token filter to convert the\n     words to lowercase.  \n   - :ref:`porterStemming <porterStemming-tf-ref>` token filter to\n     remove the common morphological and inflectional suffixes from\n     the words. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``porterStemmer``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`lowercase`\n      .. |fts-token-filter-b| replace:: :guilabel:`porterStemming`\n      .. |minutes-collection-field| replace:: **title** \n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-porterstemming-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {  \n           \"mappings\": {\n             \"fields\": {\n               \"title\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"porterStemmer\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"porterStemmer\",\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"lowercase\"\n                 },\n                 {\n                   \"type\": \"porterStemming\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``title`` field in the :ref:`minutes\n<custom-analyzers-eg-coll>` collection for the term ``Meet``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"Meet\",\n              \"path\": \"title\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 1,\n          title: 'The team's weekly meeting'\n        },\n        {\n          _id: 3,\n          title: 'The regular board meeting'\n        }\n      ]\n\n|fts| returns the documents with ``_id: 1`` and ``_id: 3`` because \nthe :ref:`lowercase <lowercase-tf-ref>` token filter normalizes \ntoken text to lowercase and then the ``porterStemming`` token filter\nstems the morphological suffix from the ``meeting`` token to create\nthe ``meet`` token, which |fts| matches to the query term ``Meet``.\nSpecifically, |fts| creates the following tokens (searchable terms)\nfor the documents in the results, which it then matches to the query\nterm ``Meet``:  \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Normalization Forms \n     - Output Tokens \n\n   * - ``_id: 1``\n     - ``the``, ``team'``, ``weekli``, ``meet``\n\n   * - ``_id: 3``\n     - ``the``, ``regular``, ``board``, ``meet``\n\n.. _regex-tf-ref:\n\nregex\n-----\n\nThe ``regex`` token filter applies a regular expression to each token, \nreplacing matches with a specified string. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 20 10 10 60\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter.\n       Value must be ``regex``.\n\n   * - ``pattern``\n     - string\n     - yes\n     - Regular expression pattern to apply to each token.\n\n   * - ``replacement``\n     - string\n     - yes\n     - Replacement string to substitute wherever a matching pattern\n       occurs.\n       \n       If you specify an empty string (``\"\"``) to ignore or delete a\n       token, |fts| creates a token with an empty string instead. To\n       delete tokens with empty strings, use the :ref:`stopword-tf-ref` \n       token filter after the ``regex`` token filter. For example: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "          :copyable: false \n\n          \"analyzers\": [\n            {\n              \"name\": \"custom.analyzer.name\",\n              \"charFilters\": [],\n              \"tokenizer\": {\n                \"type\": \"whitespace\"\n              },\n              \"tokenFilters\": [\n                {\n                  \"matches\": \"all\",\n                  \"pattern\": \"^(?!\\\\$)\\\\w+\",\n                  \"replacement\": \"\",\n                  \"type\": \"regex\"\n                },\n                {\n                  \"type\": \"stopword\",\n                  \"tokens\": [\"\"]\n                }\n              ]                \n            }\n          ]\n\n   * - ``matches``\n     - string\n     - yes \n     - Acceptable values are:\n\n       - ``all``\n       - ``first``\n\n       If ``matches`` is set to ``all``, replace all matching patterns.\n       Otherwise, replace only the first matching pattern.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``page_updated_by.email`` \nfield in the :ref:`minutes <custom-analyzers-eg-coll>` collection\nusing a custom analyzer named ``emailRedact``. The custom analyzer\nspecifies the following: \n\na. Apply the :ref:`keyword tokenizer <keyword-tokenizer-ref>` to\n   index all words in the field value as a single term. \n#. Apply the following token filters on the tokens:\n     \n   - :ref:`lowercase-tf-ref` token filter to turn uppercase \n     characters in the tokens to lowercase.\n   - ``regex`` token filter to find strings that look like email\n     addresses in the tokens and replace them with the word\n     ``redacted``. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``emailRedact``\n      .. |fts-tokenizer| replace:: :guilabel:`keyword`\n      .. |fts-token-filter-a| replace:: :guilabel:`lowercase`\n      .. |fts-token-filter-b| replace:: :guilabel:`regex`\n      .. |minutes-collection-field| replace:: **page_updated_by.email** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-regex-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n \n         {\n           \"analyzer\": \"lucene.standard\",\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"page_updated_by\": {\n                 \"type\": \"document\",\n                 \"fields\": {\n                   \"email\": {\n                     \"type\": \"string\",\n                     \"analyzer\": \"emailRedact\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"charFilters\": [],\n               \"name\": \"emailRedact\",\n               \"tokenizer\": {\n                 \"type\": \"keyword\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"lowercase\"\n                 },\n                 {\n                   \"matches\": \"all\",\n                   \"pattern\": \"^([a-z0-9_\\\\.-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]{2,5})$\",\n                   \"replacement\": \"redacted\",\n                   \"type\": \"regex\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``page_updated_by.email`` field\nin the :ref:`minutes <custom-analyzers-eg-coll>` collection using the\n:ref:`wildcard-ref` operator for the term ``example.com`` preceded by\nany number of other characters.   \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true \n   :linenos:\n\n   db.minutes.aggregate([\n     {\n       \"$search\": {\n         \"index\": \"default\",\n         \"wildcard\": {\n           \"query\": \"*example.com\",\n           \"path\": \"page_updated_by.email\",\n           \"allowAnalyzedField\": true\n         }\n       }\n     },\n     {\n       \"$project\": {\n         \"_id\": 1,\n         \"page_updated_by.email\": 1\n       }\n     } \n   ])\n\n|fts| doesn't return any results for the query although the \n``page_updated_by.email`` field contains the word ``example.com`` in\nthe email addresses. |fts| tokenizes strings that match the regular\nexpression provided in the custom analyzer with the word ``redacted``\nand so, |fts| doesn't match the query term to any document.  \n\n.. _reverse-tf-ref:\n\nreverse \n-------\n\nThe ``reverse`` token filter reverses each string token. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attribute: \n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter.\n       Value must be ``reverse``.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``page_updated_by.email``\nfields in the :ref:`minutes <custom-analyzers-eg-coll>` collection\nusing a custom analyzer named ``keywordReverse``. The custom analyzer\nspecifies the following:\n\n- Apply the :ref:`keyword tokenizer <keyword-tokenizer-ref>` to\n  tokenize entire strings as single terms.\n- Apply the ``reverse`` token filter to reverse the string tokens.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``keywordReverse``\n      .. |fts-tokenizer| replace:: :guilabel:`keyword`\n      .. |fts-token-filter| replace:: :guilabel:`reverse`\n      .. |minutes-collection-field| replace:: **page_updated_by.email** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-reverse-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n         :emphasize-lines: 14-16\n\n         {\n           \"analyzer\": \"lucene.keyword\",\n           \"mappings\": {\n             \"dynamic\": \n           },\n           \"analyzers\": [\n             {\n               \"name\": \"keywordReverse\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"keyword\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"reverse\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``page_updated_by.email`` field in \nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using the\n:ref:`wildcard-ref` operator to match any characters preceding the\ncharacters ``@example.com`` in reverse order. The ``reverse`` token\nfilter can speed up leading wildcard queries.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: false \n\n   moc.elpmaxe@*\n\n|fts| then runs the query against the indexed tokens, which are also \nreversed. The query returns the following documents:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: false \n\n   [\n     { _id: 1, page_updated_by: { email: 'auerbach@example.com' } },\n     { _id: 2, page_updated_by: { email: 'ohrback@example.com' } },\n     { _id: 3, page_updated_by: { email: 'lewinsky@example.com' } },\n     { _id: 4, page_updated_by: { email: 'levinski@example.com' } }\n   ]\n\nSpecifically, |fts| creates the following tokens (searchable terms)\nfor the documents in the results, which it then matches to the query\nterm ``moc.elpmaxe@*``: \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Normalization Forms \n     - Output Tokens \n\n   * - ``_id: 1``\n     - ``moc.elpmaxe@hcabreua``\n\n   * - ``_id: 2``\n     - ``moc.elpmaxe@kcabrho``\n\n   * - ``_id: 3``\n     - ``moc.elpmaxe@yksniwel``\n\n   * - ``_id: 4``\n     - ``moc.elpmaxe@iksnivel``\n\n.. _shingle-tf-ref:\n\nshingle\n-------\n\nThe ``shingle`` token filter constructs shingles (token n-grams) from a \nseries of tokens. You can't use the ``shingle`` token filter in \n:ref:`synonym <synonyms-ref>` or :ref:`autocomplete \n<bson-data-types-autocomplete>` mapping definitions. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 20 10 10 60\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``shingle``.\n\n   * - ``minShingleSize``\n     - integer\n     - yes\n     - Minimum number of tokens per shingle. Must be less than or equal\n       to ``maxShingleSize``.\n\n   * - ``maxShingleSize``\n     - integer\n     - yes\n     - Maximum number of tokens per shingle. Must be greater than or \n       equal to ``minShingleSize``.\n\nExample \n~~~~~~~\n\nThe following index definition example on the ``page_updated_by.email``\nfield in the :ref:`minutes <custom-analyzers-eg-coll>` collection uses\ntwo custom analyzers, ``emailAutocompleteIndex`` and\n``emailAutocompleteSearch``, to implement autocomplete-like\nfunctionality. |fts| uses the ``emailAutocompleteIndex`` analyzer during\nindex creation to: \n    \n- Replace ``@`` characters in a field with ``AT``\n- Create tokens with the :ref:`whitespace <whitespace-tokenizer-ref>`\n  tokenizer \n- Shingle tokens \n- Create :ref:`edgegram-tf-ref` of those shingled tokens\n  \n|fts| uses the ``emailAutocompleteSearch`` analyzer during a search to: \n\n- Replace ``@`` characters in a field with ``AT``\n- Create tokens with the :ref:`whitespace tokenizer\n  <whitespace-tokenizer-ref>` tokenizer \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name-a| replace:: ``emailAutocompleteIndex``\n      .. |analyzer-name-b| replace:: ``emailAutocompleteSearch``\n      .. |fts-char-filter| replace:: :guilabel:`mapping`\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |fts-token-filter-a| replace:: :guilabel:`shingle`\n      .. |fts-token-filter-b| replace:: :guilabel:`edgeGram`\n      .. |minutes-collection-field| replace:: **page_updated_by.email** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-shingle-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n         :linenos:\n         :emphasize-lines: 34-38\n\n         {\n           \"analyzer\": \"lucene.keyword\",\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"page_updated_by\": {\n                 \"type\": \"document\",\n                 \"fields\": {\n                   \"email\": {\n                     \"type\": \"string\",\n                     \"analyzer\": \"emailAutocompleteIndex\",\n                     \"searchAnalyzer\": \"emailAutocompleteSearch\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"emailAutocompleteIndex\",\n               \"charFilters\": [\n                 {\n                   \"mappings\": {\n                     \"@\": \"AT\"\n                   },\n                   \"type\": \"mapping\"\n                 }\n               ],\n               \"tokenizer\": {\n                 \"maxTokenLength\": 15,\n                 \"type\": \"whitespace\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"maxShingleSize\": 3,\n                    **** \"minShingleSize\": 2,\n                   \"type\": \"shingle\"\n                 },\n                 {\n                   \"maxGram\": 15,\n                   \"minGram\": 2,\n                   \"type\": \"edgeGram\"\n                 }\n               ]\n             },\n             {\n               \"name\": \"emailAutocompleteSearch\",\n               \"charFilters\": [\n                 {\n                   \"mappings\": {\n                     \"@\": \"AT\"\n                   },\n                   \"type\": \"mapping\"\n                 }\n               ],\n               \"tokenizer\": {\n                 \"maxTokenLength\": 15,\n                 \"type\": \"whitespace\"\n               }\n             }\n           ]\n         }\n\nThe following query searches for an email address in the \n``page_updated_by.email`` field of the :ref:`minutes\n<custom-analyzers-eg-coll>` collection: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n    \n   .. input:: \n      :language: json \n\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"auerbach@ex\",\n               \"path\": \"page_updated_by.email\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"page_updated_by.email\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [ { _id: 1, page_updated_by: { email: 'auerbach@example.com' } } ]\n\n|fts| creates search tokens using the ``emailAutocompleteSearch``\nanalyzer, which it then matches to the index tokens that it created\nusing the ``emailAutocompleteIndex`` analyzer. The following table\nshows the search and index tokens (up to 15 characters) that |fts|\ncreates:  \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Search Tokens \n     - Index Tokens \n\n   * - ``auerbachATexamp``\n     - ``au``, ``aue``, ``auer``, ``auerb``, ``auerba``,\n       ``auerbac``, ``auerbach``, ``auerbachA``, ``auerbachAT``,\n       ``auerbachATe``, ``auerbachATex``, ``auerbachATexa``,\n       ``auerbachATexam``, ``auerbachATexamp``\n\n.. _snowballstemming-tf-ref:\n\nsnowballStemming\n----------------\n\nThe ``snowballStemming`` token filters Stems tokens using a \n`Snowball-generated stemmer <https://snowballstem.org/>`__. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 20 10 10 60\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``snowballStemming``.\n\n   * - ``stemmerName``\n     - string\n     - yes\n     - The following values are valid:\n\n       - ``arabic``\n       - ``armenian``\n       - ``basque``\n       - ``catalan``\n       - ``danish``\n       - ``dutch``\n       - ``english``\n       - ``estonian``\n       - ``finnish``\n       - ``french``\n       - ``german``\n       - ``german2`` (Alternative German language stemmer. Handles the \n         umlaut by expanding ü to ue in most contexts.)\n       - ``hungarian``\n       - ``irish``\n       - ``italian``\n       - ``kp`` (Kraaij-Pohlmann stemmer, an alternative stemmer for \n         Dutch.)\n       - ``lithuanian``\n       - ``lovins`` (The first-ever published \"Lovins JB\" stemming \n         algorithm.)\n       - ``norwegian``\n       - ``porter`` (The original Porter English stemming algorithm.)\n       - ``portuguese``\n       - ``romanian``\n       - ``russian``\n       - ``spanish``\n       - ``swedish``\n       - ``turkish``\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``text.fr_CA`` field in\nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using\na custom analyzer named ``frenchStemmer``. The custom analyzer\nspecifies the following:\n   \na. Apply the :ref:`standard <standard-tokenizer-ref>` tokenizer to\n   create tokens based on word break rules.\n#. Apply the following token filters on the tokens:\n    \n   - :ref:`lowercase-tf-ref` token filter to convert the tokens to\n     lowercase. \n   - ``french`` variant of the ``snowballStemming`` token filter to\n     stem words.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``frenchStemmer``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`lowercase`\n      .. |fts-token-filter-b| replace:: :guilabel:`snowballStemming`\n      .. |minutes-collection-field| replace:: **text.fr_CA** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-snowballstemming-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"text\": {\n                 \"type\": \"document\",\n                 \"fields\": {\n                   \"fr_CA\": {\n                     \"type\": \"string\",\n                     \"analyzer\": \"frenchStemmer\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"frenchStemmer\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"lowercase\"\n                 },\n                 {\n                   \"type\": \"snowballStemming\",\n                   \"stemmerName\": \"french\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``text.fr_CA`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection for the term\n``réunion``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input:: \n      :language:  json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"réunion\",\n              \"path\": \"text.fr_CA\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.fr_CA\": 1\n          }\n        }\n      ])\n   \n   .. output:: \n      :language:  json\n         \n      [\n        {\n          _id: 1,\n          text: { fr_CA: 'Cette page traite des réunions de département' }\n        }\n      ]\n\n|fts| returns document with ``_id: 1``  in the results. |fts| matches\nthe query term to the document because it creates the following\ntokens for the document, which it then used to match to the query\nterm ``réunion``: \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 1``\n     - ``cet``, ``pag``, ``trait``, ``de``, ``réunion``, ``de``, ``départ``\n\n.. _spanishPluralStemming-tf-ref:\n\nspanishPluralStemming\n---------------------\n\nThe ``spanishPluralStemming`` token filter stems spanish plural words. \nIt expects lowercase text. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``spanishPluralStemming``.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``text.es_MX`` field in\nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using a\ncustom analyzer named ``spanishPluralStemmer``. The custom analyzer\nspecifies the following: \n   \na. Apply the :ref:`standard <standard-tokenizer-ref>` tokenizer to\n   create tokens based on word break rules. \n#. Apply the following token filters on the tokens:\n\n   - :ref:`lowercase-tf-ref` token filter to convert spanish terms to\n     lowercase.\n   - ``spanishPluralStemming`` token filter to stem plural spanish\n     words in the tokens into their singular form. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``spanishPluralStemmer``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`lowercase`\n      .. |fts-token-filter-b| replace:: :guilabel:`spanishPluralStemming`\n      .. |minutes-collection-field| replace:: **text.es_MX** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-spanishpluralstemming-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {  \n           \"analyzer\": \"spanishPluralStemmer\", \n           \"mappings\": {\n             \"fields\": {\n               \"text: { \n                 \"type\": \"document\",\n                 \"fields\": {\n                   \"es_MX\": {\n                     \"analyzer\": \"spanishPluralStemmer\",\n                     \"searchAnalyzer\": \"spanishPluralStemmer\",\n                     \"type\": \"string\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"spanishPluralStemmer\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"lowercase\"\n                 },\n                 {\n                   \"type\": \"spanishPluralStemming\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``text.es_MX`` field in the \n:ref:`minutes <custom-analyzers-eg-coll>` collection for the spanish \nterm ``punto``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"punto\",\n              \"path\": \"text.es_MX\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.es_MX\": 1\n          }\n        }\n      ])\n   \n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 4,\n          text : {\n            es_MX: 'La página ha sido actualizada con los puntos de la agenda.',\n          }\n        }\n      ]\n\n|fts| returns the document with ``_id: 4`` because the ``text.es_MX``\nfield in the document contains the plural term ``puntos``. |fts|\nmatches this document for the query term ``punto`` because |fts|\nanalyzes ``puntos`` as ``punto`` by stemming the plural (``s``) from the\nterm. Specifically, |fts| creates the following tokens (searchable\nterms) for the document in the results, which it then uses to match to\nthe query term: \n\n.. list-table:: \n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 4``\n     - ``la``, ``pagina``, ``ha``, ``sido``, ``actualizada``,\n       ``con``, ``los``, ``punto``, ``de``, ``la``, ``agenda``\n\n.. _stempel-tf-ref:\n\nstempel\n-------\n\nThe ``stempel`` token filter uses Lucene's `default Polish stemmer table  \n<https://lucene.apache.org/core/9_2_0/analysis/stempel/org/apache/lucene/analysis/pl/PolishAnalyzer.html#DEFAULT_STEMMER_FILE>`__ \nto stem words in the Polish language. It expects lowercase text. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``stempel``.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``text.pl_PL`` field in\nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using a\ncustom analyzer named ``stempelStemmer``. The custom analyzer\nspecifies the following:\n   \na. Apply the :ref:`standard <standard-tokenizer-ref>` tokenizer to\n   create tokens based on word break rules.\n#. Apply the following filters on the tokens:\n     \n   - :ref:`lowercase <lowercase-tf-ref>` token filter to convert the\n     words to lowercase.\n   - :ref:`stempel <stempel-tf-ref>` token filter to stem the Polish\n     words.  \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``stempelStemmer``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |fts-token-filter-a| replace:: :guilabel:`lowercase`\n      .. |fts-token-filter-b| replace:: :guilabel:`stempel`\n      .. |minutes-collection-field| replace:: **text.pl_PL** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-stempel-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {  \n           \"analyzer\": \"stempelStemmer\", \n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"text.pl_PL\": {\n                 \"analyzer\": \"stempelStemmer\",\n                 \"searchAnalyzer\": \"stempelStemmer\",\n                 \"type\": \"string\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"stempelStemmer\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"standard\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"lowercase\"\n                 },\n                 {\n                   \"type\": \"stempel\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``text.pl_PL`` field in the \n:ref:`minutes <custom-analyzers-eg-coll>` collection for the Polish \nterm ``punkt``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"punkt\",\n              \"path\": \"text.pl_PL\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.pl_PL\": 1\n          }\n        }\n      ])\n   \n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 4,\n          text: {\n            pl_PL: 'Strona została zaktualizowana o punkty porządku obrad.'\n          }\n        }\n      ]\n\n|fts| returns the document with ``_id: 4`` because the ``text.pl_PL``\nfield in the document contains the plural term ``punkty``. |fts| matches\nthis document for the query term ``punkt`` because |fts| analyzes\n``punkty`` as ``punkt`` by stemming the plural (``y``) from the term.\nSpecifically, |fts| creates the following tokens (searchable terms) for\nthe document in the results, which it then matches to the query term: \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 4``\n     - ``strona``, ``zostać``, ``zaktualizować``, ``o``, ``punkt``,\n       ``porządek``, ``obrada`` \n\n.. _stopword-tf-ref:\n\nstopword \n--------\n\nThe ``stopword`` token filter removes tokens that correspond to the \nspecified stop words. This token filter doesn't analyze the specified \nstop words. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``stopword``.\n\n   * - ``tokens``\n     - array of strings\n     - yes\n     - List that contains the stop words that correspond to the tokens\n       to remove. \n       Value must be one or more stop words.\n\n   * - ``ignoreCase``\n     - boolean\n     - no\n     - Flag that indicates whether to ignore the case of stop \n       words when filtering the tokens to remove. The value can be one \n       of the following: \n\n       - ``true`` - ignore case and remove all tokens that match the \n         specified stop words\n       - ``false`` - be case-sensitive and remove only tokens that \n         exactly match the specified case\n\n       *Default*: ``true``\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``title`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection using a custom\nanalyzer named ``stopwordRemover``. The custom analyzer specifies the\nfollowing: \n\na. Apply the :ref:`whitespace tokenizer <whitespace-tokenizer-ref>`\n   to create tokens based on occurrences of whitespace between words.\n#. Apply the ``stopword`` token filter to remove the tokens that\n   match the defined stop words ``is``, ``the``, and ``at``. The\n   token filter is case-insensitive and will remove all tokens that\n   match the specified stopwords. \n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``stopwordRemover``\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |fts-token-filter| replace:: :guilabel:`stopword`\n      .. |minutes-collection-field| replace:: **text.en_US** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-stopword-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {  \n           \"mappings\": {\n             \"fields\": {\n               \"text\": {\n                 \"type\" : \"document\",\n                 \"fields\": {\n                   \"en_US\": {\n                     \"type\": \"string\",\n                     \"analyzer\": \"stopwordRemover\"\n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"stopwordRemover\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"whitespace\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"stopword\",\n                   \"tokens\": [\"is\", \"the\", \"at\"]\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches for the phrase ``head of the sales``\nin the ``text.en_US`` field in the :ref:`minutes\n<custom-analyzers-eg-coll>` collection.   \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input:: \n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"phrase\": {\n              \"query\": \"head of the sales\",\n              \"path\": \"text.en_US\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.en_US\": 1\n          }\n        }\n      ])\n   \n   .. output::\n      :language: json\n      :linenos: \n\n      [\n        {\n          _id: 2,\n          text: { en_US: 'The head of the sales department spoke first.' }\n        }\n      ]\n   \n|fts| returns the document with ``_id: 2`` because the ``en_US`` field\ncontains the query term. |fts| doesn't create tokens for the stopword\n``the`` in the document during analysis, but is still able to match\nit to the query term because for ``string`` fields, it also analyzes\nthe query term using the index analyzer (or if specified, using the\n``searchAnalyzer``) and removes the stopword from the query term,\nwhich allows |fts| to match the query term to the document.\nSpecifically, |fts| creates the following tokens for the document in\nthe results: \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 2``\n     - ``head``, ``of``, ``sales``, ``department``, ``spoke``, ``first.``\n\n.. _trim-tf-ref:\n\ntrim\n----\n\nThe ``trim`` token filter trims leading and trailing whitespace from \ntokens. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attribute:\n\n.. list-table::\n   :widths: 12 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``trim``.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``text.en_US`` in the \nthe :ref:`minutes <custom-analyzers-eg-coll>` collection using a\ncustom analyzer named ``tokenTrimmer``. The custom analyzer specifies\nthe following: \n   \n- Apply the :ref:`htmlStrip-ref` character filter to remove all HTML\n  tags from the text except the ``a`` tag. \n- Apply the :ref:`keyword tokenizer <keyword-tokenizer-ref>` to\n  create a single token for the entire string. \n- Apply the ``trim`` token filter to remove leading and trailing\n  whitespace in the tokens. \n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``tokenTrimmer``\n      .. |fts-char-filter| replace:: :guilabel:`htmlStrip`\n      .. |fts-tokenizer| replace:: :guilabel:`keyword`\n      .. |fts-token-filter| replace:: :guilabel:`trim`\n      .. |minutes-collection-field| replace:: **text.en_US** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-trim-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"text\": {\n                 \"type\": \"document\",\n                 \"fields\": {\n                   \"en_US\": {\n                     \"type\": \"string\",\n                     \"analyzer\": \"tokenTrimmer\" \n                   }\n                 }\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"tokenTrimmer\",\n               \"charFilters\": [{\n                 \"type\": \"htmlStrip\",\n                 \"ignoredTags\": [\"a\"]\n               }],\n               \"tokenizer\": {\n                 \"type\": \"keyword\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"trim\"\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches for the phrase ``*department meetings*``\npreceded and followed by any number of other characters in the\n``text.en_US`` field in the :ref:`minutes <custom-analyzers-eg-coll>`\ncollection. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input:: \n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"wildcard\": {\n              \"query\": \"*department meetings*\",\n              \"path\": \"text.en_US\",\n              \"allowAnalyzedField\": true\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"text.en_US\": 1\n          }\n        }\n      ])\n   \n   .. output::\n      :language: json\n      :linenos: \n\n      [\n        {\n          _id: 1,\n          text: { en_US: '<head> This page deals with department meetings. </head>' }\n        }\n      ]\n\n|fts| returns the document with ``_id: 1`` because the ``en_US`` field\ncontains the query term ``department meetings``. |fts| creates the\nfollowing token for the document in the results, which shows that\n|fts| removed the HTML tags, created a single token for the entire\nstring, and removed leading and trailing whitespaces in the token: \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Document ID \n     - Output Tokens \n\n   * - ``_id: 1``\n     - ``This page deals with department meetings.``\n\n.. _wordDelimiterGraph-tf-ref:\n\nwordDelimiterGraph\n------------------\n\nThe ``wordDelimiterGraph`` token filter splits tokens into sub-tokens \nbased on configured rules. We recommend that you don't use this token \nfilter with the :ref:`standard <standard-tokenizer-ref>` tokenizer \nbecause this tokenizer removes many of the intra-word delimiters that \nthis token filter uses to determine boundaries. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 22 17 11 40\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this token filter type.\n       Value must be ``wordDelimiterGraph``.\n\n   * - ``delimiterOptions``\n     - object\n     - no\n     - Object that contains the rules that determine how to split words \n       into sub-words.\n\n       *Default*: ``{}``\n\n   * - | ``delimiterOptions`` \n       | ``.generateWordParts``\n     - boolean\n     - no\n     - Flag that indicates whether to split tokens based on sub-words. \n       For example,  if ``true``, this option splits ``PowerShot`` \n       into ``Power`` and ``Shot``.\n\n       *Default*: ``true``\n   \n   * - | ``delimiterOptions``\n       | ``.generateNumberParts``\n     - boolean\n     - no\n     - Flag that indicates whether to split tokens based on \n       sub-numbers. For example,  if ``true``, this option splits \n       ``100-2`` into ``100`` and ``2``.\n\n       *Default*: ``true``\n  \n   * - | ``delimiterOptions``\n       | ``.concatenateWords``\n     - boolean\n     - no\n     - Flag that indicates whether to concatenate runs of sub-words. \n       For example,  if ``true``, this option concatenates \n       ``wi-fi`` into ``wifi``. :icon-fa5:`star`\n\n       *Default*: ``false``\n  \n   * - | ``delimiterOptions`` \n       | ``.concatenateNumbers``\n     - boolean\n     - no\n     - Flag that indicates whether to concatenate runs of sub-numbers. \n       For example,  if ``true``, this option concatenates \n       ``100-2`` into ``1002``. :icon-fa5:`star`\n\n       *Default*: ``false``\n  \n   * - | ``delimiterOptions`` \n       | ``.concatenateAll``\n     - boolean\n     - no\n     - Flag that indicates whether to concatenate all runs. \n       For example,  if ``true``, this option concatenates \n       ``wi-fi-100-2`` into ``wifi1002``. :icon-fa5:`star`\n\n       *Default*: ``false``\n  \n   * - | ``delimiterOptions`` \n       | ``.preserveOriginal``\n     - boolean\n     - no\n     - Flag that indicates whether to generate tokens of the original \n       words. :icon-fa5:`star`\n\n       *Default*: ``true``\n  \n   * - | ``delimiterOptions`` \n       | ``.splitOnCaseChange``\n     - boolean\n     - no\n     - Flag that indicates whether to split tokens based on letter-case \n       transitions. For example,  if ``true``, this option splits \n       ``camelCase`` into ``camel`` and ``Case``.\n\n       *Default*: ``true``\n  \n   * - | ``delimiterOptions`` \n       | ``.splitOnNumerics``\n     - boolean\n     - no\n     - Flag that indicates whether to split tokens based on \n       letter-number transitions. For example,  if ``true``, this \n       option splits ``g2g`` into ``g``, ``2``, and ``g``.\n\n       *Default*: ``true``\n  \n   * - | ``delimiterOptions`` \n       | ``.stemEnglishPossessive``\n     - boolean\n     - no\n     - Flag that indicates whether to remove trailing possessives from \n       each sub-word. For example,  if ``true``, this option changes \n       ``who's`` into ``who``.\n\n       *Default*: ``true``\n\n   * - | ``delimiterOptions`` \n       | ``.ignoreKeywords``\n     - boolean\n     - no\n     - Flag that indicates whether to skip tokens with the ``keyword`` \n       attribute set to ``true``.\n\n       *Default*: ``false``\n\n   * - ``protectedWords``\n     - object\n     - no\n     - Object that contains options for protected words.\n\n       *Default*: ``{}``\n\n   * - | ``protectedWords``\n       | ``.words``\n     - array\n     - conditional\n     - List that contains the tokens to protect from delimination. If \n       you specify ``protectedWords``, you must specify this option.\n\n   * - | ``protectedWords``\n       | ``.ignoreCase``\n     - boolean\n     - no\n     - Flag that indicates whether to ignore case sensisitivity for \n       protected words.\n\n       *Default*: ``true``\n\n:icon-fa5:`star` If ``true``, apply the :ref:`flattenGraph\n<flattenGraph-tf-ref>` token filter after this option to make  the\ntoken stream suitable for indexing.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``title`` field in the\n:ref:`minutes <custom-analyzers-eg-coll>` collection using a custom\nanalyzer named ``wordDelimiterGraphAnalyzer``. The custom analyzer\nspecifies the following:\n   \na. Apply the :ref:`whitespace <whitespace-tokenizer-ref>` tokenizer to\n   create tokens based on occurrences of whitespace between words.\n#. Apply the :ref:`wordDelimiterGraph <wordDelimiterGraph-tf-ref>`\n   token filter for the following: \n      \n   - Don't try and split ``is``, ``the``, and ``at``. The exclusion \n     is case sensitive. For example ``Is`` and ``tHe`` are not\n     excluded. \n   - Split tokens on case changes and remove tokens that contain only \n     alphabetical letters from the English alphabet. \n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``wordDelimiterGraphAnalyzer``\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |fts-token-filter| replace:: :guilabel:`wordDelimiterGraph`\n      .. |minutes-collection-field| replace:: **title** nested\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-token-filter-worddelimitergraphanalyzer-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {  \n           \"mappings\": {\n             \"fields\": {\n               \"title\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"wordDelimiterGraphAnalyzer\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"name\": \"wordDelimiterGraphAnalyzer\",\n               \"charFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"whitespace\"\n               },\n               \"tokenFilters\": [\n                 {\n                   \"type\": \"wordDelimiterGraph\",\n                   \"protectedWords\": {\n                     \"words\": [\"is\", \"the\", \"at\"],\n                     \"ignoreCase\": false\n                   },\n                   \"delimiterOptions\" : {\n                     \"generateWordParts\" : false,\n                     \"splitOnCaseChange\" : true\n                   }\n                 }\n               ]\n             }\n           ]\n         }\n\nThe following query searches the ``title`` field in the :ref:`minutes\n<custom-analyzers-eg-coll>` collection for the term ``App2``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"index\": \"default\",\n            \"text\": {\n              \"query\": \"App2\",\n              \"path\": \"title\"\n            }\n          } \n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1\n          }\n        }\n      ])\n   \n   .. output::\n      :language: json\n\n      [\n        {\n          _id: 4,\n          title: 'The daily huddle on tHe StandUpApp2'\n        }\n      ]\n\n|fts| returns the document with ``_id: 4`` because the ``title`` field\nin the document contains ``App2``. |fts| splits tokens on case changes\nand removes tokens created by a split that contain only alphabetical \nletters. It also analyzes the query term using the index analyzer (or\nif specified, using the ``searchAnalyzer``) to split the word on case\nchange and remove the letters preceding ``2``. Specifically, |fts|\ncreates the following tokens for the document with ``_id : 4`` for\nthe ``protectedWords`` and ``delimiterOptions`` options:\n\n.. list-table:: \n   :header-rows: 1\n\n   * - ``wordDelimiterGraph`` Options \n     - Output Tokens \n\n   * - ``protectedWords``\n     -  ``The``, ``daily``, ``huddle``, ``on``, ``t``, ``He``,\n        ``Stand``, ``Up``, ``App``, ``2``\n\n   * - ``delimiterOptions``\n     - ``The``, ``daily``, ``huddle``, ``on``, ``2``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/token-filters.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"message\": {\n                 \"analyzer\": \"edgegramExample\",\n                 \"type\": \"string\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"charFilters\": [],\n               \"name\": \"edgegramExample\",\n               \"tokenFilters\": [],\n               \"tokenizer\": {\n                 \"maxGram\": 7,\n                 \"minGram\": 2,\n                 \"type\": \"edgeGram\"\n               }\n             }\n           ]\n         }\n\nThe following query searches the ``message`` field in \nthe ``minutes`` collection for text that begin with ``tr``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"tr\",\n              \"path\": \"message\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"message\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { _id: 1, message: 'try to siGn-In' },\n      { _id: 3, message: 'try to sign-in' }\n\n|fts| returns documents with ``_id: 1`` and ``_id: 3`` in the\nresults because |fts| created a token with the value ``tr`` using the\n``edgeGram`` tokenizer for the documents, which matches the search\nterm. If you index the ``message`` field using the ``standard``\ntokenizer, |fts| would not return any results for the search term\n``tr``. \n   \nThe following table shows the tokens that the ``edgeGram`` tokenizer \nand by comparison, the ``standard`` tokenizer, create for the \ndocuments in the results:\n\n.. list-table::\n   :widths: 20 80\n   :header-rows: 1\n\n   * - Tokenizer\n     - Token Outputs\n\n   * - ``standard``\n     - ``try``, ``to``, ``sign``, ``in``\n\n   * - ``edgeGram``\n     - ``tr``, ``try``, ``try{SPACE}``, ``try t``, ``try to``, ``try to{SPACE}``\n\n.. _keyword-tokenizer-ref:\n\nkeyword\n-------\n\nThe ``keyword`` tokenizer tokenizes the entire input as a single token.\n|fts| doesn't index string fields that exceed 32766 characters using the\n``keyword`` tokenizer. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 11 12 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this tokenizer type.\n       Value must be ``keyword``.\n\nExample\n~~~~~~~\n\nThe following index definition indexes the ``message`` field in the \n``minutes`` collection using a custom analyzer named \n``keywordExample``. It uses the ``keyword`` tokenizer to create\na token (searchable terms) on the entire field as a single term.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``keywordExample``\n      .. |fts-tokenizer| replace:: :guilabel:`keyword`\n      .. |minutes-collection-field| replace:: **message**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-tokenizer-keyword-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"message\": {\n                 \"analyzer\": \"keywordExample\",\n                 \"type\": \"string\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"charFilters\": [],\n               \"name\": \"keywordExample\",\n               \"tokenFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"keyword\"\n               }\n             }\n           ]\n         }\n\nThe following query searches the ``message`` field in \nthe ``minutes`` collection for the phrase ``try to sign-in``.\n   \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"try to sign-in\",\n              \"path\": \"message\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"message\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { _id: 3, message: 'try to sign-in' }\n\n|fts| returns the document with ``_id: 3`` in the results because |fts|\ncreated a token with the value ``try to sign-in`` using the\n``keyword`` tokenizer for the documents, which matches the search\nterm. If you index the ``message`` field using the ``standard``\ntokenizer, |fts| returns documents with ``_id: 1``,\n``_id: 2`` and ``_id: 3`` for the search term ``try to sign-in``\nbecause each document contains some of the tokens the ``standard``\ntokenizer creates.\n   \nThe following table shows the tokens that the ``keyword`` tokenizer \nand by comparison, the ``standard`` tokenizer, create for the \ndocument with ``_id: 3``:\n\n.. list-table::\n   :widths: 20 80\n   :header-rows: 1\n\n   * - Tokenizer\n     - Token Outputs\n\n   * - ``standard``\n     - ``try``, ``to``, ``sign``, ``in``\n\n   * - ``keyword``\n     - ``try to sign-in``\n\n.. _ngram-tokenizer-ref:\n\nnGram\n-----\n\nThe ``nGram`` tokenizer tokenizes into text chunks, or \"n-grams\", of \ngiven sizes. You can't use a custom analyzer with :ref:`nGram\n<ngram-tokenizer-ref>` tokenizer in the ``analyzer`` field for\n:ref:`synonym <synonyms-ref>` or :ref:`autocomplete\n<bson-data-types-autocomplete>` :ref:`field mapping definitions\n<fts-field-mappings>`. \n\n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes: \n\n.. list-table::\n   :widths: 12 11 12 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this tokenizer type.\n       Value must be ``nGram``.\n \n   * - ``minGram``\n     - integer\n     - yes\n     - Number of characters to include in the shortest token created.\n \n   * - ``maxGram``\n     - integer\n     - yes\n     - Number of characters to include in the longest token created.\n\nExample\n~~~~~~~\n\nThe following index definition indexes the ``title`` field in the \n``minutes`` collection using a custom analyzer named \n``ngramExample``. It uses the ``nGram`` tokenizer to create\ntokens (searchable terms) between ``4`` and ``6`` characters long\nin the ``title`` field.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``ngramExample``\n      .. |fts-tokenizer| replace:: :guilabel:`nGram`\n      .. |minutes-collection-field| replace:: **title**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-tokenizer-ngram-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"title\": {\n                 \"analyzer\": \"ngramExample\",\n                 \"type\": \"string\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"charFilters\": [],\n               \"name\": \"ngramExample\",\n               \"tokenFilters\": [],\n               \"tokenizer\": {\n                 \"maxGram\": 6,\n                 \"minGram\": 4,\n                 \"type\": \"nGram\"\n               }\n             }\n           ]\n         }\n\nThe following query searches the ``title`` field in \nthe ``minutes`` collection for the term ``week``.\n   \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"week\",\n              \"path\": \"title\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { _id: 1, title: \"The team's weekly meeting\" }\n\n|fts| returns the document with ``_id: 1`` in the results because |fts|\ncreated a token with the value ``week`` using the ``nGram`` tokenizer\nfor the documents, which matches the search term. If you index the\n``title`` field using the ``standard`` or ``edgeGram`` tokenizer,\n|fts| would not return any results for the search term ``week``.\n   \nThe following table shows the tokens that the ``nGram`` tokenizer \nand by comparison, the ``standard`` and ``edgeGram`` tokenizer create\nfor the document with ``_id: 1``:\n\n.. list-table::\n   :widths: 20 80\n   :header-rows: 1\n\n   * - Tokenizer\n     - Token Outputs\n\n   * - ``standard``\n     - ``The``, ``team's``, ``weekly``, ``meeting`` \n\n   * - ``edgeGram``\n     - ``The{SPACE}``, ``The t``, ``The te`` \n\n   * - ``nGram``\n     - ``The{SPACE}``, ``The t``, ``The te``, ``he t``, ... ,\n       ``week``, ``weekl``, ``weekly``, ``eekl``, ..., ``eetin``,\n       ``eeting``, ``etin``, ``eting``, ``ting``\n\n.. _regexcapturegroup-tokenizer-ref:\n\nregexCaptureGroup\n-----------------\n\nThe ``regexCaptureGroup`` tokenizer matches a regular expression \npattern to extract tokens. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 11 12 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this tokenizer type.\n       Value must be ``regexCaptureGroup``.\n \n   * - ``pattern``\n     - string\n     - yes\n     - Regular expression to match against.\n \n   * - ``group``\n     - integer\n     - yes\n     - Index of the character group within the matching expression to \n       extract into tokens. Use ``0`` to extract all character groups.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``page_updated_by.phone``\nfield in the ``minutes`` collection using a custom analyzer named \n``phoneNumberExtractor``. It uses the following:\n\n- ``mappings`` character filter to remove parenthesis around the first\n  three digits and replace all spaces and periods with dashes\n- ``regexCaptureGroup`` tokenizer to create a single token from the\n  first US-formatted phone number present in the text input\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``phoneNumberExtractor``\n      .. |fts-char-filter| replace:: :guilabel:`mapping`\n      .. |fts-char-filter-option| replace:: :guilabel:`mappings`\n      .. |fts-tokenizer| replace:: :guilabel:`regexCaptureGroup`\n      .. |minutes-collection-field| replace:: **page_updated_by.phone**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-tokenizer-regexcapturegroup-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true \n\n         {\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"page_updated_by\": {\n                 \"fields\": {\n                   \"phone\": {\n                     \"analyzer\": \"phoneNumberExtractor\",\n                     \"type\": \"string\"\n                   }\n                 },\n                 \"type\": \"document\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"charFilters\": [\n                 {\n                   \"mappings\": {\n                     \" \": \"-\",\n                     \"(\": \"\",\n                     \")\": \"\",\n                     \".\": \"-\"\n                   },\n                   \"type\": \"mapping\"\n                 }\n               ],\n               \"name\": \"phoneNumberExtractor\",\n               \"tokenFilters\": [],\n               \"tokenizer\": {\n                 \"group\": 0,\n                 \"pattern\": \"^\\\\b\\\\d{3}[-]?\\\\d{3}[-]?\\\\d{4}\\\\b$\",\n                 \"type\": \"regexCaptureGroup\"\n                 }\n             }\n           ]\n         }\n   \nThe following query searches the ``page_updated_by.phone`` field in \nthe ``minutes`` collection for the phone number ``123-456-9870``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"123-456-9870\",\n              \"path\": \"page_updated_by.phone\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"page_updated_by.phone\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { _id: 3, page_updated_by: { phone: '(123).456.9870' }\n\n|fts| returns the document with ``_id: 3`` in the results because |fts|\ncreated a token with the value ``123-456-7890`` using the\n``regexCaptureGroup`` tokenizer for the documents, which matches the\nsearch term. If you index the ``page_updated_by.phone`` field using\nthe ``standard`` tokenizer, |fts| returns all of the documents for\nthe search term ``123-456-7890``.\n   \nThe following table shows the tokens that the ``regexCaptureGroup`` tokenizer \nand by comparison, the ``standard`` tokenizer, create for the \ndocument with ``_id: 3``:\n\n.. list-table::\n   :widths: 50 50\n   :header-rows: 1\n\n   * - Tokenizer\n     - Token Outputs\n\n   * - ``standard``\n     - ``123``, ``456.9870``\n\n   * - ``regexCaptureGroup``\n     - ``123-456-9870`` \n\n.. _regexSplit-tokenizer-ref:\n\nregexSplit\n----------\n\nThe ``regexSplit`` tokenizer splits tokens with a regular-expression \nbased delimiter. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 11 12 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this tokenizer type.\n       Value must be ``regexSplit``.\n \n   * - ``pattern``\n     - string\n     - yes\n     - Regular expression to match against.\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``page_updated_by.phone``\nfield in the ``minutes`` collection using a custom analyzer named \n``dashDotSpaceSplitter``. It uses the ``regexSplit`` tokenizer to\ncreate tokens (searchable terms) from one or more hyphens, periods\nand spaces on the ``page_updated_by.phone`` field.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``dashDotSpaceSplitter``\n      .. |fts-tokenizer| replace:: :guilabel:`regexSplit`\n      .. |minutes-collection-field| replace:: **page_updated_by.phone**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-tokenizer-regexsplit-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"page_updated_by\": {\n                 \"fields\": {\n                   \"phone\": {\n                     \"analyzer\": \"dashDotSpaceSplitter\",\n                     \"type\": \"string\"\n                   }\n                 },\n                 \"type\": \"document\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"charFilters\": [],\n               \"name\": \"dashDotSpaceSplitter\",\n               \"tokenFilters\": [],\n               \"tokenizer\": {\n                 \"pattern\": \"[-. ]+\",\n                 \"type\": \"regexSplit\"\n               }\n             }\n           ]\n         }\n\nThe following query searches the ``page_updated_by.phone`` field in \nthe ``minutes`` collection for the digits ``9870``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"9870\",\n              \"path\": \"page_updated_by.phone\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"page_updated_by.phone\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { _id: 3, page_updated_by: { phone: '(123).456.9870' }\n\n|fts| returns the document with ``_id: 3`` in the results because |fts|\ncreated a token with the value ``9870`` using the ``regexSplit``\ntokenizer for the documents, which matches the search term. If you\nindex the ``page_updated_by.phone`` field using the ``standard``\ntokenizer, |fts| would not return any results for the search term\n``9870``.\n   \nThe following table shows the tokens that the ``regexCaptureGroup``\ntokenizer and by comparison, the ``standard`` tokenizer, create for\nthe document with ``_id: 3``:\n\n.. list-table::\n   :widths: 50 50\n   :header-rows: 1\n\n   * - Tokenizer\n     - Token Outputs\n\n   * - ``standard``\n     - ``123``, ``456.9870``\n\n   * - ``regexSplit``\n     - ``(123)``, ``456``, ``9870`` \n\n.. _standard-tokenizer-ref:\n\nstandard\n--------\n\nThe ``standard`` tokenizer tokenizes based on word break rules from the \n`Unicode Text Segmentation algorithm <https://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf>`__. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 22 12 11 55\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this tokenizer type.\n       Value must be ``standard``.\n\n   * - ``maxTokenLength``\n     - integer\n     - no\n     - Maximum length for a single token. Tokens greater than this \n       length are split at ``maxTokenLength`` into multiple tokens.\n\n       *Default*: ``255``\n\nExample\n~~~~~~~\n\nThe following index definition indexes the ``message``\nfield in the ``minutes`` collection using a custom analyzer named\n``standardExample``. It uses the ``standard`` tokenizer and the\n:ref:`stopword token filter <stopword-tf-ref>`.\n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``standardExample``\n      .. |fts-tokenizer| replace:: :guilabel:`standard`\n      .. |minutes-collection-field| replace:: **message**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-tokenizer-standard-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true\n      \n        {\n          \"mappings\": {\n            \"dynamic\": true,\n            \"fields\": {\n              \"message\": {\n                \"analyzer\": \"standardExample\",\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"analyzers\": [\n            {\n              \"charFilters\": [],\n              \"name\": \"standardExample\",\n              \"tokenFilters\": [],\n              \"tokenizer\": {\n                \"type\": \"standard\"\n              }\n            }\n          ]\n        }\n\nThe following query searches the ``message`` field in \nthe ``minutes`` collection for the term ``signature``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"signature\",\n              \"path\": \"message\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"message\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { _id: 4, message: 'write down your signature or phone №' }\n\n|fts| returns the document with ``_id: 4`` because |fts|\ncreated a token with the value ``signature`` using the ``standard``\ntokenizer for the documents, which matches the search term. If you\nindex the ``message`` field using the ``keyword`` tokenizer, |fts|\nwould not return any results for the search term ``signature``.\n   \nThe following table shows the tokens that the ``standard``\ntokenizer and by comparison, the ``keyword`` analyzer, create for\nthe document with ``_id: 4``:\n\n.. list-table::\n   :widths: 20 80\n   :header-rows: 1\n\n   * - Tokenizer\n     - Token Outputs\n\n   * - ``standard``\n     - ``write``, ``down``, ``your``, ``signature``, ``or``, ``phone``\n\n   * - ``keyword``\n     - ``write down your signature or phone №``\n\n.. _uaxUrlEmail-tokenizer-ref:\n\nuaxUrlEmail\n-----------\n\nThe ``uaxUrlEmail`` tokenizer tokenizes |url|\\s and email addresses.\nAlthough ``uaxUrlEmail`` tokenizer tokenizes based on word break rules\nfrom the `Unicode Text Segmentation\nalgorithm <http://www.unicode.org/L2/L2019/19034-uax29-34-draft.pdf>`__, \nwe recommend using ``uaxUrlEmail`` tokenizer only when the indexed \nfield value includes |url|\\s and email \naddresses. For fields that don't include |url|\\s or email addresses, use\nthe :ref:`<standard-tokenizer-ref>` tokenizer to create tokens based on\nword break rules. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 12 11 12 65\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type`` \n     - string\n     - yes \n     - Human-readable label that identifies this tokenizer type.\n       Value must be ``uaxUrlEmail``.\n\n   * - ``maxTokenLength``\n     - int\n     - no\n     - Maximum number of characters in one token.\n\n       *Default*: ``255``\n\nExample \n~~~~~~~\n\n.. tabs::\n\n   .. tab:: Basic Example\n      :tabid: basic \n\n      The following index definition indexes the ``page_updated_by.email``\n      field in the ``minutes`` collection using a custom analyzer named \n      ``basicEmailAddressAnalyzer``. It uses the ``uaxUrlEmail`` tokenizer to\n      create tokens (searchable terms) from |url|\\s and email\n      addresses in the ``page_updated_by.email`` field.\n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            .. |analyzer-name| replace:: ``basicEmailAddressAnalyzer``\n            .. |fts-tokenizer| replace:: :guilabel:`uaxUrlEmail`\n            .. |minutes-collection-field| replace:: **page_updated_by.email**\n            .. |fts-field-type| replace:: **String**\n\n            .. include:: /includes/extracts/fts-tokenizer-uaxurlemail-config-basic-eg.rst \n\n         .. tab:: JSON Editor \n            :tabid: jsoneditor\n\n            Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                 \"mappings\": {\n                   \"fields\": {\n                     \"page_updated_by\": {\n                       \"fields\": {\n                         \"email\": {\n                           \"analyzer\": \"basicEmailAddressAnalyzer\",\n                           \"type\": \"string\"\n                         }\n                       },\n                       \"type\": \"document\"\n                     }\n                   }\n                 },\n                 \"analyzers\": [\n                   {\n                     \"name\": \"basicEmailAddressAnalyzer\",\n                     \"tokenizer\": {\n                       \"type\": \"uaxUrlEmail\"\n                     }\n                   }\n                 ]\n               }\n\n      The following query searches the ``page_updated_by.email`` field in \n      the ``minutes`` collection for the email ``lewinsky@example.com``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: json\n\n            db.minutes.aggregate([ \n              { \n                \"$search\": { \n                  \"text\": { \n                    \"query\": \"lewinsky@example.com\",\n                    \"path\": \"page_updated_by.email\" \n                  }\n                } \n              },\n              {\n                \"$project\": {\n                  \"_id\": 1,\n                  \"page_updated_by.email\": 1\n                }\n              }\n            ])\n\n         .. output::\n            :language: json\n            :visible: true\n\n            { _id: 3, page_updated_by: { email: 'lewinsky@example.com' } }\n\n      |fts| returns the document with ``_id: 3`` in the results\n      because |fts| created a token with the value\n      ``lewinsky@example.com`` using the ``uaxUrlEmail`` tokenizer\n      for the documents, which matches the search term. If you\n      index the ``page_updated_by.email`` field using the\n      ``standard`` tokenizer, |fts| returns all the documents for\n      the search term ``lewinsky@example.com``.\n   \n      The following table shows the tokens that the ``uaxUrlEmail``\n      tokenizer and by comparison, the ``standard`` tokenizer, create for\n      the document with ``_id: 3``:\n\n      .. list-table::\n         :widths: 20 80\n         :header-rows: 1\n\n         * - Tokenizer\n           - Token Outputs\n\n         * - ``standard``\n           - ``lewinsky``, ``example.com``\n\n         * - ``uaxUrlEmail``\n           - ``lewinsky@example.com``\n\n   .. tab:: Advanced Example\n      :tabid: advanced\n            \n      The following index definition indexes the ``page_updated_by.email``\n      field in the ``minutes`` collection using a custom analyzer named \n      ``emailAddressAnalyzer``. It uses the following:\n   \n      - The :ref:`autocomplete <autocomplete-ref>` type with an\n        ``edgeGram`` :ref:`tokenization strategy\n        <bson-data-types-autocomplete>`\n      - The ``uaxUrlEmail`` tokenizer to create tokens (searchable\n        terms) from |url|\\s and email addresses\n            \n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            .. |analyzer-name| replace:: ``emailAddressAnalyzer``\n            .. |fts-tokenizer| replace:: :guilabel:`uaxUrlEmail`\n            .. |minutes-collection-field| replace:: **page_updated_by.email**\n            .. |fts-field-type| replace:: **Autocomplete**\n\n            .. include:: /includes/extracts/fts-tokenizer-uaxurlemail-config-advanced-eg.rst \n\n         .. tab:: JSON Editor \n            :tabid: jsoneditor\n\n            Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                 \"mappings\": {\n                   \"fields\": {\n                     \"page_updated_by\": {\n                       \"fields\": {\n                         \"email\": {\n                           \"analyzer\": \"emailAddressAnalyzer\",\n                           \"tokenization\": \"edgeGram\",\n                           \"type\": \"autocomplete\"\n                         }\n                       },\n                       \"type\": \"document\"\n                     }\n                   }\n                 },\n                 \"analyzers\": [\n                   {\n                     \"name\": \"emailAddressAnalyzer\",\n                     \"tokenizer\": {\n                       \"type\": \"uaxUrlEmail\"\n                     }\n                   }\n                 ]\n               }\n\n      The following query searches the ``page_updated_by.email`` field in \n      the ``minutes`` collection for the term ``exam``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: json\n\n            db.minutes.aggregate([ \n              { \n                \"$search\": { \n                  \"autocomplete\": { \n                    \"query\": \"lewinsky@example.com\",\n                    \"path\": \"page_updated_by.email\" \n                  }\n                } \n              },\n              {\n                \"$project\": {\n                  \"_id\": 1,\n                  \"page_updated_by.email\": 1\n                }\n              }\n            ])\n\n         .. output::\n            :language: json\n            :visible: true\n\n            _id: 3, page_updated_by: { email: 'lewinsky@example.com' } }\n            \n      |fts| returns the document with ``_id: 3`` in the results\n      because |fts| created a token with the value\n      ``lewinsky@example.com`` using the ``uaxUrlEmail`` tokenizer\n      for the documents, which matches the search term. If you\n      index the ``page_updated_by.email`` field using the\n      ``standard`` tokenizer, |fts| returns all the documents for\n      the search term ``lewinsky@example.com``.\n   \n      The following table shows the tokens that the ``uaxUrlEmail``\n      tokenizer and by comparison, the ``standard`` tokenizer, create for\n      the document with ``_id: 3``:\n\n      .. list-table::\n         :widths: 20 20 60\n         :header-rows: 1\n\n         * - Tokenizer\n           - |fts| Field Type\n           - Token Outputs\n\n         * - ``standard``\n           - ``autocomplete`` ``edgeGram``\n           - ``le``, ``lew``, ``lewi``, ``lewin``, ``lewins``,\n             ``lewinsk``, ``lewinsky``, ``lewinsky@``,\n             ``lewinsky``, ``ex``, ``exa``, ``exam``, ``examp``,\n             ``exampl``, ``example``, ``example.``,\n             ``example.c``, ``example.co``, ``example.com``\n\n         * - ``uaxUrlEmail``\n           - ``autocomplete`` ``edgeGram``\n           - ``le``, ``lew``, ``lewi``, ``lewin``, ``lewins``,\n             ``lewinsk``, ``lewinsky``, ``lewinsky@``,\n             ``lewinsky@e``, ``lewinsky@ex``, ``lewinsky@exa``,\n             ``lewinsky@exam``, ``lewinsky@examp``,\n             ``lewinsky@exampl``\n\n.. _whitespace-tokenizer-ref:\n\nwhitespace\n----------\n\nThe ``whitespace`` tokenizer tokenizes based on occurrences of \nwhitespace between words. \n\nAttributes \n~~~~~~~~~~\n\nIt has the following attributes:\n\n.. list-table::\n   :widths: 22 12 11 45\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Required?\n     - Description\n\n   * - ``type``\n     - string\n     - yes\n     - Human-readable label that identifies this tokenizer type.\n       Value must be ``whitespace``.\n\n   * - ``maxTokenLength``\n     - integer\n     - no\n     - Maximum length for a single token. Tokens greater than this \n       length are split at ``maxTokenLength`` into multiple tokens.\n\n       *Default*: ``255``\n\nExample \n~~~~~~~\n\nThe following index definition indexes the ``message``\nfield in the ``minutes`` collection using a custom analyzer named  ``whitespaceExample``. It uses the ``whitespace`` tokenizer to\ncreate tokens (searchable terms) from any whitespaces in the\n``message`` field.\n   \n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib \n\n      .. |analyzer-name| replace:: ``whitespaceExample``\n      .. |fts-tokenizer| replace:: :guilabel:`whitespace`\n      .. |minutes-collection-field| replace:: **message**\n      .. |fts-field-type| replace:: **String**\n\n      .. include:: /includes/extracts/fts-tokenizer-whitespace-config.rst \n\n   .. tab:: JSON Editor \n      :tabid: jsoneditor\n\n      Replace the default index definition with the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"message\": {\n                 \"analyzer\": \"whitespaceExample\",\n                 \"type\": \"string\"\n               }\n             }\n           },\n           \"analyzers\": [\n             {\n               \"charFilters\": [],\n               \"name\": \"whitespaceExample\",\n               \"tokenFilters\": [],\n               \"tokenizer\": {\n                 \"type\": \"whitespace\"\n               }\n             }\n           ]\n         }\n\nThe following query searches the ``message`` field in \nthe ``minutes`` collection for the term ``SIGN-IN``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n      :linenos: \n\n      db.minutes.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"SIGN-IN\",\n              \"path\": \"message\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"message\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: true\n\n      { _id: 2, message: 'do not forget to SIGN-IN' }\n\n|fts| returns the document with ``_id: 2`` in the results because |fts|\ncreated a token with the value ``SIGN-IN`` using the ``whitespace``\ntokenizer for the documents, which matches the search term. If you\nindex the ``message`` field using the ``standard`` tokenizer, |fts|\nreturns documents with ``_id: 1``, ``_id: 2`` and ``_id: 3`` for the\nsearch term ``SIGN-IN``.\n   \nThe following table shows the tokens that the ``whitespace``\ntokenizer and by comparison, the ``standard`` tokenizer, create for\nthe document with ``_id: 2``:\n\n.. list-table::\n   :widths: 20 80\n   :header-rows: 1\n\n   * - Tokenizer\n     - Token Outputs\n\n   * - ``standard``\n     - ``do``, ``not``, ``forget``, ``to``, ``sign``, ``in``\n\n   * - ``whitespace``\n     - ``do``, ``not``, ``forget``, ``to``, ``SIGN-IN``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/tokenizers.txt"
  },
  {
    "code": "            :copyable: true\n            :emphasize-lines: 6\n\n            {\n              \"mappings\": {\n                \"fields\": {\n                  \"title\": {\n                    \"type\": \"string\",\n                    \"analyzer\": \"lucene.whitespace\",\n                    \"searchAnalyzer\": \"lucene.whitespace\"\n                  }\n                }\n              }\n            }\n\n      #. Click :guilabel:`Next`.\n      #. Click :guilabel:`Create Search Index`.\n\nThe following query searches for the term ``Lion's`` in the ``title``\nfield. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/whitespace.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        { \n          \"$search\": {\n            \"text\": {\n               \"query\": \"Lion's\",\n               \"path\": \"title\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n\n      [\n        { title: 'Lion's Den' },\n        { title: 'The Lion's Mouth Opens' }\n      ]\n\n|fts| returns these documents by doing the following for the text in the\n``title`` field using the ``lucene.whitespace`` analyzer:\n\n-  Retain the original letter case for the text.\n-  Divide the text into tokens wherever it finds a whitespace character. \n\nThe following table shows the tokens (searchable terms) that |fts|\ncreates using the :ref:`ref-whitespace-analyzer` and, by contrast, the \n:ref:`ref-simple-analyzer` and :ref:`ref-keyword-analyzer` for the\ndocuments in the results:  \n\n.. list-table:: Tokens\n   :header-rows: 1\n   :stub-columns: 1\n\n   * - Title \n     - Whitespace Analyzer Tokens \n     - Simple Analyzer Tokens\n     - Keyword Analyzer Tokens\n\n   * - ``Lion's Den`` \n     - ``Lion's``, ``Den``\n     - ``lion``, ``s``, ``den``\n     - ``Lion's Den``\n\n   * - ``The Lion's Mouth Opens`` \n     - ``The``, ``Lion's``, ``Mouth``, ``Opens``\n     - ``the``, ``lion``, ``s``, ``mouth``, ``opens``\n     - ``The Lion's Mouth Opens``\n\nThe index that uses ``whitespace`` analyzer is case-sensitive.\nTherefore, |fts| is able to match the query term ``Lion's`` to the token\n``Lion's`` created by the ``whitespace`` analyzer. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/analyzers/whitespace.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     $search: {\n       \"index\": \"<index name>\", // optional, defaults to \"default\"\n       \"autocomplete\": {\n         \"query\": \"<search-string>\",\n         \"path\": \"<field-to-search>\",\n         \"tokenOrder\": \"any|sequential\",\n         \"fuzzy\": <options>,\n         \"score\": <options>\n       }\n     }\n   }\n\n.. _autocomplete-ref-options:\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 50 10 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n     - Default\n\n   * - ``query``\n     - string or array of strings\n     - String or strings to search for. If there are multiple\n       terms in a string, |fts| also looks for a match for each term\n       in the string separately.\n     - yes\n     -\n\n   * - ``path``\n     - string\n     - Indexed field to search.\n       This field must be indexed as the ``autocomplete`` data type. To learn more, \n       see :ref:`How to Index Fields for Autocompletion <bson-data-types-autocomplete>`. \n       \n       The ``autocomplete`` operator doesn't support the ``multi`` or ``wildcard (*)`` \n       options in the ``path`` parameter. It also doesn't support an array of fields as the ``path`` value. \n       To learn more, see :ref:`Construct a Query Path <ref-path>`.\n       \n       For an example of an ``autocomplete`` operator query across multiple fields, \n       see :ref:`Search Across Multiple Fields <autocomplete-compound>` \n       or the Advanced Example in :ref:`How to Use Autocomplete with Atlas Search<autocomplete-tutorial>`. \n\n     - yes\n     -\n\n   * - ``fuzzy``\n     - object\n     - Enable fuzzy search. Find strings which are similar to the\n       search term or terms.\n     - no\n     -\n\n   * - | ``fuzzy``\n       | ``.maxEdits``\n     - integer\n     - Maximum number of single-character edits required to match the\n       specified search term. Value can be ``1`` or ``2``.\n     - no\n     - ``2``\n\n   * - | ``fuzzy``\n       | ``.prefixLength``\n     - integer\n     - Number of characters at the beginning of each term in the result\n       that must exactly match.\n     - no\n     - ``0``\n\n   * - | ``fuzzy``\n       | ``.maxExpansions``\n     - integer\n     - Maximum number of variations to generate and search for. This\n       limit applies on a per-token basis.\n     - no\n     - ``50``\n\n   * - ``score``\n     - object\n     - :ref:`Score <scoring-ref>` to assign to the matching search term\n       results. Use one of the following options to modify the default\n       score:\n       \n       .. list-table::\n          :stub-columns: 1\n          :widths: 10 90\n\n          * - ``boost``\n            - Multiply the result score by the given number.\n          * - ``constant``\n            - Replace the result score with the given number.\n          * - ``function``\n            - Replace the result score with the given expression.\n       \n       ``autocomplete`` offers less fidelity in :ref:`score <scoring-ref>` \n       in exchange for faster query execution. To learn more, see :ref:`autocomplete-ref-scores`.\n       \n       For information on using ``score`` in your query, see :ref:`scoring-ref`.\n\n     - no\n     -\n\n   * - ``tokenOrder``\n     - string\n     - Order in which to search for tokens. Value can be one of the\n       following:\n\n       .. list-table::\n          :stub-columns: 1\n          :widths: 10 90\n\n          * - ``any``\n            - Indicates tokens in the query can appear in any order in\n              the documents. Results contain documents where the tokens\n              appear sequentially and non-sequentially. However,\n              results where the tokens appear sequentially score higher\n              than other, non-sequential values.\n\n          * - ``sequential``\n            - Indicates tokens in the query must appear adjacent to\n              each other or in the order specified in the query in the\n              documents. Results contain only documents where the\n              tokens appear sequentially.\n\n     - no\n     - ``any``\n\n.. _autocomplete-ref-scores:\n\nScoring Behavior  \n----------------\n\nThe ``autocomplete`` operator query results that are exact matches \nreceive a lower score than results that aren't exact matches. |fts| \ncan't determine if a query string is an exact match for an indexed text \nif you specify just the autocomplete-indexed token substrings. To score \nexact matches higher, try the following workaround: \n\n.. note::\n   \n   The following workaround doesn't guarantee higher scores for exact \n   matches in all cases.\n\n1. Index the field as both :ref:`autocomplete\n   <bson-data-types-autocomplete>` and :ref:`string\n   <bson-data-types-string>` types. \n\n   |fts| ``autocomplete`` boosts exact matches when an ``autocomplete`` \n   field is also indexed as a ``string``, thereby increasing the score \n   of exact matches.\n\n#. Query using the :ref:`compound-ref` operator.\n\nFor a demonstration of this workaround, see \n:ref:`autocomplete-compound`.\n\n.. _autocomplete-ref-egs:\n\nExamples\n--------\n\nThe following examples use the ``movies`` collection in the \n``sample_mflix`` database. If you loaded the :ref:`sample dataset \n<available-sample-datasets>` on your {+cluster+}, you can create the \nstatic index for :ref:`autocompletion <bson-data-types-autocomplete>` \nand run the example queries on your cluster.\n\n.. include:: /includes/admonitions/get-started-atlas-search.rst\n\nIndex Definition\n~~~~~~~~~~~~~~~~\n\nThe following tabs contain sample index definitions for the \n``edgeGram``, ``rightEdgeGram``, and ``nGram`` \n:ref:`tokenization strategies <bson-data-types-autocomplete>`.\nIn addition to the :ref:`autocomplete <bson-data-types-autocomplete>` type,\nthe sample index definitions include the :ref:`string <bson-data-types-string>` \nand :ref:`stringFacet <bson-data-types-string-facet>` types on the ``title`` field.\n\n.. tabs::\n\n   .. tab:: edgeGram \n      :tabid: edgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :linenos:\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"title\": [\n                 {\n                   \"type\": \"stringFacet\"\n                 },\n                 {\n                   \"type\": \"string\"\n                 },\n                 {\n                   \"foldDiacritics\": false,\n                   \"maxGrams\": 7,\n                   \"minGrams\": 3,\n                   \"tokenization\": \"edgeGram\",\n                   \"type\": \"autocomplete\"\n                 }\n               ]\n             }\n           }\n         }\n\n   .. tab:: rightEdgeGram \n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :linenos:\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"title\": [\n                 {\n                   \"type\": \"stringFacet\"\n                 },\n                 {\n                   \"type\": \"string\"\n                 },\n                 {\n                   \"type\": \"autocomplete\",\n                   \"tokenization\": \"rightEdgeGram\",\n                   \"minGrams\": 3,\n                   \"maxGrams\": 7,\n                   \"foldDiacritics\": false\n                 }\n               ]\n             }\n           }\n         }\n\n   .. tab:: nGram \n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :linenos:\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"title\": [\n                 {\n                   \"type\": \"stringFacet\"\n                 },\n                 {\n                   \"type\": \"string\"\n                 },\n                 {\n                   \"type\": \"autocomplete\",\n                   \"tokenization\": \"nGram\",\n                   \"minGrams\": 3,\n                   \"maxGrams\": 7,\n                   \"foldDiacritics\": false\n                 }\n               ]\n             }\n           }\n         }\n\n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu to set the \nlanguage of the example on this page.\n\n----------\n\n.. tabs-selector:: drivers\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. include:: /includes/fact-fts-view-edit-search-tester.rst\n\n   .. tab::\n      :tabid: shell\n\n      Run the following command at the {+mongosh+} prompt to use the\n      ``sample_mflix`` database:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-basic.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-basic.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-basic.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-basic.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-basic.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-basic.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-basic.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: python\n         :dedent:\n\n.. include:: /includes/fts-tutorial/autocomplete/different-results-note.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. tabs::\n\n         .. tab:: edgeGram\n            :tabid: edgeGram\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 9.361787796020508  _id:  \"573a13b0f29313caabd355c8\"\n                 countries: Array\n                 genres: Array\n                 runtime: 100\n                 ...\n                 title: \"Off Beat\"\n\n               SCORE: 9.068204879760742  _id:  \"573a13aaf29313caabd22a8c\"\n                 fullplot: \"An 11-year-old girl watches her father come down with a crippling depr…\"\n                 imdb: Object\n                 year: 2003\n                 ...\n                 title: \"Off the Map\"\n\n               SCORE: 9.068204879760742  _id:  \"573a13bef29313caabd5d208\"\n                 plot: \"With white Jewish lesbians for parents and two adopted brothers - one …\"\n                 genres: Array\n                 runtime: 76\n                 ...\n                 title: \"Off and Running\"\n\n               SCORE: 8.742463111877441  _id:  \"573a13bbf29313caabd5567\"\n                 countries: Array\n                 genres: Array\n                 runtime: 98\n                 ...\n                 title: \"Hands off Mississippi\"\n\n               SCORE: 8.61273193359375  _id:  \"5573a1396f29313caabce4791\"\n                 plot: \"Unable to deal with her parents, Jeannie Tyne runs away from home. Lar…\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"Taking Off\"\n\n               SCORE: 8.61273193359375  _id:  \"573a1399f29313caabced3c1\"\n                 plot: \"A travelling theater group find so much action going on behind-the-sce…\"\n                 genres: Array\n                 runtime: 101\n                 ...\n                 title: \"Noises Off...\"\n\n               SCORE: 8.61273193359375  _id:  \"573a139af29313caabcefc73\"\n                 fullplot: \"In existence for a hundred years, Grimley Colliery Brass band is as ol…\"\n                 imdb: Object\n                 year: 1996\n                 ...\n                 title: \"Brassed Off\"\n\n               SCORE: 8.61273193359375  _id:  \"573a139af29313caabcf08f5\"\n                 fullplot: \"Sean Archer, a very tough, rugged FBI Agent. Who is still grieving for…\"\n                 imdb: Object\n                 year: 1997\n                 ...\n                 title: \"Face/Off\"\n\n               SCORE: 8.603004455566406  _id:  \"573a13a9f29313caabd1ea36\"\n                 fullplot: \"Three unlikely, unsuspecting souls who come face-to-face with that mom…\"\n                 imdb: Object\n                 year: 2004\n                 ...\n                 title: \"Benji: Off the Leash!\"\n\n               SCORE: 7.953945159912109  _id:  \"573a139af29313caabcf037c\"\n                 plot: \"Desperation drives four inner-city women (Queen Latifah, Jada Pinkett …\"\n                 genres: Array\n                 runtime: 123\n                 ...\n                 title: \"Set it Off\"\n\n         .. tab:: rightEdgeGram\n            :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 9.81808090209961  _id:  \"5573a1396f29313caabce4791\"\n                 plot: \"Unable to deal with her parents, Jeannie Tyne runs away from home. Lar…\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"Taking Off\"\n\n               SCORE: 9.81808090209961  _id:  \"573a1399f29313caabced3c1\"\n                 plot: \"A travelling theater group find so much action going on behind-the-sce…\"\n                 genres: Array\n                 runtime: 101\n                 ...\n                 title: \"Noises Off...\"\n\n               SCORE: 9.81808090209961  _id:  \"573a139af29313caabcefc73\"\n                 fullplot: \"In existence for a hundred years, Grimley Colliery Brass band is as ol…\"\n                 imdb: Object\n                 year: 1996\n                 ...\n                 title: \"Brassed Off\"\n\n               SCORE: 9.81808090209961  _id:  \"573a139af29313caabcf08f5\"\n                 fullplot: \"Sean Archer, a very tough, rugged FBI Agent. Who is still grieving for…\"\n                 imdb: Object\n                 year: 1997\n                 ...\n                 title: \"Face/Off\"\n\n               SCORE: 9.544584274291992  _id:  \"573a139af29313caabcf037c\"\n                 plot: \"Desperation drives four inner-city women (Queen Latifah, Jada Pinkett …\"\n                 genres: Array\n                 runtime: 123\n                 ...\n                 title: \"Set it Off\"\n\n               SCORE: 9.191947937011719  _id:  \"573a13bbf29313caabd5567\"\n                 countries: Array\n                 genres: Array\n                 runtime: 98\n                 ...\n                 title: \"Hands off Mississippi\"\n\n               SCORE: 9.074413299560547  _id:  \"573a1398f29313caabce9f28\"\n                 plot: \"A high school wise guy is determined to have a day off from school, de…\"\n                 genres: Array\n                 runtime: 103\n                 ...\n                 title: \"Ferris Bueller's Day Off\"\n               \n               SCORE: 9.007184982299805  _id:  \"573a13b0f29313caabd355c8\"\n                 countries: Array\n                 genres: Array\n                 runtime: 100\n                 ...\n                 title: \"Off Beat\"\n\n               SCORE: 8.700296401977539  _id:  \"573a13a9f29313caabd1ea36\"\n                 fullplot: \"Three unlikely, unsuspecting souls who come face-to-face with that mom…\"\n                 imdb: Object\n                 year: 2004\n                 ...\n                 title: \"Benji: Off the Leash!\"\n\n               SCORE: 8.33833122253418  _id:  \"573a13aaf29313caabd22a8c\"\n                 fullplot: \"An 11-year-old girl watches her father come down with a crippling depr…\"\n                 imdb: Object\n                 year: 2003\n                 ...\n                 title: \"Off the Map\"\n\n         .. tab:: nGram\n            :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 5.802560806274414  _id:  “573a1396f29313caabce47f4”\n                 countries: Array\n                 genres: Array\n                 runtime: 98\n                 ...\n                 title: \"Come Have Coffee with Us\"\n\n               SCORE: 5.790548801422119  _id:  \"573a13d1f29313caabd90811\"\n                 plot: \"From pagan re-enactors to failed communes, black metal festivals to Ar…\"\n                 genres: Array\n                 runtime: 98\n                 ...\n                 title: \"A Spell to Ward Off the Darkness\"\n\n               SCORE: 5.7726240158081055  _id:  \"573a13f3f29313caabddeb07\"\n                 plot: \"Turkey in the 1960s and 70s was one of the biggest producers of film i…\"\n                 genres: Array\n                 runtime: 96\n                 ...\n                 title: \"Remake, Remix, Rip-Off: About Copy Culture & Turkish Pop Cinema\"\n\n               SCORE: 5.749281883239746  _id:  \"573a13a9f29313caabd1ea36\"\n                 fullplot: \"Three unlikely, unsuspecting souls who come face-to-face with that mom…\"\n                 imdb: Object\n                 year: 2004\n                 ...\n                 title: \"Benji: Off the Leash!\"\n\n               SCORE: 5.749281883239746  _id:  \"573a13d4f29313caabd98488\"\n                 fullplot: \"This tragicomedy is a self-ironic portrait of a young man who drops ou…\"\n                 imdb: Object\n                 year: 2012\n                 ...\n                 title: \"A Coffee in Berlin\"\n\n               SCORE: 5.74220085144043  _id:  “573a1397f29313caabce863f”\n                 fullplot: \"Zack Mayo is a young man who has signed up for Navy Aviation Officer C…\"\n                 imdb: Object\n                 year: 1982\n                 ...\n                 title: \"An Officer and a Gentleman\"\n\n               SCORE: 5.671174049377441  _id:  “573a1398f29313caabce987c”\n                 plot: \"After the end of the Dirty War, a high school teacher sets out to find…\"\n                 genres: Array\n                 runtime: 112\n                 ...\n                 title: \"The Official Story\"\n\n               SCORE: 5.671174049377441  _id:   “573a13a5f29313caabd14c36”\n                 plot: \"The first days of WWI. Adrien, a young and handsome lieutenant, is wou…\"\n                 genres: Array\n                 runtime: 135\n                 ...\n                 title: \"The Officer's Ward\"\n\n               SCORE: 5.671174049377441  _id:  \"573a13bbf29313caabd5567\"\n                 countries: Array\n                 genres: Array\n                 runtime: 98\n                 ...\n                 title: \"Hands off Mississippi\"\n\n               SCORE: 5.534632682800293  _id:  \"573a1395f29313caabce18c9\"\n                 plot: \"In this \"Romeo and Juliet\" inspired Cold War satire starring, written …\"\n                 genres: Array\n                 runtime: 103\n                 ...\n                 title: \"Romanoff and Juliet\"\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-js.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/basic-output-py.rst\n\n.. _autocomplete-ref-egs-fuzzy:\n\nFuzzy Example\n~~~~~~~~~~~~~\n\nThe following query searches for movies with the characters ``pre`` in\nthe ``title`` field. The query uses:\n\n.. list-table::\n   :stub-columns: 1\n   :widths: 10 90\n\n   * - Field\n     - Description\n\n   * - ``maxEdits``\n     - Indicates that only one character variation is allowed in the\n       query string ``pre`` to match the query to a word in the\n       documents.\n\n   * - ``prefixLength``\n     - Indicates that the first character in the query string ``pre``\n       can't change when matching the query to a word in the documents.\n\n   * - ``maxExpansions``\n     - Indicates that up to two hundred and fifty six similar terms for\n       ``pre`` can be considered when matching the query string to a\n       word in the documents.\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include: /includes/fact-fts-autocomplete-limit-project-stages.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include: /includes/fact-fts-autocomplete-limit-project-stages.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n      .. include: /includes/fact-fts-autocomplete-limit-project-stages.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include: /includes/fact-fts-autocomplete-limit-project-stages.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include: /includes/fact-fts-autocomplete-limit-project-stages.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include: /includes/fact-fts-autocomplete-limit-project-stages.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include: /includes/fact-fts-autocomplete-limit-project-stages.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: python\n         :dedent:\n\n.. include:: /includes/fts-tutorial/autocomplete/different-results-note.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. tabs::\n\n         .. tab:: edgeGram\n            :tabid: edgeGram\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 1  _id:  “573a1390f29313caabcd5293”\n                 plot: \"Young Pauline is left a lot of money when her wealthy uncle dies. Howe…\"\n                 genres: Array\n                 runtime: 199\n                 ...\n                 title: \"The Perils of Pauline\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd9458”\n                 plot: \"A young artist draws a face at a canvas on his easel. Suddenly the mou…\"\n                 genres: Array\n                 rated: \"UNRATED\"\n                 ...\n                 title: \"The Blood of a Poet\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcda09b”\n                 plot: \"Tells how King Henry VIII came to marry five more times after his divo…\"\n                 genres: Array\n                 runtime: 97\n                 ...\n                 title: \"The Private Life of Henry VIII.\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcda556”\n                 plot: \"What do women want? Don Juan is aging. He's arrived secretly in Sevill…\"\n                 genres: Array\n                 runtime: 89\n                 ...\n                 title: \"The Private Life of Don Juan\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcdaee0”\n                 plot: \"The story of Dr. Samuel Mudd, who was imprisoned after innocently trea…\"\n                 genres: Array\n                 runtime: 96\n                 ...\n                 title: \"The Prisoner of Shark Island\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcdb3f2”\n                 plot: \"Two lookalike boys, one a poor street kid and the other a prince, exch…\"\n                 genres: Array\n                 runtime: 118\n                 ...\n                 title: \"The Prince and the Pauper\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcdb3f4”\n                 plot: \"An Englishman on a Ruritarian holiday must impersonate the king when t…\"\n                 genres: Array\n                 runtime: 101\n                 ...\n                 title: \"The Prisoner of Zenda\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcdb505”\n                 plot: \"After the death of her husband, Christine realizes she has possibly wa…\"\n                 genres: Array\n                 runtime: 144\n                 ...\n                 title: \"Dance Program\"\n\n               SCORE: 1  _id:  “573a1393f29313caabcdca58”\n                 plot: \"While traveling in France during the Nazi invasion of 1940, an English…\"\n                 genres: Array\n                 runtime: 87\n                 ...\n                 title: \"The Pied Piper\"\n\n               SCORE: 1  _id:  “573a1393f29313caabcdca76”\n                 plot: \"The official World War II US Government film statement defining the va…\"\n                 genres: Array\n                 runtime: 87\n                 ...\n                 title: \"Prelude to War\"\n\n         .. tab:: rightEdgeGram\n            :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 1  _id:  “573a1390f29313caabcd5ea4”\n                 plot: \"A District Attorney's outspoken stand on abortion gets him in trouble …\"\n                 genres: Array\n                 runtime: 62\n                 ...\n                 title: \"Where Are My Children?\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd70b4”\n                 plot: \"An extended family split up in France and Germany find themselves on o…\"\n                 genres: Array\n                 runtime: 150\n                 ...\n                 title: \"The Four Horsemen of the Apocalypse\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd7850”\n                 plot: \"In fifteenth century Paris, the brother of the archdeacon plots with t…\"\n                 genres: Array\n                 runtime: 133\n                 ...\n                 title: \"The Hunchback of Notre Dame\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd8cbd”\n                 plot: \"A young lady from Georgia goes to Hollywood in the hopes of becoming a…\"\n                 genres: Array\n                 runtime: 83\n                 ...\n                 title: \"Show People\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcd9df7”\n                 plot: \"A young American man is transported back to London in the time of the …\"\n                 genres: Array\n                 runtime: 84\n                 ...\n                 title: \"Berkeley Square\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcda7fb”\n                 plot: \"An entertainer impersonates a look-alike banker, causing comic confusi…\"\n                 genres: Array\n                 runtime: 82\n                 ...\n                 title: \"Folies Bergère de Paris\"\n\n               SCORE: 1  _id:  “573a1393f29313caabcdc4a2”\n                 plot: \"Boxer Joe Pendleton dies 50 years too soon due to a heavenly mistake, …\"\n                 genres: Array\n                 runtime: 94\n                 ...\n                 title: \"Here Comes Mr. Jordan\"\n               \n               SCORE: 1  _id:  “573a1393f29313caabcdc814”\n                 plot: \"An American man marries a Serbian immigrant who fears that she will tu…\"\n                 genres: Array\n                 runtime: 73\n                 ...\n                 title: \"Cat People\"\n\n               SCORE: 1  _id:  “573a1393f29313caabcdc87b”\n                 plot: \"Mail author for translation. Kodos hegycsucsok, fekete fenyvesek vilag…\"\n                 genres: Array\n                 runtime: 88\n                 ...\n                 title: \"People on the Alps\"\n\n               SCORE: 1  _id:  “573a1393f29313caabcdcd39”\n                 plot: \"A soldier falls for a chorus girl and then experiences trouble when he…\"\n                 genres: Array\n                 runtime: 103\n                 ...\n                 title: \"The Gang's All Here\"\n\n         .. tab:: nGram\n            :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 1  _id:  “573a1390f29313caabcd5293”\n                 plot: \"Young Pauline is left a lot of money when her wealthy uncle dies. Howe…\"\n                 genres: Array\n                 runtime: 199\n                 ...\n                 title: \"The Perils of Pauline\"\n\n               SCORE: 1  _id:  “573a1390f29313caabcd5967”\n                 plot: \"An intrepid reporter and his loyal friend battle a bizarre secret soci…\"\n                 genres: Array\n                 runtime: 399\n                 ...\n                 title: \"Les vampires\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd6ea2”\n                 plot: \"The simple-minded son of a rich financier must find his own way in the…\"\n                 genres: Array\n                 runtime: 77\n                 ...\n                 title: \"The Saphead\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd70b4”\n                 plot: \"An extended family split up in France and Germany find themselves on o…\"\n                 genres: Array\n                 runtime: 150\n                 ...\n                 title: \"The Four Horsemen of the Apocalypse\"\n\n               SCORE: 1 _id:  “573a1391f29313caabcd7b98”\n                 plot: \"A bitter clown endeavors to rescue the young woman he loves from the l…\"\n                 genres: Array\n                 runtime: 95\n                 ...\n                 title: \"He Who Gets Slapped\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd806b”\n                 plot: \"A mad, disfigured composer seeks love with a lovely young opera singer…\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"The Phantom of the Opera\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd8cbd”\n                 plot: \"A young lady from Georgia goes to Hollywood in the hopes of becoming a…\"\n                 genres: Array\n                 runtime: 83\n                 ...\n                 title: \"Show People\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd9458”\n                 plot: \"A young artist draws a face at a canvas on his easel. Suddenly the mou…\"\n                 genres: Array\n                 rated: \"UNRATED\"\n                 ...\n                 title: \"The Blood of a Poet\"\n\n               SCORE: 1  _id:  “573a1391f29313caabcd9651”\n                 plot: \"In London at the turn of the century, the bandit Mack the Knife marrie…\"\n                 genres: Array\n                 runtime: 112\n                 ...\n                 title: \"The 3 Penny Opera\"\n\n               SCORE: 1  _id:  “573a1392f29313caabcd9caa”\n                 plot: \"Many passengers on the Shanghai Express are more concerned that the no…\"\n                 genres: Array\n                 runtime: 82\n                 ...\n                 title: \"Shanghai Express\"\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n   \n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-js.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/fuzzy-output-py.rst\n\n.. _autocomplete-ref-egs-tokenOrder:\n\nToken Order Example\n~~~~~~~~~~~~~~~~~~~\n\nThe following queries search for movies with the characters ``men\nwith`` in the ``title`` field. The queries also use the ``tokenOrder`` field,\nwhich specifies whether the query searches for tokens in ``any`` order \nor in ``sequential`` order.\n\nStarts With Example\n```````````````````\n\n.. include:: /includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst\n\nSimple ``any`` Example\n``````````````````````\n\n.. include:: /includes/fts-tutorial/autocomplete/token-any-section.rst\n\nSimple ``sequential`` Example\n`````````````````````````````\n            \n.. include:: /includes/fts-tutorial/autocomplete/token-seq-section.rst\n\n.. _autocomplete-highlighting:\n\nHighlighting Example \n~~~~~~~~~~~~~~~~~~~~\n\nThe following query searches for the characters ``ger`` in the \n``title`` field of the ``movies`` collection, with the \n``highlight`` option enabled for the ``title`` field.\n\n.. important::\n\n   To highlight the autocomplete indexed version of a path, the \n   :ref:`autocomplete operator <autocomplete-ref>` must be the only \n   operator that uses that path in the query.\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-highlighting.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-highlighting.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-highlighting.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-highlighting.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-highlighting.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-highlighting.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-highlighting.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: python\n         :dedent:\n\n.. include:: /includes/fts-tutorial/autocomplete/different-results-note.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. tabs::\n\n         .. tab:: edgeGram\n            :tabid: edgeGram\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 6.0822906494140625  _id:  “573a1390f29313caabcd50e5”\n                 Gertie the Dinosaur\n                 Matching fields: title\n\n               SCORE: 6.0822906494140625  _id:  “573a1393f29313caabcddae1”\n                 Germany Year Zero\n                 Matching fields: title\n\n               SCORE: 6.0822906494140625  _id:  “573a1397f29313caabce6b75”\n                 Germany in Autumn\n                 Matching fields: title\n\n               SCORE: 6.0822906494140625  _id:  “573a1397f29313caabce77b5”\n                 Germany Pale Mother\n                 Matching fields: title\n\n               SCORE: 6.0822906494140625  _id:  “573a13d4f29313caabd99fa2”\n                 Gerhard Richter - Painting\n                 Matching fields: title\n\n               SCORE: 6.018838405609131  _id:  “573a1399f29313caabcedb50”\n                 Geronimo: An American Legend\n                 Matching fields: title\n               \n               SCORE: 5.825854301452637  _id:  “573a139bf29313caabcf36bd”\n                 Geri's Game\n                 Matching fields: title\n\n               SCORE: 5.777737617492676  _id:  “573a13a5f29313caabd15dae”\n                 How to Live in the German Federal Republic\n                 Matching fields: title\n\n               SCORE: 5.738928318023682  _id:  “573a13b4f29313caabd41bb7”\n                 The Gerson Miracle\n                 Matching fields: title\n\n               SCORE: 5.738928318023682  _id:  “573a13d2f29313caabd922de”\n                 The German Doctor\n                 Matching fields: title\n\n         .. tab:: rightEdgeGram\n            :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 4.7550506591796875  _id:  “573a139df29313caabcf9ed2”\n                 South Park: Bigger Longer & Uncut\n                 Matching fields: title\n\n               SCORE: 4.568849563598633  _id:  “573a13a7f29313caabd1addf”\n                 Roger Dodger\n                 Matching fields: title\n\n               SCORE: 4.520683288574219  _id:  “573a1391f29313caabcd8783”\n                 The Jazz Singer\n                 Matching fields: title\n\n               SCORE: 4.520683288574219  _id:  “573a1396f29313caabce3974”\n                 Love and Anger\n                 Matching fields: title\n\n               SCORE: 4.520683288574219  _id:  “573a1396f29313caabce5212”\n                 Save the Tiger\n                 Matching fields: title\n\n               SCORE: 4.520683288574219  _id:  “573a1397f29313caabce78da”\n                 The Jazz Singer\n                 Matching fields: title\n               \n               SCORE: 4.520683288574219  _id:  “573a1398f29313caabce9be6”\n                 The Toxic Avenger\n                 Matching fields: title\n\n               SCORE: 4.520683288574219  _id:  “573a139af29313caabcf0f59”\n                 The Wedding Singer\n                 Matching fields: title\n\n               SCORE: 4.520683288574219  _id:  “573a139af29313caabcf1389”\n                 The Crazy Stranger\n                 Matching fields: title\n\n               SCORE: 4.520683288574219  _id:  “573a13abf29313caabd24b5a”\n                 Save the Tiger\n                 Matching fields: title\n\n         .. tab:: nGram\n            :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 4.371164321899414  _id:  “573a139df29313caabcf9ed2”\n                 South Park: Bigger Longer & Uncut\n                 Matching fields: title\n\n               SCORE: 4.3067307472229  _id:  “573a13bff29313caabd60a4a”\n                 Bigger Stronger Faster*\n                 Matching fields: title\n\n               SCORE: 4.26673698425293  _id:  “573a1398f29313caabcebb00”\n                 The Toxic Avenger Part II\n                 Matching fields: title\n\n               SCORE: 4.26673698425293  _id:  “573a1399f29313caabcee12e”\n                 When a Stranger Calls Back\n                 Matching fields: title\n\n               SCORE: 4.26673698425293  _id:  “573a13cff29313caabd89c2b”\n                 Carol Channing: Larger Than Life\n                 Matching fields: title\n\n               SCORE: 4.2623162269592285  _id:  “573a1396f29313caabce51c6”\n                 Property Is No Longer a Theft\n                 Matching fields: title\n               \n               SCORE: 4.2623162269592285  _id:  “573a139af29313caabcef539”\n                 Mighty Morphin Power Rangers: The Movie\n                 Matching fields: title\n\n               SCORE: 4.2623162269592285  _id:  “573a13b1f29313caabd364e3”\n                 Josee, the Tiger and the Fish\n                 Matching fields: title\n\n               SCORE: 4.253501892089844  _id:  “573a13a5f29313caabd15dae”\n                 How to Live in the German Federal Republic\n                 Matching fields: title\n\n               SCORE: 4.24910831451416  _id:  “573a13a3f29313caabd0f07f”\n                 Into the Arms of Strangers: Stories of the Kindertransport\n                 Matching fields: title\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-js.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/highlight-output-py.rst\n\n.. _autocomplete-compound:\n\nSearch Across Multiple Fields \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following query searches the ``title`` and ``plot`` fields of the \n``movies`` collection for words that begin with the character string ``inter``\nusing the :ref:`compound-ref` operator.\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :linenos:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-compound.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-compass.rst \n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-compound.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: csharp\n         :linenos:\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-compound.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: go\n         :linenos:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-compound.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: java\n         :linenos:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-compound.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: kotlin\n         :linenos:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-compound.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :linenos:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-compound.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: python\n         :linenos:\n\n.. include:: /includes/fts-tutorial/autocomplete/different-results-note.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. tabs::\n\n         .. tab:: edgeGram\n            :tabid: edgeGram\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 5.796849727630615  _id:  “573a13dbf29313caabdaf9a0”\n                 fullplot: \"In order to avoid an X rating, 40 minutes of gay S&M footage was rumor…\"\n                 imdb: Object\n                 year: 2013\n                 ...\n                 title: \"Interior. Leather Bar.\"\n\n               SCORE: 5.736375331878662 1  _id:  “573a13a8f29313caabd1d060”\n                 plot: \"Almost forty years after the John F. Kennedy assassination, an ex-Mari…\"\n                 genres: Array\n                 runtime: 88\n                 ...\n                 title: \"Interview with the Assassin\"\n\n               SCORE: 5.677149295806885  _id:  “573a13b8f29313caabd4bcbf”\n                 plot: \"A graduate student (Nicholson) copes with a recent breakup by conducti…\"\n                 genres: Array\n                 runtime: 80\n                 ...\n                 title: \"Brief Interviews with Hideous Men\"\n\n               SCORE: 5.619133949279785  _id:  “573a139af29313caabcf0753”\n                 fullplot: \"Austin Powers is a 60's spy who is cryonically frozen and released in …\"\n                 imdb: Object\n                 year: 1997\n                 ...\n                 title: \"Austin Powers: International Man of Mystery\"\n\n               SCORE: 5.619133949279785  _id:  “573a139df29313caabcfb827”\n                 plot: \"A confused young man (Marsden) takes a journey on a road that doesn't …\"\n                 genres: Array\n                 runtime: 116\n                 ...\n                 title: \"Interstate 60: Episodes of the Road\"\n\n               SCORE: 5.562292575836182  __id:  “573a1399f29313caabcee754”\n                 fullplot: \"It hasn't even been a year since a plantation owner named Louis lost h…\"\n                 imdb: Object\n                 year: 1984\n                 ...\n                 title: \"Interview with the Vampire: The Vampire Chronicles\"\n\n               SCORE: 5.55244779586792  _id:  “573a1394f29313caabcdfd1e”\n                 plot: \"The film chronicles Australian-born opera star Marjorie Lawrence's suc…\"\n                 genres: Array\n                 runtime: 106\n                 ...\n                 title: \"Interrupted Melody\"\n\n               SCORE: 5.451991081237793  _id:  “573a13e9f29313caabdcbd58”\n                 plot: \"The story of programming prodigy and information activist Aaron Swartz…\"\n                 genres: Array\n                 runtime: 105\n                 ...\n                 title: \"The Internet's Own Boy: The Story of Aaron Swartz\"\n\n               SCORE: 5.389190673828125  _id:  “573a13bef29313caabd5d0ac”\n                 plot: \"Locked up and isolated, constantly exposed and threatened to be killed…\"\n                 genres: Array\n                 runtime: 89\n                 ...\n                 title: \"Richness of Internal Space\"\n\n               SCORE: 4.929009437561035  _id:  “573a1397f29313caabce6ca7”\n                 plot: \"Three sisters find their lives spinning out of control in the wake of …\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"Interiors\"\n\n         .. tab:: rightEdgeGram\n            :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 5.94391393661499  _id:  “573a13b1f29313caabd35dc7”\n                 plot: \"After her son is hospitalized, a doctor cheats on her husband with a s…\"\n                 genres: Array\n                 runtime: 84\n                 ...\n                 title: \"Kissed by Winter\"\n\n               SCORE: 5.94391393661499  _id:  “573a13b4f29313caabd3f3fe”\n                 plot: \"The American oil company KIC Corporation is building an ice road to ex…\"\n                 genres: Array\n                 runtime: 101\n                 ...\n                 title: \"The Last Winter\"\n\n               SCORE: 5.94391393661499  _id:  “573a13c0f29313caabd62f21”\n                 plot: \"A couple engage in discussions with people on the street, politicians …\"\n                 genres: Array\n                 runtime: 85\n                 ...\n                 title: \"Suddenly, Last Winter\"\n\n               SCORE: 5.94391393661499  _id:  “573a13d5f29313caabd9a45b”\n                 plot: \"WINTER is a dangerous, sexy, poignant and at times darkly funny story …\"\n                 genres: Array\n                 runtime: 132\n                 ...\n                 title: \"After Fall, Winter\"\n\n               SCORE: 5.881905555725098  _id:  “573a1396f29313caabce366e”\n                 plot: \"1183 AD: King Henry II's three sons all want to inherit the throne, bu…\"\n                 genres: Array\n                 runtime: 134\n                 ...\n                 title: \"The Lion in Winter\"\n\n               SCORE: 5.881905555725098  _id:  “573a1396f29313caabce5271”\n                 plot: \"Rita, a middle aged New York City homemaker, finds herself in an emoti…\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"Summer Wishes, Winter Dreams\"\n\n               SCORE: 5.881905555725098  _id:  “573a1399f29313caabcecfef”\n                 plot: \"Felicie and Charles have a serious if whirlwind holiday romance. Due t…\"\n                 genres: Array\n                 runtime: 114\n                 ...\n                 title: \"A Tale of Winter\"\n               \n               SCORE: 5.881905555725098  _id:  “573a139af29313caabcf1762”\n                 plot: \"A mysterious creature is killing a farmer's livestock.\"\n                 genres: Array\n                 runtime: 92\n                 ...\n                 title: \"In the Winter Dark\"\n\n               SCORE: 5.821177005767822  _id:  “573a13a0f29313caabd02f47”\n                 plot: \"Sean is a little duck with a big problem. Due to a mishap with a jet a…\"\n                 genres: Array\n                 runtime: 28\n                 ...\n                 title: \"The First Snow of Winter\"\n\n               SCORE: 5.821177005767822  _id:  “573a13b3f29313caabd3eb6f”\n                 plot: \"A renowned artist must uncover a young dancer's secrets in order to tr…\"\n                 genres: Array\n                 runtime: 129\n                 ...\n                 title: \"A Year Ago in Winter\"\n\n         .. tab:: nGram\n            :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 5.540487289428711  _id:  “573a139af29313caabcf0753”\n                 fullplot: \"Austin Powers is a 60's spy who is cryonically frozen and released in …\"\n                 imdb: Object\n                 year: 1997\n                 ...\n                 title: \"Austin Powers: International Man of Mystery\"\n\n               SCORE: 5.540487289428711  _id:  “573a13aef29313caabd2ca07”\n                 plot: \"On an isolated lake, an old monk lives on a small floating temple. The…\"\n                 genres: Array\n                 runtime: 103\n                 ...\n                 title: \"Spring, Summer, Fall, Winter... and Spring\"\n\n               SCORE: 5.495308876037598  _id:  “573a1396f29313caabce5271”\n                 plot: \"Rita, a middle aged New York City homemaker, finds herself in an emoti…\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"Summer Wishes, Winter Dreams\"\n\n               SCORE: 5.495308876037598  _id:  “573a139af29313caabcf1762”\n                 plot: \"A mysterious creature is killing a farmer's livestock.\"\n                 genres: Array\n                 runtime: 92\n                 ...\n                 title: \"In the Winter Dark\"\n\n               SCORE: 5.495308876037598  _id:  “573a13bef29313caabd5d0ac”\n                 plot: \"Locked up and isolated, constantly exposed and threatened to be killed…\"\n                 genres: Array\n                 runtime: 89\n                 ...\n                 title: \"Richness of Internal Space\"\n\n               SCORE: 5.4885406494140625  _id:  “573a13b8f29313caabd4bcbf”\n                 plot: \"A graduate student (Nicholson) copes with a recent breakup by conducti…\"\n                 genres: Array\n                 runtime: 80\n                 ...\n                 title: \"Brief Interviews with Hideous Men\"\n\n               SCORE:  5.4885406494140625  _id:  “573a13d2f29313caabd91d33”\n                 fullplot: \"For Steve Rogers, awakening after decades of suspended animation invol…\"\n                 imdb Object\n                 year: 2014\n                 ...\n                 title: \"Captain America: The Winter Soldier\"\n\n               SCORE: 5.481788635253906  _id:  “573a139ff29313caabd01cc6”\n                 plot: \"On a cold winter day a mysterious stranger shows up at the Witting Far…\"\n                 genres: Array\n                 runtime: 95\n                 ...\n                 title: \"Sarah, Plain and Tall: Winter's End\"\n\n               SCORE: 5.46163272857666  _id:  “573a13e9f29313caabdcbd58”\n                 plot: \"The story of programming prodigy and information activist Aaron Swartz…\"\n                 genres: Array\n                 runtime: 105\n                 ...\n                 title: \"The Internet's Own Boy: The Story of Aaron Swartz\"\n\n               SCORE: 5.420651435852051  _id:  “573a1398f29313caabcebac5”\n                 plot: \"Set during World War 2. After Nazi Germany invaded Poland in September…\"\n                 genres: Array\n                 runtime: 195\n                 ...\n                 title: \"The Winter War\"\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-nodejs.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/compound-eg-output-py.rst\n\n.. _autocomplete-facet:\n\nBucket Results through Facet Queries \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :dedent: \n        \n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :linenos:\n           \n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet.rst \n     \n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: csharp\n         :linenos:\n      \n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: go\n         :linenos:\n      \n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: java\n         :linenos:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: kotlin\n         :linenos:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: js\n         :linenos:\n\n   .. tab::\n      :tabid: python\n      \n      .. include:: /includes/fact-fts-autocomplete-facet-intro.rst\n         \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :language: python\n         :linenos:\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-atlas-ui.rst\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-nodejs.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/facet-output-py.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      |fts| returns documents that contain the term ``Gravity`` in the\n      ``title`` field. The ``count`` field in the results indicate the number\n      of documents in the collection with the same title. In the results,\n      |fts| found three documents in the collection with ``Gravity`` as its\n      title, but |fts| omitted the duplicate titles and returned only one\n      matching document.\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n         \n         [\n           { title: 'Gravity' },\n           { title: 'Gravity' },\n           { title: 'Gravity' },\n           { title: 'Defying Gravity' },\n           { title: 'Laws of Gravity' }\n         ]\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n         \n         [\n           { title: 'Gravity' },\n           { title: 'Gravity' },\n           { title: 'Gravity' },\n           { title: 'Defying Gravity' },\n           { title: 'Laws of Gravity' }\n         ]\n \n   .. tab::\n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Gravity\" }\n         { \"title\" : \"Gravity\" }\n         { \"title\" : \"Gravity\" }\n         { \"title\" : \"Defying Gravity\" }\n         { \"title\" : \"Laws of Gravity\" }\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n         \n         [{title Gravity}],\n         [{title Gravity}],\n         [{title Gravity}],\n         [{title Defying Gravity}],\n         [{title Laws of Gravity}]\n\n   .. tab:: \n      :tabid: java-sync\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\"title\": \"Gravity\"}\n         {\"title\": \"Gravity\"}\n         {\"title\": \"Gravity\"}\n         {\"title\": \"Defying Gravity\"}\n         {\"title\": \"Laws of Gravity\"}\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n\n         Document{{title=Gravity}}\n         Document{{title=Gravity}}\n         Document{{title=Gravity}}\n         Document{{title=Defying Gravity}}\n         Document{{title=Laws of Gravity}}\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n\n         { title: 'Gravity' }\n         { title: 'Gravity' }\n         { title: 'Gravity' }\n         { title: 'Defying Gravity' }\n         { title: 'Laws of Gravity' }\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-autocomplete-facet-results.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "         :copyable: false\n\n         { 'title': 'Gravity' }\n         { 'title': 'Gravity' }\n         { 'title': 'Gravity' }\n         { 'title': 'Defying Gravity' }\n         { 'title': 'Laws of Gravity' }\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/autocomplete.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     $search: {\n       \"index\": <index name>, // optional, defaults to \"default\"\n       \"compound\": {\n         <must | mustNot | should | filter>: [ { <clauses> } ],\n         \"score\": <options>\n       }\n     }\n   }\n\nEach ``must``, ``mustNot``, ``should``, and ``filter`` clause contains \nan array of subclauses. Use array syntax even if the array contains \nonly one subclause. See the :ref:`examples <compound-examples>` on \nthis page.\n\n.. _compound-options:\n\nOptions\n-------\n\n``compound`` uses the following terms to construct a query:\n\n.. list-table::\n   :widths: 15 85\n\n   * - .. data:: must\n     - Clauses that must match to for a document to be included in the\n       results. The returned score is the sum of the scores of all the \n       subqueries in the clause.\n\n       Maps to the ``AND`` boolean operator.\n\n   * - .. data:: mustNot\n     - Clauses that must not match for a document to be included in\n       the results. ``mustNot`` clauses don't contribute to a returned \n       document's score.\n\n       Maps to the ``AND NOT`` boolean operator.\n\n   * - .. data:: should\n     - Clauses that you prefer to match in documents that are included\n       in the results. Documents that contain a match for a ``should`` \n       clause have higher scores than documents that don't contain a\n       ``should`` clause. The returned score is the sum of the scores \n       of all the subqueries in the clause.\n\n       If you use more than one ``should`` clause, you can use the\n       ``minimumShouldMatch`` option to specify a minimum number of\n       ``should`` clauses that must match to include a document in the \n       results. If omitted, the ``minimumShouldMatch`` option defaults\n       to ``0``.\n\n       See an :ref:`example <min-example>`.\n\n       Maps to the ``OR`` boolean operator.\n\n       If you use only the ``should`` clause inside a compound query,\n       the ``compound`` operator treats the array of the ``should`` clause\n       queries as a logical ``OR``. |fts| must find a match for\n       at least one ``should`` criteria to return any results. When\n       you specify multiple ``should`` clause criteria with the\n       ``minimumShouldMatch`` option set to ``0``, |fts| treats \n       ``minimumShouldMatch`` as set to ``1`` and must match at least\n       one criteria to return any results.\n\n   * - .. data:: filter\n     - Clauses that must all match for a document to be\n       included in the results. ``filter`` clauses do not contribute\n       to a returned document's score.\n       \n       For example, you can replace the :pipeline:`$match` stage with the :pipeline:`$search` stage \n       using the ``compound`` operator ``filter`` option. The following \n       :pipeline:`$match` stage filters for documents with a given value for the field ``role``:\n       \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "          :copyable: false\n          \n          $match: {\n              \"role\": { \"$in\": [ \"CLIENT\", \"PROFESSIONAL\" ] }\n          }\n        \n       You can use the ``compound`` operator ``filter`` option instead:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "          :copyable: false\n          \n          $search: {\n            \"compound\": {\n              \"filter\": [{\n                \"queryString\": {\n                  \"defaultPath\": \"role\",\n                  \"query\": \"CLIENT OR PROFESSIONAL\"                     \n                }\n              }]\n            }\n          }\n\n       See another :ref:`filter example <filter-example>`.\n\n   * - ``score``\n     - Modify the :ref:`score <scoring-ref>` of the entire ``compound`` \n       clause. You can use ``score`` to boost, replace, or otherwise \n       alter the score. If you don't specify ``score``, the returned \n       score is the sum of the scores of all the subqueries in the \n       ``must`` and ``should`` clauses that generated a match. To learn\n       more, see :ref:`compound-score`.\n\n.. _compound-usage:\n\nUsage \n-----\n\nYou can use any of the clauses with any top-level operator, such as \n:ref:`autocomplete <autocomplete-ref>`, :ref:`text <text-ref>`, or \n:ref:`span <span-ref>`, to specify query criteria. \n\n.. _compound-score:\n\nScoring Behavior\n----------------\n\n|fts| scores documents in the result set by summing the score that the\ndocument received for each individual clause that generated a match on\nthe document. Only ``must`` and ``should`` clauses participate in\nscoring. The result set is ordered by score, highest to lowest. \n\nThe following table shows the ``compound`` clauses that contribute and\ndon't contribute to the score. \n\n.. list-table:: \n   :header-rows: 1\n\n   * - Clause \n     - Contributes to Score \n     - Doesn't Contribute to Score \n\n   * - ``filter`` \n     -  \n     - :icon:`check-square` \n\n   * - ``must`` \n     - :icon:`check-square` \n     -  \n\n   * - ``mustNot`` \n     -  \n     - :icon:`check-square` \n\n   * - ``should`` \n     - :icon:`check-square`\n     -  \n\nYou can boost or replace the score of the entire compound query using\nthe ``score`` option. For an example of replacing the entire compound\nscore, see :ref:`Compound Score Example <must-should-example>` below.\nYou can use :ref:`score <scoring-ref>` to also boost or alter the score\nfor each subquery in each clause. For some examples of altered scores in\n``compound`` operator clauses, see :ref:`scoring-options`. \n\n.. _compound-examples:\n\nExamples\n--------\n\nYou can try the following examples in the {+playground+} or your\n|service| {+cluster+}. \n\n.. _compound-egs-sample-collections:\n\nSample Collection \n~~~~~~~~~~~~~~~~~\n\nThe examples on this page use a collection called ``fruit``, which \ncontains the following documents:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"_id\" : 1,\n     \"type\" : \"apple\",\n     \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp.\",\n     \"category\" : \"nonorganic\",\n     \"in_stock\" : false\n   },\n   {\n     \"_id\" : 2,\n     \"type\" : \"banana\",\n     \"description\" : \"Bananas are usually sold in bunches of five or six.\",\n     \"category\" : \"nonorganic\",\n     \"in_stock\" : true\n   },\n   {\n     \"_id\" : 3,\n     \"type\" : \"pear\",\n     \"description\" : \"Bosc and Bartlett are the most common varieties of pears.\",\n     \"category\" : \"organic\",\n     \"in_stock\" : true\n   }\n\n.. _compound-egs-sample-index:\n\nSample Index \n~~~~~~~~~~~~\n\nThe ``fruit`` collection has a default index with :ref:`dynamic mappings\n<static-dynamic-mappings>` that automatically indexes all the fields in\nthe collection and uses the default :ref:`standard\n<ref-standard-analyzer>` analyzer. The ``standard`` analyzer lower-cases\nall words and disregards common stop words (``\"the\", \"a\", \"and\",`` etc). \n\n.. _compound-egs-sample-queries:\n\nSample Queries \n~~~~~~~~~~~~~~\n\nThe following queries demonstrate the :pipeline:`$search` ``compound``\noperator in |fts| queries.\n\n.. _must-must-not-example-ref:\n\n``must`` and ``mustNot`` Example\n````````````````````````````````\n\nThe following example uses a combination of ``must`` and ``mustNot``\nclauses to contruct a query. The ``must`` clause uses the \n:ref:`text <text-ref>` operator to search for the term ``varieties`` \nin the ``description`` field. For a document to match, it must fulfill \nthe ``must`` clause. The ``mustNot`` clause performs a search operation \nfor the term ``apples`` in the ``description`` field. For a document to\nmatch, it must *not* fulfill the ``mustNot`` clause.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "   :linenos:\n\n   db.fruit.aggregate([\n     {\n       \"$search\": {\n         \"compound\": {\n           \"must\": [{\n             \"text\": {\n               \"query\": \"varieties\",\n               \"path\": \"description\"\n             }\n           }],\n           \"mustNot\": [{\n             \"text\": {\n               \"query\": \"apples\",\n               \"path\": \"description\"\n             }\n           }]\n         }\n       }\n     }\n   ])\n\nThe above query returns the document with ``_id: 3`` because its\n``description`` field contains the word ``varieties`` and does not\ncontain ``apples``.\n\n|arrow| Try this in the :asp:`Atlas Search Playground </6613fd6e53a0260867247809>`.\n\n.. _must-should-example:\n\n``must`` and ``should`` Example\n```````````````````````````````\n\nThe following queries use ``must`` to specify search conditions\nthat must be met and ``should`` to specify preference for documents\nthat contain the word ``Fuji``. \n\n.. tabs:: \n\n   .. tab:: Basic Example\n      :tabid: basic\n\n      For this query, the ``$project`` pipeline stage excludes all \n      document fields except ``_id`` and adds a ``score`` field, which\n      displays the document's relevance score.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: javascript\n            :linenos:\n\n            db.fruit.aggregate([\n              {\n                \"$search\": {\n                  \"compound\": {\n                    \"must\": [{\n                      \"text\": {\n                        \"query\": \"varieties\",\n                        \"path\": \"description\"\n                      }\n                    }],\n                    \"should\": [{\n                      \"text\": {\n                        \"query\": \"Fuji\",\n                        \"path\": \"description\"\n                      }\n                    }]\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"score\": { \"$meta\": \"searchScore\" }\n                }\n              }\n            ])\n\n         .. output:: \n            :language: javascript\n            :visible: false\n\n            { \"_id\" : 1, \"score\" : 0.6425117254257202 }\n            { \"_id\" : 3, \"score\" : 0.21649497747421265 }\n\n      The document with ``_id: 1`` has a higher score because its\n      ``description`` field contains the word ``Fuji``, satisfying the\n      ``should`` clause.\n\n      |arrow| Try this in the :asp:`Atlas Search Playground </6613fe1753a026086724780b>`.\n\n   .. tab:: Compound Score Example\n      :tabid: compoundscore \n\n      The following query also specifies a :ref:`scoring-constant` \n      score of ``3`` for all the documents in the results. For this \n      query, the ``$project`` pipeline stage excludes all document \n      fields except ``_id`` and adds a ``score`` field.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: javascript\n            :linenos:\n\n            db.fruit.aggregate([\n              {\n                \"$search\": {\n                  \"compound\": {\n                    \"must\": [{\n                      \"text\": {\n                        \"query\": \"varieties\",\n                        \"path\": \"description\"\n                      }\n                    }],\n                    \"should\": [{\n                      \"text\": {\n                        \"query\": \"Fuji\",\n                        \"path\": \"description\"\n                      }\n                    }],\n                    \"score\": { \"constant\": { \"value\": 3 } }\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"score\": { \"$meta\": \"searchScore\" }\n                }\n              }\n            ])\n\n         .. output:: \n            :language: javascript\n            :visible: false\n\n            [ { _id: 1, score: 3 }, { _id: 3, score: 3 } ]\n\n      Both the documents receive the same score because the \n      ``constant`` option in the query replaces the score of each \n      document in the result with the number ``3``. \n\n      |arrow| Try this in the :asp:`Atlas Search Playground </6613fe7b53a026086724780d>`.\n\n.. _min-example:\n\nminimumShouldMatch Example\n``````````````````````````\n\nIn a query with multiple ``should`` clauses, you can use the\n``miniumumShouldMatch`` option to specify a minimum number of clauses\nwhich must match to return a result.\n\nThe following query has one ``must`` clause and two ``should`` clauses,\nwith a ``minimumShouldMatch`` value of ``1``. A document must include\nthe term ``varieties`` in the ``description`` field and must include\neither ``Fuji`` or ``Golden Delicious`` in the description field to be\nincluded in the result set.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "   :copyable: true \n   \n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          $search: {\n            \"compound\": {\n              \"must\": [{\n                \"text\": {\n                   \"query\": \"varieties\",\n                   \"path\": \"description\"\n                }\n              }],\n              \"should\": [{\n                \"text\": {\n                  \"query\": \"Fuji\",\n                  \"path\": \"description\"\n                }\n              },\n              {\n                \"text\": {\n                  \"query\": \"Golden Delicious\",\n                  \"path\": \"description\"\n                }\n              }],\n              \"minimumShouldMatch\": 1\n            }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: javascript\n      :linenos:\n      :visible: false\n\n      {\n        \"_id\" : 1,\n        \"type\" : \"apple\",\n        \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp.\",\n        \"category\" : \"nonorganic\",\n        \"in_stock\" : false\n      }\n\nThe document with ``_id: 1`` matches the ``must`` clause and the first\nof the two ``should`` clauses.\n\n|arrow| Try this in the :asp:`Atlas Search Playground </6613ff6fbfc02dcf24ce9588>`.\n\n.. _filter-example:\n\n``filter`` Examples\n```````````````````\n\n``filter`` behaves the same as ``must``, except that the ``filter`` \nclause is not considered in a returned document's score, and therefore \ndoes not affect the order of the returned documents.\n\n.. tabs:: \n\n   .. tab:: Basic Example \n      :tabid: basic\n\n      The following query uses the following clauses: \n      \n      - ``must`` and ``filter`` to specify search conditions which must \n        be met.\n      - ``should`` to specify preference for documents containing the \n        word  ``banana``. The ``should`` clause doesn't include the \n        ``minimumShouldMatch`` option. When you omit \n        ``minimumShouldMatch``, it defaults to ``0``.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: javascript\n            :linenos:\n\n            db.fruit.aggregate([\n              {\n                \"$search\": {\n                  \"compound\": {\n                    \"must\": [{\n                      \"text\": {\n                        \"query\": \"varieties\",\n                        \"path\": \"description\"\n                      }\n                    }],\n                    \"should\": [{\n                      \"text\": {\n                        \"query\": \"banana\",\n                        \"path\": \"description\"\n                      }\n                    }],\n                    \"filter\": [{\n                      \"text\": {\n                        \"query\": \"granny\",\n                        \"path\": \"description\"\n                      }\n                    }]\n                  }\n                }\n              }\n            ])\n\n         .. output:: \n            :language: javascript\n            :linenos:\n            :visible: false\n\n            {\n              \"_id\" : 1,\n              \"type\" : \"apple\",\n              \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp.\",\n              \"category\" : \"nonorganic\",\n              \"in_stock\" : false\n            }\n\n      The returned document fulfills all the requirements for inclusion:\n\n      - Both the ``must`` clause and the ``filter`` clause match.\n      - The ``minimumShouldMatch`` value is not specified, so it \n        defaults to ``0``. As a result, the ``should`` clause fails \n        and still returns a document.\n\n      |arrow| Try this in the :asp:`Atlas Search Playground </6614008353a026086724780f>`.\n\n   .. tab:: $match Replacement Example \n      :tabid: match\n\n      You can replace the :pipeline:`$match` with :query:`$in` in your \n      queries against data on your |service| cluster with the \n      ``filter`` clause. The following query demonstrates how to use \n      ``filter`` in the :pipeline:`$search` stage to specify the search \n      terms that must match. The query also uses ``should`` to specify \n      preference for documents containing the term ``varieties``. The \n      query includes the ``$project`` pipeline stage to do the \n      following:\n      \n      - Exclude all fields except ``_id`` and ``description``. \n      - Add a ``score`` field, which displays the document's relevance \n        score.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: javascript\n            :linenos:\n\n            db.fruit.aggregate([\n              {\n                \"$search\": {\n                  \"compound\": {\n                    \"filter\": [{\n                      \"text\": {\n                        \"query\": [\"apples\", \"bananas\"],\n                        \"path\": \"description\"\n                      }\n                    }],\n                    \"should\": [{\n                      \"text\": {\n                        \"query\": \"varieties\",\n                        \"path\": \"description\"\n                      }\n                    }]\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"description\": 1,\n                  \"score\": { \"$meta\": \"searchScore\" }\n                }\n              }\n            ])\n         \n         .. output:: \n            :language: javascript\n            :linenos:\n            :visible: false\n\n            [\n              {\n                _id: 1,\n                description: 'Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp. The most popular varieties are McIntosh, Gala, and Granny Smith.',\n                score: 0.36074575781822205\n              },\n              {\n                _id: 2,\n                description: 'Bananas are usually sold in bunches of five or six.',\n                score: 0\n              }\n            ]\n\n      The documents in the result fulfill all the requirements for \n      inclusion:\n\n      - Both documents contain the term ``apples`` or ``bananas`` that \n        was specified in the ``filter`` clause of the query.\n      - Document with ``_id: 1`` scores higher than document with \n        ``_id: 2`` because it contains the term ``varieties`` specified \n        in the ``should`` clause of the query.\n\n      |arrow| Try this in the :asp:`Atlas Search Playground </661400e853a0260867247811>`.\n\nNested Example \n``````````````\n\nThe following example uses nested ``compound`` clauses to construct a \nquery. For this example, the ``fruit`` collection has an index on the \n``type``, ``category``, and ``in_stock`` fields, whose text fields use the \n:ref:`default <ref-standard-analyzer>` analyzer. The query requires \ndocuments to only satisfy one of the following  ``should`` clauses: \n\n- Contain the word ``apple`` in the ``type`` field.\n- Contain the term ``organic`` in the ``category`` field and have the \n  value ``true`` in the ``in_stock`` field.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "   :copyable: true \n   \n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          $search: {\n            \"compound\": {\n              \"should\": [\n                {\n                  \"text\": {\n                    \"query\": \"apple\",\n                    \"path\": \"type\"\n                  }\n                },\n                {\n                  \"compound\": {\n                    \"must\": [\n                      {\n                        \"text\": {\n                          \"query\": \"organic\",\n                          \"path\": \"category\"\n                        }\n                      },\n                      {\n                        \"equals\": {\n                          \"value\": true,\n                          \"path\": \"in_stock\"\n                        }\n                      }\n                    ]\n                  }\n                }\n              ],\n              \"minimumShouldMatch\": 1\n            }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: javascript\n      :linenos:\n      :visible: false\n   \n      { \n        \"_id\" : 3, \n        \"type\" : \"pear\", \n        \"description\" : \"Bosc and Bartlett are the most common varieties of pears.\", \n        \"category\" : \"organic\", \n        \"in_stock\" : true \n      }\n      {\n        \"_id\" : 1,\n        \"type\" : \"apple\",\n        \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp.\",\n        \"category\" : \"nonorganic\",\n        \"in_stock\" : false\n      }\n\nThe documents in the results fulfill all the requirements for inclusion: \n\n- The document with ``_id: 3`` matches the ``must`` clause nested within \n  the second ``should`` clause.\n- The document with ``_id: 1`` matches the first ``should`` clause.  \n\n|arrow| Try this in the :asp:`Atlas Search Playground </66140231bfc02dcf24ce958a>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/compound.txt"
  },
  {
    "code": "   :emphasize-lines: 7\n\n   {\n     \"$searchMeta\"|\"$search\": {  \n       \"index\": \"<index name>\", // optional, defaults to \"default\"\n       \"<operator>\": { \n         <operator-specifications>\n       },\n       \"concurrent\": true | false,\n       ...\n     }\n   }\n\nBehavior \n--------\n\nThe ``concurrent`` boolean option allows you to request |fts| to\nparallelize query execution across segments, which, in many cases, \nimproves the response time. You can set one of the following values for \nthe ``concurrent`` option:\n \n- ``true`` - to request |fts| to run the query multi-threaded \n- ``false`` - to run the query single-threaded (default)\n\n|fts| provides you control over this behavior on a per-query basis\nto enable concurrent execution only for heavy and long-running queries,\nwhich minimizes the contention and improves overall query throughput.\nConcurrent execution is especially efficient on large datasets, as there\nis a larger amount of segments. \n\nLimitation \n----------\n\nWhen you run queries with the ``concurrent`` option, |fts| doesn't\nguarantee that each query will be executed concurrently. For example,\nwhen too many concurrent queries are queued, |fts| \nmight fallback to single-threaded execution.  \n\nExample \n-------\n\nConsider the following query against the :ref:`sample_mflix.movies \n<sample-mflix>` collection in the sample data. The query indicates a\nconcurrent search for movies that contain the term ``new york`` in the\n``title``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/concurrent-query.txt"
  },
  {
    "code": "   :copyable: true \n   :linenos: \n   :emphasize-lines: 8\n\n   db.movies.aggregate([\n     {\n       \"$search\": {\n         \"text\": {\n           \"path\": \"title\",\n           \"query\": \"new york\"\n         },\n         \"concurrent\": true\n       }\n     }\n   ])\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/concurrent-query.txt"
  },
  {
    "code": "      :copyable: false \n\n      { \n        \"_id\" : ObjectId(\"573a13c3f29313caabd6b025\"), \n        \"title\" : \"Submarino\", \n        \"released\" : ISODate(\"2011-09-01T00:00:00Z\"), \n        \"meta\" : { \n          \"count\" : { \"total\" : NumberLong(23026) } \n        } \n      }\n      { \n        \"_id\" : ObjectId(\"573a13c7f29313caabd748f7\"), \n        \"title\" : \"Devil's Playground\", \n        \"released\" : ISODate(\"2011-09-01T00:00:00Z\"), \n        \"meta\" : { \n          \"count\" : { \"total\" : NumberLong(23026) } \n        } \n      }\n\n   To learn more about the results, see :ref:`count-results`.\n\n.. _count-egs: \n\nExamples \n--------\n\nThe following example uses an index on the ``year`` field in the \n``sample_mflix.movies`` collection: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/counting.txt"
  },
  {
    "code": "         :copyable: false \n\n         { \"count\" : { \"lowerBound\" : NumberLong(1001) } }\n\n   .. tab:: total Example \n      :tabid: total\n\n      The following query searches for the movies between the years \n      ``2010`` and ``2015`` in the ``movies`` collection. The query \n      requests a total count of the results:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/counting.txt"
  },
  {
    "code": "         :copyable: false \n\n         { \"count\" : { \"total\" : NumberLong(5971) } }\n\n      To learn more about the results, see :ref:`count-results`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/counting.txt"
  },
  {
    "code": "      :copyable: false \n\n      estimated-index-size = ( subset-data-index-size / subset-data-size ) x total-collection-data-size\n\n.. example:: \n\n   This example uses the ``sample_mflix.movies`` namespace. We first run\n   :pipeline:`$sample` to randomly select 10 documents from the\n   ``movies`` collection and create a new collection named\n   ``sample_data`` that contains the ``$sample`` output documents: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-index.txt"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: js \n\n         db.movies.aggregate([\n           { $sample: { size: 10 } },\n           { $out: \"sample_data\" }\n         ]) \n   \n      .. output:: /includes/fts-tutorial/search-index-management/estimate-index-size-sample-data.js \n         :language: js \n         :visible: false\n\n   Next, for the ``$sample`` output data that we added to the\n   ``sample_data`` collection by using :pipeline:`$out`, we create an\n   index on just the ``title`` field:  \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-index.txt"
  },
  {
    "code": "      :copyable: true \n\n      {\n        \"mappings\": {\n          \"dynamic\": false,\n          \"fields\": {\n            \"title\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n\n   The size of the index on the ``title`` field in the ``sample_data`` \n   collection with 10 documents is 4.34 KB. The size of the\n   ``sample_data`` collection is 14.19 KB. The total size of the\n   ``movies`` collection is 32.54 MB, which is 32540 KB. We use the\n   following calculations to estimate the index size for the entire\n   ``movies`` collection: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-index.txt"
  },
  {
    "code": "      :copyable: false \n\n      4.34 KB / 14.19 KB = 0.30584918957012 KB (per document) \n      0.30584918957012 KB x 32540 KB = 9952.3326286117048 KB \n      9265.466 KB x 0.001 MB = 9.952332628611705 MB \n   \n   The estimated size index size for the ``title`` field in the\n   ``movies`` collection is 9.95 MB. However, the index size for the\n   ``movies`` collection might vary based on the length of the titles in\n   the other non-sampled documents.  \n\n.. _ref-create-index-programmatically:\n\nCreate an |fts| Index\n---------------------\n\nYou can create an |fts| index using the {+atlas-ui+}, |compass|, or\nprogrammatically by using {+mongosh+}, the {+atlas-cli+}, the |api|, or\na supported :driver:`MongoDB Driver </>` in your preferred language. \n\n.. |command-type| replace:: create\n\n.. note::\n\n   |fts| indexes must apply to a full collection, rather than to \n   only a portion of a collection. \n \n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu to set the \nlanguage of the example in this section.\n\n----------\n\n.. tabs-selector:: drivers\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-cli\n\n      .. include:: /includes/fact-atlas-cli-local-deployment-for-fts.rst\n\n      Create an |fts| Index for a Cloud Deployment \n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. include:: /includes/extracts/atlas-clusters-search-indexes-create.rst\n\n      Create an |fts| Index for a Local Deployment \n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. include:: /includes/extracts/atlas-deployments-search-indexes-create.rst\n\n      Example\n      ~~~~~~~\n\n      The following example shows you how to use the\n      ``atlas clusters`` or ``atlas deployments`` command to create an\n      |fts| index in non-interactive mode with a configuration file.\n\n      .. procedure::\n         :style: normal\n\n         .. step:: Create an ``indexDef.json`` configuration file.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-index.txt"
  },
  {
    "code": "                  :emphasize-lines: 2\n\n                  {\n                     $search: {\n                        \"index\": \"<index-name>\",\n                        ...\n                     }\n                  }\n\n            .. tab:: $searchMeta\n               :tabid: searchMeta-stage\n\n               You can use the :ref:`$searchMeta <searchMeta-agg-pipeline>`\n               aggregation pipeline stage to return metadata about your search\n               results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-queries.txt"
  },
  {
    "code": "                  :emphasize-lines: 2\n\n                  {\n                     $searchMeta: {\n                        \"index\": \"<index-name>\",\n                        ...\n                     }\n                  }\n\n         To learn more, see :ref:`Choose the Aggregation Pipeline\n         Stage <query-syntax-ref>`. \n\n      b. Specify operators.\n                     \n         Select one or more :ref:`operators <fts-operators>` or\n         :ref:`collectors  <collectors-ref>` to perform a  \n         specific search on your collection.\n      \n         .. tabs::\n\n            .. tab:: $search\n               :tabid: search-stage\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-queries.txt"
  },
  {
    "code": "                  :emphasize-lines: 4-6\n\n                  {\n                     $search: {\n                        \"index\": \"<index-name>\",\n                        \"<operator-name>\": {\n                        <operator-specifications>\n                        },\n                     }\n                  }\n\n            .. tab:: $searchMeta\n               :tabid: searchMeta-stage\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-queries.txt"
  },
  {
    "code": "                  :emphasize-lines: 4-6\n\n                  {\n                     $searchMeta: {\n                        \"index\": \"<index-name>\",\n                        \"<operator-name>\"|\"<collector-name>\": {\n                           <operator-specifications>|<collector-specifications>\n                        }\n                     }\n                  }\n\n         To learn more, see :ref:`Use Operators and Collectors in\n         Atlas Search Queries <operators-ref>`. \n\n      c. (Optional) Retrieve additional information about your |fts| query.\n      \n         .. tabs::\n\n            .. tab:: $search\n               :tabid: search-stage\n\n               Specify one or more options to adjust your |fts| query results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-queries.txt"
  },
  {
    "code": "                  :emphasize-lines: 7-9\n\n                  {\n                     $search: {\n                        \"index\": \"<index-name>\",\n                        \"<operator-name>\": {\n                           <operator-specifications>\n                        },\n                        \"highlight\": {\n                           <highlight-options>\n                        }\n                     }\n                  }\n\n               You can customize your search results in the following ways:\n               \n               .. list-table::\n                  :widths: 30 70\n                  :header-rows: 1\n                        \n                  * - Option\n                    - Use Case\n                        \n                  * - :ref:`score <scoring-ref>`\n                    - Modify the ``score`` of the documents in the results to ensure |fts| returns    relevant results.\n                        \n                  * - :ref:`scoreDetail <fts-score-details>`\n                    -  Retrieve a detailed breakdown of the score for each document |fts| returns.\n\n                  * - :ref:`highlight <highlight-ref>`\n                    - Display your search terms in their original\n                        context as fields in your query result.\n                        \n                  * - :ref:`explain <explain-ref>`\n                    - Retrieve information and execution statistics\n                      about which Lucene queries |fts| executed to\n                      satify your query, and how much time your query\n                      spends in the various stages of execution.\n\n                  * - :ref:`returnStoredSource <fts-return-stored-source-option>`\n                    - Run your |fts| query more efficiently by only\n                      retrieving fields stored on ``mongot`` as\n                      specified in your |fts| index definition for a\n                      collection.\n\n                  * - :ref:`count <count-ref>` \n                    - Display the number of results from your |fts| query.\n\n                  * - :ref:`sort <sort-ref>` \n                    - Sort your |fts| query results by number, string, and date fields and by score.\n\n            .. tab:: $searchMeta\n               :tabid: searchMeta-stage\n               \n               Return metadata, such as the number of results, along with your |fts| query.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-queries.txt"
  },
  {
    "code": "                  :emphasize-lines: 7-9\n\n                  {\n                     $searchMeta: {\n                        \"index\": \"<index-name>\",\n                        \"<operator-name>\": {\n                           <operator-specifications>\n                        },\n                        \"count\": {\n                           <count-options>\n                        }\n                     }\n                  }\n\n         To learn more, see :ref:`Define Additional Search Options\n         <fts-search-options>`. \n\n   .. step:: Run your |fts| query.\n\n      Review your |fts| query syntax and then run it in \n      your application using a :ref:`driver <atlas-search-query-drivers>`, \n      {+mongosh+}, :ref:`Compass <atlas-search-query-compass>`,\n      or the :ref:`Search Tester <atlas-search-query-ui>`.\n\n.. note:: \n\n   .. include:: /includes/fact-fts-troubleshooting.rst\n\nProcedure \n---------\n\n.. toctree::\n   :titlesonly:\n\n   1. Choose Aggregation Pipeline Stage </atlas-search/query-syntax>\n   2. Use Operators & Collectors </atlas-search/operators-and-collectors>\n   3. Construct Query Path </atlas-search/path-construction>\n   4. Score Documents </atlas-search/scoring>\n   5. Define Additional Search Options </atlas-search/search-options>\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/create-queries.txt"
  },
  {
    "code": "   :caption: Syntax \n   :emphasize-lines: 5-14\n   :linenos:\n\n   {\n     \"mappings\": { \n       \"dynamic\": <boolean>, \n       \"fields\": { \n         \"<field-name>\": [\n           {\n             \"type\": \"<field-type>\",\n             ...\n           },\n           ...\n         ],\n         ...  \n       }\n     }\n   }\n\n.. include:: /includes/fact-fts-index-field-order.rst \n\n.. _static-dynamic-mappings:\n\nStatic and Dynamic Mappings \n---------------------------\n\nYou can use static and dynamic mappings to specify whether |fts| must\nautomatically index all the dynamically indexable fields in your\ncollection.\n\nStatic Mappings \n~~~~~~~~~~~~~~~\n\nUse static mappings to configure index options for fields that\nyou *don't* want indexed dynamically, or to configure a single field \nindependently from others in an index.\n\nFor static mappings, set ``mappings.dynamic`` to ``false`` and \nspecify the fields to index using ``mappings.fields``. |fts| \nindexes only the specified fields with specific options. If an indexed\nfield contains polymorphic data, |fts| indexes only documents that\ncorrespond to the mappings specified in the index definition for that\nfield and ignores documents that contain values that aren't the data\ntype specified in the index definition for that field.\n\nYou can't use the dot notation to statically index nested fields. When\ndefining the index for a nested field, you must define the mappings for \neach parent field of that nested field. For an example, see the\n:ref:`Examples <index-config-example>` on this page, which demonstrates\nthe index syntax for a field named ``city`` that is nested inside a\nfield named ``address``.    \n\nDynamic Mappings \n~~~~~~~~~~~~~~~~\n\nUse dynamic mappings if your schema changes regularly or is unknown, or \nwhen experimenting with |fts|. You can configure an entire index to use \ndynamic mappings, or specify individual fields, such as fields of type \n``document``, to be dynamically mapped. Before using dynamic mappings,\nsee the table for :ref:`bson-data-chart`. \n\nFor dynamic mappings, set ``mappings.dynamic`` to ``true``. |fts| \nautomatically indexes the fields of :ref:`supported types \n<bson-data-chart>` in each document. For fields of type \n:ref:`string <bson-data-types-string>`, |fts| stores the fields on ``mongot``.\n\n.. note::\n\n   Dynamically mapped indexes occupy more disk space than statically \n   mapped indexes and may be less performant.\n\n.. _bson-data-chart:\n.. _bson-data-types:\n\nData Types\n----------\n\n|fts| doesn't support the following :manual:`BSON data types \n</reference/bson-types/>`\\:\n\n- Decimal128\n- JavaScript code with scope\n- Max key\n- Min key\n- Regular Expression\n- Timestamp\n\nThe following table enumerates the supported :manual:`BSON data types\n</reference/bson-types/>` and the :ref:`Atlas Search field\ntypes <bson-data-types>` that you can use to index the BSON data types. \nThe table also indicates whether the |fts| field type is automatically\nincluded in an |fts| index when you enable :ref:`dynamic mappings\n<static-dynamic-mappings>` and lists the \n:ref:`operators and collectors <operators-ref>` that you can use to\nquery the field value. \n\n.. note::\n\n   When you dynamically index a field that has polymorphic data, |fts| \n   automatically indexes the field as all the dynamically indexable \n   field types that correspond to the data. If the field contains data \n   of a type that |fts| doesn't index automatically, |fts| won't index \n   that data.\n\n.. list-table::\n   :header-rows: 1\n\n   * - BSON Type\n     - Atlas Search Field Type\n     - Dynamically Indexed\n     - Operators and Collectors\n\n   * - :ref:`Array <fts-array-ref>`\n     - | :ref:`boolean <boolean-ref>`\n       | :ref:`date <bson-data-types-date>` \n       | :ref:`number <bson-data-types-number>` \n       | :ref:`objectId <objectId-ref>` \n       | :ref:`string <bson-data-types-string>` \n       | :ref:`token <bson-data-types-token>`\n     - ✓ :icon-fa5:`star`\n     - Operators that support the data type in the array. :icon-fa5:`asterisk`\n\n   * - Boolean\n     - :ref:`boolean <boolean-ref>`\n     - ✓\n     - | :ref:`equals <equals-ref>`\n       | :ref:`in-ref`\n\n   * - Date\n     - :ref:`date <bson-data-types-date>`\n     - ✓ \n     - | :ref:`equals <equals-ref>`\n       | :ref:`in-ref`\n       | :ref:`near <near-ref>`\n       | :ref:`range <range-ref>`\n\n   * - Date\n     - :ref:`dateFacet <bson-data-types-date-facet>`\n     - \n     - :ref:`facet <fts-facet-ref>`\n\n   * - Double\n     - :ref:`number <bson-data-types-number>`\n     - ✓ \n     - | :ref:`equals <equals-ref>`\n       | :ref:`in-ref`\n       | :ref:`near <near-ref>`\n       | :ref:`range <range-ref>`\n\n   * - Double\n     - :ref:`numberFacet <bson-data-types-number-facet>`\n     - \n     - :ref:`facet <fts-facet-ref>`\n\n   * - Double\n     - :ref:`knnVector <fts-data-types-knn-vector>` (Deprecated)\n     - \n     - :ref:`knn-beta-ref` \n\n   * - :manual:`GeoJSON Object </reference/geojson/>`\n     - :ref:`geo <bson-data-types-geo>`\n     - \n     - | :ref:`geoShape <geoshape-ref>`\n       | :ref:`geoWithin <geowithin-ref>`\n       | :ref:`near <near-ref>` \n\n   * - 32-bit integer\n     - :ref:`number <bson-data-types-number>`\n     - ✓ \n     - | :ref:`in-ref`\n       | :ref:`near <near-ref>`\n       | :ref:`range <range-ref>`\n\n   * - 32-bit integer\n     - :ref:`numberFacet <bson-data-types-number-facet>`\n     - \n     - :ref:`facet <fts-facet-ref>`\n\n   * - 64-bit integer\n     - :ref:`number <bson-data-types-number>`\n     - ✓ \n     - | :ref:`equals <equals-ref>`\n       | :ref:`in-ref`\n       | :ref:`near <near-ref>`\n       | :ref:`range <range-ref>`\n\n   * - 64-bit integer\n     - :ref:`numberFacet <bson-data-types-number-facet>`\n     - \n     - :ref:`facet <fts-facet-ref>`\n\n   * - Null\n     - N/A :icon-fa5:`cog`\n     - ✓\n     - :ref:`equals <equals-ref>`\n\n   * - Object\n     - :ref:`document <bson-data-types-document>`\n     - ✓ \n     - All Operators \n\n   * - Object\n     - :ref:`embeddedDocument <bson-data-types-embedded-documents>` \n       (for array of objects)\n     - \n     - :ref:`embeddedDocument <embedded-document-ref>`\n\n   * - ObjectId\n     - :ref:`objectId <objectId-ref>`\n     - ✓\n     - | :ref:`equals <equals-ref>`\n       | :ref:`in-ref`\n       | :ref:`range <range-ref>`\n\n   * - String \n     - :ref:`string <bson-data-types-string>`\n     - ✓ \n     - | :ref:`more-like-this-ref` \n       | :ref:`phrase-ref` \n       | :ref:`querystring-ref` \n       | :ref:`regex-ref` \n       | :ref:`span-ref`\n       | :ref:`text-ref`\n       | :ref:`wildcard-ref`\n\n   * - String \n     - :ref:`stringFacet <bson-data-types-string-facet>`\n     - \n     - :ref:`facet <fts-facet-ref>`\n\n   * - String \n     - :ref:`autocomplete <bson-data-types-autocomplete>`\n     - \n     - :ref:`autocomplete <autocomplete-ref>`\n\n   * - String \n     - :ref:`token <bson-data-types-token>` \n     - \n     - | :ref:`equals <equals-ref>`\n       | :ref:`in <in-ref>`\n       | :ref:`range <range-ref>`\n\n   * - :manual:`UUID/BSON Binary Subtype 4 </reference/bson-types/#binary-data>`\n     - :ref:`uuid <bson-data-types-uuid>` \n     - ✓\n     - | :ref:`equals <equals-ref>`\n       | :ref:`in-ref`\n\n:icon-fa5:`star` Some limitations apply. To learn more, see :ref:`fts-array-ref`. \n\n:icon-fa5:`asterisk` For ``string`` type, the :ref:`more-like-this-ref` and :ref:`querystring-ref` operators don't support an array of strings.\n\n:icon-fa5:`cog` |fts| doesn't include a field type for indexing null values because |fts| automatically indexes null values for both statically and dynamically indexed fields.\n\n.. note:: \n\n   You can store fields of all supported :ref:`data types \n   <bson-data-chart>` on |fts| using the ``storedSource`` :ref:`option \n   <index-definition-options>`.\n\n.. _bson-data-types-limitations:\n\nLimitations\n~~~~~~~~~~~\n\n|fts| stops replicating changes for indexes larger than 2,100,000,000\nindex objects, where each indexed document counts as a single object.\nThis means that your index is queryable, but you might get stale results.\n\nIf you plan to index fields that might exceed this limit, you must  \n:ref:`shard your cluster <create-cluster-sharding>`. For example, if you\nuse the :ref:`embeddedDocuments <bson-data-types-embedded-documents>`\nfield type, |fts| might index objects over this limit.\n\n.. include:: /includes/fact-fts-field-name-restriction.rst\n\n.. _bson-data-types-indexing:\n\nIndex Field as Multiple Data Types \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo index a field as multiple types, define the types in the field \ndefinition array for the field.  \n\n.. example:: \n   \n   The following example shows the field definition for indexing a \n   field as multiple types.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/define-field-mappings.txt"
  },
  {
    "code": "      :copyable: false \n      :linenos:\n      :emphasize-lines: 7-17\n\n      {\n        ...\n        \"mappings\": { \n          \"dynamic\": <boolean>, \n          \"fields\": { \n            \"<field-name>\": [\n              {\n                \"type\": \"<field-type>\",\n                ...\n              },\n              {\n                \"type\": \"<field-type>\",\n                ...\n              },\n              ...\n            ],\n            ...  \n          },\n          ... \n        }\n      }\n\n.. _index-config-example:\n\nExamples\n--------\n\nStatic Mapping Example \n~~~~~~~~~~~~~~~~~~~~~~\n\nThe following index definition example uses static mappings.\n\n- The default index analyzer is :ref:`lucene.standard\n  <ref-standard-analyzer>`.\n- The default search analyzer is :ref:`lucene.standard\n  <ref-standard-analyzer>`. You can change the search analyzer \n  if you want the query term to be parsed differently than how it \n  is stored in your |fts| index.\n- The index specifies static field mappings (``dynamic``: \n  ``false``), which means fields that are not explicitly \n  mentioned are not indexed. So, the index definition includes:\n\n  - The ``address`` field, which is of type ``document``. It has \n    two embedded sub-fields, ``city`` and ``state``.\n    \n    The ``city`` sub-field uses the :ref:`lucene.simple\n    <ref-simple-analyzer>` analyzer by default for queries.\n    It uses the ``ignoreAbove`` option to ignore any string of\n    more than 255 bytes in length.\n    \n    The ``state`` sub-field uses the :ref:`lucene.english\n    <ref-language-analyzers>` analyzer by default for queries.\n\n  - The ``company`` field, which is of type ``string``. It uses \n    the :ref:`lucene.whitespace <ref-whitespace-analyzer>` \n    analyzer by default for queries. It has a ``multi`` analyzer \n    named ``mySecondaryAnalyzer`` which uses the \n    :ref:`lucene.french <ref-language-analyzers>` analyzer by \n    default for queries.\n\n    To learn more about ``multi`` analyzers, see :ref:`Path \n    Construction <ref-path>`.\n\n  - The ``employees`` field, which is an array of strings. It \n    uses the :ref:`lucene.standard <ref-keyword-analyzer>` \n    analyzer by default for queries. For indexing arrays, |fts| \n    only requires the data type of the array elements. You don't \n    have to specify that the data is contained in an array in the \n    index definition.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/define-field-mappings.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"embeddedDocument\": {\n       \"path\": \"<path-to-field>\",\n       \"operator\": { <operator-specification> },\n       \"score\": { <score-options> }\n     }\n   }\n\n.. _embedded-document-options:\n\nOptions\n-------\n\n``embeddedDocument`` uses the following options to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``operator``\n     - object\n     - Operator to use to query each document in the array of documents \n       that you specify in the ``path``. The :ref:`more-like-this-ref`\n       operator is not supported.\n     - Required\n\n   * - ``path``\n     - string\n     - Indexed :ref:`embeddedDocuments\n       <bson-data-types-embedded-documents>` type field to  \n       search. The specified field must be a parent for all operators \n       and fields specified using the ``operator`` option. See \n       :ref:`Path Construction <ref-path>` for more information.\n     - Required\n\n   * - ``score``\n     - object\n     - Score to assign to matching search results. You can use the \n       :ref:`scoring-embedded` scoring option to configure scoring \n       options. To learn more, see :ref:`embedded-document-query-score`. \n     - Optional\n\n.. _embedded-document-query-behavior:\n\nBehavior\n--------\n\nWhen you query embedded documents in arrays using the \n``embeddedDocument`` operator, |fts| evaluates and scores the operator \nquery predicates at different stages of query execution. |fts|:\n\n1. Evaluates each embedded document in the array independently. \n#. Combines the scores of matching results as configured using the \n   :ref:`scoring-embedded` option, or scores by summing the scores of \n   matching results if you don't specify an :ref:`scoring-embedded` \n   score option.\n#. Joins the matching results with the parent document if other \n   query predicates are specified through the :ref:`compound-ref` \n   operator.\n\n   .. note::\n\n      For string faceting, |fts| counts string facets once for each \n      document in the result set. For an example of this behavior, see \n      :ref:`embedded-document-query-examples`.\n\n.. _embedded-document-query-score:\n\nScoring Behavior \n----------------\n\nBy default, ``embeddedDocument`` operator uses the default aggregation\nstrategy, ``sum``, for combining scores of embedded document matches.\nThe ``embeddedDocument`` operator ``score`` option allows you to\noverride the default and configure the score of matching results using\nthe :ref:`scoring-embedded` option. \n\n.. seealso:: \n\n   :ref:`scoring-ref` \n\n.. _embedded-document-query-sort:\n\nSorting Behavior \n----------------\n\n.. include:: /includes/fact-fts-embedded-documents-sort.rst\n\n.. _embedded-document-query-highlighting:\n\nHighlighting \n------------\n\nYou can :ref:`highlight <highlight-ref>` on fields if the fields are\nindexed under a parent field of :ref:`document\n<bson-data-types-document>` type for query predicates specified inside \nthe ``embeddedDocument`` operator. For an example, see :ref:`tutorial\n<embedded-documents-tutorial>`. \n\n.. _embedded-document-query-limitations:\n\nLimitations \n-----------\n\nYou can't :ref:`highlight <highlight-ref>` on queries inside the\n``embeddedDocument`` operator. \n\n.. _embedded-document-query-examples:\n\nExamples\n--------\n\nThe following examples use the ``sample_supplies.sales`` collection \nin the :ref:`sample dataset <available-sample-datasets>`. \n\nIndex Definition \n~~~~~~~~~~~~~~~~\n\nThese sample queries use the following index definition on the collection: \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/embedded-document.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos: \n\n      db.sales.aggregate({\n        \"$search\": {\n          \"embeddedDocument\": {\n            \"path\": \"items\",\n            \"operator\": {\n              \"compound\": {\n                \"must\": [{\n                  \"text\": {\n                    \"path\": \"items.tags\",\n                    \"query\": \"school\"\n                  }\n                }],\n                \"should\": [{\n                  \"text\": {\n                    \"path\": \"items.name\",\n                    \"query\": \"backpack\"\n                  }\n                }]\n              }\n            },\n            \"score\": {\n              \"embedded\": {\n                \"aggregate\": \"mean\"\n              }\n            }\n          }\n        }\n      },\n      {\n        $limit: 5\n      },\n      {\n        $project: {\n          \"_id\": 0,\n          \"items.name\": 1,\n          \"items.tags\": 1,\n          \"score\": { $meta: \"searchScore\" }\n        }\n      })\n\n   .. output::\n      :language: json \n      :visible: false\n\n      [\n        { \n          items: [ { \n            name: 'backpack', \n            tags: [ 'school', 'travel', 'kids' ] \n          } ], \n          score: 1.2907354831695557 \n        },\n        { \n          items: [ {\n            name: 'envelopes',\n            tags: [ 'stationary', 'office', 'general' ]\n          },\n          { \n            name: 'printer paper', \n            tags: [ 'office', 'stationary' ] \n          },\n          { \n            name: 'backpack', \n            tags: [ 'school', 'travel', 'kids' ] \n          } ], \n          score: 1.2907354831695557\n        },\n        { \n          items: [ { \n            name: 'backpack', \n            tags: [ 'school', 'travel', 'kids' ] \n          } ], \n          score: 1.2907354831695557 \n        },\n        { \n          items: [ { \n            name: 'backpack', \n            tags: [ 'school', 'travel', 'kids' ] \n          } ], \n          score: 1.2907354831695557 \n        },\n        { \n          items: [ { \n            name: 'backpack', \n            tags: [ 'school', 'travel', 'kids' ] \n          } ], \n          score: 1.2907354831695557 \n        }\n      ]\n\nFacet Query \n~~~~~~~~~~~\n      \nThe following query searches for items tagged ``school`` with a\npreference for items named ``backpack``. It requests facet information\non the ``purchaseMethod`` field. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/embedded-document.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos: \n\n      db.sales.aggregate({\n        \"$searchMeta\": {\n          \"facet\": {\n            \"operator\": {\n              \"embeddedDocument\": {\n                \"path\": \"items\",\n                \"operator\": {\n                  \"compound\": {\n                    \"must\": [\n                      {\n                        \"text\": {\n                          \"path\": \"items.tags\",\n                          \"query\": \"school\"\n                        }\n                      }\n                    ],\n                    \"should\": [\n                      {\n                        \"text\": {\n                          \"path\": \"items.name\",\n                          \"query\": \"backpack\"\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            },\n            \"facets\": {\n              \"purchaseMethodFacet\": {\n                \"type\": \"string\",\n                \"path\": \"purchaseMethod\"\n              }\n            }\n          }\n        }\n      })\n\n   .. output::\n      :language: json \n      :visible: false\n\n      [\n        {\n          count: { lowerBound: Long(\"2309\") },\n          facet: {\n            purchaseMethodFacet: {\n              buckets: [\n                { _id: 'In store', count: Long(\"2751\") },\n                { _id: 'Online', count: Long(\"1535\") },\n                { _id: 'Phone', count: Long(\"578\") }\n              ]\n            }\n          }\n        }\n      ]\n\nQuery and Sort \n~~~~~~~~~~~~~~\n      \nThe following query searches for items named ``laptop`` and it sorts the\nresults by the ``items.tags`` field. The query includes a\n:pipeline:`$limit` stage to limit the output to ``5`` documents and a\n:pipeline:`$project` stage to: \n\n- Exclude all fields except ``items.name`` and ``items.tags``  \n- Add a field named ``score`` \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/embedded-document.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos: \n\n      db.sales.aggregate({\n        \"$search\": {\n          \"embeddedDocument\": {\n            \"path\": \"items\",\n            \"operator\": {\n              \"text\": {\n                \"path\": \"items.name\",\n                \"query\": \"laptop\"\n              }\n            }\n          },\n          \"sort\": {\n            \"items.tags\": 1\n          }\n        }\n      },\n      {\n        \"$limit\": 5\n      },\n      {\n        \"$project\": {\n          \"_id\": 0,\n          \"items.name\": 1,\n          \"items.tags\": 1,\n          \"score\": { \"$meta\": \"searchScore\" }\n        }\n      })\n\n   .. output::\n      :language: json \n      :linenos:\n      :emphasize-lines: 7, 26, 38, 44, 66\n      :visible: false\n\n      [\n        {\n          items: [\n            { name: 'envelopes',  tags: [ 'stationary', 'office', 'general' ] },\n            { name: 'binder', tags: [ 'school', 'general', 'organization' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'laptop', tags: [ 'electronics', 'school', 'office' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'printer paper', tags: [ 'office', 'stationary' ] },\n            { name: 'backpack', tags: [ 'school', 'travel', 'kids' ] },\n            { name: 'pens', tags: [ 'writing', 'office', 'school', 'stationary' ] },\n            { name: 'envelopes', tags: [ 'stationary', 'office', 'general' ] }\n          ],\n          score: 1.168686032295227\n        },\n        {\n          items: [\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'binder', tags: [ 'school', 'general', 'organization' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'pens', tags: [ 'writing', 'office', 'school', 'stationary' ] },\n            { name: 'printer paper', tags: [ 'office', 'stationary' ] },\n            { name: 'pens', tags: [ 'writing', 'office', 'school', 'stationary' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'backpack', tags: [ 'school', 'travel', 'kids' ] },\n            { name: 'laptop', tags: [ 'electronics', 'school', 'office' ] }\n          ],\n          score: 1.168686032295227\n        },\n        {\n          items: [\n            { name: 'backpack', tags: [ 'school', 'travel', 'kids' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'binder', tags: [ 'school', 'general', 'organization' ] },\n            { name: 'pens', tags: [ 'writing', 'office', 'school', 'stationary' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'envelopes', tags: [ 'stationary', 'office', 'general' ] },\n            { name: 'laptop', tags: [ 'electronics', 'school', 'office' ] }\n          ],\n          score: 1.168686032295227\n        },\n        {\n          items: [\n            { name: 'laptop', tags: [ 'electronics', 'school', 'office' ] },\n            { name: 'binder', tags: [ 'school', 'general', 'organization' ] },\n            { name: 'binder', tags: [ 'school', 'general', 'organization' ] },\n            { name: 'backpack', tags: [ 'school', 'travel', 'kids' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'printer paper', tags: [ 'office', 'stationary' ] },\n            { name: 'pens', tags: [ 'writing', 'office', 'school', 'stationary' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'pens', tags: [ 'writing', 'office', 'school', 'stationary' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] }\n          ],\n          score: 1.168686032295227\n        },\n        {\n          items: [\n            { name: 'envelopes', tags: [ 'stationary', 'office', 'general' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'notepad', tags: [ 'office', 'writing', 'school' ] },\n            { name: 'backpack', tags: [ 'school', 'travel', 'kids' ] },\n            { name: 'envelopes', tags: [ 'stationary', 'office', 'general' ] },\n            { name: 'pens', tags: [ 'writing', 'office', 'school', 'stationary' ] },\n            { name: 'binder', tags: [ 'school', 'general', 'organization' ] },\n            { name: 'laptop', tags: [ 'electronics', 'school', 'office' ] },\n            { name: 'printer paper', tags: [ 'office', 'stationary' ] },\n            { name: 'binder', tags: [ 'school', 'general', 'organization' ] }\n          ],\n          score: 1.168686032295227\n        }\n      ]\n\nQuery for Matching Embedded Documents Only \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following query returns only the nested documents that match the\nquery. The query uses |fts| :ref:`compound-ref` operator clauses in the\n:pipeline:`$search` stage to find matching documents and then the\n:manual:`aggregation operators </reference/operator/aggregation/>` in\nthe :pipeline:`$project` stage to return only matching embedded documents.\nSpecifically, the query specifies the following pipeline stages:\n\n.. list-table:: \n   :widths: 15 85 \n   :stub-columns: 1\n\n   * - :pipeline:`$search` \n     - Specifies the following criteria in the :ref:`compound-ref`\n       operator ``must`` clause:\n     \n       - Check if ``items.price`` field exists in the collection.\n       - Search for the items tagged as ``office`` in the ``items.tags``\n         field. \n       - Match only if value is more than 2 for the ``items.quantity``\n         field. \n\n   * - :pipeline:`$limit` \n     - Limits the output to ``5`` documents. \n\n   * - :pipeline:`$project` \n     - Perform the following actions: \n     \n       - Exclude the ``_id`` field and only include the ``items`` and\n         ``storeLocation`` fields. \n       - Use :expression:`$filter` to return only elements of the\n         ``items`` input array that match the condition specified using\n         the :expression:`$and` operator. The ``and`` operator uses the\n         following operators: \n\n         - :expression:`$ifNull` to determine if ``items.price`` contains\n           null values and replace null values, if present, with the\n           replacement expression ``false``.  \n         - :expression:`$gt` to check if quantity is greater than 2.\n         - :expression:`$in` to check if ``office`` exists in the ``tags``\n           array. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/embedded-document.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos: \n\n      db.sales.aggregate(\n        {\n          \"$search\": {\n            \"embeddedDocument\": {\n              \"path\": \"items\",\n              \"operator\": {\n                \"compound\": {\n                  \"must\": [\n                    {\n                      \"range\": {\n                        \"path\": \"items.quantity\",\n                        \"gt\": 2\n                      }\n                    },\n                    {\n                      \"exists\": {\n                        \"path\": \"items.price\"\n                      }\n                    },\n                    {\n                      \"text\": {\n                        \"path\": \"items.tags\",\n                        \"query\": \"school\"\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        {\n          \"$limit\": 2\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"storeLocation\": 1,\n            \"items\": {\n              \"$filter\": {\n                \"input\": \"$items\",\n                \"cond\": {\n                  \"$and\": [\n                    {\n                      \"$ifNull\": [\n                        \"$$this.price\", \"false\"\n                      ]\n                    },\n                    {\n                      \"$gt\": [\n                        \"$$this.quantity\", 2\n                      ]\n                    },\n                    {\n                      \"$in\": [\n                        \"office\", \"$$this.tags\" \n                      ]\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      )\n\n   .. output:: \n      :language: json \n      :linenos:\n      :visible: false\n\n      [\n        {\n          storeLocation: 'Austin',\n          items: [\n            {\n              name: 'laptop',\n              tags: [ 'electronics', 'school', 'office' ],\n              price: Decimal128('753.04'),\n              quantity: 3\n            },\n            {\n              name: 'pens',\n              tags: [ 'writing', 'office', 'school', 'stationary' ],\n              price: Decimal128('19.09'),\n              quantity: 4\n            },\n            {\n              name: 'notepad',\n              tags: [ 'office', 'writing', 'school' ],\n              price: Decimal128('30.23'),\n              quantity: 5\n            },\n            {\n              name: 'pens',\n              tags: [ 'writing', 'office', 'school', 'stationary' ],\n              price: Decimal128('20.05'),\n              quantity: 4\n            },\n            {\n              name: 'notepad',\n              tags: [ 'office', 'writing', 'school' ],\n              price: Decimal128('22.08'),\n              quantity: 3\n            },\n            {\n              name: 'notepad',\n              tags: [ 'office', 'writing', 'school' ],\n              price: Decimal128('21.67'),\n              quantity: 4\n            }\n          ]\n        },\n        {\n          storeLocation: 'Austin',\n          items: [\n            {\n              name: 'notepad',\n              tags: [ 'office', 'writing', 'school' ],\n              price: Decimal128('24.16'),\n              quantity: 5\n            },\n            {\n              name: 'notepad',\n              tags: [ 'office', 'writing', 'school' ],\n              price: Decimal128('28.04'),\n              quantity: 5\n            },\n            {\n              name: 'notepad',\n              tags: [ 'office', 'writing', 'school' ],\n              price: Decimal128('21.42'),\n              quantity: 5\n            },\n            {\n              name: 'laptop',\n              tags: [ 'electronics', 'school', 'office' ],\n              price: Decimal128('1540.63'),\n              quantity: 3\n            },\n            {\n              name: 'pens',\n              tags: [ 'writing', 'office', 'school', 'stationary' ],\n              price: Decimal128('29.43'),\n              quantity: 5\n            },\n            {\n              name: 'pens',\n              tags: [ 'writing', 'office', 'school', 'stationary' ],\n              price: Decimal128('28.48'),\n              quantity: 5\n            }\n          ]\n        }\n      ]\n\n.. tip:: \n\n   To return only matching embedded documents in the results, include an\n   equivalent :expression:`$filter` to match the :pipeline:`$search`\n   criteria on the embedded document field. To return only matching\n   embedded documents in the :pipeline:`$search` stage results, upvote \n   :ftsuservoice:`this request </suggestions/40953355-return-results-from-within-arrays>` \n   in the MongoDB Feedback Engine.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/embedded-document.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n      $search: {\n         \"index\": <index name>, // optional, defaults to \"default\"\n         \"equals\": {\n            \"path\": \"<field-to-search>\",\n            \"value\": <boolean-value>|<objectId>|<number>|<date>|<string>,\n            \"score\": <score-options>\n         }\n      }\n   }\n\n.. _equals-options:\n\nOptions\n-------\n\n``equals`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Required?\n\n   * - ``path``\n     - string\n     - Indexed field to search.\n     - yes\n\n   * - ``value``\n     - :ref:`boolean <boolean-ref>`, :ref:`objectId <objectId-ref>`, \n       :ref:`number <bson-data-types-number>`, :ref:`date\n       <bson-data-types-date>`, :ref:`string <bson-data-types-date>`,\n       :ref:`uuid <bson-data-types-uuid>`, or null.\n     - Value to query for.\n     - yes\n\n   * - ``score``\n     - object\n     - Score to assign to matching search term results. Use one of the\n       following options to modify the score:\n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score with the given expression.\n\n       For information on using ``score`` in your query, see\n       :ref:`scoring-ref`.\n     - no\n\n.. _equals-query-score:\n\nScoring Behavior \n----------------\n\nBy default, ``equals`` uses :ref:`scoring-constant` scoring. Each\nmatching document receives a score of ``1``. \n\n.. include:: /includes/fact-fts-array-scoring.rst\n\nSee the :ref:`equals-query-examples` section for scoring examples. \n\n.. _equals-query-examples:\n\nExamples\n--------\n\n.. _equals-eg-collection:\n\nSample Collection \n~~~~~~~~~~~~~~~~~\n\nThe examples on this page use a collection named ``users`` containing \nthe following three documents:\n\n.. include:: /includes/atlas-search-op-insert-syntax.rst\n\n.. tabs:: \n\n   .. tab:: MongoDB Shell \n      :tabid: mongosh\n             \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/equals.txt"
  },
  {
    "code": "         :copyable: true\n\n         db.users.insertMany([\n          {\n            \"_id\" : ObjectId(\"5ed698faa1199b471010d70c\"),\n            \"name\" : \"Jim Hall\",\n            \"verified_user\" : true,\n            \"account\" : {\n              \"new_user\" : true,\n              \"active_user\" : true\n            },\n            \"teammates\" : [\n              ObjectId(\"5ed6990aa1199b471010d70d\"),\n              ObjectId(\"59b99dbdcfa9a34dcd7885c8\")\n            ],\n            \"region\" : \"East\",\n            \"account_created\" : ISODate(\"2021-12-12T10:18:27.000+00:00\"),\n            \"employee_number\" : 257,\n            \"uuid\" : UUID(\"fac32260-b511-4c69-8485-a2be5b7dda9e\"),\n            \"job_title\": \"engineer\"\n          },\n          {\n            \"_id\" : ObjectId(\"5ed6990aa1199b471010d70d\"),\n            \"name\" : \"Ellen Smith\",\n            \"verified_user\" : true,\n            \"account\" : {\n              \"new_user\" : false,\n              \"active_user\" : true\n            },\n            \"teammates\" : [\n              ObjectId(\"5a9427648b0beebeb69537a5\"),\n              ObjectId(\"59b99dbdcfa9a34dcd7881d1\")\n            ],\n            \"region\" : \"Southwest\",\n            \"account_created\" : ISODate(\"2022-05-04T05:01:08.000+00:00\"),\n            \"employee_number\" : 258,\n            \"job_title\": null\n          },\n          {\n            \"_id\" : ObjectId(\"5ed6994fa1199b471010d70e\"),\n            \"name\" : \"Fred Osgood\",\n            \"verified_user\" : false,\n            \"account\" : {\n              \"new_user\" : false,\n              \"active_user\" : false\n            },\n            \"teammates\" : [\n              ObjectId(\"5a9427648b0beebeb69589a1\"),\n              ObjectId(\"59b99dbdcfa9a34dcd7897d3\")\n            ],\n            \"region\" : \"Northwest\",\n            \"account_created\" : ISODate(\"2022-01-19T08:22:15.000+00:00\"),\n            \"employee_number\" : 259,\n            \"job_title\": null\n          }\n        ])\n\n   .. tab:: Atlas UI \n      :tabid: json\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/equals.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     $search: {\n       \"index\": <index name>, // optional, defaults to \"default\"\n       \"exists\": {\n         \"path\": \"<field-to-test-for>\",\n         \"score\": <options>\n       }\n     }\n   }\n\n.. _exists-options:\n\nOptions\n-------\n\n``exists`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Required?\n\n   * - ``path``\n     - string\n     - Indexed field to search.\n     - yes\n\n   * - ``score``\n     - object\n     - Score to assign to matching search results. To learn more\n       about the options to modify the default score, see \n       :ref:`scoring-ref`.\n     - no\n\n.. _exists-query-score:\n\nScoring Behavior \n----------------\n\n|fts| assigns a :ref:`scoring-constant` score of ``1`` for all the\ndocuments in the result set. You can customize the default |fts| score\nusing the ``score`` options. To learn more about modifying the default\nscore returned by |fts|, see :ref:`scoring-options`.\n\n.. _exists-egs:\n\nExamples\n--------\n\nYou can try the following examples in the {+playground+} or your\n|service| {+cluster+}. \n\n.. _exists-eg-collection:\n\nSample Collection \n~~~~~~~~~~~~~~~~~\n\nThe examples on this page use a collection called ``fruit`` that contains\nthe following documents:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/exists.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"_id\" : 1,\n     \"type\" : \"apple\",\n     \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp.\"\n   },\n   {\n     \"_id\" : 2,\n     \"type\" : \"banana\",\n     \"description\" : \"Bananas are usually sold in bunches of five or six.\"\n   },\n   { \"_id\" : 3,\n     \"type\": \"apple\",\n     \"description\" : \"Apple pie and apple cobbler are popular apple-based desserts.\"\n   },\n   { \"_id\" : 4,\n     \"description\" : \"Types of citrus fruit include lemons, oranges, and grapefruit.\",\n     \"quantities\" : {\n       \"lemons\": 200,\n       \"oranges\": 240,\n       \"grapefruit\": 160\n     }\n   }\n\n.. _exists-eg-index:\n\nSample Index \n~~~~~~~~~~~~\n\nThe ``fruit`` collection has a default :ref:`dynamic\n<static-dynamic-mappings>` |fts| index that uses the default\n:ref:`standard <ref-standard-analyzer>` analyzer. The ``standard``\nanalyzer lower-cases all words and disregards common stop words\n(``\"the\", \"a\", \"and\",`` etc).\n\n.. _exists-eg-queries:\n\nSample Queries \n~~~~~~~~~~~~~~\n\nThe following queries demonstrate the ``exists`` operator in |fts|\nqueries.\n\nBasic Example\n`````````````\n\nThe following example searches for documents which include a field\nnamed ``type``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/exists.txt"
  },
  {
    "code": "   :linenos:\n\n   db.fruit.aggregate([\n     {\n       $search: {\n         \"exists\": {\n           \"path\": \"type\"\n         }\n       }\n     }\n   ])\n\nThe above query returns the first three documents of the collection.\nThe document with ``_id: 4`` is not included because it does not have a\n``type`` field.\n\n|arrow| Try this in the :asp:`Atlas Search Playground </664f77ceacd5b8b88d15cff9>`.\n\nEmbedded Example\n````````````````\n\nUse dot notation to search for embedded fields. The following example\nsearches for documents which have a field named ``lemons`` embedded\nwithin a field named ``quantities``. \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/exists.txt"
  },
  {
    "code": "   :copyable: true \n   \n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          \"$search\": {\n            \"exists\": {\n              \"path\": \"quantities.lemons\"\n            }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: javascript\n      :linenos:\n      :visible: false\n\n      {\n        \"_id\" : 4,\n        \"description\" : \"Types of citrus fruit include lemons, oranges, and grapefruit.\",\n        \"quantities\" : {\n          \"lemons\": 200,\n          \"oranges\": 240,\n          \"grapefruit\": 160\n        }\n      }\n\n|arrow| Try this in the :asp:`Atlas Search Playground </664f7892f024313ed0dbcc6e>`.\n\nCompound Example\n````````````````\n\nThe following example uses ``exists`` as part of a\n:ref:`compound <compound-ref>` query. \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/exists.txt"
  },
  {
    "code": "   :copyable: true \n   \n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          $search: {\n            \"compound\": {\n              \"must\": [\n                {\n                  \"exists\": {\n                    \"path\": \"type\"\n                  }\n                },\n                {\n                  \"text\": {\n                    \"query\": \"apple\",\n                    \"path\": \"type\"\n                  }\n                }],\n              \"should\": {\n                \"text\": {\n                  \"query\": \"fuji\",\n                  \"path\": \"description\"\n                }\n              }\n            }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: javascript\n      :linenos:\n      :visible: false\n\n      {\n        \"_id\" : 1,\n        \"type\" : \"apple\",\n        \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp.\"\n      }\n      {\n        \"_id\" : 3,\n        \"type\" : \"apple\",\n        \"description\" : \"Apple pie and apple cobbler are popular apple-based desserts.\"\n      }\n\nBoth documents have a ``type`` field, and both include the search term\n``apple``. The document with ``_id: 1`` is returned first because it\nsatisfies the :data:`should` clause.\n\n|arrow| Try this in the :asp:`Atlas Search Playground </664f7c2dacd5b8b88d15cffb>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/exists.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 37-88 \n\n.. expression:: ConstantScoreQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: csqopt\n\n         For constant score queries, the structured summary includes \n         details on the following options: \n\n         .. list-table::\n            :header-rows: 1\n            :widths: 10 20 10 50\n\n            * - Field\n              - Type\n              - Necessity\n              - Description              \n\n            * - ``query``\n              - :ref:`explain-response`\n              - Required\n              - Child of the ``ConstantScoreQuery``. \n\n      .. tab:: Example \n         :tabid: csqeg\n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 11-22                     \n\n.. expression:: FunctionScoreQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: fsqopt \n\n         For Lucene ``FunctionScoreQuery`` queries, the structured \n         summary includes details on the following options: \n\n         .. list-table::\n            :header-rows: 1\n            :widths: 10 20 10 50\n\n            * - Field\n              - Type\n              - Necessity\n              - Description\n\n            * - ``scoreFunction`` \n              - string \n              - Required \n              - Scoring expression used in the query.\n\n            * - ``query``\n              - :ref:`explain-response`\n              - Required \n              - The query.\n\n      .. tab:: Example \n         :tabid: fsqeg \n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 12-59          \n\n.. expression:: LatLonPointDistanceQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: llpdqopt \n\n         For Lucene ``LatLonPointDistanceQuery`` queries, the response \n         contains an :ref:`explain-timing-breakdown` only.\n\n      .. tab:: Example \n         :tabid: llpdqeg\n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 20-23           \n\n.. expression:: LatLonShapeQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: llsqopt \n\n         For Lucene ``LatLonShapeQuery`` queries, the response contains \n         an :ref:`explain-timing-breakdown` only.\n\n      .. tab:: Example \n         :tabid: llsqeg \n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 26-29       \n\n.. expression:: LongDistanceFeatureQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: ldfqopt\n\n         For Lucene ``LongDistanceFeatureQuery``, the response contains \n         an :ref:`explain-timing-breakdown` only.\n\n      .. tab:: Example \n         :tabid: ldfqeg\n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_mflix.movies`` collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 12-15           \n\n.. expression:: MultiTermQueryConstantScoreWrapper\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: mtqopt \n\n         For Lucene ``MultiTermQueryConstantScoreWrapper`` queries, the \n         structured summary includes details on the following \n         arguments: \n\n         .. list-table::\n            :header-rows: 1\n            :widths: 10 20 10 50\n\n            * - Field\n              - Type\n              - Necessity\n              - Description\n\n            * - ``queries``\n              - List<:ref:`explain-response`>\n              - Required\n              - List of queries.\n\n      .. tab:: Example \n         :tabid: mtqeg\n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 12-24   \n\n.. expression:: PhraseQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: pqopt \n\n         For Lucene ``PhraseQuery`` queries, the structured summary \n         includes details on the following arguments: \n\n         .. list-table::\n            :header-rows: 1\n            :widths: 10 20 10 50\n\n            * - Field\n              - Type\n              - Necessity\n              - Description\n\n            * - ``path``\n              - string\n              - Required\n              - Indexed field to search.\n\n            * - ``query``\n              - string \n              - Required\n              - String or strings to search for.\n\n            * - ``slop``\n              - int\n              - Required\n              - Allowable distance between words in the ``query`` \n                phrase.\n\n      .. tab:: Example \n         :tabid: pqeg\n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 12-19\n\n.. expression:: PointRangeQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: prqopt \n\n         For Lucene ``PointRangeQuery`` queries, the structured summary \n         includes details on the following arguments: \n\n         .. list-table::\n            :header-rows: 1\n            :widths: 10 20 10 50\n\n            * - Field\n              - Type\n              - Necessity\n              - Description\n\n            * - ``path``\n              - string\n              - Required\n              - Indexed field to search.\n\n            * - ``representation``\n              - string\n              - Optional\n              - Numeric representation. Queries over date-typed data do \n                not include representation.\n\n            * - ``gte``\n              - number\n              - Optional\n              - Lower bound of the query.\n\n            * - ``lte``\n              - number\n              - Optional\n              - Upper bound of the query.\n\n      .. tab:: Example \n         :tabid: prqeg \n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 11-38    \n\n.. expression:: TermQuery\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: tqopt \n\n         For term queries, the structured summary includes details on \n         the following arguments: \n\n         .. list-table::\n            :header-rows: 1\n            :widths: 10 20 10 50\n\n            * - Field\n              - Type\n              - Necessity\n              - Description\n\n            * - ``path``\n              - string\n              - Required\n              - Indexed field to search.\n\n            * - ``value``\n              - string \n              - Required\n              - String to search for. \n\n      .. tab:: Example \n         :tabid: tqeg\n         \n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 11-17\n\n.. expression:: Default\n\n   .. tabs:: \n\n      .. tab:: Options \n         :tabid: opt \n\n         Lucene queries that are not explicitly defined by another \n         Lucene query are serialized using the default query. The \n         structured summary includes details on the following option: \n\n         .. list-table::\n            :header-rows: 1\n            :widths: 10 20 10 50\n\n            * - Field\n              - Type\n              - Necessity\n              - Description\n              \n            * - ``queryType`` \n              - string \n              - Required.\n              - Type of Lucene query.\n              \n      .. tab:: Example \n         :tabid: eg \n\n         The following example shows the ``explain`` response for a \n         query run against the ``sample_airbnb.listingsAndReviews`` \n         collection.\n     \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "            :language: json\n            :linenos:\n            :emphasize-lines: 18-23              \n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-lucene-query.txt"
  },
  {
    "code": "          :copyable: false \n\n          \"context\" : {\n            \"millisElapsed\" : NumberDouble(4.934751),\n            \"invocationCounts\" : {\n              \"createWeight\" : NumberLong(1),\n              \"createScorer\" : NumberLong(10)\n            }\n          }\n\n   * - ``match``\n     - Statistics related to iterating over and matching result \n       documents. This statistic shows the time it takes to determine \n       which document is the next match. Time spent matching results \n       can vary significantly depending on the nature of the query. \n       There are two tasks whose invocation counts are enumerated in \n       this area: \n\n       .. list-table:: \n          :widths: 20 80 \n\n          * - ``nextDoc`` \n            - Requests to advance to the next document of the result \n              set. This involves identifying and moving past skips, or \n              other tasks necessary to find the next match. Count \n              includes the number of ``nextDoc`` and ``advance`` \n              invocations.\n\n          * - ``refineRoughMatch`` \n            - Performs a more thorough match. Some queries execute in a \n              two-phase process where a document is first \"roughly\" \n              matched, and is checked with a second, more thorough \n              phase only after satisfying the first rough match. The \n              ``refineRoughMatch`` task is the second phase of the \n              two-phase process. Count includes the number of ``refineRoughMatch`` invocations.\n\n       For example: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-timing-breakdown.txt"
  },
  {
    "code": "          :copyable: false \n\n          \"match\" : {\n            \"millisElapsed\" : NumberDouble(4.901597),\n            \"invocationCounts\" : {\n              \"nextDoc\" : NumberLong(541),\n              \"refineRoughMatch\" : NumberLong(0)\n            }\n          }\n\n   * - ``score``\n     - Statistics related to scoring documents in the result set. There \n       are two tasks whose invocation counts are enumerated in this \n       area:\n\n       .. list-table:: \n          :widths: 20 80 \n\n          * - ``score``\n            - Scores each document in the result set. Count includes \n              the number of ``score`` invocations.\n\n          * - ``setMinCompetitiveScore``\n            - Ignores documents whose score is less than the given \n              value. Indicates that a query may have been able to \n              reduce the number of scoring operations performed by \n              ignoring documents with scores below some uncompetitive \n              threshold. Count includes the number of \n              ``setMinCompetitiveScore`` invocations.\n\n       For example: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-timing-breakdown.txt"
  },
  {
    "code": "          :copyable: false \n\n          \"score\" : {\n            \"millisElapsed\" : NumberDouble(3.931312),\n            \"invocationCounts\" : {\n              \"score\" : NumberLong(536),\n              \"setMinCompetitiveScore\" : NumberLong(0)\n            }\n          }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain-timing-breakdown.txt"
  },
  {
    "code": "   :emphasize-lines: 1\n\n   db.<myCollection>.explain(\"<verbosity>\").aggregate([\n     {\n       $search: {\n         \"<operator>\": {\n           \"<operator-options>\"\n         }\n       }\n     }\n   ])\n\n.. _explain-verbosity:\n\nVerbosity \n---------\n\nVerbosity mode controls the behavior of ``explain`` and the amount of \ninformation returned. Value can be one of the following: \n\n.. list-table:: \n   :widths: 30 70 \n\n   * - :manual:`queryPlanner \n       </reference/explain-results/#explain.queryPlanner>` (default)\n     - Information about the query plan. Does not include the \n       ``stats`` field, which contains execution statistics for \n       the query.\n\n   * - :manual:`executionStats \n       </reference/explain-results/#explain.executionStats>`\n     - Information about the query plan including the ``stats`` field, \n       which contains execution statistics for the query.\n\n   * - :manual:`allPlansExecution \n       </reference/explain-results/#explain.executionStats>`\n     - Information about the query plan including the ``stats`` field, \n       which contains execution statistics for the query.\n\n.. seealso:: \n       \n   :manual:`Verbosity Modes \n   </reference/command/explain/#verbosity-modes>`\n\n.. _explain-response:\n\nExplain Response \n----------------\n\nThe ``explain`` response is a |bson| document with keys and values \ndescribing the execution statistics for the query. The ``explain`` \ndocument in the result set contains the following fields: \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 10 15 10 65\n\n   * - Option \n     - Type \n     - Necessity \n     - Purpose\n\n   * - ``path``\n     - string \n     - Optional \n     - Path to the operator, only if it isn't the root.\n\n   * - ``type``\n     - string \n     - Required \n     - Name of the Lucene Query that the |fts| operator created. See \n       :ref:`explain-lucene-query` for more information.\n\n   * - ``analyzer``\n     - string \n     - Optional\n     - |fts| :ref:`analyzer <analyzers-ref>` used with the query.\n\n   * - ``args``\n     - document \n     - Required\n     - Lucene query information. See \n       :ref:`explain-lucene-query` for more information.\n\n   * - ``stats``\n     - document\n     - Optional \n     - :ref:`explain-timing-breakdown` for the query if ``explain`` \n       ran with ``executionStats`` or ``allPlansExecution`` \n       verbosity.\n\n.. _explain-limitations:\n\nLimitations \n-----------\n\nYou can't run :ref:`fts-facet-ref` queries with ``explain``. \n\n.. _explain-egs:\n\nExamples \n--------\n\nThe following examples use the ``movies`` collection in the\n``sample_mflix`` database.\n\n.. include:: /includes/admonitions/get-started-atlas-search.rst\n\n.. _queryplanner-ex:\n\n``queryPlanner`` \n~~~~~~~~~~~~~~~~\n\nThe following example uses the :ref:`text-ref` operator to \nquery the ``title`` field with the ``queryPlanner`` \n:ref:`verbosity <explain-verbosity>` mode. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain.txt"
  },
  {
    "code": "    :copyable: false\n\n    {\n      \"stages\" : [\n        {\n          \"$_internalSearchMongotRemote\" : {\n            \"mongotQuery\" : {\n              \"text\" : {\n                \"path\" : \"title\",\n                \"query\" : \"yark\",\n                \"fuzzy\" : {\n                  \"maxEdits\" : 1,\n                  \"maxExpansions\" : 100\n                }\n              }\n            },\n            \"explain\" : {\n              \"type\" : \"BooleanQuery\",\n              \"args\" : {\n                \"must\" : [ ],\n                \"mustNot\" : [ ],\n                \"should\" : [\n                  {\n                    \"type\" : \"BoostQuery\",\n                    \"args\" : {\n                      \"query\" : {\n                        \"type\" : \"TermQuery\",\n                        \"args\" : {\n                          \"path\" : \"title\",\n                          \"value\" : \"ark\"\n                        }\n                      },\n                      \"boost\" : 0.6666666269302368\n                    }\n                  },\n                  {\n                    \"type\" : \"BoostQuery\",\n                    \"args\" : {\n                      \"query\" : {\n                        \"type\" : \"TermQuery\",\n                        \"args\" : {\n                          \"path\" : \"title\",\n                          \"value\" : \"yard\"\n                        }\n                      },\n                      \"boost\" : 0.75\n                    }\n                  },\n                  {\n                    \"type\" : \"BoostQuery\",\n                    \"args\" : {\n                      \"query\" : {\n                        \"type\" : \"TermQuery\",\n                        \"args\" : {\n                          \"path\" : \"title\",\n                          \"value\" : \"mark\"\n                        }\n                      },\n                      \"boost\" : 0.75\n                    }\n                  },\n                  {\n                    \"type\" : \"BoostQuery\",\n                    \"args\" : {\n                      \"query\" : {\n                        \"type\" : \"TermQuery\",\n                        \"args\" : {\n                          \"path\" : \"title\",\n                          \"value\" : \"park\"\n                        }\n                      },\n                      \"boost\" : 0.75\n                    }\n                  },\n                  {\n                    \"type\" : \"BoostQuery\",\n                    \"args\" : {\n                      \"query\" : {\n                        \"type\" : \"TermQuery\",\n                        \"args\" : {\n                          \"path\" : \"title\",\n                          \"value\" : \"dark\"\n                        }\n                      },\n                      \"boost\" : 0.75\n                    }\n                  },\n                  {\n                    \"type\" : \"BoostQuery\",\n                    \"args\" : {\n                      \"query\" : {\n                        \"type\" : \"TermQuery\",\n                        \"args\" : {\n                          \"path\" : \"title\",\n                          \"value\" : \"york\"\n                        }\n                      },\n                      \"boost\" : 0.75\n                    }\n                  }\n                ],\n                \"filter\" : [ ],\n                \"minimumShouldMatch\" : 0\n              }\n            }\n          }\n        },\n        {\n          \"$_internalSearchIdLookup\" : { }\n        }\n      ],\n      \"serverInfo\" : {\n        \"host\" : \"atlas-example-shard-00-01.mongodb.net\",\n        \"port\" : 27017,\n        \"version\" : \"4.4.3\",\n        \"gitVersion\" : \"913d6b62acfbb344dde1b116f4161360acd8fd13\"\n      },\n      \"ok\" : 1,\n      \"$clusterTime\" : {\n        \"clusterTime\" : Timestamp(1612457287, 1),\n        \"signature\" : {\n          \"hash\" : BinData(0,\"kzn7hY7NOduVIqcfx+40ENKbMKQ=\"),\n          \"keyId\" : NumberLong(\"1234567890123456789\")\n        }\n      },\n      \"operationTime\" : Timestamp(1612457287, 1)\n    }\n\nFor queries that specify a :pipeline:`$limit` stage in the pipeline, the\n``explain`` results include the ``mongotDocsRequested`` metric, which\nshows the number of documents that ``mongod`` requested from ``mongot``. \n\n.. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain.txt"
  },
  {
    "code": "      :copyable: false \n      :emphasize-lines: 6\n\n      {\n        \"mongotQuery\": {},\n        \"explain\": {},\n        \"limit\": <int>,\n        \"sortSpec\": {},\n        \"mongotDocsRequested\": <int>,\n      }\n\n.. _exstats-ex:\n\n``executionStats`` \n~~~~~~~~~~~~~~~~~~\n\nThe following example uses the :ref:`autocomplete-ref` operator \nto query the ``title`` field with the ``executionStats`` \n:ref:`verbosity <explain-verbosity>` mode. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain.txt"
  },
  {
    "code": "    :copyable: false\n\n    {\n      \"stages\" : [\n        {\n          \"$_internalSearchMongotRemote\" : {\n            \"mongotQuery\" : {\n              \"autocomplete\" : {\n                \"path\" : \"title\",\n                \"query\" : \"pre\",\n                \"fuzzy\" : {\n                  \"maxEdits\" : 1,\n                  \"prefixLength\" : 1,\n                  \"maxExpansions\" : 256\n                }\n              }\n            },\n            \"explain\" : {\n              \"type\" : \"MultiTermQueryConstantScoreWrapper\",\n              \"args\" : {\n                \"queries\" : [\n                  {\n                    \"type\" : \"DefaultQuery\",\n                    \"args\" : {\n                      \"queryType\" : \"AutomatonQuery\"\n                    },\n                    \"stats\" : {\n                      \"context\" : {\n                        \"millisElapsed\" : NumberDouble(0)\n                      },\n                      \"match\" : {\n                        \"millisElapsed\" : NumberDouble(0)\n                      },\n                      \"score\" : {\n                        \"millisElapsed\" : NumberDouble(0)\n                      }\n                    }\n                  }\n                ]\n              },\n              \"stats\" : {\n                \"context\" : {\n                  \"millisElapsed\" : NumberDouble(0.816418),\n                  \"invocationCounts\" : {\n                    \"createWeight\" : NumberLong(1),\n                    \"createScorer\" : NumberLong(2)\n                  }\n                },\n                \"match\" : {\n                  \"millisElapsed\" : NumberDouble(3.849778),\n                  \"invocationCounts\" : {\n                    \"nextDoc\" : NumberLong(656)\n                  }\n                },\n                \"score\" : {\n                  \"millisElapsed\" : NumberDouble(0.035349),\n                  \"invocationCounts\" : {\n                    \"score\" : NumberLong(655)\n                  }\n                }\n              }\n            }\n          },\n          \"nReturned\" : NumberLong(0),\n          \"executionTimeMillisEstimate\" : NumberLong(20)\n        },\n        {\n          \"$_internalSearchIdLookup\" : { },\n          \"nReturned\" : NumberLong(0),\n          \"executionTimeMillisEstimate\" : NumberLong(20)\n        }\n      ],\n      \"serverInfo\" : {\n        \"host\" : \"atlas-example-shard-00-01.mongodb.net\",\n        \"port\" : 27017,\n        \"version\" : \"4.4.3\",\n        \"gitVersion\" : \"913d6b62acfbb344dde1b116f4161360acd8fd13\"\n      },\n      \"ok\" : 1,\n      \"$clusterTime\" : {\n        \"clusterTime\" : Timestamp(1612454116, 1),\n        \"signature\" : {\n          \"hash\" : BinData(0,\"OY+SMPmdK//g6rFZkvSCQr3c3hM=\"),\n          \"keyId\" : NumberLong(\"1234567890123456789\")\n        }\n      },\n      \"operationTime\" : Timestamp(1612454116, 1)\n    }\n\n.. toctree::\n   :titlesonly:\n\n   Lucene Summary </atlas-search/explain-lucene-query>\n   Explain Timing </atlas-search/explain-timing-breakdown>\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/explain.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 4-11\n\n   {\n     \"$searchMeta\"|\"$search\": {\n       \"index\": <index name>, // optional, defaults to \"default\"\n       \"facet\": {\n         \"operator\": {\n           <operator-specifications>\n         },\n         \"facets\": {\n           <facet-definitions>\n         }\n       }\n     }\n   }\n\n.. _fts-facet-fields:\n\nFields \n------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 10 60\n\n   * - Field\n     - Type\n     - Required?\n     - Description\n\n   * - ``facets``\n     - document\n     - yes\n     - :ref:`Information <fts-facet-definition>` for bucketing the data \n       for each facet. You must specify at least one \n       :ref:`fts-facet-definition`.    \n\n   * - ``operator``\n     - document\n     - no\n     - :ref:`Operator <operators-ref>` to use to perform the facet over. \n       If omitted, |fts| performs the facet over all documents in \n       the collection.\n\n.. _fts-facet-definition:\n\nFacet Definition  \n----------------\n\nThe facet definition document contains the facet name and options \nspecific to a type of facet. |fts| supports the following types of \nfacets: \n\n- :ref:`fts-string-facet` \n- :ref:`fts-numeric-facet`\n- :ref:`fts-date-facet`\n\n.. _fts-string-facet:\n\nString Facets \n~~~~~~~~~~~~~\n\nString facets allow you to narrow down |fts| results based on the most  \nfrequent string values in the specified string field. Note that the \nstring field must be indexed as :ref:`stringFacet\n<bson-data-types-string-facet>`. To facet on string fields in embedded\ndocuments, you must also index the parent fields as the :ref:`document\n<bson-data-types-document>` type. \n\n.. note:: \n\n   When you facet on a string field inside embedded documents, |fts|\n   returns facet count for only the number of matching parent\n   documents. \n\n.. _fts-string-facet-syntax:\n\nSyntax \n``````\nString facets have the following syntax:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "   :emphasize-lines: 8-12\n\n   {\n     \"$searchMeta\": {\n       \"facet\":{\n         \"operator\": {\n           <operator-specification>\n         },\n         \"facets\": {\n           \"<facet-name>\" : {\n             \"type\" : \"string\",\n             \"path\" : \"<field-path>\", \n             \"numBuckets\" : <number-of-categories>, \n           }\n         }\n       }\n     }\n   }\n\n.. _fts-string-facet-options:\n\nOptions \n```````\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Option\n     - Type\n     - Description\n     - Required?\n\n   * - ``numBuckets``\n     - int\n     - Maximum number of facet categories to return in the results. \n       Value must be less than or equal to ``1000``. If specified, \n       |fts| may return fewer categories than requested if the data is \n       grouped into fewer categories than your requested number. If \n       omitted, defaults to ``10``, which means that |fts| will return \n       only the top ``10`` facet categories by count.\n     - no\n\n   * - ``path``\n     - string\n     - Field path to facet on. You can specify a field that is  \n       indexed as a :ref:`stringFacet <bson-data-types-string-facet>`.\n     - yes\n\n   * - ``type``\n     - string\n     - Type of facet. Value must be ``string``.\n     - yes\n\n.. _fts-string-facet-egs:\n\nExample \n```````\n\n.. example::\n\n   The following example uses an index named ``default`` on the \n   ``sample_mflix.movies`` collection. The ``genres`` field in the \n   collection is indexed as the :ref:`stringFacet\n   <bson-data-types-string-facet>` type and the ``year`` field is\n   indexed as the :ref:`number <bson-data-types-number>` type. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "      :copyable: false \n\n      [\n        {\n          count: { lowerBound: Long(\"13718\") },\n          facet: {\n            genresFacet: {\n              buckets: [\n                { _id: 'Drama', count: Long(\"7759\") },\n                { _id: 'Comedy', count: Long(\"3937\") },\n                { _id: 'Romance', count: Long(\"1916\") },\n                { _id: 'Thriller', count: Long(\"1705\") },\n                { _id: 'Documentary', count: Long(\"1703\") },\n                { _id: 'Action', count: Long(\"1558\") },\n                { _id: 'Crime', count: Long(\"1475\") },\n                { _id: 'Adventure', count: Long(\"1111\") },\n                { _id: 'Horror', count: Long(\"1008\") },\n                { _id: 'Biography', count: Long(\"877\") }\n              ]\n            }\n          }\n        }\n      ]\n\n   To learn more about these results, see :ref:`fts-facet-results`.\n\n.. _fts-numeric-facet:\n\nNumeric Facets\n~~~~~~~~~~~~~~\n\nNumeric facets allow you to determine the frequency of numeric values \nin your search results by breaking the results into separate ranges of \nnumbers. \n\n.. note:: Limitation \n   \n   You can't facet on numeric fields in embedded documents.\n\n.. _fts-numeric-facet-syntax:\n\nSyntax \n``````\nNumeric facets have the following syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "   :emphasize-lines: 8-13\n\n   {\n     \"$searchMeta\": {\n       \"facet\":{\n         \"operator\": {\n           <operator-specification>\n         },\n         \"facets\": {\n           \"<facet-name>\" : {\n             \"type\" : \"number\",\n             \"path\" : \"<field-path>\", \n             \"boundaries\" : <array-of-numbers>, \n             \"default\": \"<bucket-name>\"\n           }\n         }\n       }\n     }\n   }\n\n.. _fts-numeric-facet-options:\n\nOptions \n```````\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Option\n     - Type\n     - Description\n     - Required?\n\n   * - ``boundaries``\n     - array of numbers\n     - List of numeric values, in ascending order, that specify the \n       boundaries for each bucket. You must specify at least two \n       boundaries. Each adjacent pair of values acts as the inclusive \n       lower bound and the exclusive upper bound for the bucket. You \n       can specify any combination of values of the following \n       :manual:`BSON types </reference/bson-types/>`:\n\n       - 32-bit integer (``int32``)\n       - 64-bit integer (``int64``)\n       - 64-bit binary floating point (``double``)\n\n     - yes\n\n   * - ``default``\n     - string\n     - Name of an additional bucket that counts documents returned from \n       the operator that do not fall within the specified boundaries. \n       If omitted, |fts| includes the results of the facet operator \n       that do not fall under a specified bucket also, but doesn't \n       include it in any bucket counts.\n     - no\n\n   * - ``path``\n     - string\n     - Field path to facet on. You can specify a field that is  \n       indexed as the :ref:`numberFacet <bson-data-types-number-facet>`\n       type.\n     - yes\n\n   * - ``type``\n     - string\n     - Type of facet. Value must be ``number``.\n     - yes\n\n.. _fts-numeric-facet-egs:\n\nExample \n```````\n\n.. example:: \n\n   The following example uses an index named ``default`` on the \n   ``sample_mflix.movies`` collection. The ``year`` field in the \n   collection is indexed as the :ref:`numberFacet\n   <bson-data-types-number-facet>` and :ref:`number\n   <bson-data-types-number>` types.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "      :copyable: false \n\n      [\n        {\n          count: { lowerBound: Long('6095') },\n          facet: {\n            yearFacet: {\n              buckets: [\n                { _id: 1980, count: Long('1956') },\n                { _id: 1990, count: Long('3558') },\n                { _id: 'other', count: Long('581') }\n              ]\n            }\n          }\n        }\n      ]\n\n   To learn more about these results, see :ref:`fts-facet-results`.\n\n.. _fts-date-facet:\n\nDate Facets\n~~~~~~~~~~~\n\nDate facets allow you to narrow down search results based on a \ndate. \n\n.. note:: Limitation \n   \n   You can't facet on date fields in embedded documents.\n\n.. _fts-date-facet-syntax:\n\nSyntax \n``````\n\nDate facets have the following syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "   :emphasize-lines: 8-13\n\n   {\n     \"$searchMeta\": {\n       \"facet\":{\n         \"operator\": {\n           <operator-specification>\n         },\n         \"facets\": {\n           \"<facet-name>\" : {\n             \"type\" : \"date\",\n             \"path\" : \"<field-path>\", \n             \"boundaries\" : <array-of-dates>, \n             \"default\": \"<bucket-name>\"\n           }\n         }\n       }\n     }\n   }\n\n.. _fts-date-facet-options:\n\nOptions \n```````\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Option\n     - Type\n     - Description\n     - Required?\n\n   * - ``boundaries``\n     - array of numbers\n     - List of date values that specify the boundaries for each bucket. \n       You must specify: \n       \n       - At least two boundaries\n       - Values in ascending order, with the earliest date first\n       \n       Each adjacent pair of values acts as the inclusive \n       lower bound and the exclusive upper bound for the bucket. \n     - yes\n\n   * - ``default``\n     - string\n     - Name of an additional bucket that counts documents returned from \n       the operator that do not fall within the specified boundaries. \n       If omitted, |fts| includes the results of the facet operator \n       that do not fall under a specified bucket also, but |fts| \n       doesn't include these results in any bucket counts.\n     - no\n\n   * - ``path``\n     - string\n     - Field path to facet on. You can specify a field that is  \n       indexed as a :ref:`dateFacet <bson-data-types-date-facet>` type. \n     - yes\n\n   * - ``type``\n     - string\n     - Type of facet. Value must be ``date``.\n     - yes\n\n.. _fts-date-facet-egs:\n\nExample \n```````\n\n.. example:: \n\n   The following example uses an index named ``default`` on the \n   ``sample_mflix.movies`` collection. The ``released`` field in the \n   collection is indexed as the :ref:`dateFacet\n   <bson-data-types-date-facet>` and :ref:`date <bson-data-types-date>`\n   types. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "      :copyable: false \n\n      [\n        {\n          count: { lowerBound: Long('11922') },\n          facet: {\n            yearFacet: {\n              buckets: [\n                {\n                  _id: ISODate('2000-01-01T00:00:00.000Z'),\n                  count: Long('3028')\n                },\n                {\n                  _id: ISODate('2005-01-01T00:00:00.000Z'),\n                  count: Long('3953')\n                },\n                {\n                  _id: ISODate('2010-01-01T00:00:00.000Z'),\n                  count: Long('4832')\n                },\n                { _id: 'other', count: Long('109') }\n              ]\n            }\n          }\n        }\n      ]\n\n   To learn more about these results, see :ref:`fts-facet-results`.\n\n.. _fts-facet-results:\n\nFacet Results \n-------------\n\nFor a facet query, |fts| returns a mapping of the defined facet names \nto an array of buckets for that facet in the results. The facet result \ndocument contains the ``buckets`` option, which is an array of \nresulting buckets for the facet. Each facet bucket document in the \narray has the following fields: \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 10 15 75\n\n   * - Option \n     - Type\n     - Description \n\n   * - ``_id``\n     - object \n     - Unique identifier that identifies this facet bucket. This value \n       matches the type of data that is being faceted on.\n\n   * - ``count`` \n     - int \n     - Count of documents in this facet bucket. To learn more about the \n       ``count`` field, see :ref:`count-ref`.\n\n.. _fts-facet-aggregation-variable: \n\n``SEARCH_META`` Aggregation Variable\n------------------------------------\n\n.. include:: /includes/fact-fts-search-meta-variable.rst\n\n.. _fts-facet-limitations:\n\nLimitations \n-----------\n\nThe following limitations apply: \n\n- You can run facet queries on a single field only. You can't run \n  facet queries on groups of fields.\n- You can run facet queries over sharded collections on {+cluster+}\\s \n  running MongoDB v6.0 only.\n\n.. _fts-facet-egs:\n\nExamples \n--------\n\nThe following examples use the ``sample_mflix.movies`` collection. The\nmetadata results example demonstrates how to run a\n:pipeline:`$searchMeta` query with ``facet`` to retrieve only the\nmetadata in the results. The metadata and search results example\ndemonstrates how to run a :pipeline:`$search` query with ``facet`` and\nthe ``$SEARCH_META`` aggregation variable to retrieve both the search\nand metadata results. \n\n.. tabs:: \n  \n   .. tab:: Metadata Results Example \n      :tabid: faceteg\n\n      The index definition specifies the following for the fields to \n      index:\n\n      .. list-table:: \n         :header-rows: 1\n         :widths: 30 70\n\n         * - Field Name\n           - Data Type\n\n         * - ``directors`` \n           - :ref:`stringFacet <bson-data-types-string-facet>`\n    \n         * - ``year`` \n           - :ref:`numberFacet <bson-data-types-number-facet>` \n    \n         * - ``released`` \n           - :ref:`date <bson-data-types-date>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "         :copyable: false \n\n         [\n           { \n             \"count\" : { \"lowerBound\" : NumberLong(13064) }, \n             \"facet\" : { \n               \"yearFacet\" : { \n                 \"buckets\" : [ \n                   { \"_id\" : 2000, \"count\" : NumberLong(3283) }, \n                   { \"_id\" : 2005, \"count\" : NumberLong(4365) }, \n                   { \"_id\" : 2010, \"count\" : NumberLong(5123) } \n                 ] \n               }, \n               \"directorsFacet\" : { \n                 \"buckets\" : [ \n                  { \"_id\" : \"Takashi Miike\", \"count\" : NumberLong(29) }, \n                   { \"_id\" : \"Johnnie To\", \"count\" : NumberLong(23) }, \n                   { \"_id\" : \"Steven Soderbergh\", \"count\" : NumberLong(21) }, \n                   { \"_id\" : \"Michael Winterbottom\", \"count\" : NumberLong(19) }, \n                   { \"_id\" : \"Ken Loach\", \"count\" : NumberLong(16) }, \n                   { \"_id\" : \"Ki-duk Kim\", \"count\" : NumberLong(16) }, \n                   { \"_id\" : \"Ridley Scott\", \"count\" : NumberLong(15) } \n                 ] \n               } \n             } \n           }\n         ]\n\n      The results show a count of the following in the \n      ``sample_mflix.movies`` collection: \n\n      - Number of movies from the year 2000, inclusive lower bound, to \n        2015, exclusive upper bound, that |fts| returned for the query\n      - Number of movies for each director that |fts| returned for the \n        query\n\n   .. tab:: Metadata and Search Results Example \n      :tabid: aggvariableeg\n\n      The index definition specifies the following for the fields to \n      index:\n\n      .. list-table:: \n         :header-rows: 1\n         :widths: 30 70\n\n         * - Field Name\n           - Data Type\n\n         * - ``genres`` \n           - :ref:`stringFacet <bson-data-types-string-facet>`\n    \n         * - ``released`` \n           - :ref:`date <bson-data-types-date>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "         :copyable: false \n\n         [\n           {\n             docs: [\n               {\n                 _id: ObjectId(\"573a1393f29313caabcde1ae\"),\n                 title: 'Begone Dull Care',\n                 released: ISODate(\"1999-07-01T00:00:00.000Z\")\n               },\n               {\n                 _id: ObjectId(\"573a13a9f29313caabd2048a\"),\n                 title: 'Fara',\n                 released: ISODate(\"1999-07-01T00:00:00.000Z\")\n               }\n             ],\n             meta: {\n               count: { lowerBound: Long(\"20878\") },\n               facet: {\n                 genresFacet: {\n                   buckets: [\n                     { _id: 'Drama', count: Long('12149') },\n                     { _id: 'Comedy', count: Long('6436') },\n                     { _id: 'Romance', count: Long('3274') },\n                     { _id: 'Crime', count: Long('2429') },\n                     { _id: 'Thriller', count: Long('2400') },\n                     { _id: 'Action', count: Long('2349') },\n                     { _id: 'Adventure', count: Long('1876') },\n                     { _id: 'Documentary', count: Long('1755') },\n                     { _id: 'Horror', count: Long('1432') },\n                     { _id: 'Biography', count: Long('1244') }\n                   ]\n                 }\n               }\n             }\n           }\n         ]\n\nTo learn more about these results, see :ref:`fts-facet-results`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/facet.txt"
  },
  {
    "code": "      :copyable: false\n\n      doc1 = { a: {b: [[<value1>, <value2>], <value3>] }}\n      doc2 = { a: {b: [<value1>, <value2>, <value3>] } }\n      doc3 = { a: [{ b: <value1>}, {b: <value2>}, {b: <value3>}] }\n\n   |fts| flattens the preceding arrays similar to the following during\n   indexing: \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/array-type.txt"
  },
  {
    "code": "      :copyable: false \n\n      LuceneDoc<n> = {\"a.b\":[<value1>,<value2>,<value3>]}\n\nHow Can I Index Objects in Arrays? \n----------------------------------\n\nTo query fields inside an array of documents or objects, you must use\nthe :ref:`embeddedDocuments <bson-data-types-embedded-documents>` type\nto index the field that contains the array of objects.  \n\nReview the Limitations \n----------------------\n\n|fts| doesn't index the following |fts| field types if the field type \nis contained in an array or is in a document that is contained in an \narray:\n\n- :ref:`dateFacet <bson-data-types-date-facet>` \n- :ref:`numberFacet <bson-data-types-number-facet>` \n\nDefine the Index for the Array Elements \n---------------------------------------\n\nTo define the index for the array elements, choose your preferred\nconfiguration method in the {+atlas-ui+} and then select the database\nand collection. \n\n.. tabs:: \n\n   .. tab:: Visual Editor \n      :tabid: vib\n\n      1. Click :guilabel:`Refine Your Index` to configure your index.  \n      #. In the :guilabel:`Field Mappings` section, click :guilabel:`Add\n         Field Mapping` to open the :guilabel:`Add Field Mapping`\n         window.\n      #. Click :guilabel:`Customized Configuration`. \n      #. Select the field of type array to index from the\n         :guilabel:`Field Name` dropdown.   \n      #. Click the :guilabel:`Data Type` dropdown and select the \n         data type of the array element that you want to index. To learn\n         more about the configuring the properties for the selected type,\n         refer to the documentation for the selected type. \n      #. Click :guilabel:`Add`.\n\n   .. tab:: JSON Editor \n      :tabid: jsonib\n\n      The following is the |json| syntax for indexing elements inside an\n      array. Replace the default index definition with the following.  \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/array-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n         :emphasize-lines: 5-7\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<array-field-name>\": {\n                 \"type\": \"<array-element-data-type>\"\n               }\n             }\n           }\n         }\n\n.. _fts-array-example:\n\nTry an Example for Indexing Array Elements  \n------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\nThe following index definition indexes the ``genres`` field, which\ncontains an array of string values. \n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib\n\n      1. In the :guilabel:`Add Field Mapping` window, select\n         :guilabel:`genres` from the :guilabel:`Field Name` \n         dropdown. \n      #. Click the :guilabel:`Data Type` dropdown and select\n         :guilabel:`String`.\n      #. Keep the default settings for the :guilabel:`String\n         Properties`. \n      #. Click :guilabel:`Add`. \n\n   .. tab:: JSON Editor \n      :tabid: jsonib\n\n      Replace the default index definition with the following index\n      definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/array-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"genres\": {\n                 \"type\": \"string\"\n               }\n             }\n           }\n         }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/array-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n         :emphasize-lines: 6-11\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"autocomplete\",\n                 \"analyzer\": \"<lucene-analyzer>\",\n                 \"tokenization\": \"edgeGram|rightEdgeGram|nGram\",\n                 \"minGrams\": <2>,\n                 \"maxGrams\": <15>,\n                 \"foldDiacritics\": true|false\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-autocomplete-options:\n\nConfigure |fts-field-type| Field Properties    \n-------------------------------------------\n\nThe |fts| |fts-field-type| type takes the following parameters: \n\n.. list-table::\n   :widths: 18 10 8 53 11\n   :header-rows: 1\n\n   * - Option\n     - Type\n     - Necessity\n     - Description\n     - Default\n\n   * - ``type``\n     - string \n     - required\n     - Human-readable label that identifies this field type. Value must\n       be |data-type|. \n     - \n\n   * - ``analyzer``\n     - string\n     - optional\n     - Name of the :ref:`analyzer <analyzers-ref>` to use with this \n       autocomplete mapping. You can use any |fts| analyzer except the \n       ``lucene.kuromoji`` :ref:`language analyzer \n       <ref-language-analyzers>` and the following :ref:`custom \n       analyzer <custom-analyzers>` tokenizers and token filters: \n\n       - :ref:`nGram <ngram-tokenizer-ref>` Tokenizer\n       - :ref:`edgeGram <edgegram-tokenizer-ref>` Tokenizer\n       - :ref:`daitchMokotoffSoundex <daitchmokotoffsoundex-tf-ref>` \n         Token Filter\n       - :ref:`nGram <ngram-tf-ref>` Token Filter \n       - :ref:`edgeGram <edgegram-tf-ref>` Token Filter \n       - :ref:`shingle <shingle-tf-ref>` Token Filter\n\n     - ``lucene.standard``\n      \n   * - ``maxGrams``\n     - int\n     - optional\n     - Maximum number of characters per indexed sequence. The \n       value limits the character length of indexed tokens. When you \n       search for terms longer than the ``maxGrams`` value, |fts| \n       truncates the tokens to the ``maxGrams`` length.\n     - ``15``\n\n   * - ``minGrams``\n     - int\n     - optional\n     - Minimum number of characters per indexed sequence. We \n       recommend ``4`` for the minimum value. A value that is less \n       than ``4`` could impact performance because the size of the \n       index can become very large. We recommend the default value of \n       ``2`` for ``edgeGram`` only.\n     - ``2``\n\n   * - ``tokenization``\n     - enum\n     - optional\n     - Tokenization strategy to use when indexing the field for \n       autocompletion. Value can be one of the following: \n\n       - ``edgeGram`` - create indexable tokens, referred to as \n         ``grams``, from variable-length character sequences starting \n         at the left side of the words as delimited by the analyzer \n         used with this autocomplete mapping.\n\n       - ``rightEdgeGram`` -  create indexable tokens, referred to \n         as ``grams``, from variable-length character sequences \n         starting at the right side of the words as delimited by the \n         analyzer used with this autocomplete mapping.\n\n       - ``nGram`` - create indexable tokens, referred to as \n         ``grams``, by sliding a variable-length character window over \n         a word. |fts| creates more tokens for ``nGram`` than \n         ``edgeGram`` or ``rightEdgeGram``. Therefore, ``nGram`` takes \n         more space and time to index the field. ``nGram`` is better \n         suited for querying languages with long, compound words or \n         languages that don't use spaces.\n\n       ``edgeGram``, ``rightEdgeGram``, and ``nGram`` are applied at \n       the letter-level. For example, consider the following sentence: \n         \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "          :copyable: false \n\n          The quick brown fox jumps over the lazy dog. \n\n       When tokenized with a ``minGrams`` value of ``2`` and a ``maxGrams`` \n       value of ``5``, |fts| indexes the following sequence of \n       characters based on the ``tokenization`` value you choose: \n\n       .. tabs:: \n\n          .. tab:: edgeGram\n             :tabid: edgegram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "                :copyable: false \n\n                th\n                the\n                the{SPACE}\n                the q\n                qu\n                qui\n                quic\n                uick\n                ...\n\n          .. tab:: rightEdgeGram \n             :tabid: rightedgegram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "                :copyable: false \n\n                og\n                dog\n                {SPACE}dog\n                y dog\n                zy\n                azy\n                lazy\n                {SPACE}lazy\n                he\n                the\n                {SPACE}the\n                r the\n                er\n                ver\n                over\n                {SPACE}over\n                ...\n\n          .. tab:: nGram\n             :tabid: ngram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "                :copyable: false \n\n                th\n                the\n                the{SPACE}\n                the q\n                he\n                he{SPACE}\n                he q\n                he qu\n                e{SPACE}\n                e q\n                qu\n                e qui\n                {SPACE}q\n                {SPACE}qu\n                {SPACE}qui\n                {SPACE}quic\n                qu\n                qui\n                quic\n                quick\n                ...\n\n       Indexing a field for autocomplete with an ``edgeGram``, \n       ``rightEdgeGram``, or ``nGram`` tokenization strategy is more\n       computationally expensive than indexing a string field. The \n       index takes more space than an index with regular string\n       fields.\n\n       For the specified tokenization strategy, |fts| applies the\n       following process to concatenate sequential tokens before\n       emitting them. This process is sometimes referred to as\n       \"shingling\". |fts| emits tokens between ``minGrams`` and \n       ``maxGrams`` characters in length:    \n\n       - Keeps tokens less than ``minGrams``.\n       - Joins tokens greater than ``minGrams`` but less than\n         ``maxGrams`` to subsequent tokens to create tokens up to the\n         specified maximum number of characters in length. \n\n     - ``edgeGram``\n\n   * - ``foldDiacritics``\n     - boolean\n     - optional\n     - Flag that indicates whether to include or remove\n       diacritics from the indexed text. Value can be \n       one of the following: \n\n       - ``true`` - ignore diacritic marks in the index and query \n         text. Returns results with and without diacritic marks. For \n         example, a search for ``cafè`` returns results with the \n         characters ``cafè`` and ``cafe``.\n       - ``false`` - include diacritic marks in the index and query \n         text. Returns only results that match the strings with or \n         without diacritics in the query. For example, a search for \n         ``cafè`` returns results only with the characters ``cafè``. A \n         search for ``cafe`` returns results only with the characters \n         ``cafe``.\n\n     - ``true``\n\n.. _fts-field-types-autocomplete-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. tabs::  \n\n   .. tab:: Basic Example\n      :tabid: basic\n\n      .. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n      The following index definition example indexes only the ``title``\n      field as the ``autocomplete`` type to support search-as-you-type\n      queries against that field using the :ref:`autocomplete-ref`\n      operator. The index definition also specifies the following: \n\n      - Use the :ref:`standard <ref-standard-analyzer>` analyzer to divide\n        text values into terms based on word boundaries.\n      - Use the ``edgeGram`` tokenization strategy to index characters\n        starting at the left side of the words .\n      - Index a minimum of ``3`` characters per indexed sequence.\n      - Index a maximum of ``5`` characters per indexed sequence.\n      - Include diacritic marks in the index and query text.\n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`title` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Autocomplete`.   \n            #. Make the following changes to the :guilabel:`Autocomplete\n               Properties`:\n\n               .. list-table::\n                  :stub-columns: 1\n\n                  * - Max Grams \n                    - Set value to ``5``.\n\n                  * - Min Grams \n                    - Set value to ``3``.\n\n                  * - Tokenization\n                    - Select ``edgeGram`` from dropdown.\n                \n                  * - Fold Diacritics \n                    - Select ``false`` from dropdown.\n\n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "               :copyable: true\n               :linenos:\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"title\": {\n                       \"type\": \"autocomplete\",\n                       \"analyzer\": \"lucene.standard\",\n                       \"tokenization\": \"edgeGram\",\n                       \"minGrams\": 3,\n                       \"maxGrams\": 5,\n                       \"foldDiacritics\": false\n                     }\n                   }\n                 }\n               }\n\n   .. tab:: Multiple Types Example\n      :tabid: multitype \n\n      .. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n      You can index a field as other types also by specifying the other \n      types in the array. For example, the following index definition \n      indexes the ``title`` field as the following types: \n      \n      - ``autocomplete`` type to support autocompletion for queries using\n        the :ref:`autocomplete-ref` operator.\n      - ``string`` type to support text search using operators such\n        :ref:`text-ref`, :ref:`phrase-ref`, and so on.\n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`title` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Autocomplete`.   \n            #. Make the following changes to the :guilabel:`Autocomplete\n               Properties`:\n\n               .. list-table::\n                  :stub-columns: 1\n\n                  * - Max Grams \n                    - Set value to ``15``.\n\n                  * - Min Grams \n                    - Set value to ``2``.\n\n                  * - Tokenization\n                    - Select ``edgeGram`` from dropdown.\n                \n                  * - Fold Diacritics \n                    - Select ``false`` from dropdown.\n\n            #. Click :guilabel:`Add`.\n            #. Repeat steps **b** through **d**. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`String`.\n            #. Accept the default :guilabel:`String Properties` settings\n               and click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "               :copyable: true\n               :linenos:\n         \n               {\n                 \"mappings\": {\n                   \"dynamic\": true|false,\n                   \"fields\": {\n                     \"title\": [\n                       {\n                         \"type\": \"autocomplete\",\n                         \"analyzer\": \"lucene.standard\",\n                         \"tokenization\": \"edgeGram\",\n                         \"minGrams\": 2,\n                         \"maxGrams\": 15,\n                         \"foldDiacritics\": false\n                       },\n                       {\n                         \"type\": \"string\"\n                       }\n                     ]\n                   }\n                 }\n               }\n\n   .. tab:: Email Example\n      :tabid: Email\n\n      The following index definition example uses the \n      :ref:`sample_mflix.users <sample-mflix>` collection. If you have \n      the :ref:`sample data <sample-data>` already loaded on your \n      {+cluster+}, you can use the Visual Editor or |json| Editor\n      in the {+atlas-ui+} to configure the index. After you select your\n      preferred configuration method, select the database and \n      collection, and refine your index to add field mappings.\n\n      The following index definition example indexes only the ``email``\n      field as the ``autocomplete`` type to support search-as-you-type\n      queries against that field using the :ref:`autocomplete-ref`\n      operator. The index definition specifies the following: \n\n      - Use the :ref:`keyword <ref-keyword-analyzer>` analyzer to \n        accept a string or array of strings as a parameter and index \n        them as a single term (token).\n      - Use the :ref:`nGram <ngram-tokenizer-ref>` tokenizer to \n        tokenize text into chunks, or \"n-grams\", of given sizes.\n      - Index a minimum of ``3`` characters per indexed sequence.\n      - Index a maximum of ``15`` characters per indexed sequence.\n      - Include diacritic marks in the index and query text.\n\n      You can also use the ``uaxUrlEmail`` tokenizer to tokenizes \n      |url|\\s and email addresses. To learn more, see \n      :ref:`uaxUrlEmail-tokenizer-ref`.\n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`email` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Autocomplete`.   \n            #. Make the following changes to the :guilabel:`Autocomplete\n               Properties`:\n\n               .. list-table::\n                  :stub-columns: 1\n\n                  * - Analyzer\n                    - Select :guilabel:`lucene.keyword` from the \n                      dropdown.\n\n                  * - Max Grams \n                    - Set value to ``15``.\n\n                  * - Min Grams \n                    - Set value to ``3``.\n\n                  * - Tokenization\n                    - Select :guilabel:`nGram` from the dropdown.\n\n                  * - Fold Diacritics \n                    - Select ``false`` from dropdown.\n\n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "               :copyable: true\n               :linenos:\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": true,\n                   \"fields\": {\n                     \"email\": {\n                       \"type\": \"autocomplete\",\n                       \"analyzer\": \"lucene.keyword\",\n                       \"tokenization\": \"nGram\",\n                       \"minGrams\": 3,\n                       \"maxGrams\": 15,\n                       \"foldDiacritics\": false\n                     }\n                   }\n                 }\n               }\n\n.. seealso:: Additional Index Definition Examples\n   \n   - :ref:`autocomplete Operator <autocomplete-ref-egs>` \n   - :ref:`autocomplete Tutorial <autocomplete-tutorial>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/autocomplete-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n         :emphasize-lines: 6\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"boolean\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-boolean-options:\n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe |fts| ``boolean`` type takes the following parameter: \n\n.. list-table::\n   :widths: 18 9 8 54 \n   :header-rows: 1\n\n   * - Option\n     - Type\n     - Necessity\n     - Description\n\n   * - ``type``\n     - string \n     - required\n     - Human-readable label that identifies this field type. Value must \n       be ``boolean``. \n\n.. _fts-field-types-boolean-example:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst  \n\nThe index definition indexes the ``hasRings`` field in the collection as\nthe |fts| ``boolean`` type to support queries against that field using\nthe |fts| :ref:`equals-ref` operator. \n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib\n\n      1. In the :guilabel:`Add Field Mapping` window, select\n         :guilabel:`hasRings` from the :guilabel:`Field Name` \n         dropdown. \n      #. Click the :guilabel:`Data Type` dropdown and select\n         :guilabel:`Boolean`.\n      #. Click :guilabel:`Add`. \n\n   .. tab:: JSON Editor \n      :tabid: jsonib\n\n      Replace the default index definition with the following index\n      definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/boolean-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"hasRings\": {\n                \"type\": \"boolean\"\n               }\n             }\n           }\n         }\n\n.. seealso:: Additional Index Definition Examples\n   \n   - :ref:`equals Operator <equals-query-examples>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/boolean-type.txt"
  },
  {
    "code": "         :emphasize-lines: 6\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"dateFacet\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-date-facet-options:\n\nConfigure ``dateFacet`` Field Properties  \n----------------------------------------\n\nThe |fts| ``dateFacet`` type takes the following parameter:  \n\n.. list-table::\n   :widths: 10 18 9 8 44\n   :header-rows: 1\n\n   * - UI Field Name \n     - JSON Option\n     - Type\n     - Necessity\n     - Description\n\n   * - :guilabel:`Data Type`\n     - ``type``\n     - string \n     - required\n     - Human-readable label that identifies this field type. Value must\n       be ``dateFacet``. \n\n.. _fts-field-types-date-facet-example:\n\nTry an Example for ``dateFacet`` Type  \n-------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n.. tabs::  \n\n   .. tab:: Basic Example\n      :tabid: basic\n\n      The following example index definition indexes the  ``released``\n      field as the |fts| ``dateFacet`` type to support queries against\n      that field using |fts| :ref:`fts-facet-ref`.  \n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            a. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`released` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`DateFacet`.\n            #. Click :guilabel:`Add`. \n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/date-facet-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n         :emphasize-lines: 6\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"date\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-date-options:\n\nConfigure |fts-field-type| Field Properties \n-------------------------------------------\n\nThe |fts| ``date`` type takes the following parameter:  \n\n.. list-table::\n   :widths: 18 9 8 54\n   :header-rows: 1\n\n   * - Option\n     - Type\n     - Necessity\n     - Description\n\n   * - ``type``\n     - string \n     - required\n     - Human-readable label that identifies this field type. Value must\n       be ``date``. \n\n.. _fts-field-types-date-example:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n.. tabs::  \n\n   .. tab:: Basic Example\n      :tabid: basic\n\n      The following example index definition indexes the  ``released``\n      field as the |fts| ``date`` type to support queries against that\n      field using |fts| operators such as :ref:`near-ref`,\n      :ref:`range-ref`, and :ref:`equals-ref`.  \n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`released` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Date`.\n            #. Click :guilabel:`Add`. \n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/date-type.txt"
  },
  {
    "code": "               :copyable: true \n               :linenos: \n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"released\": {\n                      \"type\": \"date\"\n                     }\n                   }\n                 }\n               }\n\n   .. tab:: Multiple Types Example\n      :tabid: multitype \n\n      The following example index definition indexes the  ``released``\n      field as the ``date`` and ``dateFacet`` types to return the\n      following types of results for your queries: \n      \n      - Search results for queries using |fts| operators like\n        :ref:`near-ref`, :ref:`equals-ref`, and :ref:`range-ref`.  \n      - Metadata results for queries using |fts| :ref:`fts-facet-ref`. \n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`released` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Date`.\n            #. Click :guilabel:`Add`. \n            #. Repeat step **1** and select :guilabel:`DateFacet` from\n               the :guilabel:`Data Type` dropdown.\n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/date-type.txt"
  },
  {
    "code": "               :copyable: true \n               :linenos: \n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"released\": [\n                       {\n                         \"type\": \"date\"\n                       },\n                       {\n                         \"type\": \"dateFacet\"\n                       }\n                     ]\n                   }\n                 }\n               }\n\n.. seealso:: Additional Index Definition Examples\n   \n   - :ref:`equals Operator <equals-query-examples>` \n   - :ref:`near Operator <near-ref-egs>`\n   - :ref:`range Operator <range-ref>`\n   - :ref:`date Tutorial <compound-query-date-range-tutorial>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/date-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n         :emphasize-lines: 6-12\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"document\",\n                 \"dynamic\": true|false,\n                 \"fields\": {\n                   \"<field-name>\": {\n                     <field-mapping-definition>\n                   }\n                 }\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-document-options:\n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe |fts| ``document`` type takes the following parameters:\n\n.. list-table::\n   :widths: 15 10 15 50 10\n   :header-rows: 1\n\n   * - Option\n     - Type\n     - Necessity\n     - Description\n     - Default\n\n   * - ``type``\n     - string\n     - Required\n     - Human-readable label that identifies the field type.\n       Value must be ``document``.\n     - \n\n   * - ``dynamic``\n     - boolean\n     - Optional\n     - Flag that indicates whether |fts| recursively indexes all fields \n       and embedded documents. If set to ``true``, |fts| recursively \n       indexes all fields and embedded documents in the ``document`` \n       except fields of :ref:`certain data types <bson-data-chart>`.\n       \n       To index all fields in a document including fields that \n       |fts| doesn't dynamically index, define the fields \n       in the index definition.\n\n       If omitted or set to ``false``, you must specify individual \n       fields to index.\n\n       .. include:: /includes/admonitions/importants/dynamic-flag-considerations.rst\n\n     - false\n\n   * - ``fields``\n     - document\n     - Optional\n     - Document that maps field names to field definitions. To learn \n       more, see an :ref:`example <index-config-example>`. This is \n       required if ``dynamic`` is omitted or set to ``false``. \n     - \n\n.. _fts-field-types-document-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\nThe index definition indexes the ``awards`` field as the ``document``\ntype. It also configures |fts| to automatically index all the\ndynamically indexable fields inside the ``awards`` object.\n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib\n\n      1. In the :guilabel:`Add Field Mapping` window, select\n         :guilabel:`awards` from the :guilabel:`Field Name` \n         dropdown. \n      #. Click the :guilabel:`Data Type` dropdown and select\n         :guilabel:`Document`.\n      #. Toggle the :guilabel:`Enable Dynamic Mapping` setting to\n         enable dynamic indexing of all dynamically indexable fields in\n         the document, if it isn't already enabled.\n      #. Click :guilabel:`Add`. \n\n   .. tab:: JSON Editor \n      :tabid: jsonib\n\n      Replace the default index definition with the following index\n      definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/document-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"awards\": {\n                 \"type\": \"document\",\n                 \"dynamic\": true\n               }\n             }\n           }\n         }\n\n.. seealso:: Additional Index Definition Examples\n   \n   - :ref:`Combined Mapping Example <index-config-example>` \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/document-type.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n         :emphasize-lines: 6-12\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"embeddedDocuments\",\n                 \"dynamic\": true|false,\n                 \"fields\": {\n                   \"<field-name>\": {\n                     <field-mapping-definition>\n                   }\n                 }\n               }\n             }\n           }\n         }\n\n.. _fts-embedded-documents-type-options:\n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe |fts| ``embeddedDocuments`` type takes the following parameters: \n\n.. list-table::\n   :widths: 15 10 15 50 10\n   :header-rows: 1\n\n   * - Field\n     - Type\n     - Necessity\n     - Description\n     - Default\n\n   * - ``type``\n     - string\n     - Required\n     - Human-readable label that identifies the field type.\n       Value must be ``embeddedDocuments``.\n     - \n\n   * - ``dynamic``\n     - boolean\n     - Optional\n     - Flag that specifies whether to index every dynamically indexable \n       field in the document. Value can be one of \n       the following: \n\n       - ``true`` - index all indexable fields.\n       - ``false`` - don't index all the indexable fields.\n\n     - ``false``\n\n   * - ``fields``\n     - document\n     - Optional\n     - Fields to index. \n     \n       If ``dynamic`` is ``true``, |fts| indexes all indexable fields.\n       \n       If ``dynamic`` is ``false``, you can specify the fields to index \n       in the field definition for ``fields``.\n\n       |fts| doesn't support indexing facet fields as part of an \n       ``embeddedDocuments`` field.\n\n     - ``{}``\n\n.. _fts-embedded-document-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst\n\n.. tabs:: \n\n   .. tab:: Index All Fields\n      :tabid: include \n\n      The following index definition indexes the array of objects in\n      the ``items`` field. It also configures |fts| to automatically \n      index all dynamically indexable fields inside the objects in\n      the ``items`` array.  \n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`items` from the :guilabel:`Field Name`\n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`EmbeddedDocuments`.  \n            #. Toggle :guilabel:`Enable Dynamic Mapping` to enable\n               dynamic mapping, if needed.\n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following \n            index definition.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/embedded-documents-type.txt"
  },
  {
    "code": "               :copyable: true \n               :linenos:\n\n               {\n                 \"mappings\": {\n                   \"fields\": {\n                     \"items\": {\n                       \"type\": \"embeddedDocuments\",\n                       \"dynamic\": true\n                     }\n                   }\n                 }\n               }\n\n      .. note:: \n\n         To index all fields in an embedded document including fields that\n         |fts| doesn't dynamically index, define the fields in the index\n         definition. For string faceting, |fts| counts string facets once\n         for each document in the result set. \n            \n         For example, the following index definition configures |fts| to\n         automatically index all dynamically indexable fields inside the\n         objects in the ``items`` array. It also configures the\n         ``purchaseMethod`` field inside the array of objects to be\n         indexed as :ref:`stringFacet <bson-data-types-string-facet>`,\n         which |fts| doesn't dynamically index, to support |fts|\n         :ref:`fts-facet-ref` queries against that field: \n\n         .. tabs:: \n            :hidden:\n\n            .. tab:: Visual Editor \n               :tabid: vib \n\n               Click :guilabel:`Add Field` in the :guilabel:`Field\n               Mappings` section and add the following fields by\n               clicking :guilabel:`Add` after configuring the\n               settings for each field in the :guilabel:`Add\n               Field Mapping` window. \n                     \n               .. list-table:: \n                  :header-rows: 1\n\n                  * - :guilabel:`Field Name`\n                    - :guilabel:`Data Type`\n                           \n                  * - ``items``\n                    - Click the dropdown and select ``EmbeddedDocuments``. \n  \n                  * - ``purchaseMethod``\n                    - Click the dropdown and select ``StringFacet``. \n\n            .. tab:: JSON Editor \n               :tabid: jsonib \n  \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/embedded-documents-type.txt"
  },
  {
    "code": "                  :copyable: true \n                  :linenos:\n   \n                  {\n                    \"mappings\": {\n                      \"dynamic\": true,\n                      \"fields\": {\n                        \"items\": {\n                          \"dynamic\": true,\n                          \"type\": \"embeddedDocuments\"\n                        },\n                        \"purchaseMethod\": {\n                          \"type\": \"stringFacet\"\n                        }\n                      }\n                    }\n                  }\n\n   .. tab:: Index Specified Fields Only\n      :tabid: exclude \n\n      The following index definition configures |fts| to index only the\n      ``name`` and ``tags`` fields as the |fts| ``string`` type in the\n      ``items`` array of objects.  \n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            2. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`items` from the :guilabel:`Field Name` dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`EmbeddedDocuments`.  \n            #. Disable :guilabel:`Enable Dynamic Mapping`.\n            #. Click :guilabel:`Add`.\n            #. Click :guilabel:`Add Embedded Field` for the\n               :guilabel:`items` field in the :guilabel:`Field Mappings`\n               table and add the following fields by clicking\n               :guilabel:`Add` after configuring the settings for each\n               field in the :guilabel:`Add Embedded Field Mapping` window. \n\n               .. list-table:: \n                  :header-rows: 1\n\n                  * - :guilabel:`Field Name`\n                    - :guilabel:`Data Type`\n\n                  * - :guilabel:`items.name`\n                    - Click the :guilabel:`Data Type` dropdown and select\n                      :guilabel:`String`. \n\n                  * - :guilabel:`items.tags`\n                    - Click the :guilabel:`Data Type` dropdown and select\n                      :guilabel:`String`. \n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following\n            index definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/embedded-documents-type.txt"
  },
  {
    "code": "               :copyable: true \n               :linenos:\n\n               {\n                 \"mappings\": {\n                   \"fields\": {\n                     \"items\": {\n                       \"type\": \"embeddedDocuments\",\n                       \"dynamic\": false,\n                       \"fields\": {\n                         \"name\": {\n                           \"type\": \"string\"\n                         },\n                         \"tags\": {\n                           \"type\": \"string\"\n                         }\n                       }\n                     }\n                   }\n                 }\n               }\n\n.. seealso:: Additional Index Definition Examples\n\n   - :ref:`embeddedDocument Operator <embedded-document-query-examples>`\n   - :ref:`embeddedDocument Tutorial <embedded-documents-tutorial>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/embedded-documents-type.txt"
  },
  {
    "code": "         :emphasize-lines: 6-7\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"indexShapes\": true|false,\n                 \"type\": \"geo\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-geo-options:\n\nConfigure |fts-field-type| Field Properties \n-------------------------------------------\n\nThe |fts| ``geo`` type takes the following parameters:\n\n.. list-table::\n   :widths: 15 10 10 55 10\n   :header-rows: 1\n\n   * - Option\n     - Type \n     - Necessity\n     - Description\n     - Default\n\n   * - ``type``\n     - string \n     - Required\n     - Human-readable label that identifies this field type.\n       UI value must be ``Geo`` and |json| value must be ``geo``. \n     - \n\n   * - ``indexShapes`` \n     - boolean \n     - Optional\n     - Flag that indicates whether to index shapes. By default, |fts|: \n\n       - Indexes points, even when nested.\n       - Doesn't index shape geometries such as lines and polygons.\n\n       Value can be: \n\n       - ``true`` to index shapes and points \n       - ``false`` to index only points\n\n     - ``false``\n\n.. _fts-field-types-geo-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst\n\nThe following index definition indexes the ``address.location`` field as\nthe ``geo`` type to support queries against that field using the |fts|\n:ref:`geoshape-ref` and :ref:`geowithin-ref` operators. \n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib\n\n      1. In the :guilabel:`Add Field Mapping` window, select\n         :guilabel:`address.location` from the :guilabel:`Field Name`\n         dropdown. \n      #. Click the :guilabel:`Data Type` dropdown and select\n         :guilabel:`Geo`.\n      #. Modify the :guilabel:`Geo Properties` to set the value for \n         :guilabel:`Index Shapes` to ``true``.\n      #. Click :guilabel:`Add`. \n\n   .. tab:: JSON Editor \n      :tabid: jsonib\n\n      Replace the default index definition with the following index\n      definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/geo-type.txt"
  },
  {
    "code": "         :linenos:\n\n         {\n           \"mappings\": {\n             \"fields\": {\n               \"address\": {\n                 \"type\": \"document\",\n                 \"fields\": {\n                   \"location\": {\n                     \"indexShapes\": true,\n                     \"type\": \"geo\"\n                   }\n                 }\n               }\n             }\n           }\n         }\n\n.. seealso:: Additional Index Definition Examples\n\n   - :ref:`geoShape Operator <geoshape-egs>`\n   - :ref:`geoWithin Operator <geowithin-egs>`\n   - :ref:`geo Tutorial <run-geo-search-tutorial>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/geo-type.txt"
  },
  {
    "code": "   :copyable: true \n   :linenos:\n   :emphasize-lines: 7-9\n\n   {\n     \"mappings\": {\n       \"name\": \"<index-name>\",\n       \"dynamic\": true|false,\n       \"fields\": {\n         \"<field-name>\": {\n           \"type\": \"knnVector\",\n           \"dimensions\": <number-of-dimensions>,\n           \"similarity\": \"euclidean | cosine | dotProduct\"\n         }\n       }\n     }\n   }\n\n.. _fts-knn-vector-type-options:\n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe ``knnVector`` type has the following options:\n\n.. list-table::\n   :widths: 25 10 15 50\n   :header-rows: 1\n\n   * - Option\n     - Type \n     - Necessity\n     - Purpose\n\n   * - ``type``\n     - string\n     - Required\n     - Human-readable label that identifies this field type. Value must \n       be ``knnVector``.\n\n   * - ``dimensions``\n     - int\n     - Required\n     - Number of vector dimensions, which |fts| enforces at index- and \n       query-time. This value can't be greater than ``4096``.\n\n   * - ``similarity``\n     - string\n     - Required\n     - Vector similarity function to use to search for top K-nearest \n       neighbors. Value can be one of the following:\n\n       - ``euclidean`` - measures the distance between ends of vectors. \n         This allows you to measure similarity based on varying \n         dimensions. To learn more, see :wikipedia:`Euclidean \n         <Euclidean_distance>`.\n       - ``cosine`` - measures similarity based on the angle between \n         vectors. This allows you to measure similarity that isn't \n         scaled by magnitude. You can't use zero magnitude vectors with \n         ``cosine``. To measure cosine similarity, we recommend that \n         you normalize your vectors and use ``dotProduct`` instead. To \n         learn more, see :wikipedia:`Cosine <Cosine_similarity>`.\n       - ``dotProduct`` - measures similarity like ``cosine``, but takes \n         into account the magnitude of the vector. This allows you to \n         efficiently measure similarity based on both angle and \n         magnitude. To learn more, \n         see :wikipedia:`Dot Product <Dot_product>`.\n         \n         If you normalize the magnitude, ``cosine`` and \n         ``dotProduct`` are almost identical in measuring similarity. \n\n.. _knn-vector-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\nThe following index definition for the ``sample_mflix.embedded_movies`` \ncollection dynamically indexes all the dynamically indexable fields \nin the collection and statically indexes ``plot_embedding`` field as \nthe ``knnVector`` type. The ``plot_embedding`` field contains embeddings\ncreated using OpenAI's ``text-embedding-ada-002`` embeddings model. The\nindex definition specifies ``1536`` vector dimensions and measures\nsimilarity using ``euclidean``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/knn-vector.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"mappings\": {\n       \"dynamic\": true,\n       \"fields\": {\n         \"plot_embedding\": {\n           \"type\": \"knnVector\",\n           \"dimensions\": 1536,\n           \"similarity\": \"euclidean\"\n         }\n       }\n     }\n   }\n\nIf you load the :ref:`sample data <mflix-embedded_movies>` on your \ncluster and create the preceding |fts| index for this collection, \nyou can run :pipeline:`$vectorSearch` queries against this collection.\nTo learn more about the sample queries that you can run, see \n:ref:`$vectorSearch Examples <vectorSearch-agg-pipeline-egs>`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/knn-vector.txt"
  },
  {
    "code": "         :emphasize-lines: 6-9\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"numberFacet\",\n                 \"representation\": \"int64|double\",\n                 \"indexIntegers\": true|false,\n                 \"indexDoubles\": true|false \n               }\n             }\n           }\n         }\n\n.. _fts-field-types-number-facet-options:\n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe |fts| ``numberFacet`` type takes the following parameters: \n\n.. list-table::\n   :widths: 20 10 10 50 10\n   :header-rows: 1\n\n   * - Option\n     - Type \n     - Necessity\n     - Description\n     - Default\n\n   * - ``type``\n     - string \n     - Required\n     - The type of field. Value must be ``numberFacet``.\n     - \n\n   * - ``representation``\n     - string \n     - Optional\n     - The data type of the field to index. Values can be one of the \n       following |bson| types:\n\n       - ``int64`` - for indexing large integers without loss of \n         precision and for rounding double values to integers. You \n         can't use this type to index large double values.\n       - ``double`` - for indexing large double values without rounding.\n\n       To learn more, see :ref:`example <number-facet-egs>` below.\n\n     - ``double``\n\n   * - ``indexIntegers``\n     - boolean \n     - Optional\n     - Indicates whether to index or omit indexing ``int32`` and \n       ``int64`` type values. Value can be ``true`` or ``false``.\n       Either this or ``indexDoubles`` must be ``true``.\n\n     - ``true``\n\n   * - ``indexDoubles``\n     - boolean \n     - Optional\n     - Indicates whether to index or omit indexing ``double`` type \n       values. Value can be ``true`` or ``false``. Either this or \n       ``indexIntegers`` must be ``true``.\n\n     - ``true``\n\n.. _number-facet-egs:\n\nTry an Example for the |fts-field-type| Type \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n.. tabs::  \n\n   .. tab:: Basic Example\n      :tabid: basic\n\n      The following example index definition indexes the  ``year`` field\n      as the |fts| ``numberFacet`` type to supports queries against \n      that field using |fts| :ref:`fts-facet-ref`.  \n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`year` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`NumberFacet`.\n            #. Accept the default values for the :guilabel:`NumberFacet\n               Properties`. \n            #. Click :guilabel:`Add`. \n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/number-facet-type.txt"
  },
  {
    "code": "         :emphasize-lines: 6-9\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"number\",\n                 \"representation\": \"int64|double\",\n                 \"indexIntegers\": true|false,\n                 \"indexDoubles\": true|false   \n               }\n             }\n           }\n         }\n\n.. _fts-field-types-number-options:\n\nConfigure |fts-field-type| Field Properties \n-------------------------------------------\n\nThe |fts| ``number`` type has the following parameters: \n\n.. list-table::\n   :widths: 15 15 10 10 40 10\n   :header-rows: 1\n\n   * - UI Field Name \n     - JSON Option\n     - Type \n     - Necessity\n     - Description\n     - Default\n\n   * - :guilabel:`Data Type`\n     - ``type``\n     - string \n     - Required\n     - Human-readable label that identifies this field type.\n       Value must be ``number``.\n     - \n\n   * - :guilabel:`Representation` \n     - ``representation``\n     - string \n     - Optional\n     - Data type of the field to index. Values are:\n\n       - ``int64`` - for indexing large integers without loss of \n         precision and for rounding double values to integers. You \n         can't use this type to index large double values.\n       - ``double`` - for indexing large double values without rounding.\n\n       To learn more, see :ref:`example <number-egs>` below.\n\n     - ``double``\n\n   * - :guilabel:`Index Integers` \n     -  ``indexIntegers``\n     - boolean \n     - Optional\n     - Flag that indicates whether to index or omit indexing ``int32`` \n       and ``int64`` type values. Value can be ``true`` or ``false``. \n       Either this or ``indexDoubles`` must be ``true``.\n       To learn more, see :ref:`example <number-egs>` below.\n\n     - ``true``\n\n   * - :guilabel:`Index Doubles` \n     -  ``indexDoubles``\n     - boolean \n     - Optional\n     - Flag that indicates whether to index or omit indexing ``double``\n       type values. Value can be ``true`` or ``false``. \n       Either this or ``indexIntegers`` must be ``true``.\n       To learn more, see :ref:`example <number-egs>` below.\n\n     - ``true``\n\n.. _number-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\nThe following index definition examples use multiple collections in the\n:ref:`sample data <sample-data>`. If you have the :ref:`sample data\n<sample-data>` already loaded on your {+cluster+}, you can use the\nVisual Editor and |json| Editor to configure these indexes.\nAfter you select your preferred configuration method, select the\ndatabase and collection, and refine your index to add field mappings.  \n\n.. tabs:: \n  \n   .. tab:: Representation Example\n      :tabid: representation\n\n      The following index definition for the \n      ``sample_analytics.accounts`` collection in the :ref:`sample \n      dataset <available-sample-datasets>` indexes the \n      ``account_id`` field with 64-bit integer values. The \n      following example also: \n    \n      - Indexes all other integer values in the ``account_id`` field.\n      - Rounds any decimal values and indexes small double type \n        values in the ``account_id`` field.\n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`account_id` from the :guilabel:`Field\n               Name` dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Number`.\n            #. Modify the :guilabel:`Number Properties` to set the\n               following: \n               \n               - :guilabel:`Representation` to ``int64``.\n               - :guilabel:`Index Integers` to ``true``.\n               - :guilabel:`Index Doubles` to ``true``.\n            \n            #. Click :guilabel:`Add`. \n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following\n            index definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/number-type.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"account_id\": {\n                       \"type\": \"number\",\n                       \"representation\": \"int64\"\n                     }\n                   }\n                 }\n               }\n\n   .. tab:: Index Integers Example\n      :tabid: indexints \n\n      The following index definition for the\n      ``sample_analytics.accounts`` collection in the  \n      :ref:`sample dataset <available-sample-datasets>` indexes integer \n      values and omits doubles values in the the ``account_id``.\n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            a. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`account_id` from the :guilabel:`Field\n               Name` dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Number`.\n            #. Modify the :guilabel:`Number Properties` to set the\n               following: \n\n               - :guilabel:`Representation` to ``int64``.\n               - :guilabel:`Index Integers` to ``true``.\n               - :guilabel:`Index Doubles` to ``false``.\n            \n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following\n            index definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/number-type.txt"
  },
  {
    "code": "               :copyable: false\n   \n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"account_id\": {\n                       \"type\": \"number\",\n                       \"representation\": \"int64\",\n                       \"indexDoubles\": false\n                     }\n                   }\n                 }\n               } \n\n   .. tab:: Index Doubles Example\n      :tabid: indexdoubles\n\n      The following index definition for the\n      ``sample_airbnb.listingsAndReviews`` collection in the  \n      :ref:`sample dataset <available-sample-datasets>` indexes\n      ``double`` type values and omits the 32-bit and 64-bit integer\n      values in the ``bathrooms`` field.   \n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            a. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`bathrooms` from the :guilabel:`Field\n               Name` dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Number`.\n            #. Modify the :guilabel:`Number Properties` to set the\n               following: \n\n               - :guilabel:`Representation` to ``doubles``.\n               - :guilabel:`Index Integers` to ``false``.\n               - :guilabel:`Index Doubles` to ``true``.\n            \n            #. Click :guilabel:`Add`. \n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following\n            index definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/number-type.txt"
  },
  {
    "code": "               :copyable: false\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"bathrooms\": {\n                       \"type\": \"number\",\n                       \"indexIntegers\": false\n                     }\n                   }\n                 }\n               }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/number-type.txt"
  },
  {
    "code": "         :emphasize-lines: 5-7\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"objectId\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-objectid-options:\n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe |fts| ``objectId`` type takes the following option:  \n\n.. list-table::\n   :widths: 10 18 9 8 44\n   :header-rows: 1\n\n   * - UI Field Name \n     - JSON Option\n     - Type\n     - Necessity\n     - Description\n\n   * - :guilabel:`Data Type`\n     - ``type``\n     - string \n     - required\n     - Human-readable label that identifies this field type. Value must\n       be ``objectId``. \n\n.. _fts-field-types-objectid-example:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\nThe following example index definition indexes the  ``movie_id`` field\nas the ``objectId`` data type to support queries against that field\nusing the |fts| :ref:`equals-ref` operator.\n\n.. tabs::\n\n   .. tab:: Visual Editor \n      :tabid: vib\n\n      1. In the :guilabel:`Add Field Mapping` window, select\n         :guilabel:`movie_id` from the :guilabel:`Field Name` \n         dropdown. \n      #. Click the :guilabel:`Data Type` dropdown and select\n         :guilabel:`ObjectId`.\n      #. Click :guilabel:`Add`. \n\n   .. tab:: JSON Editor \n      :tabid: jsonib\n\n      Replace the default index definition with the following index\n      definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/object-id-type.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": false,\n             \"fields\": {\n               \"movie_id\": {\n                \"type\": \"objectId\"\n               }\n             }\n           }\n         }\n\n.. seealso:: Additional Index Definition Examples\n   \n   - :ref:`equals Operator <equals-query-examples>` \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/object-id-type.txt"
  },
  {
    "code": "         :emphasize-lines: 6\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"stringFacet\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-string-facet-options:\n\nConfigure Properties for the |fts-field-type| Type  \n--------------------------------------------------\n\nThe |fts| ``stringFacet`` type has the following parameters:\n\n.. list-table::\n   :widths: 15 15 10 10 50 \n   :header-rows: 1\n\n   * - UI Field Name \n     - JSON Option\n     - Type\n     - Necessity\n     - Description\n\n   * - :guilabel:`Data Type`\n     - ``type``\n     - string\n     - Required\n     - Human-readable label that identifies this field type.\n       Value must be ``stringFacet``. |fts| truncates |bson| ``string``\n       values indexed as the ``stringFacet`` type to around ``8000``\n       :abbr:`UTF-16 (16-bit Unicode Transformation Format)` code units. \n\n.. _string-facet-egs:\n\nTry an Example for the |fts-field-type| Type \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n.. tabs:: \n\n   .. tab:: stringFacet Type Example\n      :tabid: sfeg1\n\n      The following index definition for the ``sample_mflix.movies`` \n      collection in the :ref:`sample dataset \n      <available-sample-datasets>` indexes the ``genres`` field as \n      ``stringFacet`` for faceting.\n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            a. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`genres` from the :guilabel:`Field\n               Name` dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`StringFacet`.\n            #. Click :guilabel:`Add`. \n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/string-facet-type.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"genres\": {\n                       \"type\": \"stringFacet\"\n                     }\n                   }\n                 }\n               }\n\n   .. tab:: Multiple Types Example\n      :tabid: sfeg2\n\n      The following index definition for the ``sample_mflix.movies`` \n      collection in the :ref:`sample dataset \n      <available-sample-datasets>` indexes the ``genres`` field as \n      ``stringFacet`` and ``string`` types to return the following\n      types of results for your queries:  \n      \n      - Metadata results for queries using |fts| :ref:`fts-facet-ref`.\n      - Search results for queries using |fts| operators like\n        :ref:`text-ref`, :ref:`phrase-ref`, and other operators that\n        perform text search. \n\n      .. tabs:: \n\n         .. tab:: Visual Editor \n            :tabid: vib \n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`genres` from the :guilabel:`Field\n               Name` dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`StringFacet`.\n            #. Click :guilabel:`Add`. \n            #. Repeat step **1** and select :guilabel:`String` from the\n               :guilabel:`Data Type` dropdown.\n            #. Review the default setting for :guilabel:`String\n               Properties` and click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/string-facet-type.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                  \"mappings\": {\n                     \"dynamic\": false,\n                     \"fields\": {\n                        \"genres\": [\n                           {\n                              \"type\": \"stringFacet\"\n                           },\n                           {\n                              \"type\": \"string\"\n                           }\n                        ]\n                     }\n                  }\n               }\n\n.. seealso:: Additional Index Definition Examples\n   \n   - :ref:`facet Collector <fts-facet-egs>`\n   - :ref:`facet Tutorial <facet-tutorial>`\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/string-facet-type.txt"
  },
  {
    "code": "         :emphasize-lines: 6-13\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"string\",\n                 \"analyzer\": \"<atlas-search-analyzer>\",\n                 \"searchAnalyzer\": \"<atlas-search-analyzer>\",\n                 \"indexOptions\": \"docs|freqs|positions|offsets\",\n                 \"store\": true|false,\n                 \"ignoreAbove\": <integer>,\n                 \"multi\": {<string-field-definition>},\n                 \"norms\": \"include|omit\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-string-options:\n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe |fts| ``string`` type takes the following parameters:\n\n.. list-table::\n   :widths: 20 10 10 40 20\n   :header-rows: 1\n\n   * - Option\n     - Type\n     - Necessity\n     - Description\n     - Default\n\n   * - ``type``\n     - string\n     - Required\n     - Human-readable label that identifies this field type.\n       Value must be ``string``.\n     - \n\n   * - ``analyzer``\n     - string\n     - Optional\n     - Name of a built-in or custom :ref:`analyzer \n       <analyzers-ref>` to use for indexing the field. If you don't\n       specify a value, inherits an analyzer by default in the following\n       order:  \n       \n       a. The ``analyzer`` option for the :ref:`index\n          <ref-index-definitions>` if specified. \n       b. The ``lucene.standard`` analyzer.\n\n     - \n\n   * - ``searchAnalyzer``\n     - string\n     - Optional\n     - Analyzer to use when querying the field. If you don't specify a\n       value, inherits an analyzer by default in the following order: \n       \n       a. The ``analyzer`` option for this field if specified.\n       b. The ``searchAnalyzer`` option for the :ref:`index\n          <ref-index-definitions>` if specified. \n       c. The ``analyzer`` option for the :ref:`index\n          <ref-index-definitions>` if specified. \n       d. The ``lucene.standard`` analyzer.\n\n     - \n\n   * - ``indexOptions``\n     - string\n     - Optional \n     - Amount of information to store for the indexed \n       field. Value can be one of the following:\n\n       - ``docs`` - Only indexes documents. The frequency and position \n         of the indexed term are ignored. Only a single occurence of \n         the term is reflected in the :ref:`score <scoring-ref>`.\n       - ``freqs`` - Only indexes documents and term frequency. The \n         position of the indexed term is ignored. \n       - ``positions`` - Indexes documents, term frequency, and term \n         positions. \n       - ``offsets`` - (Default) Indexes documents, term frequency, \n         term positions, and term offsets. This option is required for \n         :ref:`highlight <highlight-ref>`.\n\n     - ``offsets``\n\n   * - ``store``\n     - boolean\n     - Optional\n     - Flag that indicates whether to store the exact document text as \n       well as the analyzed values in the index. Value can be ``true`` \n       or ``false``. The value for this option must be ``true`` for \n       :ref:`highlight <highlight-ref>`.\n\n       To reduce the index size and performance footprint, we recommend setting ``store`` to ``false``\\. \n       To learn more, see :ref:`index-perf`.\n\n     - ``true``\n\n   * - ``ignoreAbove``\n     - int\n     - Optional\n     - Maximum number of characters in the value of the field to \n       index. |fts| doesn't index if the field value is greater than \n       the specified number of characters.\n     - \n\n   * - ``multi``\n     - String Field Definition\n     - Optional \n     - String field to index with the name of the alternate \n       analyzer specified in the ``multi`` object. To learn more about \n       specifying the ``multi`` object, see :ref:`ref-multi-analyzers` \n       and :ref:`example <fts-field-types-string-egs>` below.\n\n     - \n\n   * - ``norms``\n     - string\n     - Optional\n     - String that specifies whether to include or omit the field length in \n       the result when scoring. The length of the field is determined \n       by the number of tokens produced by the analyzer for the field. \n       Value can be one of the following: \n \n       - ``include`` - to include the field length when scoring.\n       - ``omit`` - to omit the field length when scoring.\n      \n       If value is ``include``, |fts| uses the length of the field to \n       determine the higher score when scoring. For example, if two \n       documents match an |fts| query, the document with the shorter \n       field length scores higher than the document with the longer \n       field length.\n\n       If value is ``omit``, |fts| ignores the field length when \n       scoring. \n\n     - ``include``\n\n.. _fts-field-types-string-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n.. tabs::  \n\n   .. tab:: Basic Example \n      :tabid: basic \n\n      The following index definition indexes string values in the  \n      ``title`` field as |fts| ``string`` type:\n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            a. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`title` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`String`.   \n            #. Review the default settings for the :guilabel:`String\n               Properties`. \n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/string-type.txt"
  },
  {
    "code": "               :emphasize-lines: 6\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"title\": {\n                       \"type\": \"string\"\n                     }\n                   }\n                 }\n               }\n\n   .. tab:: Multi Example\n      :tabid: multi\n\n      The following index definition indexes string values in the  \n      ``fullplot`` field with the ``lucene.english`` and ``lucene.french`` \n      analyzers in addition to the default ``lucene.standard`` analyzer:\n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            a. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`fullplot` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`String`.   \n            #. Review the default settings for the :guilabel:`String\n               Properties`. \n            #. Click :guilabel:`Add Multi Field`, enter ``english`` in\n               the :guilabel:`Multi Field Name` field, and configure the\n               following :guilabel:`Multi Field Properties`:\n\n               .. list-table::\n                  :stub-columns: 1\n\n                  * - Index Analyzer \n                    - Select ``lucene.english`` under\n                      ``lucene.language``. \n\n                  * - Search Analyzer \n                    - Select ``lucene.english`` under\n                      ``lucene.language``.\n\n            #. Click :guilabel:`Add Another Multi Field`, enter\n               ``french`` in the :guilabel:`Multi Field Name` field, and\n               configure the following :guilabel:`Multi Field Properties`:\n\n               .. list-table::\n                  :stub-columns: 1\n\n                  * - Index Analyzer \n                    - Select ``lucene.french`` under\n                      ``lucene.language``. \n\n                  * - Search Analyzer \n                    - Select ``lucene.french`` under\n                      ``lucene. language``.\n\n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/string-type.txt"
  },
  {
    "code": "               :emphasize-lines: 6-11\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"fullplot\": {\n                       \"type\": \"string\",\n                       \"multi\": {\n                         \"english\": {\n                           \"type\": \"string\",\n                           \"analyzer\": \"lucene.english\"\n                         },\n                         \"french\": {\n                           \"type\": \"string\",\n                           \"analyzer\": \"lucene.french\"\n                         }\n                       }\n                     }\n                   }\n                 }\n               }\n\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/string-type.txt"
  },
  {
    "code": "         :emphasize-lines: 6-7\n\n         {\n           \"mappings\": {\n             \"dynamic\": true|false,\n             \"fields\": {\n               \"<field-name>\": {\n                 \"type\": \"token\",\n                 \"normalizer\": \"lowercase | none\"\n               }\n             }\n           }\n         }\n\n.. _fts-field-types-token-options: \n\nConfigure |fts-field-type| Field Properties  \n-------------------------------------------\n\nThe |fts| |fts-field-type| type takes the following parameters:\n\n.. list-table::\n   :widths: 20 10 10 40 20\n   :header-rows: 1\n\n   * - Option\n     - Type\n     - Necessity\n     - Description\n     - Default\n\n   * - ``type``\n     - string\n     - Required\n     - Human-readable label that identifies this field type.\n       Value must be ``token``.\n     - \n\n   * - ``normalizer``\n     - string\n     - Optional\n     - Type of transformation to perform on the field value. Value can\n       be one of the following:  \n       \n       - ``lowercase`` - to transform text values in string fields to\n         lowercase. \n       - ``none`` - to not perform any transformation.\n\n       If you don't set this option explicitly, it defaults to ``none``. \n\n     - ``none``\n\n.. _fts-field-types-string-egs:\n\nTry an Example for the |fts-field-type| Type  \n--------------------------------------------\n\n.. include:: /includes/extracts/fts-index-definition-egs-intro.rst \n\n.. tabs::  \n\n   .. tab:: Index as token Type Only  \n      :tabid: basic \n\n      The following index definition indexes string values in the  \n      ``title`` field as |fts| |fts-field-type| type and converts the\n      field value to ``lowercase``, which allows you to do the\n      following: \n      \n      - Perform case-insensitive sort, as specified by the\n        ``normalizer``, on the ``title`` field.\n      - Run exact match queries on the ``title`` field using the\n        following operators:  \n\n        - :ref:`equals <equals-ref>`\n        - :ref:`in <in-ref>`\n        - :ref:`range <range-ref>`\n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            a. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`title` from the :guilabel:`Field Name` \n               dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Token`.   \n            #. Expand :guilabel:`Token Properties` and select\n               ``lowercase`` from the :guilabel:`Normalizer` dropdown.  \n            #. Click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/token-type.txt"
  },
  {
    "code": "               :emphasize-lines: 6\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"title\": {\n                       \"type\": \"token\",\n                       \"normalizer\": \"lowercase\"\n                     }\n                   }\n                 }\n               }\n\n   .. tab:: Index as Multiple Types\n      :tabid: multi\n\n      The following index definition indexes the ``genres`` field as  \n      ``string`` and ``token`` types to return the following: \n      \n      - Search results for queries using |fts| operators like\n        :ref:`text-ref`, :ref:`phrase-ref`, and other operators that\n        perform text search on the ``genres`` field. \n      - Sorted results for queries using the :pipeline:`$search`\n        :ref:`sort <sort-ref>` option on the ``genres`` field.\n      - Exact matches for queries using |fts| operators like\n        :ref:`equals-ref`, :ref:`in-ref`, and :ref:`range-ref`.  \n\n      .. tabs::\n\n         .. tab:: Visual Editor \n            :tabid: vib\n\n            1. In the :guilabel:`Add Field Mapping` window, select\n               :guilabel:`genres` from the :guilabel:`Field\n               Name` dropdown. \n            #. Click the :guilabel:`Data Type` dropdown and select\n               :guilabel:`Token`.\n            #. Click :guilabel:`Add`. \n            #. Repeat step **1** and select :guilabel:`String` from the\n               :guilabel:`Data Type` dropdown.\n            #. Review the default setting for :guilabel:`String\n               Properties` and click :guilabel:`Add`.\n\n         .. tab:: JSON Editor \n            :tabid: jsonib\n\n            Replace the default index definition with the following index\n            definition.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/token-type.txt"
  },
  {
    "code": "               :copyable: true\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"genres\": [{\n                       \"type\": \"string\"\n                     },\n                     {\n                       \"type\": \"token\"\n                     }]\n                   }\n                 }\n               }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/field-types/token-type.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n       \"$search\": {\n          \"index\": <index name>, // optional, defaults to \"default\"\n          \"geoShape\": {\n             \"path\": \"<field-to-search>\",\n             \"relation\": \"contains | disjoint | intersects | within\",\n             \"geometry\": <GeoJSON-object>,\n             \"score\": <score-options>\n          }\n       }\n   }\n\n.. _geoshape-options:\n\nOptions\n-------\n\n``geoShape`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``geometry``\n     - GeoJSON object\n     - :manual:`GeoJSON </reference/geojson/>` object that specifies\n       the :ref:`Polygon <geojson-polygon>`,\n       :ref:`MultiPolygon <geojson-multipolygon>`, or\n       :ref:`LineString <geojson-linestring>` shape or\n       point to search. The polygon must be specified as a closed loop\n       where the last position is the same as the first position.\n\n       .. include:: /includes/fact-fts-geo-intersection.rst\n         \n     - yes\n\n   * - ``path``\n     - string or array of strings\n     - Indexed :ref:`geo <bson-data-types-geo>` type field or\n       fields to search. See :ref:`Path Construction <ref-path>` for\n       more information.\n     - yes\n\n   * - ``relation``\n     - enum\n     - Relation of the query shape geometry to the indexed field\n       geometry. Value can be one of the following:\n\n       - ``contains`` - Indicates that the indexed geometry contains\n         the query geometry.\n       - ``disjoint`` - Indicates that both the query and indexed\n         geometries have nothing in common.\n       - ``intersects`` - Indicates that both the query and indexed\n         geometries intersect.\n       - ``within`` - Indicates that the indexed geometry is within the\n         query geometry. You can't use ``within`` with ``LineString`` or\n         ``Point``.\n\n     - yes\n\n   * - ``score``\n     - object\n     - Score to assign to matching search results. By default, the\n       :ref:`score <scoring-ref>` in the results is ``1``. You\n       can modify the score using the following options:\n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score with the given expression.\n\n       For information on using ``score`` in your query, see\n       :ref:`scoring-ref`.\n     - no\n\n.. _geoshape-egs:\n\nExamples\n--------\n\nThe following examples use the ``listingsAndReviews`` collection in the\n``sample_airbnb`` database. If you have the :ref:`sample dataset\n<available-sample-datasets>` on your cluster, you can create a custom\n|fts| index for :ref:`geo <bson-data-types-geo>` type and run the\nexample queries on your cluster. \n\n.. include:: /includes/admonitions/get-started-atlas-search.rst\n\nThe following is a sample index definition for\nindexing the ``address.location`` field in the ``listingsAndReviews``\ncollection:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"mappings\": {\n       \"fields\": {\n         \"address\": {\n           \"fields\": {\n             \"location\": {\n               \"indexShapes\": true,\n               \"type\": \"geo\"\n             }\n           },\n           \"type\": \"document\"\n         }\n       }\n     }\n   }\n\nThe :ref:`fts-tutorial-ref` contains instructions for loading the\n:ref:`sample dataset <available-sample-datasets>`, creating an\n:ref:`index definition <ref-index-definitions>`, and running |fts|\nqueries.\n\n.. note::\n\n   For the following sample queries, make sure that ``indexShapes`` in\n   the index definition is set to ``true``.\n\nDisjoint Example\n~~~~~~~~~~~~~~~~\n\nThe following example uses the ``geoShape`` operator to search for\nproperties that have nothing in common with the specified longitude and\nlatitude coordinates in Hawaii. \n\nThe query includes a:\n\n- :pipeline:`$limit` stage to limit the output to ``3`` results.\n- :pipeline:`$project` stage\n  to exclude all fields except ``name`` and ``address``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n\n   db.listingsAndReviews.aggregate([\n     {\n       \"$search\": {\n         \"geoShape\": {\n           \"relation\": \"disjoint\",\n           \"geometry\": {\n             \"type\": \"Polygon\",\n             \"coordinates\": [[[-161.323242,22.512557],\n                            [-152.446289,22.065278],\n                            [-156.09375,17.811456],\n                            [-161.323242,22.512557]]]\n           },\n           \"path\": \"address.location\"\n         }\n       }\n     },\n     {\n       $limit: 3\n     },\n     {\n       $project: {\n         \"_id\": 0,\n         \"name\": 1,\n         \"address\": 1,\n         score: { $meta: \"searchScore\" }\n       }\n     }\n   ])\n\nThe query returns the following search results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n   :copyable: false\n\n   {\n     \"name\" : \"Ribeira Charming Duplex\",\n     \"address\" : {\n       \"street\" : \"Porto, Porto, Portugal\",\n       \"suburb\" : \"\",\n       \"government_area\" : \"Cedofeita, Ildefonso, Sé, Miragaia, Nicolau, Vitória\",\n       \"market\" : \"Porto\",\n       \"country\" : \"Portugal\",\n       \"country_code\" : \"PT\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ -8.61308, 41.1413 ],\n         \"is_location_exact\" : false\n       }\n     }\n   }\n   {\n     \"name\" : \"Horto flat with small garden\",\n     \"address\" : {\n       \"street\" : \"Rio de Janeiro, Rio de Janeiro, Brazil\",\n       \"suburb\" : \"Jardim Botânico\",\n       \"government_area\" : \"Jardim Botânico\",\n       \"market\" : \"Rio De Janeiro\",\n       \"country\" : \"Brazil\",\n       \"country_code\" : \"BR\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ -43.23074991429229, -22.966253551739655 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n   {\n     \"name\" : \"Private Room in Bushwick\",\n     \"address\" : {\n       \"street\" : \"Brooklyn, NY, United States\",\n       \"suburb\" : \"Brooklyn\",\n       \"government_area\" : \"Bushwick\",\n       \"market\" : \"New York\",\n       \"country\" : \"United States\",\n       \"country_code\" : \"US\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ -73.93615, 40.69791 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n\nIntersects Example\n~~~~~~~~~~~~~~~~~~\n\nThe following example uses the ``geoShape`` operator to search for\nproperties that intersect with the specified longitude and latitude\ncoordinates in Spain. \n\nThe query includes a:\n\n- :pipeline:`$limit` stage to limit the output to ``3`` results.\n- :pipeline:`$project` stage to\n  exclude all fields except ``name`` and ``address``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n\n   db.listingsAndReviews.aggregate([\n     {\n       \"$search\": {\n         \"geoShape\": {\n           \"relation\": \"intersects\",\n           \"geometry\": {\n             \"type\": \"MultiPolygon\",\n             \"coordinates\": [\n                          [[[2.16942,41.40082],\n                          [2.17963,41.40087],\n                          [2.18146,41.39716],\n                          [2.15533,41.40686],\n                          [2.14596,41.38475],\n                          [2.17519,41.41035],\n                          [2.16942,41.40082]]],\n                          [[[2.16365,41.39416],\n                          [2.16963,41.39726],\n                          [2.15395,41.38005],\n                          [2.17935,41.43038],\n                          [2.16365,41.39416]]]\n             ]\n           },\n           \"path\": \"address.location\"\n         }\n       }\n     },\n     {\n       $limit: 3\n     },\n     {\n       $project: {\n         \"_id\": 0,\n         \"name\": 1,\n         \"address\": 1,\n         score: { $meta: \"searchScore\" }\n       }\n     }\n   ])\n\nThe query returns the following search results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n   :copyable: false\n\n   {\n     \"name\" : \"Cozy bedroom Sagrada Familia\",\n     \"address\" : {\n       \"street\" : \"Barcelona, Catalunya, Spain\",\n       \"suburb\" : \"Eixample\",\n       \"government_area\" : \"el Fort Pienc\",\n       \"market\" : \"Barcelona\",\n       \"country\" : \"Spain\",\n       \"country_code\" : \"ES\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ 2.17963, 41.40087 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n   {\n     \"name\" : \"\",\n     \"address\" : {\n       \"street\" : \"Barcelona, Catalunya, Spain\",\n       \"suburb\" : \"Vila de Gràcia\",\n       \"government_area\" : \"la Vila de Gràcia\",\n       \"market\" : \"Barcelona\",\n       \"country\" : \"Spain\",\n       \"country_code\" : \"ES\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ 2.15759, 41.40349 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n   {\n     \"name\" : \"SPACIOUS RAMBLA CATALUÑA\",\n     \"address\" : {\n       \"street\" : \"Barcelona, Catalunya, Spain\",\n       \"suburb\" : \"L'Antiga Esquerra de l'Eixample\",\n       \"government_area\" : \"l'Antiga Esquerra de l'Eixample\",\n       \"market\" : \"Barcelona\",\n       \"country\" : \"Spain\",\n       \"country_code\" : \"ES\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ 2.15255, 41.39193 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n\n.. _geoshape-within-egs:\n\nWithin Example\n~~~~~~~~~~~~~~\n\nThe following example uses the ``geoShape`` operator to search for\nproperties in New York that are within the specified longitude and\nlatitude coordinates. The queries searches the ``address.location``\nfield in the ``listingsAndReviews`` collection in the ``sample_airbnb``\ndatabase. \n\nThe query includes a: \n\n- :pipeline:`$limit` stage to limit the output to ``3`` results.\n- :pipeline:`$project` stage to exclude all\n  fields except ``name`` and ``address``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n\n   db.listingsAndReviews.aggregate([\n     {\n       \"$search\": {\n         \"geoShape\": {\n           \"relation\": \"within\",\n           \"geometry\": {\n             \"type\": \"Polygon\",\n             \"coordinates\": [[[-74.3994140625,40.5305017757],\n                            [-74.7290039063,40.5805846641],\n                            [-74.7729492188,40.9467136651],\n                            [-74.0698242188,41.1290213475],\n                            [-73.65234375,40.9964840144],\n                            [-72.6416015625,40.9467136651],\n                            [-72.3559570313,40.7971774152],\n                            [-74.3994140625,40.5305017757]]]\n           },\n           \"path\": \"address.location\"\n         }\n       }\n     },\n     {\n       $limit: 3\n     },\n     {\n       $project: {\n         \"_id\": 0,\n         \"name\": 1,\n         \"address\": 1,\n         score: { $meta: \"searchScore\" }\n       }\n     }\n   ])\n\nThe query returns the following search results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n   :copyable: false\n\n   {\n     \"name\" : \"Private Room in Bushwick\",\n     \"address\" : {\n       \"street\" : \"Brooklyn, NY, United States\",\n       \"suburb\" : \"Brooklyn\",\n       \"government_area\" : \"Bushwick\",\n       \"market\" : \"New York\",\n       \"country\" : \"United States\",\n       \"country_code\" : \"US\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ -73.93615, 40.69791 ],\n         \"is_location_exact\" : true\n       }\n     },\n     {\n       \"name\" : \"New York City - Upper West Side Apt\",\n       \"address\" : {\n         \"street\" : \"New York, NY, United States\",\n         \"suburb\" : \"Manhattan\",\n         \"government_area\" : \"Upper West Side\",\n         \"market\" : \"New York\",\n         \"country\" : \"United States\",\n         \"country_code\" : \"US\",\n         \"location\" : {\n           \"type\" : \"Point\",\n           \"coordinates\" : [ -73.96523, 40.79962 ],\n           \"is_location_exact\" : false\n         }\n       },\n       \"score\" : 1\n     }\n     {\n       \"name\" : \"Deluxe Loft Suite\",\n       \"address\" : {\n         \"street\" : \"Brooklyn, NY, United States\",\n         \"suburb\" : \"Greenpoint\",\n         \"government_area\" : \"Greenpoint\",\n         \"market\" : \"New York\",\n         \"country\" : \"United States\",\n         \"country_code\" : \"US\",\n         \"location\" : {\n           \"type\" : \"Point\",\n           \"coordinates\" : [ -73.94472, 40.72778 ],\n           \"is_location_exact\" : true\n         }\n       },\n       \"score\" : 1\n     }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoShape.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"mappings\": {\n       \"fields\": {\n         \"address\": {\n           \"fields\": {\n             \"location\": {\n               \"type\": \"geo\"\n             }\n           },\n           \"type\": \"document\"\n         }\n       }\n     }\n   }\n\n.. _geowithin-box-eg:\n\n``box`` Example\n~~~~~~~~~~~~~~~\n\nThe following query uses the ``geoWithin`` operator with\nthe ``box`` field to search for\nproperties within a bounding box in Australia. \n\nThe query includes a:\n\n- :pipeline:`$limit` stage to limit the output to ``3`` results.\n- :pipeline:`$project` stage to exclude all fields except ``name`` and\n  ``address``.\n\n.. include:: /includes/fact-fts-index-default.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "   :linenos:\n\n   db.listingsAndReviews.aggregate([\n     {\n       \"$search\": {\n         \"geoWithin\": {\n           \"path\": \"address.location\",\n           \"box\": {\n             \"bottomLeft\": {\n               \"type\": \"Point\",\n               \"coordinates\": [112.467, -55.050]\n             },\n             \"topRight\": {\n               \"type\": \"Point\",\n               \"coordinates\": [168.000, -9.133]\n             }\n           }\n         }\n       }\n     },\n     {\n       $limit: 3\n     },\n     {\n       $project: {\n         \"_id\": 0,\n         \"name\": 1,\n         \"address\": 1\n       }\n     }\n   ])\n\nThe query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "   :linenos:\n   :copyable: false\n\n   {\n     \"name\" : \"Surry Hills Studio - Your Perfect Base in Sydney\",\n     \"address\" : {\n       \"street\" : \"Surry Hills, NSW, Australia\",\n       \"suburb\" : \"Darlinghurst\",\n       \"government_area\" : \"Sydney\",\n       \"market\" : \"Sydney\",\n       \"country\" : \"Australia\",\n       \"country_code\" : \"AU\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ 151.21554, -33.88029 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n   {\n     \"name\" : \"Sydney Hyde Park City Apartment (checkin from 6am)\",\n     \"address\" : {\n       \"street\" : \"Darlinghurst, NSW, Australia\",\n       \"suburb\" : \"Darlinghurst\",\n       \"government_area\" : \"Sydney\",\n       \"market\" : \"Sydney\",\n       \"country\" : \"Australia\",\n       \"country_code\" : \"AU\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ 151.21346, -33.87603 ],\n         \"is_location_exact\" : false\n       }\n     }\n   }\n   {\n     \"name\" : \"THE Place to See Sydney's FIREWORKS\",\n     \"address\" : {\n       \"street\" : \"Rozelle, NSW, Australia\",\n       \"suburb\" : \"Lilyfield/Rozelle\",\n       \"government_area\" : \"Leichhardt\",\n       \"market\" : \"Sydney\",\n       \"country\" : \"Australia\",\n       \"country_code\" : \"AU\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ 151.17956, -33.86296 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n\n.. _geowithin-circle-eg:\n\n``circle`` Example\n~~~~~~~~~~~~~~~~~~\n\nThe following query uses the ``geoWithin`` operator with the ``circle``\nfield to search for properties within one mile radius of specified \ncoordinates in Canada.\n\nThe query includes a:\n\n- :pipeline:`$limit` stage to limit the output to ``3`` results\n- :pipeline:`$project` stage to exclude all fields except ``name``\n  and ``address``.\n\n.. include:: /includes/fact-fts-index-default.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "   :linenos:\n\n   db.listingsAndReviews.aggregate([\n     {\n       \"$search\": {\n         \"geoWithin\": {\n           \"circle\": {\n             \"center\": {\n               \"type\": \"Point\",\n               \"coordinates\": [-73.54, 45.54]\n             },\n             \"radius\": 1600\n           },\n           \"path\": \"address.location\"\n         }\n       }\n     },\n     {\n       $limit: 3\n     },\n     {\n       $project: {\n         \"_id\": 0,\n         \"name\": 1,\n         \"address\": 1\n       }\n     }\n   ])\n\nThe query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "   :linenos:\n   :copyable: false\n\n   {\n     \"name\" : \"Ligne verte - à 15 min de métro du centre ville.\",\n     \"address\" : {\n       \"street\" : \"Montréal, Québec, Canada\",\n       \"suburb\" : \"Hochelaga-Maisonneuve\",\n       \"government_area\" : \"Mercier-Hochelaga-Maisonneuve\",\n       \"market\" : \"Montreal\",\n       \"country\" : \"Canada\",\n       \"country_code\" : \"CA\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ -73.54949, 45.54548 ],\n         \"is_location_exact\" : false\n       }\n     }\n   }\n   {\n     \"name\" : \"Belle chambre à côté Metro Papineau\",\n     \"address\" : {\n       \"street\" : \"Montréal, QC, Canada\",\n       \"suburb\" : \"Gay Village\",\n       \"government_area\" : \"Ville-Marie\",\n       \"market\" : \"Montreal\",\n       \"country\" : \"Canada\",\n       \"country_code\" : \"CA\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ -73.54985, 45.52797 ],\n         \"is_location_exact\" : false\n       }\n     }\n   }\n   {\n     \"name\" : \"L'IDÉAL, ( à 2 min du métro Pie-IX ).\",\n     \"address\" : {\n       \"street\" : \"Montréal, Québec, Canada\",\n       \"suburb\" : \"Mercier-Hochelaga-Maisonneuve\",\n       \"government_area\" : \"Mercier-Hochelaga-Maisonneuve\",\n       \"market\" : \"Montreal\",\n       \"country\" : \"Canada\",\n       \"country_code\" : \"CA\",\n       \"location\" : {\n         \"type\" : \"Point\",\n         \"coordinates\" : [ -73.55208, 45.55157 ],\n         \"is_location_exact\" : true\n       }\n     }\n   }\n\n.. _geowithin-geometry-eg:\n\n``geometry`` Examples\n~~~~~~~~~~~~~~~~~~~~~\n\nThe following examples use the ``geoWithin`` operator with the\n``geometry`` field to search for properties in Hawaii. The ``type`` field\nspecifies whether the area is a GeoJSON :ref:`Polygon <geojson-polygon>` or \n:ref:`MultiPolygon <geojson-multipolygon>`.\n\nThe queries include a: \n\n- :pipeline:`$limit` stage to limit the output to ``3`` results.\n- :pipeline:`$project` stage to\n  exclude all fields except ``name`` and ``address``.\n\n.. include:: /includes/fact-fts-index-default.rst\n\n.. tabs::\n\n   .. tab:: Polygon Example\n      :tabid: polygon\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "        :linenos:\n\n         db.listingsAndReviews.aggregate([\n           {\n             \"$search\": {\n               \"geoWithin\": {\n                 \"geometry\": {\n                   \"type\": \"Polygon\",\n                   \"coordinates\": [[[ -161.323242, 22.512557 ],\n                                  [ -152.446289, 22.065278 ],\n                                  [ -156.09375, 17.811456 ],\n                                  [ -161.323242, 22.512557 ]]]\n                 },\n                 \"path\": \"address.location\"\n               }\n             }\n           },\n           {\n             $limit: 3\n           },\n           {\n             $project: {\n               \"_id\": 0,\n               \"name\": 1,\n               \"address\": 1\n             }\n           }\n         ])\n\n      The query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "         :linenos:\n         :copyable: false\n\n         {\n           \"name\" : \"Ocean View Waikiki Marina w/prkg\",\n           \"address\" : {\n             \"street\" : \"Honolulu, HI, United States\",\n             \"suburb\" : \"Oʻahu\",\n             \"government_area\" : \"Primary Urban Center\",\n             \"market\" : \"Oahu\",\n             \"country\" : \"United States\",\n             \"country_code\" : \"US\",\n             \"location\" : {\n               \"type\" : \"Point\",\n               \"coordinates\" : [ -157.83919, 21.28634 ],\n               \"is_location_exact\" : true\n             }\n           }\n         }\n         {\n           \"name\" : \"Kailua-Kona, Kona Coast II 2b condo\",\n           \"address\" : {\n             \"street\" : \"Kailua-Kona, HI, United States\",\n             \"suburb\" : \"Kailua/Kona\",\n             \"government_area\" : \"North Kona\",\n             \"market\" : \"The Big Island\",\n             \"country\" : \"United States\",\n             \"country_code\" : \"US\",\n             \"location\" : {\n               \"type\" : \"Point\",\n               \"coordinates\" : [ -155.96445, 19.5702 ],\n               \"is_location_exact\" : true\n             }\n           }\n         }\n         {\n           \"name\" : \"LAHAINA, MAUI! RESORT/CONDO BEACHFRONT!! SLEEPS 4!\",\n           \"address\" : {\n             \"street\" : \"Lahaina, HI, United States\",\n             \"suburb\" : \"Maui\",\n             \"government_area\" : \"Lahaina\",\n             \"market\" : \"Maui\",\n             \"country\" : \"United States\",\n             \"country_code\" : \"US\",\n             \"location\" : {\n               \"type\" : \"Point\",\n               \"coordinates\" : [ -156.68012, 20.96996 ],\n               \"is_location_exact\" : true\n             }\n           }\n         }\n\n   .. tab:: MultiPolygon Example\n      :tabid: multipolygon\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "         :linenos:\n\n         db.listingsAndReviews.aggregate([\n           {\n             \"$search\": {\n               \"geoWithin\": {\n                 \"geometry\": {\n                   \"type\": \"MultiPolygon\",\n                   \"coordinates\": [\n                         [[[-157.8412413882,21.2882235819],\n                         [-157.8607925468,21.2962046205],\n                         [-157.8646640634,21.3077019651],\n                         [-157.862776699,21.320776283],\n                         [-157.8341758705,21.3133826738],\n                         [-157.8349985678,21.3000822569],\n                         [-157.8412413882,21.2882235819]]],\n                         [[[-157.852898124,21.301208833],\n                         [-157.8580050499,21.3050871833],\n                         [-157.8587346108,21.3098050385],\n                         [-157.8508811028,21.3119240258],\n                         [-157.8454308541,21.30396767],\n                         [-157.852898124,21.301208833]]]\n                   ]\n                 },\n                 \"path\": \"address.location\"\n               }\n             }\n           },\n           {\n             $limit: 3\n           },\n           {\n             $project: {\n               \"_id\": 0,\n               \"name\": 1,\n               \"address\": 1\n             }\n           }\n         ])\n\n      The query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "         :linenos:\n         :copyable: false\n\n         {\n           \"name\" : \"Heart of Honolulu, 2BD gem! Free Garage Parking!\",\n           \"address\" : {\n             \"street\" : \"Honolulu, HI, United States\",\n             \"suburb\" : \"Makiki/Lower Punchbowl/Tantalus\",\n             \"government_area\" : \"Primary Urban Center\",\n             \"market\" : \"Oahu\",\n             \"country\" : \"United States\",\n             \"country_code\" : \"US\",\n             \"location\" : {\n               \"type\" : \"Point\",\n               \"coordinates\" : [ -157.84343, 21.30852 ],\n               \"is_location_exact\" : false\n             }\n           }\n         }\n         {\n           \"name\" : \"Private Studio closed to town w/ compact parking\",\n           \"address\" : {\n             \"street\" : \"Honolulu, HI, United States\",\n             \"suburb\" : \"Oʻahu\",\n             \"government_area\" : \"Primary Urban Center\",\n             \"market\" : \"Oahu\",\n             \"country\" : \"United States\",\n             \"country_code\" : \"US\",\n             \"location\" : {\n               \"type\" : \"Point\",\n               \"coordinates\" : [ -157.85228, 21.31184 ],\n               \"is_location_exact\" : true\n             }\n           }\n         }\n         {\n           \"name\" : \"Comfortable Room (2) at Affordable Rates\",\n           \"address\" : {\n             \"street\" : \"Honolulu, HI, United States\",\n             \"suburb\" : \"Oʻahu\",\n             \"government_area\" : \"Primary Urban Center\",\n             \"market\" : \"Oahu\",\n             \"country\" : \"United States\",\n             \"country_code\" : \"US\",\n             \"location\" : {\n               \"type\" : \"Point\",\n               \"coordinates\" : [ -157.83889, 21.29776 ],\n               \"is_location_exact\" : false\n             }\n           }\n         }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/geoWithin.txt"
  },
  {
    "code": "   :emphasize-lines: 7-11 \n\n   {\n     $search: {  \n       \"index\": \"<index name>\", // optional, defaults to \"default\"\n       \"<operator>\": { // such as \"text\", \"compound\", or \"phrase\"\n         <operator-specification>\n       },\n       \"highlight\": { \n         \"path\": \"<field-to-search>\",\n         \"maxCharsToExamine\": \"<number-of-chars-to-examine>\", // optional, defaults to 500,000\n         \"maxNumPassages\": \"<number-of-passages>\" // optional, defaults to 5\n       }\n     }\n   }, \n   { \n     $project: { \n       \"highlights\": { \"$meta\": \"searchHighlights\" }\n     }\n   }\n\nOptions \n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 25 10 55 10\n\n   * - Field\n     - Type\n     - Description\n     - Required?\n\n   * - ``path``\n     - string\n     - Document field to search. The ``path`` field may contain:\n\n       - A string\n       - An array of strings\n       - A :ref:`multi analyzer <ref-multi-analyzers>` specification\n       - An array containing a combination of strings and multi    \n         analyzer specifications\n       - A wildcard character ``*`` \n         \n       See :ref:`ref-path` for more information.\n\n     - yes\n\n   * - ``maxCharsToExamine``\n     - int\n     - Maximum number of characters to examine on a document when \n       performing highlighting for a field. If omitted, defaults to \n       ``500,000``, which means that |fts| only examines the first \n       500,000 characters in the search field in each document \n       for highlighting. \n     - no\n\n   * - ``maxNumPassages``\n     - int\n     - Number of high-scoring passages to return per document in the \n       ``highlights`` results for each field. A passage is roughly the \n       length of a sentence. If omitted, defaults to 5, which means \n       that for each document, |fts| returns the top 5 highest-scoring \n       passages that match the search text.\n     - no\n\nThe ``\"$meta\": \"searchHighlights\"`` field contains the highlighted \nresults. That field isn't part of the original document, so it is \nnecessary to use a :manual:`$project \n</reference/operator/aggregation/project>` pipeline stage to add it to \nthe query output.\n\nOutput \n------\n\nThe ``highlights`` field is an array containing the following\noutput fields:\n\n.. list-table::\n  :header-rows: 1\n  :widths: 20 15 65\n\n  * - Field\n    - Type\n    - Description\n\n  * - ``path``\n    - string\n    - Document field which returned a match.\n\n  * - ``texts``\n    - array of documents\n    - Each search match returns one or more objects, containing\n      the matching text and the surrounding text (if any).\n\n  * - ``texts.value``\n    - string\n    - Text from the field which returned a match.\n\n  * - ``texts.type``\n    - string\n    - Type of result. Value can be one of the following:\n      \n      - ``hit`` - The results contain the term that matched the query. \n      - ``text`` - The results contain the text content adjacent \n        to the matching term. \n\n  * - ``score``\n    - float\n    - :ref:`Score <scoring-ref>` assigned to the matching\n      result. The ``highlights`` score is a measure of the relevance \n      of the ``highlights`` object to the query. If multiple \n      ``highlights`` objects are returned, the most relevant \n      ``highlights`` object has the highest score.  \n\n.. _highlight-prereqs:\n\nPrerequisites \n-------------\n\nYou must index the field that you want to highlight as an |fts|\n:ref:`string <bson-data-types-string>` type with ``indexOptions`` set to\n``offsets`` (default).\n\n.. _highlight-limitations:\n\nLimitations \n-----------\n\nYou can't use the |fts| ``highlight`` option in conjunction with\nthe :ref:`embedded-document-ref` operator. \n\n.. _highlight-egs:\n\nExamples\n--------\n\nYou can try the following examples in the {+playground+} or your\n|service| {+cluster+}. \n\n.. _highlight-eg-collection:\n\nSample collection\n~~~~~~~~~~~~~~~~~\n\nThe examples on this page use a collection called ``fruit`` that contains \nthe following documents:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/highlighting.txt"
  },
  {
    "code": "   :copyable: true \n   \n   .. input:: \n      :language: json\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          $search: {\n            \"text\": {\n              \"path\": \"description\",\n              \"query\": [\"variety\", \"bunch\"]\n            },\n            \"highlight\": { \n              \"path\": \"description\"\n            }\n          }\n        }, \n        { \n          $project: {\n            \"description\": 1,\n            \"_id\": 0,\n            \"highlights\": { \"$meta\": \"searchHighlights\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n      :visible: false\n      :linenos:\n\n      {\n        \"description\" : \"Bananas are usually sold in bunches of five or six. \",\n        \"highlights\" : [\n          {\n            \"path\" : \"description\",\n            \"texts\" : [\n              {\n                \"value\" : \"Bananas are usually sold in \",\n                \"type\" : \"text\"\n              },\n              {\n                \"value\" : \"bunches\",\n                \"type\" : \"hit\"\n              },\n              {\n                \"value\" : \" of five or six. \",\n                \"type\" : \"text\"\n              }\n            ],\n            \"score\" : 1.2841906547546387\n          }\n        ]\n      }\n      {\n        \"description\" : \"Bosc and Bartlett are the most common varieties of pears.\",\n        \"highlights\" : [\n          {\n            \"path\" : \"description\",\n            \"texts\" : [\n              {\n                \"value\" : \"Bosc and Bartlett are the most common \",\n                \"type\" : \"text\"\n              },\n              {\n                \"value\" : \"varieties\",\n                \"type\" : \"hit\"\n              },\n              {\n                \"value\" : \" of pears.\",\n                \"type\" : \"text\"\n              }\n            ],\n            \"score\" : 1.2691514492034912\n          }\n        ]\n      }\n      {\n        \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp. The most popular varieties are McIntosh, Gala, and Granny Smith. \",\n        \"highlights\" : [\n          {\n            \"path\" : \"description\",\n            \"texts\" : [\n              {\n                \"value\" : \"Apples come in several \",\n                \"type\" : \"text\"\n              },\n              {\n                \"value\" : \"varieties\",\n                \"type\" : \"hit\"\n              },\n              {\n                \"value\" : \", including Fuji, Granny Smith, and Honeycrisp. \",\n                \"type\" : \"text\"\n              }\n            ],\n            \"score\" : 1.0330637693405151\n          },\n          {\n            \"path\" : \"description\",\n            \"texts\" : [\n              {\n                \"value\" : \"The most popular \",\n                \"type\" : \"text\"\n              },\n              {\n                \"value\" : \"varieties\",\n                \"type\" : \"hit\"\n              },\n              {\n                \"value\" : \" are McIntosh, Gala, and Granny Smith. \",\n                \"type\" : \"text\"\n              }\n            ],\n            \"score\" : 1.0940992832183838\n          }\n        ]\n      }\n\nThe search term ``bunch`` returns a match on the document with \n``_id: 2``, because the ``description`` field contains the word \n``bunches``. The search term ``variety`` returns a match on the \ndocuments with ``_id: 3`` and ``_id: 1``, because the \n``description`` field contains the word ``varieties``. \n\n|arrow| Try this in the :asp:`Atlas Search Playground </661062095bd0f76492c88fa1>`.\n\n.. _highlight-advanced:\n\nAdvanced Example \n````````````````\n\nThe following query searches for ``variety`` and ``bunch`` in the\n``description`` field of the ``fruit`` collection, with the\n``highlight`` option enabled, maximum number of characters to \nexamine set to ``40``, and only ``1`` high-scoring passage to \nreturn per document.\n\nThe :manual:`$project </reference/operator/aggregation/project>` \npipeline stage restricts the output to the ``description`` field \nand adds a new field called ``highlights``, which contains \nhighlighting information.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/highlighting.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          $search: {\n            \"text\": {\n              \"path\": \"description\",\n              \"query\": [\"variety\", \"bunch\"]\n            },\n            \"highlight\": {\n              \"path\": \"description\",\n              \"maxNumPassages\": 1,\n              \"maxCharsToExamine\": 40\n            }\n          }\n        },\n        {\n          $project: {\n            \"description\": 1,\n            \"_id\": 0,\n            \"highlights\": { \"$meta\": \"searchHighlights\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n      :visible: false\n      :linenos:\n\n      {\n        \"description\" : \"Bananas are usually sold in bunches of five or six. \",\n        \"highlights\" : [\n          {\n            \"path\" : \"description\",\n            \"texts\" : [\n              {\n                \"value\" : \"Bananas are usually sold in \",\n                \"type\" : \"text\"\n              },\n              {\n                \"value\" : \"bunches\",\n                \"type\" : \"hit\"\n              },\n              {\n                \"value\" : \" of f\",\n                \"type\" : \"text\"\n              }\n            ],\n            \"score\" : 1.313065767288208\n          }\n        ]\n      }\n      {\n        \"description\" : \"Bosc and Bartlett are the most common varieties of pears.\",\n        \"highlights\" : [ ]\n      }\n      {\n        \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp. The most popular varieties are McIntosh, Gala, and Granny Smith.\",\n        \"highlights\" : [\n          {\n            \"path\" : \"description\",\n            \"texts\" : [\n              {\n                \"value\" : \"Apples come in several \",\n                \"type\" : \"text\"\n              },\n              {\n                \"value\" : \"varieties\",\n                \"type\" : \"hit\"\n              },\n              {\n                \"value\" : \", includ\",\n                \"type\" : \"text\"\n              }\n            ],\n            \"score\" : 0.9093900918960571\n          }\n        ]\n      }\n\nThe second document in the above results contains an empty \n``highlights`` array even though the search field contains the \nsearch term ``varieties``, because |fts| only examined ``40`` \ncharacters for highlighting. Similarly, the word ``includ`` is \ntruncated because |fts| only examined ``40`` characters in the \nsearch field for highlighting. In the third document, although \nmultiple passages contain the search term, |fts| returns only \none passage in the ``highlights`` results because the query \nrequired only ``1`` passage per document in the ``highlights`` \nresults.\n\n|arrow| Try this in the :asp:`Atlas Search Playground </661062bb5bd0f76492c88fa3>`.\n\n.. _highlight-multi:\n\nMulti-Field Example \n```````````````````\n\nThe following query searches for ``varieties`` in the\n``description`` field of the ``fruit`` collection, with the\n``highlight`` option enabled for both the ``description`` \nand ``summary`` fields. \n\nThe :manual:`$project </reference/operator/aggregation/project>` \npipeline stage adds a new field called ``highlights``, which \ncontains highlighting information for the query term across \nall fields in the ``highlight`` option. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/highlighting.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          $search: {\n            \"text\": {\n              \"path\": \"description\",\n              \"query\": \"varieties\"\n            },\n            \"highlight\": {\n              \"path\": [\"description\", \"summary\" ]\n            }\n          }\n        },\n        {\n          $project: {\n            \"description\": 1,\n            \"summary\": 1,\n            \"_id\": 0,\n            \"highlights\": { \"$meta\": \"searchHighlights\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n      :visible: false\n      :linenos:\n      :emphasize-lines: 6, 19, 43, 57, 75\n\n      { \n        \"summary\" : \"Pear varieties\", \n        \"description\" : \"Bosc and Bartlett are the most common varieties of pears.\", \n        \"highlights\" : [ \n          { \n            \"path\" : \"summary\", \n            \"texts\" : [ \n              { \n                \"value\" : \"Pear \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              } \n            ], \n            \"score\" : 1.3891443014144897 }, \n          { \n            \"path\" : \"description\", \n            \"texts\" : [ \n              { \n                \"value\" : \"Bosc and Bartlett are the most common \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              }, \n              { \n                \"value\" : \" of pears.\", \n                \"type\" : \"text\" \n              } \n            ], \n            \"score\" : 1.2691514492034912 \n          } \n        ] \n      }\n      { \n        \"summary\" : \"Apple varieties\", \n        \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp. The most popular varieties are McIntosh, Gala, and Granny Smith.\", \n        \"highlights\" : [ \n          {  \n            \"path\" : \"summary\", \n            \"texts\" : [ \n              { \n                \"value\" : \"Apple \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              } \n            ], \n            \"score\" : 1.3859853744506836 \n          }, \n          { \n            \"path\" : \"description\", \n            \"texts\" : [ \n              { \n                \"value\" : \"Apples come in several \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              }, \n              { \n                \"value\" : \", including Fuji, Granny Smith, and Honeycrisp. \", \n                \"type\" : \"text\" \n              } \n            ], \n            \"score\" : 1.0330637693405151 \n          }, \n          { \n            \"path\" : \"description\", \n            \"texts\" : [ \n              { \n                \"value\" : \"The most popular \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              }, \n              { \n                \"value\" : \" are McIntosh, Gala, and Granny Smith.\", \n                \"type\" : \"text\" \n              } \n            ], \n            \"score\" : 1.0940992832183838 \n          } \n        ] \n      }\n\nThe search term ``varieties`` returns a match on documents with \n``_id: 1`` and ``_id: 3`` because the query field ``description`` \nin both documents contains the query term ``varieties``. In \naddition, the ``highlights`` array includes the ``summary`` field \nbecause the field contains the query term ``varieties``.\n\n|arrow| Try this in the :asp:`Atlas Search Playground </661064d0d49f12668e0edb94>`.\n\n.. _highlight-wildcard:\n\nWildcard Example \n````````````````\n\nThe following query searches for the term ``varieties`` in fields \nthat begin with ``des`` in the ``fruit`` collection, with the \n``highlight`` option enabled for fields that begin with ``des``. \n\nThe :manual:`$project </reference/operator/aggregation/project>` \npipeline stage adds a new field called ``highlights``, which \ncontains highlighting information. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/highlighting.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": {\"wildcard\": \"des*\"},\n              \"query\": [\"variety\"]\n            },\n            \"highlight\": { \n              \"path\": {\"wildcard\": \"des*\"}\n            }\n          }\n        }, \n        { \n          \"$project\": {\n            \"description\": 1,\n            \"_id\": 0,\n            \"highlights\": { \"$meta\": \"searchHighlights\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n      :visible: false\n      :linenos:\n      :emphasize-lines: 5, 27, 45\n\n      { \n        \"description\" : \"Bosc and Bartlett are the most common varieties of pears.\", \n        \"highlights\" : [ \n          { \n            \"path\" : \"description\", \n            \"texts\" : [ \n              { \n                \"value\" : \"Bosc and Bartlett are the most common \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              }, \n              { \n                \"value\" : \" of pears.\", \n                \"type\" : \"text\" \n              } \n            ], \n            \"score\" : 1.2691514492034912 \n          } \n        ] \n      },\n      { \n        \"description\" : \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp. The most popular varieties are McIntosh, Gala, and Granny Smith.\", \n        \"highlights\" : [ \n          { \n            \"path\" : \"description\", \n            \"texts\" : [ \n              { \n                \"value\" : \"Apples come in several \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              }, \n              { \n                \"value\" : \", including Fuji, Granny Smith, and Honeycrisp. \", \n                \"type\" : \"text\" \n              } \n            ], \n            \"score\" : 1.0330637693405151 \n          }, \n          { \n            \"path\" : \"description\", \n            \"texts\" : [ \n              { \n                \"value\" : \"The most popular \", \n                \"type\" : \"text\" \n              }, \n              { \n                \"value\" : \"varieties\", \n                \"type\" : \"hit\" \n              }, \n              { \n                \"value\" : \" are McIntosh, Gala, and Granny Smith.\", \n                \"type\" : \"text\" \n              } \n            ], \n            \"score\" : 1.0940992832183838 \n          } \n        ] \n      }\n\nIn the |fts| results, the fields that begin with ``des`` are\nhighlighted. \n\n|arrow| Try this in the :asp:`Atlas Search Playground </661064825bd0f76492c88fa7>`.\n\n.. _highlight-compound:\n\nCompound Example \n````````````````\n\nThe following query searches for the term ``organic`` in the\n``category`` field and ``variety`` in the ``description`` field. The\n``highlight`` option in the :pipeline:`$search`  :ref:`compound-ref` \nquery requests highlighting information only for the :ref:`text-ref`\nquery against the ``description`` field. Note that the ``highlight``\noption inside the :pipeline:`$search` stage must be a child of the\n:pipeline:`$search` stage, and not of any operator inside the\n:pipeline:`$search` stage.  \n\nThe :manual:`$project </reference/operator/aggregation/project>` \npipeline stage adds a new field called ``highlights``, which \ncontains highlighting information. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/highlighting.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json \n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          \"$search\": {\n            \"compound\": {\n              \"should\": [{\n                \"text\": {\n                  \"path\": \"category\",\n                  \"query\": \"organic\"\n                }\n              },\n              {\n                \"text\": {\n                  \"path\": \"description\",\n                  \"query\": \"variety\"\n                }\n              }]\n            },\n            \"highlight\": {\n              \"path\": \"description\"\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"description\": 1,\n            \"category\": 1,\n            \"_id\": 0,\n            \"highlights\": { \"$meta\": \"searchHighlights\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: js\n      :visible: false\n      :linenos:\n\n      [\n        {\n          description: 'Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp. The most popular varieties are McIntosh, Gala, and Granny Smith.',\n          category: 'organic',\n          highlights: [\n            {\n              score: 1.0330637693405151,\n              path: 'description',\n              texts: [\n                { value: 'Apples come in several ', type: 'text' },\n                { value: 'varieties', type: 'hit' },\n                {\n                  value: ', including Fuji, Granny Smith, and Honeycrisp. ',\n                  type: 'text'\n                }\n              ]\n            },\n            {\n              score: 1.0940992832183838,\n              path: 'description',\n              texts: [\n                { value: 'The most popular ', type: 'text' },\n                { value: 'varieties', type: 'hit' },\n                {\n                  value: ' are McIntosh, Gala, and Granny Smith.',\n                  type: 'text'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          description: 'Bosc and Bartlett are the most common varieties of pears.',\n          category: 'nonorganic',\n          highlights: [\n            {\n              score: 1.2691514492034912,\n              path: 'description',\n              texts: [\n                {\n                  value: 'Bosc and Bartlett are the most common ',\n                  type: 'text'\n                },\n                { value: 'varieties', type: 'hit' },\n                { value: ' of pears.', type: 'text' }\n              ]\n            }\n          ]\n        }\n      ]\n\n|arrow| Try this in the :asp:`Atlas Search Playground </6610657f5bd0f76492c88fa9>`.\n\n.. _highlight-autocomplete:\n\nAutocomplete Example \n````````````````````\n\nFor this example, the ``fruit`` collection also has the \nfollowing :ref:`index definition <ref-index-definitions>`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/highlighting.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json\n      :linenos:\n\n      db.fruit.aggregate([\n        {\n          \"$search\": {\n            \"autocomplete\": {\n              \"path\": \"description\",\n              \"query\": [\"var\"]\n            },\n            \"highlight\": { \n              \"path\": \"description\"\n            }\n          }\n        }, \n        { \n          \"$project\": {\n            \"description\": 1,\n            \"_id\": 0,\n            \"highlights\": { \"$meta\": \"searchHighlights\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n      :visible: false\n      :emphasize-lines: 9, 18, 35\n      :linenos:\n\n      {\n        \"description\": \"Apples come in several varieties, including Fuji, Granny Smith, and Honeycrisp. The most popular varieties are McIntosh, Gala, and Granny Smith.\",\n        \"highlights\": [\n          {\n            \"score\": 0.774385392665863,\n            \"path\": \"description\",\n            \"texts\": [\n              { \"value\": \"Apples come in several \", \"type\": \"text\" },\n              { \"value\": \"varieties, including Fuji\", \"type\": \"hit\" },\n              { \"value\": \", Granny Smith, and Honeycrisp. \", \"type\": \"text\" }\n            ]\n          },\n          {\n            \"score\": 0.7879307270050049,\n            \"path\": \"description\",\n            \"texts\": [\n              { \"value\": \"The most popular \", \"type\": \"text\" },\n              { \"value\": \"varieties are McIntosh\", \"type\": \"hit\" },\n              { \"value\": \", Gala, and Granny Smith.\", \"type\": \"text\" }\n            ]\n          }\n        ]\n      },\n      {\n        \"description\": \"Bosc and Bartlett are the most common varieties of pears.\",\n        \"highlights\": [\n          {\n            \"score\": 0.9964432120323181,\n            \"path\": \"description\",\n            \"texts\": [\n              {\n                \"value\": \"Bosc and Bartlett are the most common \",\n                \"type\": \"text\"\n              },\n              { \"value\": \"varieties of pears\", \"type\": \"hit\" },\n              { \"value\": \".\", \"type\": \"text\" }\n            ]\n          }\n        ]\n      }\n\n|fts| returns a match on the documents with ``_id: 1`` and \n``id_: 2`` for the query string ``var``  because the ``description`` \nfield in the ``fruit`` collection contains the characters  \n``var`` at the beginning of a word. |fts| matches a highlight ``hit`` \nmore coarsely to your query terms when a highlighted path is referenced \nonly in the autocomplete operators of the highlighted query.\n\n|arrow| Try this in the :asp:`Atlas Search Playground </661066745bd0f76492c88fab>`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/highlighting.txt"
  },
  {
    "code": "   :copyable: true\n\n   { \n     $search: {  \n       \"index\": <index name>, // optional, defaults to \"default\"\n       \"in\": {\n         \"path\": \"<field-to-search>\",\n         \"score\": <options>,\n         \"value\": <single-or-array-of-values-to-search>\n       }\n     }\n   }\n\n.. _in-ref-fields:\n\nFields \n------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10 \n\n   * - Field\n     - Type \n     - Description \n     - Necessity\n\n   * - ``path``\n     - string \n     - Indexed field to search. You can also specify a :ref:`wildcard\n       path <ref-path-usage>` to search. See :ref:`Construct a Query Path\n       <ref-path>` for more information. \n       \n       To search for :manual:`string </reference/bson-types/#string>`\n       values in a field, you must index the field as the |fts| :ref:`token\n       <bson-data-types-token>` type.\n\n     - Required\n\n   * - ``score``\n     - object\n     - Score to assign to matching search term results. Use one of \n       the following options to modify the score:\n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score using the function\n         expression. \n\n     - Optional\n\n   * - ``value`` \n     - :ref:`boolean <boolean-ref>`, :ref:`objectId <objectId-ref>`, \n       :ref:`number <bson-data-types-number>`, :ref:`date\n       <bson-data-types-date>`, :ref:`uuid <bson-data-types-uuid>`, or :ref:`string\n       <bson-data-types-string>`\n     - Value or values to search. Value can be either a single value or\n       an array of values of only one of the supported |bson| types and\n       can't be a mix of different types. \n       \n       To search for :manual:`string </reference/bson-types/#string>`\n       values in a field, you must index the field as the |fts| :ref:`token\n       <bson-data-types-token>` type.\n\n     - Required\n\n.. _in-ref-egs:\n\nExamples \n--------\n\nThe following examples use the ``in`` operator to query collections in \nthe :ref:`sample_analytics.customers <sample-analytics>` collection. If\nyou load the sample data on your |service| cluster and :ref:`create\n<ref-create-index>` an |fts| index named ``default`` that uses\n:ref:`static mappings <static-dynamic-mappings>` on the collection, you \ncan run the following queries against the collections. \n\n.. _in-ref-ee-index:\n\nSample Index \n~~~~~~~~~~~~\n\nThe sample index definition specifies the following actions to support\n``in`` operator queries against the indexed fields in the collection:\n\n- Automatically index all the dynamically indexable fields in the collection.\n- Statically index the ``name`` field as the :ref:`token\n  <bson-data-types-token>` type and converts the text in the field to\n  lowercase.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/in.txt"
  },
  {
    "code": "   :copyable: true \n\n   {\n     \"mappings\": {\n       \"index\": \"default\",\n       \"dynamic\": true,\n       \"fields\": {\n         \"name\": {\n           \"normalizer\": \"lowercase\",\n           \"type\": \"token\"\n         }\n       }\n     }\n   }\n\nTo learn how to create an |fts| index, see :ref:`ref-create-index`.\n\n.. _in-ref-eg-queries:\n\nSample Queries\n~~~~~~~~~~~~~~\n\n.. tabs:: \n\n   .. tab:: Single Value Field Match\n      :tabid: single \n\n      The following query uses the ``in`` operator to search the\n      ``birthdate`` field, which contains a single value, for customers\n      who were born on given dates. The query uses the\n      :pipeline:`$project` stage to: \n\n      - Omit the ``_id`` field in the results.\n      - Include only the ``name`` and ``birthdate`` fields in the \n        results. \n  \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/in.txt"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language:  json\n            :linenos: \n\n            db.customers.aggregate([\n              {\n                \"$search\": {\n                  \"in\": {\n                    \"path\": \"birthdate\",\n                    \"value\": [ISODate(\"1977-03-02T02:20:31.000+00:00\"), ISODate(\"1977-03-01T00:00:00.000+00:00\"), ISODate(\"1977-05-06T21:57:35.000+00:00\")]\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"name\": 1,\n                  \"birthdate\": 1\n                }\n              }\n            ])\n      \n         .. output:: \n            :language: json\n            :linenos: \n\n            [\n              {\n                name: 'Elizabeth Ray',\n                birthdate: ISODate(\"1977-03-02T02:20:31.000Z\")\n              },\n              {\n                name: 'Brad Cardenas',\n                birthdate: ISODate(\"1977-05-06T21:57:35.000Z\")\n              }\n            ]\n\n      |fts| returns two documents that it matches with the dates\n      specified in the query.\n  \n   .. tab:: Array Value Field Match\n      :tabid: multiple \n\n      The following query uses the ``in`` operator to query the\n      ``accounts`` field, which contains an array of numbers, for\n      customers with account numbers ``371138``, ``371139``, or\n      ``371140``. The query uses the :pipeline:`$project` stage to:\n\n      - Omit the ``_id`` field in the results.\n      - Include only the ``name`` and ``accounts`` fields in the results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/in.txt"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language:  json\n            :linenos: \n\n            db.customers.aggregate([\n              {\n                \"$search\": {\n                  \"in\": {\n                    \"path\": \"accounts\",\n                    \"value\": [371138, 371139, 371140]\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"name\": 1,\n                  \"accounts\": 1\n                }\n              }\n            ])\n      \n         .. output:: \n            :language: json\n            :linenos: \n\n            [\n              {\n                name: 'Elizabeth Ray',\n                accounts: [ 371138, 324287, 276528, 332179, 422649, 387979 ]\n              }\n            ]\n\n      |fts| returns only one document that it matches with the account\n      number ``371138`` specified in the query. \n\n   .. tab:: Compound Query Match \n      :tabid: compound \n\n      The following query uses the ``text`` operator to query for\n      customers whose first name is ``James`` in the ``name`` field.\n      The query specifies preference using the ``in`` operator for\n      customers associated with the given objectIds in the ``_id``\n      field. The query uses :pipeline:`$limit` stage to limit the output\n      to 5 results and the :pipeline:`$project` stage to: \n\n      - Include only the ``_id`` and ``name`` fields in the results. \n      - Add a field named ``score`` to the results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/in.txt"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language:  json\n            :linenos: \n\n            db.customers.aggregate([\n              {\n                \"$search\": {\n                  \"compound\": {\n                    \"must\": [{\n                      \"in\": {\n                        \"path\": \"name\",\n                        \"value\": [\"james sanchez\", \"jennifer lawrence\"]\n                      }\n                    }],\n                    \"should\": [{\n                      \"in\": {\n                        \"path\": \"_id\",\n                        \"value\": [ObjectId(\"5ca4bbcea2dd94ee58162a72\"), ObjectId(\"5ca4bbcea2dd94ee58162a91\")]\n                      }\n                    }]\n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 1,\n                  \"name\": 1,\n                  \"score\": { $meta: \"searchScore\" }\n                }\n              }\n            ])\n      \n         .. output:: \n            :language: json\n            :linenos: \n\n            [\n              {\n                _id: ObjectId(\"5ca4bbcea2dd94ee58162a72\"),\n                name: 'James Sanchez',\n                score: 2\n              },\n              {\n                _id: ObjectId(\"5ca4bbcea2dd94ee58162a71\"),\n                name: 'Jennifer Lawrence',\n                score: 1\n              }\n            ]\n\n      |fts| returns documents that contain ``James Sanchez`` and\n      ``Jennifer Lawrence`` in the ``name`` field. |fts| scores the\n      document that contains ``name: 'James Sanchez'`` higher because it\n      matches the ``ObjectId`` specified in the ``should`` clause.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/in.txt"
  },
  {
    "code": "         :language: json\n         :linenos:\n         :copyable: false\n\n   .. tab:: Expanded \n      :tabid: expanded \n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/index-definitions.txt"
  },
  {
    "code": "         :language: json\n         :linenos:\n         :copyable: false\n\n.. _index-definition-options:\n\nOptions \n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 15 15 50\n\n   * - Field\n     - Type\n     - Necessity\n     - Description\n\n   * - ``analyzer``\n     - string \n     - Optional \n     - Specifies the :ref:`analyzer <analyzers-ref>` to apply to \n       string fields when indexing. \n       \n       If you set this only at the top and \n       do not specify an analyzer for the fields in the index \n       definition, |fts| applies this analyzer to all the fields. To \n       use a different analyzer for each field, you must specify a \n       different analyzer for the field. \n       \n       If omitted, defaults to \n       :ref:`ref-standard-analyzer`.\n\n   * - ``analyzers``\n     - array of :ref:`custom-analyzers` \n     - Optional \n     - Specifies the :ref:`custom-analyzers` to use in this index.\n\n   * - ``mappings``\n     - :ref:`Document Field Definition <bson-data-types-document>`\n     - Required\n     - Specifies how to index fields at different paths for this \n       index.\n\n   * - ``mappings.dynamic``\n     - boolean\n     - Optional\n     - Enables or disables dynamic mapping of fields for this index.\n     \n       If set to ``true``, |fts| recursively indexes all\n       :ref:`dynamically indexable <bson-data-chart>` fields.\n\n       If set to ``false``, you must specify individual fields to index \n       using ``mappings.fields``.\n\n       If omitted, defaults to ``false``.\n\n       .. include:: /includes/admonitions/importants/dynamic-flag-considerations.rst\n       \n       For example index configurations, see :ref:`Static Mapping Example\n       <index-config-example>` or :ref:`Combined Mapping Example <index-combined-config-example>`\n\n   * - ``mappings.fields``\n     - document\n     - Conditional\n     - Specifies the fields that you would like to index. Required only if dynamic mapping is disabled.\n       \n       .. include:: /includes/fact-fts-field-name-restriction.rst\n       \n       To learn more, see :ref:`fts-field-mappings`. \n      \n   * - ``searchAnalyzer``\n     - string \n     - Optional\n     - Specifies the :ref:`analyzer <analyzers-ref>` to apply to query \n       text before searching with it. \n       \n       If omitted, defaults to the\n       analyzer that you specify for the ``analyzer`` option. If you \n       omit both the ``searchAnalyzer`` and the ``analyzer`` options, \n       defaults to the :ref:`ref-standard-analyzer`.\n\n   * - ``storedSource`` \n     - boolean or :ref:`Stored Source Definition  \n       <fts-stored-source-definition>` \n     - Optional \n     - Specifies fields in the documents to store for query-time \n       look-ups using the :ref:`returnedStoredSource \n       <fts-return-stored-source-option>` option. You can store fields \n       of all :ref:`bson-data-chart` on |fts|. Value can be one of \n       the following:\n\n       - ``true``, to store all fields  \n       - ``false``, to not store any fields \n       - :ref:`Object <fts-stored-source-document>` that specifies \n         the fields to ``include`` or ``exclude`` from storage\n       \n       .. include:: /includes/fact-fts-stored-source-mdb-version.rst\n\n       If omitted, defaults to ``false``. \n       \n       To learn more, see :ref:`fts-stored-source-definition`.\n\n\n   * - ``synonyms`` \n     - array of :ref:`Synonym Mapping Definition <synonyms-ref>`\n     - Optional \n     - Synonym mappings to use in your index. \n\n       .. include:: /includes/fact-fts-synonym-mapping-limitation.rst \n        \n       To learn more, see :ref:`synonyms-ref`.\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/index-definitions.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     $search: {\n       \"index\": \"<index name>\", // optional, defaults to \"default\"\n       \"knnBeta\": {\n         \"vector\": [<array-of-numbers>],\n         \"path\": \"<field-to-search>\",\n         \"filter\": {<filter-specification>},\n         \"k\": <number>,\n         \"score\": {<options>}\n       }\n     }\n   }\n\n.. _knn-beta-options:\n\nOptions \n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10 \n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``filter``\n     - document\n     - Any |fts| :ref:`operator <operators-ref>` to filter the \n       documents based on metadata or certain search criteria, which \n       can help narrow down the scope of vector search.\n     - Optional\n\n   * - ``k``\n     - number\n     - Number of nearest neighbors to return. You can specify a number \n       higher than the number of documents to return \n       (:pipeline:`$limit`) to increase accuracy. \n     - Required\n\n   * - ``path``\n     - string\n     - Indexed :ref:`knnVector <fts-data-types-knn-vector>` type field\n       to search. See :ref:`Path Construction <ref-path>` for more\n       information. \n     - Required\n\n   * - ``score`` \n     - document\n     - Score assigned to matching documents in the results. To learn\n       more, see :ref:`scoring behavior <knn-beta-scoring>`.\n     - Optional\n\n   * - ``vector``\n     - array of numbers\n     - Array of numbers of |bson| types ``int`` or ``double`` that \n       represent the query vector. The array size must match the number \n       of vector ``dimensions`` specified in the :ref:`index \n       <fts-data-types-knn-vector>` for the field.\n     - Required\n\n.. _knn-beta-behavior:\n\nBehavior \n--------\n\nYou can run :abbr:`kNN (K-nearest neighbors)` queries against fields \nthat were indexed as |fts| type :ref:`knnVector\n<fts-data-types-knn-vector>` only. \n\nYou can use :pipeline:`$limit` after the :pipeline:`$search` stage\nto limit the number of documents in the ``knnBeta`` query results. We\nrecommend setting the value for ``k`` higher than the value for\n``$limit``. This overrequest pattern is the main way to trade off latency and recall in your \napproximate nearest neighbor searches. Empirically, we have seen a multiplier of 5-10 work\nwell for many use cases, but we recommend tuning this on your specific dataset.\n\n.. example:: \n\n   The following query finds ``150`` nearest neighbors to the query and\n   limits the remaining number of results to ``50``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/knn-beta.txt"
  },
  {
    "code": "      :copyable: false \n      :linenos:\n\n      db.<collection>.aggregate({\n        \"$search\": {\n          \"knnBeta\": {\n            \"vector\": <array-of-numbers-to-search>,\n            \"path\": <indexed-field-to-search>,\n            \"k\": 150\n          }\n        } \n      },\n      {\n        \"$limit\": 50\n      })\n\n.. _knn-beta-usage:\n\nPerformance \n~~~~~~~~~~~\n\nTo improve query performance, use the :pipeline:`$project` stage to\nselect the fields to return in the results, unless you need all the\nfields in the results. We recommend excluding the vector field in\nthe :pipeline:`$project` stage.\n\n.. _knn-beta-scoring:\n\nScoring  \n~~~~~~~\n\nYou can use the ``score`` field with the :manual:`$meta\n</reference/operator/aggregation/meta/>` expression ``searchScore`` in\nthe :pipeline:`$project` stage to return the score for the documents in\nthe results.\n\n|fts| scores the results for :abbr:`kNN (K-nearest neighbors)` queries \nin a fixed range from ``0`` to ``1`` only. For ``cosine`` and\n``dotProduct`` :ref:`similarities <fts-knn-vector-type-options>`, |fts|\nnormalizes the score using the following algorithm:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/knn-beta.txt"
  },
  {
    "code": "   :copyable: false \n\n   score = (1 + cosine/dot_product(v1,v2)) / 2\n\n.. _knn-beta-limitation:\n\nLimitations \n~~~~~~~~~~~\n\n``knnBeta`` operator must be the top-level operator in your queries and\ntherefore, you can't use the ``knnBeta`` operator inside the following:  \n\n- :ref:`embedded-document-ref` operator \n- :ref:`compound-ref` operator  \n- :ref:`fts-facet-ref` collector\n\nYou can't use the ``knnBeta`` operator to query fields indexed using a \n:ref:`vectorSearch <avs-types-vector-search>` type index. You can't use\nthe :pipeline:`$search` :ref:`sort <sort-ref>` option with the\n``knnBeta`` operator. \n\nWe don't recommend paginating your |fts| results using :pipeline:`$skip`\nand :pipeline:`$limit` after the :pipeline:`$search` stage. \n\n.. _knn-beta-egs:\n\nExamples \n--------\n\nThe following queries search the sample ``sample_mflix.embedded_movies``\ncollection using the ``knnBeta`` operator. The queries search the \n``plot_embedding`` field, which contains embeddings created using OpenAI's\n``text-embedding-ada-002`` embeddings model. If you added the :ref:`sample\ncollection <mflix-embedded_movies>` to your |service| cluster and\ncreated the :ref:`sample index  definition <knn-vector-egs>` for the\ncollection, you can switch to the ``sample_mflix`` database and run the\nfollowing queries against the collection.  \n\n.. tabs:: \n\n   .. tab:: Basic Example \n      :tabid: basic \n\n      The following query searches the ``plot_embedding`` field using the \n      ``knnBeta`` operator for ``vector`` dimensions and requests up \n      to ``5`` nearest neighbors in the results. The query also\n      specifies a :pipeline:`$project` stage to: \n\n      - Exclude the ``_id`` field and include ``plot`` and ``title``\n        fields in the results. \n      - Add a field named ``score`` in the results. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/knn-beta.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json\n            :linenos: \n\n            db.embedded_movies.aggregate([\n              {\n                \"$search\": {\n                  \"index\": \"default\",\n                  \"knnBeta\": {\n                    \"vector\": [0.024552748,-0.015502235,-0.013485263,0.012069505,-0.0027216184,0.023427898,-0.011920818,-0.03865862,0.0058472776,-0.026013758,-0.009069907,0.010834756,0.0065680863,-0.03470225,0.025936183,0.011164454,0.029918408,-0.0045866705,0.0134723345,-0.020376582,-0.014519608,0.02301416,0.007589501,0.0038464677,0.0022254563,-0.0034812149,0.022677999,-0.009651725,0.011772131,0.0113842515,-0.004790307,-0.029633963,0.008022632,-0.016407287,-0.025535375,-0.02173416,-0.004622226,-0.01448082,0.0061737425,-0.009334957,0.004237579,0.009367281,-0.021475572,0.006141419,0.00014464658,0.0046254583,-0.019743046,-0.002291719,-0.0166788,0.020066278,0.0202085,-0.0015983852,-0.02229012,-0.0017195974,-0.020842036,0.0098391995,0.0041244477,0.0018327287,0.01335597,-0.012780616,-0.010162433,-0.0008165663,-0.013989506,-0.012955162,-0.018708702,-0.0038303062,-0.00789334,0.0051587922,0.0036331343,-0.0010270715,0.03190952,0.0055628326,0.012825869,0.00020707087,0.015256578,-0.02133335,-0.023958,-0.0058763684,0.012625465,0.020389512,0.018346682,-0.031831946,-0.008701421,0.032918006,0.012890516,0.0026521233,-0.015489305,0.03452124,-0.018631127,-0.00096404116,0.020156784,0.0146489,0.011106271,0.009897382,0.018450117,-0.011836777,-0.0072921272,0.036305483,-0.0044606095,-0.013265465,-0.019924056,0.017234761,-0.011694555,-0.0025454566,-0.030487297,-0.019678399,0.020893754,0.0038400032,0.037857,0.007938593,-0.03299558,-0.010744251,0.017170114,-0.045692157,-0.0065939445,-0.0070400056,0.005911924,0.019019006,-0.002708689,0.00074545515,0.029194366,0.0036492958,0.0063321264,-0.018488904,-0.0012064656,0.0022997998,-0.004011316,-0.011345464,-0.012612536,-0.027616993,-0.0066327327,-0.008565663,0.025729313,-0.0094771795,-0.025406081,0.03043558,-0.032581843,0.004004852,-0.021449715,0.0038561646,0.0073761675,0.019626683,-0.019316379,-0.009612937,0.013924859,0.018282035,0.006597177,0.0005672732,0.0037591949,-0.015450518,0.023854565,-0.03247841,0.014778194,-0.008358794,0.028677195,0.0019975773,-0.015295366,0.018049307,-0.040313568,-0.0056177825,0.007589501,0.021307493,0.0014505063,-0.013924859,0.0138343545,0.016213346,0.0040921243,-0.005029499,-0.010698998,0.00036343464,-0.002519598,0.032064673,-0.023583049,0.013252536,-0.0026198002,0.017493347,-0.01854062,0.037546698,-0.0129034445,-0.008875967,0.0037979828,0.0008064653,0.0027701033,0.013278395,-0.035865888,-0.011856171,-0.028185882,-0.0021963655,-0.0003739397,0.0054593985,-0.00042828318,-0.004583438,-0.0025955576,0.0019620217,-0.6855634,-0.011164454,0.017415771,-0.024940627,3.7828315E-05,0.016717589,0.021682441,0.009244452,-0.020880826,-0.004583438,0.0027652548,0.016989104,0.0015595972,0.0037850535,-0.022820221,-0.01354991,0.014131729,-0.033874776,0.014933346,-0.014571325,-0.015747892,0.031107904,0.0043733367,-0.014222234,-0.010162433,0.031599216,0.0147652645,0.0011773747,-0.013233142,0.027125679,-0.030694166,0.029582245,0.0031563663,0.015670316,0.04729539,0.00993617,-0.027616993,0.01912244,0.0068977834,0.030306287,-0.03576245,0.00077818247,0.014623042,0.0048387917,0.0025050526,-0.0053947517,0.006538995,-0.0013511122,0.0112291,0.018863853,0.0073826322,0.0127224345,0.006519601,-0.00945132,0.029168509,-0.0059959646,0.024591535,0.01168809,0.008895361,0.0028105073,-0.012334555,0.017118398,-0.0181786,0.008766068,-0.01243799,0.027487699,-0.002164042,0.022522846,0.016277993,-0.023117594,0.025574163,0.039434377,-0.0036492958,0.0011393948,0.009031119,-0.00557253,0.020622239,0.02022143,-0.0058860653,-0.0062674796,0.0033745482,-0.022923656,-0.03361619,-0.02707396,0.033693764,-0.026401637,0.0051135393,0.014442032,0.0028169719,-0.0015208093,-0.0069624297,0.0118820295,-0.0042505083,-0.0057987925,0.012884051,-0.0047547515,-0.008332936,0.02337618,0.018139813,-0.04251155,0.013181425,-0.007835158,0.015385871,-0.012075969,-0.015075568,0.0007878794,-0.028289316,-0.0026602042,0.026660224,-0.022755574,0.0067426316,-0.012088899,0.009457786,-0.009781018,-0.013705062,-0.022548705,0.031857803,0.0050618225,0.024604464,-0.017157186,0.01373092,0.017170114,0.0025955576,-0.0024371736,0.0155151645,0.0020783856,-0.014739406,-0.009625866,-0.027332548,0.008559199,-0.004793539,0.025069918,0.005265459,-0.009955564,-0.008972936,-0.010698998,0.017596781,-0.0067103086,0.036434777,-0.018101025,-0.022419412,0.015980618,0.010155967,-0.016989104,-0.005582227,-0.018463045,-0.013588698,-0.014390315,-0.0363572,-0.008404047,-0.008895361,-0.017338196,-0.008216572,-0.015799608,0.0019911127,0.007537784,0.01214708,-0.0014690921,-0.015036779,-0.005666267,0.031237196,0.0028816184,-0.005970106,-0.004719196,-0.022975372,-0.011675161,-0.0056501054,0.023789918,0.0046577817,-0.020984259,-0.016963245,-0.023970928,-0.020570522,0.023608908,0.0036880837,0.008436371,-0.010492129,0.006144651,-0.021449715,-0.009141018,-0.004803236,-0.004670711,0.003384245,0.009250917,0.004670711,-0.012237586,0.015553952,-2.7247497E-05,-0.0038917202,0.010000817,0.0020299007,0.038270738,0.02209618,-0.0042892965,0.00478061,-0.00046868724,0.020648098,0.003145053,0.004185862,0.013459405,0.015696174,-0.025936183,0.02691881,-0.018656984,0.011157989,-0.023906281,0.01104809,-0.022820221,0.017402843,0.001338991,0.006144651,-0.033874776,-0.008177784,-0.010246473,-0.007822229,0.009574149,0.015541023,0.013142637,-0.008410512,-0.002311113,-0.016963245,-0.021216987,-0.0019959612,0.0073373797,0.0025276789,-0.00039616192,-0.0053010145,-0.008061421,0.019096581,-0.016303852,-0.011694555,-0.016833954,-0.004929297,0.035478007,0.003006063,-0.03656407,-0.0011636373,-0.02377699,0.033848915,9.106068E-05,0.007537784,0.02430709,0.018980218,-0.027823862,-0.008035562,-0.018514762,0.017364055,0.010653746,-0.009761624,-0.00788041,-0.030280428,-0.0054529337,0.00024969716,0.023453757,0.005566065,-0.010485665,0.017402843,-0.003959599,0.025354363,0.0401067,0.00788041,-0.0025777798,0.00575354,0.0040501044,-0.0045252563,-0.004027478,0.0023692949,0.0010456574,-0.0066521266,-0.016277993,-0.012399202,-0.004176165,0.007705865,-0.009690513,0.018954359,0.0075119254,-0.016536579,0.0010828292,0.013873142,0.01948446,0.001221011,-0.020880826,0.024785474,0.0011434352,-0.023453757,-0.006070308,-0.020286078,-0.0018812136,-0.012050111,0.012528495,0.019187085,-0.0058957622,0.0031660632,0.011151524,0.0118820295,0.008423441,0.0181786,-0.011267887,0.0204283,0.009826271,-0.00807435,0.002707073,-0.013116778,-0.011539403,0.0068137427,0.00047393978,-0.016652944,-0.008753139,-0.0056371763,-0.010556776,-0.008520411,-0.008197178,-0.0041826298,-0.0046060644,-0.014907487,0.004929297,0.003471518,0.011073948,0.02560002,0.0053042467,-0.0048290947,-0.030125277,-0.014015364,0.0047547515,0.1075718,-0.0020767692,0.0059959646,0.012192333,0.0024129313,-0.010666675,-0.025238,-0.0052460646,0.009069907,0.014610113,0.025755173,-0.010349907,0.013265465,0.01446789,-0.004800004,0.015437588,-0.013233142,-0.015256578,-0.00881132,-0.0075830366,2.77778E-05,0.00014272738,0.029530529,-0.0007846471,-0.013485263,-0.025509516,-0.0047385897,0.019949915,-0.00992324,-0.0026602042,-0.007550713,-0.021591937,-0.004929297,0.015657386,0.0021365674,0.00742142,0.0122246565,0.008604451,0.031392347,-0.02581982,0.039667103,0.025522444,0.013808496,-0.01985941,0.024242444,0.007970915,0.00046949534,0.027720427,0.022548705,-0.013149101,0.06568086,0.009108694,0.01987234,-0.00303677,0.023350323,0.0066391975,0.0036525282,0.01819153,-0.005536974,0.0055434387,-0.008429905,-0.027875578,0.0030028308,-0.0058763684,0.015204861,-0.03247841,-0.02244527,0.011558797,-0.013860214,-0.009166876,-0.017325267,-0.045174986,-0.0156056695,-0.026233556,0.011274353,0.015243649,0.009619402,-0.020699814,-0.017027892,0.01594183,-5.6111156E-05,-0.022303049,0.014610113,0.0024872748,-0.0035684877,0.015049709,0.02004042,0.017351124,-0.013627485,0.013394758,0.009709907,0.023104666,0.007001218,-0.023996787,0.008358794,0.012179404,0.012534959,0.007001218,-0.020156784,0.013394758,0.023272745,-0.036072757,-0.017428702,-0.019962844,0.017907085,-0.021798806,-0.00945132,0.0068266722,-0.018669914,-0.021837594,0.006138187,-0.002755558,0.01929052,0.0030238407,-0.004425054,0.012172939,0.010492129,0.018113954,0.00732445,-0.017674359,0.0034650534,-0.012968091,0.018450117,0.015734963,-0.024151938,0.0027636385,0.009554755,-0.019911127,-0.0053301053,-0.008656168,-0.013065061,0.012644859,-0.0025341434,-0.007408491,-0.031444065,-0.0034585886,-0.0020622239,0.010776575,-0.008320007,-0.010194756,-0.005675964,0.0061640455,-0.015075568,-0.030694166,-0.004880812,-0.02040244,-0.0032694975,-0.020273147,-0.009250917,0.032918006,0.00010626271,0.0017066681,0.005407681,0.024229515,-0.007111117,-0.027513558,-0.02968568,-0.0033357602,0.013026273,0.002191517,0.030306287,-0.00073575816,0.0025777798,-0.010220614,-0.005045661,0.005666267,-0.0061769746,-0.018760419,-0.034236796,0.016277993,0.0037139424,0.02209618,-0.0026892952,-0.022820221,0.005019802,0.016368497,-0.00044080845,-0.021229915,-0.0018989914,-0.024436383,-0.005905459,-0.007970915,-0.008649704,0.025483657,0.011410111,-0.0075119254,0.028030729,5.5909135E-05,0.0010682837,-0.008048492,0.03436609,-0.004977782,-0.00039535385,-0.0017325267,-0.009535361,-0.009322028,0.01085415,-0.01521779,-0.022871938,0.003940205,0.013110314,-0.005349499,0.0065907123,0.0045414176,0.005915156,0.031625077,0.004942226,-0.030539015,0.0034779827,-0.021023048,-0.019885268,-0.031625077,-0.0029591944,-0.0145842545,-0.0016775772,-0.010285261,-0.024345879,0.017557994,-0.027487699,-0.02616891,-0.010336978,-0.007182228,0.020324865,0.028496185,0.0076800063,0.022018604,-0.027901437,-0.0016307083,0.017325267,0.0011620212,-0.0017212135,0.009056977,0.00724041,-0.01466183,0.0024355575,-0.0046286904,0.003115962,-0.034081645,-0.019355167,0.012127686,0.029892549,0.0118820295,-0.020337794,-0.004496165,0.0033486895,0.021811735,-0.020854967,-0.0020864664,-0.012696576,7.9697034E-05,-0.018915571,-0.009263846,0.010976979,0.013136173,-0.0008000006,0.004017781,0.0017292943,-0.019988703,-0.0029301033,0.00011676777,0.00097535434,0.041322052,-0.0104080895,-0.0018456581,0.00012444454,-0.00084525323,-0.007311521,0.013705062,0.0012169707,0.0307976,0.011242029,0.0074537434,-0.012955162,0.025923254,0.013627485,0.01020122,-0.002600406,-0.0032032349,-0.008837179,0.0016105063,0.0146489,0.014377385,-0.022367695,-0.013769708,-0.018579409,-0.0063385908,-0.014312739,-0.015825467,-0.004871115,-0.009884452,-0.008481623,-0.001002829,-0.009360815,0.01984648,0.010356372,0.009153947,0.0011442434,0.029427094,-0.031806085,0.004948691,0.00732445,-0.0044993977,-0.006538995,0.014442032,0.018708702,-0.025522444,0.0018472743,-0.00040686902,-0.019432742,-0.014222234,-0.0020573754,-0.0068913186,-0.0047385897,-0.032788713,-0.0042181853,0.0030626287,-0.004483236,-0.035891745,-0.02190224,0.018437186,0.00022747493,-0.0063418234,0.018889712,0.0002092931,0.0307976,-0.0030416185,0.014273951,0.013963647,-0.0023078807,-0.011080413,-0.006063843,0.012793546,-0.010401624,-0.009858594,0.00047798018,-0.014635972,-0.008798391,0.01559274,0.0028218206,-0.004105054,-0.0045769736,0.032349117,0.00881132,0.016989104,0.010155967,0.016096983,-1.900254E-05,-0.022703856,-0.019497389,-0.014222234,0.004337781,0.03193538,-0.009709907,-0.007873946,-0.028651336,-0.0006113136,-0.02134628,-0.0070981877,-0.008300613,0.020441229,0.026815375,0.011707484,-0.00010232331,0.002957578,-0.0040727304,0.01649779,-0.033280026,-5.7020246E-05,-0.00398869,0.012955162,0.0045478824,0.02338911,-0.039563667,-0.0072080866,0.008164855,0.015140214,-0.018113954,0.009160412,-0.034598816,-0.01912244,-0.032064673,-0.0065842476,-0.0107701095,-0.004483236,0.01290991,-0.009696977,-0.0006303035,-0.0016953549,0.0041018217,-0.009729301,0.001120001,0.013601627,0.011242029,0.02911679,-0.005734146,-0.0068589956,0.007052935,-0.0128129395,0.015502235,0.0036331343,0.009457786,0.01910951,0.013937789,-0.021514362,-0.014700618,-0.0012492939,0.0052525294,-0.02002749,0.0043701045,-0.009179805,0.0023191937,-0.019833552,-0.015864255,-0.015295366,-0.014416173,-0.0034909118,0.014054153,-0.022419412,0.027591133,0.012625465,-0.030099418,0.012366879,0.004205256,-0.006603642,-0.0031353561,-0.02359598,-0.010039604,-0.002807275,0.00603152,-0.007789905,-0.0025842446,0.008714351,0.00714344,-0.00432162,-0.030409722,0.026052546,0.24493273,-0.008882431,-0.009587078,0.014558395,-0.0035846494,0.011267887,0.031599216,0.0009317179,-0.015204861,-0.008423441,-0.031288914,0.010194756,0.0009713139,0.0027523255,-0.010647281,-0.036150333,-0.035555582,-0.0086367745,-0.022057392,-0.024022646,-0.004046872,-0.010336978,0.0026440425,-0.016627084,0.02023436,-0.009787482,-0.0051555596,0.006852531,0.02002749,0.014791123,0.01410587,-0.025483657,-0.005921621,0.0052816207,-0.0057018227,-0.01728648,0.011487686,0.0042602057,0.0034553562,0.019704258,0.010065462,0.01224405,-0.009250917,0.022846079,0.0014933345,0.030306287,-0.016394356,0.010873544,0.00063434395,0.018501833,-0.026841234,-0.014067082,0.027487699,0.029090934,-0.011720413,0.012993949,0.017739004,0.01002021,-0.023156382,-0.007537784,0.0010731322,0.019368097,-0.006151116,0.034004066,-0.025651738,0.021087693,-0.023466686,-0.0057890955,-0.0005288893,-0.0024824264,-0.009406068,-0.0069624297,0.0004985863,0.0005692934,-0.0034553562,-0.015243649,0.031263057,0.0004654549,0.014791123,0.0024468706,-0.023789918,0.013860214,-0.00454465,-0.01446789,-0.0023127291,-0.047941856,0.009929705,-0.008384653,-0.0202085,-0.007919198,0.014118799,-0.0010076776,0.011862636,-0.006529298,0.004670711,0.031418208,-0.016937388,0.021979816,-0.008106673,0.019523248,-0.019975774,-0.025470728,0.0073050563,0.0065648537,-0.024604464,0.013304253,0.008184249,0.005207277,0.014816982,0.00329374,0.0008759603,-0.019936986,-0.0054690954,0.0015313143,-0.0072145513,0.01114506,0.02691881,-0.006762026,-0.014597183,-0.009813341,-0.002092931,0.0004711115,-0.021397997,0.012470313,0.0036557605,-0.02412608,0.0009204048,-0.00016787893,0.013937789,-0.01782951,0.0061737425,-0.032581843,0.007492531,0.007899804,-0.0034165685,0.031211339,0.010168897,-0.02618184,-0.012011323,0.025005274,0.019070722,0.0068396013,0.0028185882,-0.00482263,0.0053721257,-0.019730117,-0.0021187896,0.008151926,-0.015114356,-0.0017325267,-0.029892549,-0.027798003,-0.00817132,0.002411315,0.0363572,-0.018514762,-0.057664692,-0.030358003,-0.0020638402,0.035219423,-0.030461438,0.0045252563,0.006833137,0.00034484876,0.00042343469,0.0054593985,-0.16590883,0.008080815,0.0055402066,-0.015036779,0.028832346,0.008927684,0.010414554,-0.008106673,-0.018346682,-0.00052242464,0.015825467,0.008223037,-0.040184274,0.01242506,0.0014294961,0.00853334,-0.01816567,0.02059638,0.026298203,0.008248895,0.0042408113,-0.006613339,0.0066521266,-0.02024729,0.024888908,0.027513558,0.018773349,-0.0114295045,-0.0032274774,-0.00472566,-0.0046092966,0.0012113141,0.009684049,-0.012948697,0.03576245,-0.015502235,-0.017014964,-0.0063127326,0.010227079,0.0066391975,0.013200819,0.0017632338,0.0040016193,-0.0027248508,-0.0026149517,0.027410123,-0.0031353561,-0.003006063,-0.0065616216,-0.0036428312,0.0061866716,-0.014985062,0.007938593,-0.010537382,0.0098391995,0.02893578,0.014312739,0.0121341515,0.003859397,-0.020441229,0.003195154,-0.021966886,0.005288085,0.027487699,-0.0021559612,-0.019238804,0.00048202058,0.016989104,-0.029194366,0.0046933373,-0.031392347,-0.007899804,0.015903043,-0.02393214,0.01095112,-0.022794362,-0.0005907075,0.0046739434,0.0026957598,-0.0066521266,-0.020505875,0.042951144,-0.026285274,0.00087838457,0.013420617,-0.007221016,-0.0032290935,-0.008863037,-0.010130109,0.010634352,0.012651323,-0.026285274,0.027306689,-0.020867895,0.016122842,0.026686082,0.005365661,0.00058545504,0.030487297,-0.010175361,0.0030626287,-0.020842036,-0.017234761,0.0029818206,0.025548303,0.0022270726,0.030280428,-0.002766871,0.02247113,-0.014597183,-0.003581417,0.0067232377,0.010964049,0.0008290916,-0.0070270766,0.005514348,0.014403244,-0.008223037,0.02709982,-0.020661026,0.044011347,0.009496573,-0.028185882,-0.013717991,0.0045187916,0.0074149556,-0.10503766,-0.0014642436,-0.01894143,0.008856573,-0.028496185,-0.0057050553,-0.013808496,-0.0029010125,0.01132607,0.009011724,0.018708702,-0.013026273,0.0071240463,-0.011985464,0.014739406,-0.0017923247,-0.02950467,-0.018656984,0.006852531,0.008003239,-0.004631923,-0.0018876783,-0.012728899,-0.023828706,-0.014829911,-0.0064711166,-0.02896164,0.006613339,0.013705062,0.014610113,0.009677583,-0.025677597,0.010996372,-0.023104666,-0.0007701016,0.014545467,-0.027151536,0.00882425,0.023906281,-0.04158064,0.0056468733,-0.018023448,0.008481623,-0.0017438398,-0.0075119254,0.017208902,-0.011823848,0.0015959609,0.007149905,-0.019730117,-0.026505072,-0.0075183897,-0.01168809,-0.0059862672,0.033228308,-0.007886875,0.018695774,0.005747075,-0.001696971,0.005178186,-0.0019490925,-0.019200016,-0.00993617,0.02466911,0.016277993,-0.01335597,-0.0066715204,0.020635169,0.032555986,-0.0012072737,-0.00945132,0.01984648,-0.0025567696,0.027616993,-0.028444467,0.0161487,-0.019264663,-0.014920416,0.01781658,-0.026466284,0.003044851,-0.031625077,0.023673555,-0.013071526,0.023182241,-0.018993147,0.021048905,-0.005317176,0.0027523255,-0.003610508,0.0049971757,0.0033648512,-0.0056080855,-0.020156784,-0.0066521266,0.011778595,-0.011545868,-0.028987499,0.00464162,-0.0028315175,-0.009141018,-0.0016727286,-0.05849217,0.01801052,0.02023436,-0.006477581,0.00074505113,-0.020066278,0.024087293,0.0017745469,0.007369703,-0.005979803,-0.0033551543,0.028237598,0.019316379,0.007841622,0.009425462,-0.030358003,-0.00487758,-0.0040501044,0.0011967686,-0.0014901023,-0.0047450545,0.005905459,0.012981021,0.020997189,-0.02060931,0.0026117193,-0.022587493,0.011675161,-1.9671734E-05,-0.009632331,0.006367682,-0.032555986,0.012121222,-0.0041535385,0.0018133348,-0.013317183,-0.009884452,0.020803249,0.018023448,0.044787105,-0.02262628,-0.017557994,0.0168986,-0.0020557593,-0.009490109,0.012211727,-0.0077446527,0.0035878818,0.037003666,-0.0059183887,0.026013758,0.011901423,-0.0023143452,-0.023531333,-0.008048492,-0.027953153,0.022393553,-0.01448082,-0.025949111,-0.020725673,0.008714351,0.009044047,0.0063095,0.025380222,0.022432342,-0.011823848,0.012793546,-0.008229502,-0.010181827,-0.020467088,-0.0015313143,-0.0035587908,0.0014012132,0.014752335,-0.008320007,0.015747892,-0.022018604,-0.009865059,-0.0052525294,0.043028723,-0.008863037,0.004800004,-0.04923479,0.015747892,0.009121624,0.023156382,-0.022005673,0.011358393,-0.0095224315,-0.0010602028,0.013330112,0.008307077,0.023350323,1.0486119E-05,0.0051587922,0.019471532,-0.008785462,-0.0012541424,0.022109108,0.0057987925,-0.010970514,-0.001597577,-0.0040436396,-0.030668307,-0.0050650546,0.004066266,-0.023958,-0.030461438,-0.0015983852,0.015903043,-0.0049195997,-0.010259402,-0.006677985,0.010168897,-0.011371322,0.0029107095,-0.0052913176,-0.029194366,-0.008313542,0.01634264,-0.0050230343,0.016433144,0.016019408,-0.0124961715,0.013058596,0.012211727,0.027487699,0.00394667,-0.0078028347,0.0008290916,0.011487686,-0.016730519,-0.028004872,0.008662634,0.0061737425,-0.00676849,-0.0060993987,0.0029737398,-0.031599216,0.04437337,0.019368097,0.0008937381,0.010686069,-0.023052948,0.021850523,0.008669098,0.02932366,-0.0156056695,-0.018230317,-0.0020412137,-0.02968568,0.030487297,0.012890516,-0.021204058,0.022160826,-0.029065074,0.009580614,0.004295761,-0.0051814183,0.023893353,0.0076218243,0.033383463,-0.0010052533,-0.023440827,-0.016096983,-0.01103516,-0.009199199,-0.0023434362,-0.004476771,0.0068202075,0.0057793986,-0.0224582,-0.0057082875,0.026660224,-0.0077640465,-0.0030125277,-0.008585057,0.0134723345,0.010511524,-0.0033195987,0.010033139,-0.014920416,0.010505059,0.0037268717,0.019342238,0.003461821,-0.015851326,-0.033900633],\n                    \"path\": \"plot_embedding\",\n                    \"k\": 5\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"plot\": 1,\n                  \"title\": 1,\n                  \"score\": { $meta: \"searchScore\" }\n                }\n              }\n            ])\n\n         .. output:: \n            :language: js\n            :linenos: \n\n            [\n              {\n                plot: 'When two girls move to the country to be near their ailing mother, they have adventures with the wonderous forest spirits who live nearby.',\n                title: 'My Neighbor Totoro',\n                score: 0.9999986886978149\n              },\n              {\n                plot: \"To escape a war, a girl flees to a remote farmhouse and becomes part of an expansive family's unusual, perhaps even supernatural lifestyle.\",\n                title: 'Black Moon',\n                score: 0.8282386660575867\n              },\n              {\n                plot: 'A shape-shifting mountain man and a group of children team up to protect an enchanted forest from evil lumberjacks.',\n                title: 'Forest Warrior',\n                score: 0.8196926712989807\n              },\n              {\n                plot: 'A shape-shifting mountain man and a group of children team up to protect an enchanted forest from evil lumberjacks.',\n                title: 'Forest Warrior',\n                score: 0.8196901082992554\n              },\n              {\n                plot: 'An adventurous girl finds another world that is a strangely idealized version of her frustrating home, but it has sinister secrets.',\n                title: 'Coraline',\n                score: 0.815956711769104\n              }\n            ]\n\n   .. tab:: Filter Example \n      :tabid: filter \n\n      The following query filters the documents for movies released \n      before or on (``≤``) 30 June, 1971 (``1971-06-30``), then searches\n      the ``plot_embedding`` field in the filtered documents for\n      ``vector`` dimensions, and requests up to ``5`` nearest neighbors\n      in the results. The query also specifies a :pipeline:`$project`\n      stage to: \n\n      - Exclude the ``_id`` field and include only ``plot``, ``title``,\n        and ``released`` fields in the results.\n      - Add a field named ``score`` in the results.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/knn-beta.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json \n            :linenos:\n\n            db.embedded_movies.aggregate([\n              {\n                \"$search\": {\n                  \"index\": \"default\",\n                  \"knnBeta\": {\n                    \"vector\": [-0.0072121937,-0.030757688,0.014948666,-0.018497631,-0.019035352,0.028149737,-0.0019593239,-0.02012424,-0.025649332,-0.007985169,0.007830574,0.023726976,-0.011507247,-0.022839734,0.00027999343,-0.010431803,0.03823202,-0.025756875,-0.02074262,-0.0042883316,-0.010841816,0.010552791,0.0015266258,-0.01791958,0.018430416,-0.013980767,0.017247427,-0.010525905,0.0126230195,0.009255537,0.017153326,0.008260751,-0.0036060968,-0.019210111,-0.0133287795,-0.011890373,-0.0030599732,-0.0002904958,-0.001310697,-0.020715732,0.020890493,0.012428096,0.0015837587,-0.006644225,-0.028499257,-0.005098275,-0.0182691,0.005760345,-0.0040665213,0.00075491105,0.007844017,0.00040791242,0.0006780336,0.0027037326,-0.0041370974,-0.022275126,0.004775642,-0.0045235846,-0.003659869,-0.0020567859,0.021602973,0.01010917,-0.011419867,0.0043689897,-0.0017946466,0.000101610516,-0.014061426,-0.002626435,-0.00035540052,0.0062174085,0.020809835,0.0035220778,-0.0071046497,-0.005041142,0.018067453,0.012569248,-0.021683631,0.020245226,0.017247427,0.017032338,0.01037131,-0.036296222,-0.026334926,0.041135717,0.009625221,0.032155763,-0.025057837,0.027827105,-0.03323121,0.0055721425,0.005716655,0.01791958,0.012078577,-0.011117399,-0.0016005626,-0.0033254733,-0.007702865,0.034306653,0.0063854465,-0.009524398,0.006069535,0.012696956,-0.0042883316,-0.013167463,-0.0024667988,-0.02356566,0.00052721944,-0.008858967,0.039630096,-0.0064593833,-0.0016728189,-0.0020366213,0.00622413,-0.03739855,0.0028616884,-0.0102301575,0.017717933,-0.0041068504,-0.0060896995,-0.01876649,0.0069903834,0.025595559,0.029762903,-0.006388807,0.017247427,0.0022080203,-0.029117636,-0.029870447,-0.0049739266,-0.011809715,0.023243025,0.009510955,0.030004878,0.0015837587,-0.018524516,0.007931396,-0.03589293,0.013590919,-0.026361812,0.002922182,0.025743432,0.014894894,0.0012989342,-0.0016232478,0.006251016,0.029789789,-0.004664737,0.017812036,-0.013436324,-0.0102301575,0.016884465,-0.017220542,0.010156221,0.00014503786,0.03933435,0.018658947,0.016897907,0.0076961434,-0.029843561,-0.02021834,0.015056211,0.01002179,-0.0031994449,-0.03796316,-0.008133043,0.03707592,0.032128878,9.483648E-05,0.0017627194,-0.0007544909,0.006647586,0.020903936,-0.032559056,0.025272924,-0.012804501,0.019210111,0.0022987607,0.013301893,-0.0047218697,-0.022853177,-0.02162986,0.006788738,0.0092286505,0.024184039,-0.015419173,-0.006479548,-0.00180977,0.0060728956,-0.0030919004,0.0022449887,-0.004046357,0.012663349,-0.028579915,0.0047722813,-0.6775295,-0.018779935,-0.018484188,-0.017449073,-0.01805401,0.026630674,0.008018777,0.013436324,-0.0034683058,0.00070912065,-0.005027699,0.009658828,-0.0031792803,-0.010478854,0.0034951917,-0.011594627,0.02441257,-0.042533796,-0.012414653,0.006261098,-0.012266779,0.026630674,-0.017852364,-0.02184495,0.02176429,0.019263884,0.00984031,-0.012609577,-0.01907568,-0.020231783,-0.002886894,0.02706085,-0.0042345594,0.02265153,0.05769755,0.021522315,-0.014195856,0.011144285,0.0038077426,0.024573887,-0.03578539,-0.004476534,0.016521502,-0.019815048,0.00071836275,0.008173372,0.013436324,0.021885278,-0.0147604635,-0.021777734,0.0052595916,-0.011668564,-0.02356566,-0.0049974523,0.03473683,-0.0255149,0.012831387,-0.009658828,-0.0031036632,-0.001386314,-0.01385978,0.008294359,-0.02512505,-0.0012308789,0.008711093,0.03610802,0.016225755,0.014034539,0.0032431346,-0.017852364,0.017906137,0.005787231,-0.03514012,0.017207097,-0.0019542826,-0.010189828,0.010808208,-0.017408744,-0.0074944976,0.011009854,0.00887241,0.009652107,-0.0062409337,0.009766373,0.009759651,-0.0020819916,-0.02599885,0.0040665213,0.016064439,-0.019035352,-0.013604362,0.020231783,-0.025272924,-0.01196431,-0.01509654,0.0010233518,-0.00869765,-0.01064017,0.005249509,-0.036807057,0.00054570363,0.0021777733,-0.009302587,-0.00039362916,0.011386259,0.013382551,0.03046194,0.0032380936,0.037801843,-0.036807057,-0.006244295,0.002392862,-0.01346321,-0.008953068,-0.0025861058,-0.022853177,0.018242212,-0.0031624765,0.009880639,-0.0017341529,0.0072054723,0.014693249,0.026630674,0.008435511,-0.012562525,0.011581183,-0.0028768117,-0.01059312,-0.027746446,0.0077969665,2.468059E-05,-0.011151006,0.0152712995,-0.01761039,0.023256468,0.0076625356,0.0026163526,-0.028795004,0.0025877862,-0.017583502,-0.016588718,0.017556617,0.00075491105,0.0075885993,-0.011722336,-0.010620005,-0.017274313,-0.008025498,-0.036376882,0.009457182,-0.007265966,-0.0048663826,-0.00494368,0.003616179,0.0067820163,0.0033775652,-0.016037554,0.0043320213,-0.007978448,-0.012925488,0.029413383,-0.00016583256,-0.018040568,0.004180787,-0.011453475,-0.013886666,-0.0072121937,0.006486269,0.008005333,-0.01412864,-0.00061796,-0.025635887,-0.006630782,0.02074262,-0.007192029,0.03906549,-0.0030885397,-0.00088976155,-0.022033151,-0.008758144,0.00049361185,0.009342916,-0.014988995,-0.008704372,0.014276514,-0.012300386,-0.0020063745,0.030892119,-0.010532626,0.019653732,0.0028583275,0.006163636,0.0071517,-0.017489402,-0.008448954,-0.004352186,0.013201071,0.01090231,0.0004110631,0.03306989,0.006916447,0.002922182,0.023888292,-0.009067334,0.012434817,-0.051298663,0.016279528,-0.02741037,0.026227381,-0.005182294,0.008153207,-0.026603786,0.0045571923,0.018067453,0.038016934,0.028042194,0.0077431942,0.015499831,-0.020298999,0.0013123773,-0.021334114,-0.026281154,-0.0012720482,-0.0045571923,0.006086339,0.0028952959,-0.003041489,0.007931396,-0.0005406625,-0.023444671,-0.0038715971,0.0070374343,-0.0019979726,0.024089938,0.0020903936,-0.024210924,0.007319738,-0.005995598,0.032478396,0.020998036,0.01654839,0.033876475,0.025098165,0.021132467,-0.017099554,-0.013516982,0.01306664,0.010525905,-0.02335057,-0.013543868,-0.03583916,0.021172797,-0.033607613,-0.0036094578,-0.007911232,-0.0054578763,0.013227956,0.00993441,0.025810648,0.02255743,-0.013678298,0.012273501,0.00040497174,0.0019072321,0.0008170851,0.01540573,0.015580489,0.005239427,0.003989224,-0.013254843,0.024708318,0.0046680975,-0.034360424,-0.0041942303,0.0077095865,-0.0053503322,-0.024399128,-0.02644247,0.0062476555,0.021885278,-0.0010922474,-0.014209299,0.018295985,0.0135640325,0.0033842868,0.0017812036,0.004735313,0.006486269,-0.008072549,0.009551284,0.007938119,0.0101696635,0.021750847,0.014034539,0.0071449787,-0.008448954,0.010841816,-0.008274195,-0.014531932,-0.0024785616,0.0018601815,0.009564727,-0.011130841,-0.020581303,0.012985982,0.019976366,-0.030542599,-0.021818062,-0.018551402,-0.0092286505,-0.024385685,0.0036901159,-0.0061367503,-0.00034048714,-0.007057599,-0.014558818,-0.022221355,0.023377456,0.026119838,-0.0008813597,0.004520224,0.0027843907,-0.022382671,0.0018248934,0.13313992,0.013685021,-6.170148E-05,0.015876237,0.005417547,-0.008314524,-0.019169783,-0.016494617,0.016844137,-0.0046412116,0.024305027,-0.027827105,0.023162367,0.0143034,-0.0029893972,-0.014626034,-0.018215327,0.0073264595,0.024331912,-0.0070777633,-0.0004259765,-0.00042345593,-0.0034262962,-0.00423792,-0.016185427,-0.017946465,-5.9706024E-05,0.016467731,-0.014773907,-0.022664975,-0.009322752,-0.027585128,0.0020651878,-0.010532626,-0.010546069,0.009174879,-0.0011098915,0.026469355,0.022006266,-0.013039754,0.023458114,0.005481402,-0.00050705485,-0.012092019,0.0055990284,-0.007057599,-0.012266779,0.03253217,0.007071042,-0.01699201,0.06597847,-0.013436324,0.0070038266,-0.009981461,0.024829306,0.0067383265,0.0056292755,0.0018534599,-0.020057024,0.011735778,0.0025491375,-0.022194467,0.0012468424,-0.0051621296,-0.018457301,-0.008509448,-0.011594627,-0.0152712995,-0.001858501,-0.014921781,-0.0056696045,-0.0066979975,-0.02008391,0.0040093884,0.032935463,-0.0032935461,-0.0074205613,-0.014088311,-0.0014762144,-0.011218221,0.011984475,-0.01898158,-0.027208723,-0.008072549,0.010942639,0.0183632,0.04148524,-0.0009922648,-0.017086111,0.013483374,0.019841935,0.024264697,0.011601348,-0.0077431942,-0.020258669,-0.005770427,0.013429603,-0.011554297,-0.012831387,-1.4752561E-06,0.011594627,-0.012683514,-0.012824666,0.02180462,0.011023297,0.012468425,-0.0029860365,-0.0076289284,-0.021293784,0.005068028,0.017812036,0.0007708746,-0.008684208,0.0048126103,-0.0076558143,0.019169783,-0.0076558143,0.028579915,-0.011574462,-0.03196756,-0.0011334168,-0.030219967,0.023901735,0.014021097,-0.016776921,0.0030045207,-0.0019257163,-0.023579102,0.004197591,0.00012497831,-0.016803807,0.01915634,-0.010472132,-0.042130504,-0.038016934,-0.007702865,-0.0025861058,-0.010512462,-0.013537147,-0.013382551,-0.0036397045,0.0053032814,0.0046277684,-0.021952493,-0.016588718,-0.031886905,0.0058208387,-0.00043689896,-0.01337583,0.018349757,0.015244413,0.00900684,-0.017677605,0.01523097,0.010337702,-0.024426013,-0.021965936,-0.014182413,0.008596827,0.029628472,0.058611676,-0.015446059,0.021374442,-0.0095042335,0.00091748784,0.021132467,-0.011285436,-0.0035724894,-0.027907763,0.027302826,0.004184148,0.026281154,-0.0026802071,-0.015163755,0.005699851,0.023122039,0.0075415485,-0.020057024,-0.0109359175,-0.018309427,0.017529732,0.0020685487,-0.012441538,0.0023239665,0.012038247,-0.017543174,0.029332725,0.01399421,-0.0092488155,-1.0607403E-05,0.019371428,-0.0315105,0.023471557,-0.009430297,0.00022097006,0.013301893,-0.020110795,-0.0072928523,0.007649093,0.011547576,0.026805433,-0.01461259,-0.018968137,-0.0104250815,0.0005646079,0.031456728,-0.0020147765,-0.024224367,0.002431511,-0.019371428,-0.025017507,-0.02365976,-0.004318578,-0.04457714,0.0029826758,-0.020473758,-0.016118212,-0.00068181445,-0.03446797,-0.020715732,-0.04256068,-0.013792564,0.013873223,0.011413146,-0.002419748,0.0123877665,-0.0011115718,0.007978448,0.021441657,0.004405958,0.0042480025,0.022920392,-0.0067920987,0.011083791,-0.017529732,-0.03659197,-0.0066005355,-0.023888292,-0.016521502,0.009591613,-0.0008590946,0.013846337,-0.021092137,-0.012562525,-0.0028415236,0.02882189,5.3378342E-05,-0.006943333,-0.012226449,-0.035570297,-0.024547001,0.022355784,-0.018416973,0.014209299,0.010035234,0.0046916227,0.009672271,-0.00067635323,-0.024815861,0.0007049197,0.0017055863,-0.0051251613,0.0019391594,0.027665788,-0.007306295,-0.013369109,0.006308149,0.009699157,0.000940173,0.024842748,0.017220542,-0.0053032814,-0.008395182,0.011359373,0.013214514,0.0062711807,0.004110211,-0.019277327,-0.01412864,-0.009322752,0.007124814,0.0035119955,-0.024036165,-0.012831387,-0.006734966,-0.0019694061,-0.025367027,-0.006630782,0.016010666,0.0018534599,-0.0030717358,-0.017717933,0.008489283,0.010875423,-0.0028700903,0.0121323485,0.004930237,0.009947853,-0.02992422,0.021777734,0.00015081417,0.010344423,0.0017543174,0.006166997,-0.0015467904,0.010089005,0.0111711705,-0.010740994,-0.016965123,-0.006771934,0.014464716,0.007192029,-0.0006175399,-0.010855259,-0.003787578,0.015647706,0.01002179,-0.015378844,-0.01598378,0.015741806,-0.0039119264,-0.008422068,0.03253217,-0.019210111,-0.014975552,0.0025810648,0.0035556855,8.449164E-05,-0.034172222,-0.006395529,-0.0036867552,0.020769505,0.009766373,-0.017543174,-0.013557311,0.0031994449,-0.0014577302,0.01832287,-0.009907524,-0.024654545,0.0049940916,0.016965123,0.004476534,0.022261683,-0.009369803,0.0015308268,-0.010102449,-0.001209874,-0.023807634,-0.008348132,-0.020312442,0.030892119,-0.0058309208,-0.005128522,-0.02437224,0.01478735,-0.011016576,-0.010290652,-0.00503106,0.016884465,0.02132067,-0.014236185,-0.004903351,0.01902191,0.0028179984,0.019505858,-0.021535758,-0.0038514326,0.0112115,0.0038682362,0.003217929,-0.0012770894,-0.013685021,-0.008381739,0.0025256122,0.029386498,0.018645504,0.005323446,-0.0032784226,-0.0043253,0.0007998612,0.019949479,0.025770318,-0.0030868594,0.018968137,-0.010236879,-0.005370497,-0.024748646,-0.014047982,0.005760345,-0.03610802,0.0042009517,-0.0034817487,0.003385967,0.006560206,-0.006294706,-0.02400928,-0.006140111,-0.0017980073,-0.012481867,-0.0033960494,-0.00097210024,0.014061426,-0.017596947,-0.023202697,0.0028499255,-0.016010666,-0.028149737,0.0024752007,-0.018941252,0.0056158323,-0.012912045,0.0054410724,0.003054932,0.019559631,-0.0048932685,-0.007823853,-0.017099554,0.025662774,0.02572999,0.004379072,-0.010223436,0.0031036632,-0.011755943,-0.025622444,-0.030623257,0.019895706,-0.02052753,-0.006637504,-0.001231719,-0.013980767,-0.02706085,-0.012071854,-0.0041370974,-0.008885853,0.0001885177,0.2460615,-0.009389968,-0.010714107,0.0326666,0.0009561366,0.022624645,0.009793258,0.019452088,-0.004493338,-0.007097928,-0.0022298652,0.012401209,-0.0036229007,-0.00023819396,-0.017502844,-0.014209299,-0.030542599,-0.004863022,0.005128522,-0.03081146,0.02118624,-0.0042177555,0.0032448152,-0.019936036,0.015311629,0.0070508774,-0.02021834,0.0016148458,0.04317906,0.01385978,0.004211034,-0.02534014,-0.00030309867,-0.011930703,-0.00207527,-0.021643303,0.01575525,-0.0042883316,0.0069231684,0.017946465,0.03081146,0.0043857936,3.646951E-05,-0.0214551,0.0089933975,0.022785962,-0.008106156,0.00082884775,-0.0006717322,-0.0025457768,-0.017059224,-0.035113234,0.054982055,0.021266898,-0.0071046497,-0.012636462,0.016965123,0.01902191,-0.0061737187,0.00076247274,0.0002789432,0.030112421,-0.0026768465,0.0015207445,-0.004926876,0.0067551304,-0.022624645,0.0005003333,0.0035523248,-0.0041337362,0.011634956,-0.0183632,-0.02820351,-0.0061737187,-0.022355784,-0.03796316,0.041888528,0.019626847,0.02211381,0.001474534,0.0037640526,0.0085228905,0.013140577,0.012616298,-0.010599841,-0.022920392,0.011278715,-0.011493804,-0.0044966987,-0.028741231,0.015782135,-0.011500525,-0.00027621258,-0.0046378504,-0.003280103,0.026993636,0.0109359175,0.027168395,0.014370616,-0.011890373,-0.020648519,-0.03465617,0.001964365,0.034064677,-0.02162986,-0.01081493,0.014397502,0.008038941,0.029789789,-0.012044969,0.0038379894,-0.011245107,0.0048193317,-0.0048563,0.0142899575,0.009779816,0.0058510853,-0.026845763,0.013281729,-0.0005818318,0.009685714,-0.020231783,-0.004197591,0.015593933,-0.016319858,-0.019492416,-0.008314524,0.014693249,0.013617805,-0.02917141,-0.0052058194,-0.0061838008,0.0072726877,-0.010149499,-0.019035352,0.0070374343,-0.0023138842,0.0026583623,-0.00034111727,0.0019038713,0.025945077,-0.014693249,0.009820145,-0.0037506097,0.00041127318,-0.024909964,0.008603549,-0.0041707046,0.019398315,-0.024022723,-0.013409438,-0.027880875,0.0023558936,-0.024237812,0.034172222,-0.006251016,-0.048152987,-0.01523097,-0.002308843,-0.013691742,-0.02688609,0.007810409,0.011513968,-0.006647586,-0.011735778,0.0017408744,-0.17422187,0.01301959,0.018860593,-0.00068013405,0.008791751,-0.031618044,0.017946465,0.011735778,-0.03129541,0.0033607613,0.0072861305,0.008227143,-0.018443858,-0.014007653,0.009961297,0.006284624,-0.024815861,0.012676792,0.014222742,0.0036632298,0.0028364826,-0.012320551,-0.0050478633,0.011729057,0.023135481,0.025945077,0.005676326,-0.007192029,0.0015308268,-0.019492416,-0.008932903,-0.021737404,0.012925488,0.008092714,0.03245151,-0.009457182,-0.018524516,0.0025188907,-0.008569942,0.0022769158,-0.004617686,0.01315402,0.024291582,-0.001880346,0.0014274834,0.04277577,0.010216715,-0.018699275,0.018645504,0.008059106,0.02997799,-0.021576088,0.004846218,0.015741806,0.0023542133,0.03142984,0.01372535,0.01598378,0.001151901,-0.012246614,-0.004184148,-0.023605987,0.008657321,-0.025770318,-0.019048795,-0.023054823,0.005535174,-0.018161554,-0.019761277,0.01385978,-0.016655933,0.01416897,0.015311629,0.008919461,0.0077499156,0.023888292,0.015257857,0.009087498,0.0017845642,0.0013762318,-0.023713533,0.027464142,-0.014021097,-0.024681432,-0.006741687,0.0016450927,-0.005804035,-0.002821359,0.0056796866,-0.023189254,0.00723908,-0.013483374,-0.018390086,-0.018847149,0.0061905226,0.033365637,0.008489283,0.015257857,0.019694062,-0.03019308,-0.012253336,0.0021744126,-0.00754827,0.01929077,0.025044393,0.017677605,0.02503095,0.028579915,0.01774482,0.0029961187,-0.019895706,0.001165344,-0.0075281053,0.02105181,-0.009221929,0.023404341,-0.0028079161,-0.0037237236,0.02847237,0.0009821824,0.04629785,-0.017771706,-0.038904175,0.00869765,0.0016249281,0.020984594,-0.10867358,-0.008395182,-0.0010830053,0.008059106,-0.020097353,0.0020383017,0.008038941,-0.009047169,-0.007252523,0.0286068,-0.0037774958,-0.024923407,0.005279756,-0.009524398,0.011527412,-0.0020198175,0.019452088,0.014384058,-0.025609002,0.006025845,-0.030542599,0.016790364,0.019223554,-0.012434817,0.003901844,-0.007817131,-0.027612016,0.008314524,0.007938119,-0.0004868903,0.014747021,-0.009457182,0.014706692,-0.018847149,0.015311629,0.015647706,-0.0031288688,-0.0032717013,0.008879132,-0.034629285,0.0090337265,0.004382433,0.011305601,-0.028391711,0.0053268066,0.0003566608,-0.019169783,0.011507247,0.023592545,-0.006603896,-0.009685714,0.010714107,-0.027907763,0.006412333,0.0045706355,-0.029816674,0.0047958065,0.0018500991,-0.011500525,0.0030179636,0.015997224,-0.022140697,-0.0001849469,-0.014263071,0.011540854,-0.006607257,-0.01871272,-0.0038480717,-0.0024903242,-0.031214751,-0.0050478633,0.021481987,-0.012912045,0.028122852,-0.018605174,-0.00723908,0.0023609349,-0.0073331813,0.014935223,-0.005699851,-0.0068895607,-0.015244413,0.029789789,-0.02458733,0.0004453009,0.0015577129,0.0048596608,0.009376524,-0.011984475,-0.014518489,0.015647706,0.0068794787,0.0065534846,0.003107024,-0.01973439,0.027383484,-0.015459502,-0.006318231,0.020863606,-0.0021357639,-0.0076692575,-0.021266898,-0.046862457,0.025326697,0.016521502,-0.0036833945,0.0029860365,-0.016306413,0.026496243,-0.016803807,0.008724537,-0.0025407355,-0.027302826,0.017798591,0.0060796174,-0.014007653,-0.01650806,-0.0095042335,0.009242094,-0.009342916,0.010330981,0.009544563,0.018591732,0.0036867552,0.0194252,0.0092488155,-0.007823853,0.0015501512,-0.012031525,0.010203271,-0.0074272826,-0.020258669,0.025662774,-0.03032751,0.014854565,0.010835094,0.0007708746,0.0009989863,-0.014007653,-0.012871716,0.023444671,0.03323121,-0.034575514,-0.024291582,0.011634956,-0.025958521,-0.01973439,0.0029742739,0.0067148013,0.0022399474,0.011802994,0.011151006,-0.0116416775,0.030166194,0.013039754,-0.022517102,-0.011466918,-0.0033053088,0.006156915,0.004829414,0.006029206,-0.016534945,0.015325071,-0.0109359175,0.032854803,-0.001010749,0.0021155993,-0.011702171,-0.009766373,0.00679882,0.0040900465,-0.019438643,-0.006758491,-0.0040060277,0.022436442,0.025850976,0.006150193,0.018632062,-0.0077230297,-0.015298186,-0.017381858,0.01911601,-0.005763706,-0.0022281848,-0.031994447,0.0015972018,0.028848775,0.014572261,-0.0073264595,-0.009551284,-0.0052058194,0.014518489,-0.0041068504,0.010754436,0.0055519775,-0.005804035,-0.0054007433,0.028579915,-0.01791958,-0.015284742,0.036807057,0.015069654,-0.0023810994,-0.0038648755,0.0015467904,-0.0037136413,0.0023458113,0.019008467,-0.011547576,-0.010001626,0.012347437,0.0155267175,0.01907568,-0.003041489,-0.0132414,0.017449073,0.00060073606,-0.008536334,0.008233866,-0.0085430555,-0.02365976,0.024089938,-0.0034615842,-0.006580371,0.008327967,-0.01509654,0.009692436,0.025635887,0.0020282194,-0.04022159,-0.0021290423,-0.012407931,-0.0021727323,0.006506434,-0.005320085,-0.008240587,0.020984594,-0.014491603,0.003592654,0.0072121937,-0.03081146,0.043770555,0.009302587,-0.003217929,0.019008467,-0.011271994,0.02917141,0.0019576435,-0.0077431942,-0.0030448497,-0.023726976,0.023377456,-0.006382086,0.025716545,-0.017341528,0.0035556855,-0.019129453,-0.004311857,-0.003253217,-0.014935223,0.0036363439,0.018121226,-0.0066543072,0.02458733,0.0035691285,0.0039085653,-0.014209299,0.020191453,0.0357585,0.007830574,-0.024130266,-0.008912739,0.008314524,-0.0346024,-0.0014005973,-0.006788738,-0.021777734,0.010465411,-0.004012749,-0.00679882,0.009981461,-0.026227381,0.027033964,-0.015567047,-0.0063115098,0.0023071626,0.01037131,0.015741806,-0.020635074,-0.012945653],\n                    \"path\": \"plot_embedding\",\n                    \"filter\": {\n                      \"range\": {\n                        \"lte\": ISODate(\"1971-06-30 00:27:59.177000000\"),\n                        \"path\": \"released\"\n                      }\n                   },\n                    \"k\": 5\n                 }\n                }\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"plot\": 1,\n                  \"released\": 1,\n                  \"score\": { $meta: \"searchScore\" }\n                }\n              }\n            ])\n\n         .. output::\n            :language: js\n            :linenos:\n\n            [\n              {\n                plot: 'A poor boy wins the opportunity to tour the most eccentric and wonderful candy factory of all.',\n                title: 'Willy Wonka & the Chocolate Factory',\n                released: ISODate(\"1971-06-30T00:00:00.000Z\"),\n                score: 0.9999985694885254\n              },\n              {\n                plot: 'A down-on-his-luck inventor turns a broken-down Grand Prix car into a fancy vehicle for his children, and then they go off on a magical fantasy adventure to save their grandfather in a far-off land.',\n                title: 'Chitty Chitty Bang Bang',\n                released: ISODate(\"1968-12-18T00:00:00.000Z\"),\n                score: 0.7576897740364075\n              },\n              {\n                plot: 'A red balloon with a life of its own follows a little boy around the streets of Paris.',\n                title: 'The Red Balloon',\n                released: ISODate(\"1957-03-11T00:00:00.000Z\"),\n                score: 0.7515948414802551\n              },\n              {\n                plot: 'While hearing the story of \"Gulliver's Travels\", a young boy dreams he is the title character on the island of Lilliput .',\n                title: 'The New Gulliver',\n                released: ISODate(\"1935-11-03T00:00:00.000Z\"),\n                score: 0.7495509386062622\n              },\n              {\n                plot: 'A living puppet, with the help of a cricket as his conscience, must prove himself worthy to become a real boy.',\n                title: 'Pinocchio',\n                released: ISODate(\"1940-02-23T00:00:00.000Z\"),\n                score: 0.7472590804100037\n              }\n            ]\n\n      |fts| filters the documents based on the ``released`` field \n      value that is less than or equal to ``1971-06-30``. It scores \n      the document with the title ``Willy Wonka & the Chocolate Factory`` higher\n      because it matches the search criteria in the ``filter`` option\n      and also the ``vector`` dimensions in the query.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/knn-beta.txt"
  },
  {
    "code": "   :copyable: false\n\n   \n    {\n      \"$search\": {\n        \"index\": index name, // optional, defaults to \"default\"\n        \"moreLikeThis\": {\n          \"like\": [\n            {\n              <\"field-name\">: <\"field-value\">,\n              ...\n            }, \n            ... \n          ],\n          \"score\": <options>\n        }\n      }\n    }\n\n.. _more-like-this-options:\n\nOptions\n-------\n\n``moreLikeThis`` uses the following option to constuct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``like``\n     - one |bson| document or an array of documents\n     - One or more |bson| documents that |fts| uses to extract\n       representative terms to query for.\n\n     - Required\n\n   * - ``score``\n     - object\n     - Score to assign to matching search results. You can modify\n       the default score using the following options:\n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score with the given expression.\n\n       For information on using ``score`` in your query, see\n       :ref:`scoring-ref`.\n\n       .. include:: /includes/fact-fts-array-scoring.rst\n     \n     - Optional\n\n.. _more-like-this-limitations:\n\nLimitations\n-----------\n\nYou can't use the ``moreLikeThis`` operator to query non-string values.\nTo search for non-string values, you can combine a ``moreLikeThis`` \nquery with a :ref:`near <near-ref>`, :ref:`range <range-ref>`, or any \nother operator in a :ref:`compound operator <compound-ref>` query.\n\nYou can't use the ``moreLikeThis`` operator inside the\n:ref:`embedded-document-ref` operator to query documents in an array.\n\n.. _more-like-this-examples-ref:\n\nExamples\n--------\n\nThe examples use the ``movies`` collection in the ``sample_mflix``\ndatabase. Each example in this section uses a different index \ndefinition to demonstrate different features of the operator.\n\nBefore you run the example queries on your cluster, :ref:`load the \nsample data <sample-data>` on your |service| cluster, and create the  \nsuggested index. To learn more about creating an |fts| index using the \nUI, API, or CLI, see :ref:`ref-create-index`. The index definitions use \nthe name ``default``.\n\n.. include:: /includes/default-fts-index-name.rst\n\nExample 1: Single Document with Multiple Fields\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example uses the ``moreLikeThis`` operator to find \ndocuments that are similar to multiple field values. For this example, \nthe index defition contains :ref:`dynamic mappings \n<static-dynamic-mappings>` to dynamically index all :ref:`dynamically \nindexable field types <bson-data-chart>` in the collection. Your index \ndefinition for the ``sample_mflix.movies`` collection should look \nsimilar to the following.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: javascript\n         :linenos:\n\n         db.movies.aggregate([\n           {\n             \"$search\": {\n             moreLikeThis: {\n              like:\n               { \n                 \"title\": \"The Godfather\",\n                 \"genres\": \"action\"\n               }\n             }\n            }\n           },\n           { \"$limit\": 5},\n           {\n             $project: {\n               \"_id\": 0,\n               \"title\": 1,\n               \"released\": 1,\n               \"genres\": 1\n             }\n           }\n         ])\n\n      .. output:: \n         :language: javascript\n\n         [\n          { genres: [ 'Comedy', 'Drama', 'Romance' ], title: 'Godfather' },\n          {\n           genres: [ 'Crime', 'Drama' ],\n           title: 'The Godfather',\n           released: ISODate(\"1972-03-24T00:00:00.000Z\")\n          },\n          {\n           genres: [ 'Crime', 'Drama' ],\n           title: 'The Godfather: Part II',\n           released: ISODate(\"1974-12-20T00:00:00.000Z\")\n          },\n          {\n           genres: [ 'Crime', 'Drama' ],\n           title: 'The Godfather: Part III',\n           released: ISODate(\"1990-12-26T00:00:00.000Z\")\n          },\n          {\n           genres: [ 'Action' ],\n           title: 'The Defender',\n           released: ISODate(\"1994-07-28T00:00:00.000Z\")\n          }\n         ]\n\n   |fts| results contain movies similar to the input movie title\n   \"The Godfather\" and input movie genre \"action\".\n\nExample 2: Input Document Excluded in Results\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example uses ``find()`` to identify an input document, and\nthen uses the ``moreLikeThis`` operator to find similar documents. For \nthis example, the index definition uses :ref:`static mappings \n<static-dynamic-mappings>` to index only the ``title``, ``genres``, and \n``_id`` fields.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"mappings\": {\n       \"dynamic\": false,\n       \"fields\": {\n         \"title\": {\n           \"type\": \"string\"\n         },\n         \"genres\": {\n           \"type\": \"string\"\n         },\n         \"_id\": {\n           \"type\": \"objectId\"\n         }\n       }\n     }\n   }\n\n.. example::\n\n   The following ``find()`` query finds the movie with the title\n   \"The Godfather\" and stores the result inside ``movie``. It specifies \n   that the results should only contain the ``title`` and ``genres`` \n   fields for the matching documents. Note that, by default, the ``find\n   ()`` command always returns the ``_id`` field, the value for which \n   might be different on your cluster.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: javascript\n\n         movie = db.movies.find( { title: \"The Godfather\" }, { genres: 1, title: 1} ).toArray()\n\n      .. output:: \n         :language: javascript\n\n         [\n          {\n           _id: ObjectId(\"573a1396f29313caabce4a9a\"),\n           genres: [ 'Crime', 'Drama' ],\n           title: 'The Godfather'\n          }\n         ]\n\n   The following query uses a :ref:`compound-ref` operator with the\n   ``moreLikeThis`` operator to query the ``title`` and ``genres``\n   fields and the :ref:`equals-ref` operator to exclude the input\n   document using the following clauses:\n\n   - The ``must`` clause to query for movies similar to the movie \n     stored in ``movie``.\n   - The ``mustNot`` clause to exclude the input document from results \n     by its ``_id`` value. Note that the ``_id`` value used in the query\n     matches the ``_id`` value in the results of the preceding \n     ``find()`` query.\n\n   The query limits the output to ``5`` results. The query uses\n   a :pipeline:`$project` stage to include the ``_id``, ``title``,\n   ``released``, and ``genres`` fields in the results.\n\n   .. note::\n\n      Before you run this query, replace the value of the ``_id`` field\n      on line 13 with the value of the ``_id`` field in your query\n      results.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "      :copyable: true\n\n\n      .. input::\n         :language: json\n         :linenos:\n\n         db.movies.aggregate([\n           {\n             \"$search\": {\n                \"compound\":{\n                   \"must\":[{ \n                     \"moreLikeThis\": { \n                       \"like\": movie\n                     }\n                   }],\n                   \"mustNot\":[{\n                     \"equals\": {\n                        \"path\": \"_id\",\n                        \"value\": ObjectId (\"573a1396f29313caabce4a9a\")\n                     }\n                   }]\n                  }\n                }\n              },\n         {\"$limit\": 5},\n         {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1,\n            \"released\": 1,\n            \"genres\": 1\n           }\n          }\n         ])\n\n      .. output:: \n         :language: json\n\n         [\n          {\n           _id: ObjectId(\"573a13acf29313caabd27afc\"),\n           genres: [ 'Comedy', 'Drama', 'Romance' ],\n           title: 'Godfather'\n          },\n          {\n           _id: ObjectId(\"573a1396f29313caabce557f\"),\n           genres: [ 'Crime', 'Drama' ],\n           title: 'The Godfather: Part II',\n           released: ISODate(\"1974-12-20T00:00:00.000Z\")\n          },\n          {\n           _id: ObjectId(\"573a1398f29313caabcebf7b\"),\n           genres: [ 'Crime', 'Drama' ],\n           title: 'The Godfather: Part III',\n           released: ISODate(\"1990-12-26T00:00:00.000Z\")\n          },\n          {\n           _id: ObjectId(\"573a1399f29313caabceed8d\"),\n           genres: [ 'Action' ],\n           title: 'The Defender',\n           released: ISODate(\"1994-07-28T00:00:00.000Z\")\n          },\n          {\n           _id: ObjectId(\"573a139af29313caabcef2a0\"),\n           genres: [ 'Action' ],\n           title: 'The Enforcer',\n           released: ISODate(\"1995-03-02T00:00:00.000Z\")\n          }\n         ]\n\n   |fts| results include documents that are similar to the query term\n   ``The Godfather`` in the  ``action`` genre. However, the results\n   don't include the document that was excluded by its ``_id``, which\n   is ``ObjectId(\"573a1396f29313caabce4a9a\")``.\n\nExample 3: Multiple Analyzers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example uses ``find()`` to identify input documents, and\nthen uses a ``moreLikeThis`` operator to find similar documents. For \nthis example, the index definition uses :ref:`static mappings \n<static-dynamic-mappings>` to index the fields in the \n``sample_mflix.movies`` collection with different analyzers. The index \ndefinition:\n\n- Configures an index on the ``_id``, ``title`` and ``genres`` fields.\n- Analyzes the ``title`` field using the ``lucene.standard`` analyzer\n  and an alternate analyzer named ``keywordAnalyzer`` that uses the\n  ``lucene.keyword`` analyzer.\n- Analyzes and searches the fields using the ``lucene.english`` \n  analyzer.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"mappings\": {\n       \"dynamic\": false,\n       \"fields\": {\n         \"title\": {\n           \"type\": \"string\",\n           \"analyzer\": \"lucene.standard\",\n           \"multi\": {\n             \"keywordAnalyzer\": {\n               \"type\": \"string\",\n               \"analyzer\": \"lucene.keyword\"\n             }\n           }\n         },\n         \"genres\": {\n           \"type\": \"string\"\n         },\n         \"_id\": {\n           \"type\": \"objectId\"\n         }\n       }\n     },\n     \"analyzer\": \"lucene.english\"\n   }\n\n.. example::\n\n   The following ``find()`` query retrieves the movies with the title\n   \"Alice in Wonderland\" and stores the results in ``movie``. It \n   specifies that the results should only contain the ``title`` and \n   ``genres`` fields for the matching documents. Note that, by default, \n   the ``find()`` command always returns the ``_id`` field, the value \n   for which might be different on your cluster.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: javascript\n\n         movie = db.movies.find( { title: \"Alice in Wonderland\" }, { genres: 1, title: 1} ).toArray\n\n\n      .. output:: \n         :language: javascript\n\n         [\n           {\n            _id: ObjectId(\"573a1394f29313caabcde9ef\"),\n            plot: 'Alice stumbles into the world of Wonderland. Will she get home? Not if the Queen of Hearts has her way.',\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a1398f29313caabce963d\"),\n            plot: 'Alice is in Looking Glass land, where she meets many Looking Glass creatures and attempts to avoid the Jabberwocky, a monster that appears due to her being afraid.',\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a1398f29313caabce9644\"),\n            plot: 'Alice is in Looking Glass land, where she meets many Looking Glass creatures and attempts to avoid the Jabberwocky, a monster that appears due to her being afraid.',\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a139df29313caabcfb504\"),\n            plot: `The wizards behind The Odyssey (1997) and Merlin (1998) combine Lewis Carroll's \"Alice in Wonderland\" and \"Through the Looking Glass\" into a two-hour special that just gets curiouser and curiouser.`,\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a13bdf29313caabd5933b\"),\n            plot: \"Nineteen-year-old Alice returns to the magical world from her childhood adventure, where she reunites with her old friends and learns of her true destiny: to end the Red Queen's reign of terror.\",\n            title: 'Alice in Wonderland'\n           }\n         ]\n\nThe following example uses a :ref:`compound-ref` operator to query the\n``title`` and ``genres`` fields using the following clauses:\n\n- The ``should`` clause uses the ``moreLikeThis`` operator to search\n  for documents similar to the document in ``movie``. Note that the \n  ``title`` field is analyzed with both the ``lucene.standard`` and \n  ``lucene.keyword`` analyzers.\n\n- The ``mustNot`` clause specifies that one of the input documents,\n  specified by its ``_id`` value, must not be included in the results.\n\nThe query limits the results list to ``10`` documents. The query uses\na :pipeline:`$project` stage to include the ``_id``, ``title``, and\n``genres`` fields in the results.\n\n.. example::\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: json\n         :linenos:\n\n         db.movies.aggregate([\n         {\n            $search: {\n              \"compound\": {\n                \"should\": [{\n                   \"moreLikeThis\": {\n                      \"like\": movie\n                   }\n                }],\n              \"mustNot\": [\n              {\n              \"equals\": {\n              \"path\": \"_id\",\n               \"value\": ObjectId (\"573a1394f29313caabcde9ef\")\n             }\n            }]\n          }\n           }\n           },\n          { $limit: 10 },\n                   {\n          $project: {\n              \"title\": 1,\n              \"genres\": 1,\n              \"_id\": 1\n            }\n           }\n          ])\n\n      .. output::\n         :language: json\n\n         [\n           {\n            _id: ObjectId(\"573a1398f29313caabce963d\"),\n            genres: [ 'Adventure', 'Family', 'Fantasy' ],\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a1398f29313caabce9644\"),\n            genres: [ 'Adventure', 'Family', 'Fantasy' ],\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a139df29313caabcfb504\"),\n            genres: [ 'Adventure', 'Comedy', 'Family' ],\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a13bdf29313caabd5933b\"),\n            genres: [ 'Adventure', 'Family', 'Fantasy' ],\n            title: 'Alice in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a1396f29313caabce3e7e\"),\n            genres: [ 'Comedy', 'Drama' ],\n            title: 'Alex in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a13bdf29313caabd5a44b\"),\n            genres: [ 'Drama' ],\n            title: 'Phoebe in Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a139af29313caabcf0e23\"),\n            genres: [ 'Documentary' ],\n            title: 'Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a139ef29313caabcfcebc\"),\n            genres: [ 'Drama' ],\n            title: 'Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a13a0f29313caabd03dab\"),\n            genres: [ 'Drama' ],\n            title: 'Wonderland'\n           },\n           {\n            _id: ObjectId(\"573a13abf29313caabd2372a\"),\n            genres: [ 'Crime', 'Drama', 'Mystery' ],\n            title: 'Wonderland'\n           }\n         ]\n\n   The following query uses :ref:`explain <explain-ref>` with the\n   preceding query to show the disjunction (*OR*) that |fts| constructs\n   to find similar documents.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "      :copyable: true\n\n      .. input::\n         :language: json\n\n         db.movies.explain(\"queryPlanner\").aggregate([\n          {\n            $search: {\n              \"compound\": {\n                \"should\": [{\n                   \"moreLikeThis\": {\n                      \"like\": [{\n                         \"title\": \"Alice in Wonderland\"\n                      }]\n                   }\n                }],\n              \"mustNot\": [\n              {\n              \"equals\": {\n              \"path\": \"_id\",\n               \"value\": ObjectId (\"573a1394f29313caabcde9ef\")\n             }\n            }]\n          }\n           }\n           },\n         { $limit: 10 },\n                   {\n         $project: {\n              \"title\": 1,\n              \"genres\": 1,\n              \"_id\": 1\n            }\n          }\n         ])\n\n\n      .. output:: \n         :language: json\n\n         {\n          explainVersion: '1',\n            stages: [\n              {\n               '$_internalSearchMongotRemote': {\n                  mongotQuery: {\n                  compound: {\n                  should: [\n                   {\n                     moreLikeThis: { like: [ { title: 'Alice in Wonderland' } ] }\n                   }\n                  ],\n                  mustNot: [\n                   {\n                     equals: {\n                       path: '_id',\n                       value: ObjectId(\"573a1394f29313caabcde9ef\")\n                     }\n                   }\n                  ]\n               }\n              },\n              explain: {\n               type: 'BooleanQuery',\n                 args: {\n                  must: [],\n                  mustNot: [\n                    {\n                      path: 'compound.mustNot',\n                      type: 'ConstantScoreQuery',\n                      args: {\n                        query: {\n                        type: 'TermQuery',\n                      args: {\n                         path: '_id',\n                         value: '[57 3a 13 94 f2 93 13 ca ab cd e9 ef]'\n                        }\n                       }\n                     }\n                    }\n                  ],\n                  should: [\n                   {\n                     path: 'compound.should',\n                     type: 'BooleanQuery',\n                     args: {\n                      must: [],\n                      mustNot: [],\n                      should: [\n                       {\n                        type: 'TermQuery',\n                        args: { path: 'title', value: 'in' }\n                       },\n                       {\n                         type: 'TermQuery',\n                         args: {\n                           path: 'title.keywordAnalyzer',\n                           value: 'Alice in Wonderland'\n                         }\n                        },\n                       {\n                         type: 'TermQuery',\n                         args: { path: 'title', value: 'wonderland' }\n                       },\n                       {\n                         type: 'TermQuery',\n                         args: { path: 'title', value: 'alice' }\n                       }\n                      ],\n                      filter: [],\n                       minimumShouldMatch: 0\n                      }\n                     }\n                   ],\n                     filter: [],\n                      minimumShouldMatch: 0\n                     }\n                    }\n                   }\n                  },\n          { '$_internalSearchIdLookup': {} },\n          { '$limit': Long(\"10\") },\n          { '$project': { _id: true, title: true, genres: true } }\n           ],\n          serverInfo: {\n          ...\n          },\n          serverParameters: {\n          ...\n          },\n          command: {\n            aggregate: 'movies',\n              pipeline: [\n                {\n                 '$search': {\n                    compound: {\n                      should: [\n                        {\n                          moreLikeThis: { like: [ { title: 'Alice in Wonderland' } ] }\n                        }\n                      ],\n                      mustNot: [\n                       {\n                         equals: {\n                           path: '_id',\n                           value: ObjectId(\"573a1394f29313caabcde9ef\")\n                         }\n                       }\n                      ]\n                    }\n                   }\n                 },\n           { '$limit': 10 },\n           { '$project': { title: 1, genres: 1, _id: 1 } }\n           ],\n           cursor: {},\n           '$db': 'sample_mflix'\n           },\n           ok: 1,\n           '$clusterTime': {\n           clusterTime: Timestamp({ t: 1659133479, i: 1 }),\n           signature: {\n              hash: Binary(Buffer.from(\"865d9ef1187ae1a74c4a0da1e29882aebcf2be7c\", \"hex\"), 0),\n              keyId: Long(\"7123262728533180420\")\n           }\n          },\n          operationTime: Timestamp({ t: 1659133479, i: 1 })\n          }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/morelikethis.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n      $search: {\n         \"index\": <index name>, // optional, defaults to \"default\"\n         \"near\": {\n            \"path\": \"<field-to-search>\",\n            \"origin\": <date-or-number>,\n            \"pivot\": <pivot-distance>,\n            \"score\": <score-options>\n         }\n      }\n   }\n\n.. _near-options:\n\nOptions\n-------\n\n``near`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``origin``\n     - date, number, or geo\n     - Number, date, or geographic\n       :ref:`point <geojson-point>` to search near. This is the origin\n       from which the proximity of the results is measured.\n\n       - For number fields, the value must be of BSON ``int32``,\n         ``int64``, or ``double`` data types.\n       - For date fields, the value must be an\n         :term:`ISODate`\n         formatted date.\n       - For :ref:`geo <bson-data-types-geo>` fields. the value must be\n         a :ref:`GeoJSON point <geojson-point>`.\n\n     - yes\n\n   * - ``path``\n     - string or array of strings\n     - Indexed field or fields to search. See :ref:`Path Construction\n       <ref-path>`.\n     - yes\n\n   * - ``pivot``\n     - number\n     - Value to use to calculate scores of |fts| result documents.\n       Score is calculated using the following formula:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "          :copyable: false\n\n                        pivot\n          score = ------------------\n                   pivot + distance\n\n       where ``distance`` is the difference between ``origin`` and the\n       indexed field value.\n\n       Results have a score equal to ``1/2`` (or ``0.5``) when their\n       indexed field value is ``pivot`` units away from ``origin``.\n       The value of ``pivot`` must be greater than (i.e. ``>``) ``0``.\n\n       If ``origin`` is a:\n\n       - Number, ``pivot`` can be specified as an integer or floating\n         point number.\n       - Date, ``pivot`` must be specified in milliseconds and can be\n         specified as a 32 or 64 bit integer. For example: \n         \n         - 1 minute is equal to ``60,000 ms``\n         - 1 hour is equal to ``3,600,000 ms``\n         - 1 day is equal to ``86,400,000 ms``\n         - 1 month (or 30 days) is equal to ``2,592,000,000 ms``\n\n       - GeoJSON point, ``pivot`` is measured in meters and must be\n         specified as an integer or floating point number.\n\n     - yes\n\n   * - ``score``\n     - object\n     - Score to assign to matching search results. You can modify\n       the default score using the following options:\n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score with the given expression.\n\n       For information on using ``score`` in your query, see\n       :ref:`scoring-ref`.\n\n       To learn more, see :ref:`near-query-score`.\n\n     - no\n\n.. _near-query-score:\n\nScoring Behavior \n----------------\n\n|fts| ``score`` is a measure of the proximity of the |fts| results to\n``origin``. The ``score`` is scaled between ``0`` and ``1`` with ``1``\nbeing an exact match and ``0`` being a distant match. Score is equal to\n``0.5`` when the distance of the |fts| result from ``origin`` is equal\nto the distance away from origin as calculated using ``pivot``.\n\nScore is calculated using the following formula:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "   :copyable: false\n\n                  pivot\n   score = ------------------\n            pivot + distance\n\nwhere, ``distance`` is the difference between ``origin`` and the indexed\nfield value. \n\nYou can modify the default score using  ``score`` option in your query.\nTo learn more about the options, :ref:`scoring-options`.\n\nLimitation\n----------\n\nYou can't use the ``near`` operator to query numeric or date values\nstored in an array, even if you have an |fts| index. You can use the \n:ref:`range-ref` operator only to query indexed numeric or date values\ninside arrays. \n\n.. _near-ref-egs:\n\nExamples\n--------\n\nThe :ref:`number <near-number-eg>` and :ref:`date <near-date-eg>`\nexamples use the ``movies`` collection in the ``sample_mflix``\ndatabase. The :ref:`GeoJSON point <near-geo-point-eg>` example uses the\n``listingsAndReviews`` collection in the ``sample_airbnb`` database. \n\nIf you :ref:`load the sample data <sample-data>` on your |service| cluster,\nyou can create the static indexes using the index definitions in the examples\nbelow or the dynamic index and run the example queries on your cluster.\n\n.. include:: /includes/admonitions/get-started-atlas-search.rst\n\n.. _near-number-eg:\n\nNumber Example\n~~~~~~~~~~~~~~\n\nThe following example uses the ``near`` operator to query a number field.\n\n.. example::\n\n   The following index definition named ``runtimes`` indexes the\n   ``runtime`` field values in the ``movies`` collection:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n\n      {\n         \"mappings\": {\n            \"dynamic\": false,\n            \"fields\": {\n               \"runtime\": {\n                  \"type\": \"number\"\n               }\n            }\n         }\n      }\n\n   The following query searches for documents in the ``movies``\n   collection with a ``runtime`` field value that is near 279. It\n   includes a :pipeline:`$limit` stage to limit the output to 7 results\n   and a :pipeline:`$project` stage to:\n\n   - Exclude all fields except ``title`` and ``runtime``\n   - Add a field named ``score``\n\n   The ``score`` is calculated using ``pivot``.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n\n      db.movies.aggregate([\n         {\n            $search: {\n               \"index\": \"runtimes\",\n               \"near\": {\n                  \"path\": \"runtime\",\n                  \"origin\": 279,\n                  \"pivot\": 2\n               }\n            }\n         },\n         {\n            $limit: 7\n         },\n         {\n            $project: {\n               \"_id\": 0,\n               \"title\": 1,\n               \"runtime\": 1,\n               score: { $meta: \"searchScore\" }\n            }\n         }\n      ])\n\n   The above query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n      :copyable: false\n\n      { \"runtime\" : 279, \"title\" : \"The Kingdom\", \"score\" : 1 }\n      { \"runtime\" : 279, \"title\" : \"The Jinx: The Life and Deaths of Robert Durst\", \"score\" : 1 }\n      { \"runtime\" : 280, \"title\" : \"Shoah\", \"score\" : 0.6666666865348816 }\n      { \"runtime\" : 281, \"title\" : \"Les Misèrables\", \"score\" : 0.5 }\n      { \"runtime\" : 277, \"title\" : \"Tokyo Trial\", \"score\" : 0.5 }\n      { \"runtime\" : 276, \"title\" : \"Warriors of the Rainbow: Seediq Bale\", \"score\" : 0.4000000059604645 }\n      { \"runtime\" : 283, \"title\" : \"Scenes from a Marriage\", \"score\" : 0.3333333432674408 }\n\n   In the above |fts| results, the movies ``The Kingdom`` and ``The\n   Jinx: The Life and Deaths of Robert Durst`` receive a score of\n   ``1.0`` because their ``runtime`` field value of ``279`` is an exact\n   match. The movies ``Les Misèrables`` and ``Tokyo Trial`` receive a\n   score of ``0.5`` because their ``runtime`` field value is ``2``\n   units away from ``279``.\n\n.. _near-date-eg:\n\nDate Example\n~~~~~~~~~~~~\n\nThe following example uses the ``near`` operator to query a date field.\n\n.. example::\n\n   The following index definition named ``releaseddate`` indexes the\n   ``released`` field values in the ``movies`` collection:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n\n      {\n         \"mappings\": {\n            \"dynamic\": false,\n            \"fields\": {\n               \"released\": {\n                  \"type\": \"date\"\n               }\n            }\n         }\n      }\n\n   The following query searches for movies released near September 13,\n   1.    It includes a :pipeline:`$limit` stage to limit the output to\n   ``3`` results and a :pipeline:`$project` stage to:\n\n   - Exclude all fields except ``title`` and ``released``\n   - Add a field named ``score``\n\n   The ``score`` of results is calculated using ``pivot``.\n\n   .. note::\n\n      ``pivot`` is measured here in milliseconds, and\n      ``7,776,000,000 ms`` is equal to approximately three months.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n\n      db.movies.aggregate([\n         {\n            $search: {\n               \"index\": \"releaseddate\",\n               \"near\": {\n                  \"path\": \"released\",\n                  \"origin\": ISODate(\"1915-09-13T00:00:00.000+00:00\"),\n                  \"pivot\": 7776000000\n               }\n            }\n         },\n         {\n            $limit: 3\n         },\n         {\n            $project: {\n               \"_id\": 0,\n               \"title\": 1,\n               \"released\": 1,\n               score: { $meta: \"searchScore\" }\n            }\n         }\n      ])\n\n   The above query returns the following search results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :copyable: false\n\n      { \"title\" : \"Regeneration\", \"released\" : ISODate(\"1915-09-13T00:00:00Z\"), \"score\" : 1 }\n      { \"title\" : \"The Cheat\", \"released\" : ISODate(\"1915-12-13T00:00:00Z\"), \"score\" : 0.49723756313323975 }\n      { \"title\" : \"Hell's Hinges\", \"released\" : ISODate(\"1916-03-05T00:00:00Z\"), \"score\" : 0.34090909361839294 }\n\n   In the above |fts| results, the movie ``Regeneration`` receives a\n   score of ``1`` because the ``released`` field value of\n   ``1915-09-13`` is an exact match. The movie ``The Cheat``, which was\n   released on ``1915-12-13``, receives a score of approximately\n   ``0.5`` because the ``released`` field value distance from\n   ``origin`` is approximately ``7,776,000,000`` milliseconds from\n   ``1915-09-13``.\n\n.. _near-geo-point-eg:\n\nGeoJSON Point Examples\n~~~~~~~~~~~~~~~~~~~~~~\n\nThe following examples use the ``near`` operator to query a GeoJSON \npoint object in the ``sample_airbnb.listingsAndReviews`` collection. \nThe following index definition indexes the ``address.location`` and \n``property_type`` fields in the ``listingsAndReviews`` collection.\n\n.. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n\n      {\n        \"mappings\": {\n          \"fields\": {\n            \"address\": {\n              \"fields\": {\n                \"location\": {\n                  \"type\": \"geo\"\n                }\n              },\n              \"type\": \"document\"\n            },\n            \"property_type\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      } \n\nBasic Example \n`````````````\n\nThe following examples use the ``near`` operator to query the \n``address.location`` field in the ``sample_airbnb.listingsAndReviews`` \ncollection.\n\n.. example::\n\n   The following query searches for properties in Portugal. It includes\n   a :pipeline:`$limit` stage to limit the output to ``3`` results and a\n   :manual:`$project </reference/operator/aggregation/project>` stage to:\n\n   - Exclude all fields except ``name`` and ``address``\n   - Add a field named ``score``\n\n   The ``score`` of results is calculated using ``pivot``. Note that\n   ``pivot`` is measured here in meters and 1000 meters is equal to 1\n   kilometer.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n\n      db.listingsAndReviews.aggregate([\n        {\n          \"$search\": {\n            \"near\": {\n              \"origin\": {\n                \"type\": \"Point\",\n                \"coordinates\": [-8.61308, 41.1413]\n              },\n              \"pivot\": 1000,\n              \"path\": \"address.location\"\n            }\n          }\n        },\n        {\n          $limit: 3\n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"name\": 1,\n            \"address\": 1,\n            score: { $meta: \"searchScore\" }\n          }\n        }\n      ])\n\n   The above query returns the following search results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n      :copyable: false\n\n      {\n        \"name\" : \"Ribeira Charming Duplex\",\n        \"address\" : {\n          \"street\" : \"Porto, Porto, Portugal\",\n          \"suburb\" : \"\",\n          \"government_area\" : \"Cedofeita, Ildefonso, Sé, Miragaia, Nicolau, Vitória\",\n          \"market\" : \"Porto\",\n          \"country\" : \"Portugal\",\n          \"country_code\" : \"PT\",\n          \"location\" : {\n            \"type\" : \"Point\",\n            \"coordinates\" : [ -8.61308, 41.1413 ],\n            \"is_location_exact\" : false\n          }\n        },\n        \"score\" : 1\n      }\n      {\n        \"name\" : \"DB RIBEIRA - Grey Apartment\",\n        \"address\" : {\n          \"street\" : \"Porto, Porto, Portugal\",\n          \"suburb\" : \"\",\n          \"government_area\" : \"Cedofeita, Ildefonso, Sé, Miragaia, Nicolau, Vitória\",\n          \"market\" : \"Porto\",\n          \"country\" : \"Portugal\",\n          \"country_code\" : \"PT\",\n          \"location\" : {\n            \"type\" : \"Point\",\n            \"coordinates\" : [ -8.61294, 41.14126 ],\n            \"is_location_exact\" : true\n          }\n        },\n        \"score\" : 0.9876177310943604\n      }\n      {\n        \"name\" : \"Ribeira 24 (4)\",\n        \"address\" : {\n          \"street\" : \"Porto, Porto, Portugal\",\n          \"suburb\" : \"\",\n          \"government_area\" : \"Cedofeita, Ildefonso, Sé, Miragaia, Nicolau, Vitória\",\n          \"market\" : \"Porto\",\n          \"country\" : \"Portugal\",\n          \"country_code\" : \"PT\",\n          \"location\" : {\n            \"type\" : \"Point\",\n            \"coordinates\" : [ -8.61318, 41.14107 ],\n            \"is_location_exact\" : false\n          }\n        },\n        \"score\" : 0.973789632320404\n      }\n\n   The results show that properties that are farther away from the\n   specified coordinates have a lower score.\n\nCompound Example \n````````````````\n\nThe following example uses the ``compound`` operator to query the \n``property_type`` and ``address.location`` fields in the \n``sample_airbnb.listingsAndReviews`` collection.\n\n.. example::\n\n   The following query searches for apartments in Hong Kong near a \n   specified GeoJSON point. The query uses **must** to specify the search \n   condition, which must be met, and **should** to specify preference for \n   location. It includes a :pipeline:`$limit` stage to limit the output to 3 \n   results and a :manual:`$project </reference/operator/aggregation/project>` \n   stage to:\n\n   - Exclude all fields except ``property_type`` and ``address``\n   - Add a field named ``score``\n\n   The ``score`` is calculated using the ``pivot`` field. Note that\n   ``pivot`` is measured here in meters and 1000 meters is equal to 1\n   kilometer.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n\n      db.listingsAndReviews.aggregate([\n        {\n          $search: {\n            \"compound\": {\n              \"must\": {\n                \"text\": {\n                  \"query\": \"Apartment\",\n                  \"path\": \"property_type\"\n                }\n              },\n              \"should\": {\n                \"near\": {\n                  \"origin\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": [114.15027, 22.28158]\n                  },\n                  \"pivot\": 1000,\n                  \"path\": \"address.location\"\n                }\n              }\n            }\n          }\n        },\n        {\n          $limit: 3\n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"property_type\": 1,\n            \"address\": 1,\n            score: { $meta: \"searchScore\" }\n          }\n        }\n      ])\n\n   The above query returns the following search results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "      :linenos:\n      :copyable: false\n\n      { \n        \"property_type\" : \"Apartment\", \n        \"address\" : { \n          \"street\" : \"Hong Kong, Hong Kong Island, Hong Kong\", \n          \"suburb\" : \"Central & Western District\", \n          \"government_area\" : \"Central & Western\", \n          \"market\" : \"Hong Kong\", \n          \"country\" : \"Hong Kong\", \n          \"country_code\" : \"HK\", \n          \"location\" : { \n            \"type\" : \"Point\", \n            \"coordinates\" : [ 114.15027, 22.28158 ], \n            \"is_location_exact\" : true \n          } \n        }, \n        \"score\" : 1.177286982536316 \n      }\n      { \n        \"property_type\" : \"Apartment\", \n        \"address\" : { \n          \"street\" : \"Hong Kong, Hong Kong Island, Hong Kong\", \n          \"suburb\" : \"Central & Western District\", \n          \"government_area\" : \"Central & Western\", \n          \"market\" : \"Hong Kong\", \n          \"country\" : \"Hong Kong\", \n          \"country_code\" : \"HK\", \n          \"location\" : { \n            \"type\" : \"Point\", \n            \"coordinates\" : [ 114.15082, 22.28161 ], \n            \"is_location_exact\" : true \n          } \n        }, \n        \"score\" : 1.1236450672149658 \n      }\n      { \n        \"property_type\" : \"Apartment\", \n        \"address\" : { \n          \"street\" : \"Hong Kong, \n          Hong Kong Island, Hong Kong\", \n          \"suburb\" : \"Mid-Levels\", \n          \"government_area\" : \"Central & Western\", \n          \"market\" : \"Hong Kong\", \n          \"country\" : \"Hong Kong\", \n          \"country_code\" : \"HK\", \n          \"location\" : { \n            \"type\" : \"Point\", \n            \"coordinates\" : [ 114.15007, 22.28215 ], \n            \"is_location_exact\" : true \n          }\n        }, \n        \"score\" : 1.114811897277832 \n      }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/near.txt"
  },
  {
    "code": "   :copyable: true\n   :caption: searchSequenceToken Syntax\n   :emphasize-lines: 11\n   :linenos: \n\n   [{\n     \"$search\": {\n       \"index\": \"<index-name>\",\n       \"<operator-name>\"|\"<collector-name>\": {\n         <operator-specification>|<collector-specification>\n       }\n       ...\n     },\n     {\n       \"$project\": {\n         { \"paginationToken\" : { \"$meta\" : \"searchSequenceToken\" } }\n     },\n     ...\n   }]\n\n.. _search-sequence-token-output:\n\nOutput \n~~~~~~\n\nThe ``searchSequenceToken`` generates a Base64-encoded token for each\ndocument in the results. The length of the token increases with the number\nof fields specified in the :ref:`sort <sort-ref>` option of your query.\nThe token isn't tied to a snapshot of the database. \n\nThe documents in the results are sorted in the default order, unless you\nspecify the ``sort`` option in your query. To learn about sorting your\nresults, see :ref:`sort-ref`. \n\n.. _paginate-results-search-after:\n\nSearch After a Specific Point of Reference \n------------------------------------------\n\nTo search after a reference point, you must specify the reference point\nin your :pipeline:`$search` query by using the ``searchAfter`` option with\nthe token generated by ``searchSequenceToken``. You can use the token\ngenerated by ``searchSequenceToken`` only when you rerun the\n:pipeline:`$search` query for which ``searchSequenceToken`` generated\nthe token. The semantics (search fields and values) of the subsequent \n:pipeline:`$search` query in which you use the token must be identical\nto the query for which ``searchSequenceToken`` generated the token. \n\nYou can use the ``searchAfter`` option to build a \"Next Page\" function\nin your application. For a demonstration of this, see the :ref:`example\n<search-after-query-eg>` on this page. \n\n.. _search-after-syntax:\n\n``searchAfter`` Syntax \n~~~~~~~~~~~~~~~~~~~~~~\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/paginate-results.txt"
  },
  {
    "code": "   :copyable: true\n   :caption: searchAfter Syntax\n   :emphasize-lines: 7\n   :linenos: \n\n   {\n     \"$search\": {\n       \"index\": \"<index-name>\",\n       \"<operator-name>\"|\"<collector-name>\": {\n         <operator-specification>|<collector-specification>\n       },\n       \"searchAfter\": \"<base64-encoded-token>\",\n       ...\n     },\n     \"$project\": {\n       { \"paginationToken\" : { \"$meta\" : \"searchSequenceToken\" } }\n     },\n     ...\n   }\n\n.. _search-after-output:\n\nOutput \n~~~~~~\n\n|fts| returns the documents in the results after the specified token.\n|fts| returns the generated tokens for the documents in the results\nbecause you specified the ``searchSequenceToken`` in the\n:pipeline:`$project` stage after the :pipeline:`$search` stage (as \nshown in line 11). These tokens can be used as a reference point for\nanother query with the same semantics.\n\nThe documents in the results are sorted in the default order, unless you\nspecify the ``sort`` option in your query. To learn about sorting your\nresults, see :ref:`sort-ref`. \n\n.. _paginate-results-search-before:\n\nSearch Before a Specific Point of Reference \n-------------------------------------------\n\nTo search before a reference point, you must specify the reference point \nin your :pipeline:`$search` query by using the ``searchBefore`` option\nwith the token generated by ``searchSequenceToken``. You can use the token\ngenerated by ``searchSequenceToken`` only when you rerun the\n:pipeline:`$search` query for which ``searchSequenceToken`` generated\nthe token. The semantics (search fields and values) of the subsequent \n:pipeline:`$search` query in which you use the token must be identical\nto the query for which ``searchSequenceToken`` generated the token. \n\nYou can build a \"Previous Page\" function in your application using the\n``searchBefore`` option. To build a \"Previous Page\" function, combine\nthe following:\n\n- :pipeline:`$search` stage with ``searchBefore`` option\n- :pipeline:`$limit` stage \n- :manual:`toArray() </reference/method/cursor.toArray/>` and\n  ``reverse()`` methods.  \n  \nFor a demonstration of this, see the ``searchBefore`` query :ref:`examples\n<search-before-query-eg>` on this page.\n\n.. _search-before-syntax:\n\n``searchBefore`` Syntax \n~~~~~~~~~~~~~~~~~~~~~~~\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/paginate-results.txt"
  },
  {
    "code": "   :copyable: true\n   :caption: searchBefore Syntax\n   :emphasize-lines: 7\n   :linenos: \n\n   {\n     \"$search\": {\n       \"index\": \"<index-name>\",\n       \"<operator-name>\"|\"<collector-name>\": {\n         <operator-specification>|<collector-specification>\n       },\n       \"searchBefore\": \"<base64-encoded-token>\",\n       ...\n     },\n     \"$project\": {\n       { \"paginationToken\" : { \"$meta\" : \"searchSequenceToken\" } }\n     },\n     ...\n   }\n\n.. _search-before-output:\n\n``searchBefore`` Output\n~~~~~~~~~~~~~~~~~~~~~~~\n\n|fts| returns documents in the results preceding the specified token in\nreverse order. |fts| also returns the generated tokens for the documents\nin the results because you specified the ``searchSequenceToken`` in the\n:pipeline:`$project` stage after the :pipeline:`$search` stage (as\nshown in line 11). These tokens can be used as a reference point for\nanother query with the same semantics.\n\n.. _search-before-egs:\n\nExamples \n--------\n\nThe following examples use the :ref:`sample-mflix.movies <sample-mflix>`\ncollection, which has an |fts| index named ``default`` with dynamic\nmappings. If you load the collection and create the index, you can run\nthe following queries against the collection.\n\n.. _search-sequence-token-eg:\n\n``searchSequenceToken`` Query\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following query uses the following pipeline stages: \n\n- :pipeline:`$search` to do the following:\n\n  - Search for the term ``war`` in ``title`` field of the collection.\n  - Sort the results first by score and then by the value of the\n    ``released`` field in ascending order for documents with identical\n    scores. \n    \n- :pipeline:`$limit` stage to limit the results to ``10`` documents. \n- :pipeline:`$project` stage to do the following: \n\n  - Include only the ``title`` and ``released`` fields.\n  - Add the following fields: \n\n    - Field named ``paginationToken`` that contains the Base64-encoded\n      token for each document. \n    - Field named ``score`` that contains the relevance score of each\n      document. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/paginate-results.txt"
  },
  {
    "code": "   :copyable:\n\n   .. input:: \n      :language:  json\n      :linenos: \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"title\",\n              \"query\": \"war\"\n            },\n            \"sort\": {score: {$meta: \"searchScore\"}, \"released\": 1}\n          }\n        },\n        {\n          \"$limit\": 10\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"released\": 1,\n            \"paginationToken\" : { \"$meta\" : \"searchSequenceToken\" },\n            \"score\": {$meta: \"searchScore\"}\n          }\n        }\n      ])\n\n   .. output:: \n      :language: shell\n      :visible: false\n      :emphasize-lines: 5,11,16,22,28,34,40,46,52,58\n      :linenos: \n\n      [\n        {\n          title: 'War',\n          released: ISODate('2002-03-14T00:00:00.000Z'),\n          paginationToken: 'CMFRGgYQup3BhQgaCSkAQCKS7AAAAA==',\n          score: 3.3774025440216064\n        },\n        {\n          title: 'War',\n          released: ISODate('2014-09-21T00:00:00.000Z'),\n          paginationToken: 'CMelARoGELqdwYUIGgkpAAiClUgBAAA=',\n          score: 3.3774025440216064\n        },\n        {\n          title: 'War Photographer',\n          paginationToken: 'CMBRGgYQuq+ngwgaAmAA',\n          score: 2.8268959522247314\n        },\n        {\n          title: \"Troma's War\",\n          released: ISODate('1989-11-18T00:00:00.000Z'),\n          paginationToken: 'CL8kGgYQuq+ngwgaCSkAbP8QkgAAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'The War',\n          released: ISODate('1994-11-04T00:00:00.000Z'),\n          paginationToken: 'CI0wGgYQuq+ngwgaCSkAnIKEtgAAAA==',\n          score: 2.8268959522247314\n        },\n        {\n         title: 'War Stories',\n          released: ISODate('1996-05-09T00:00:00.000Z'),\n          paginationToken: 'CPIyGgYQuq+ngwgaCSkA/DifwQAAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: \"Gaston's War\",\n          released: ISODate('1997-10-23T00:00:00.000Z'),\n          paginationToken: 'CMQ7GgYQuq+ngwgaCSkALPBSzAAAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'Shooting War',\n          released: ISODate('2000-12-07T00:00:00.000Z'),\n          paginationToken: 'CMJJGgYQuq+ngwgaCSkAOOhG4wAAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: \"Varian's War\",\n          released: ISODate('2001-04-22T00:00:00.000Z'),\n          paginationToken: 'CM5IGgYQuq+ngwgaCSkAGEkD5gAAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: \"Hart's War\",\n          released: ISODate('2002-02-15T00:00:00.000Z'),\n          paginationToken: 'CMtJGgYQuq+ngwgaCSkAjBYH7AAAAA==',\n          score: 2.8268959522247314\n        }\n      ]\n\n.. note:: \n\n   The tokens for the documents in your results might be different.\n   Replace the tokens in the :ref:`subsequent queries\n   <subsequent-query-egs>` with the tokens that |fts| returned in your\n   results before running the ``searchAfter`` or ``searchBefore``\n   queries. \n\n.. _subsequent-query-egs:\n\nSubsequent ``searchAfter`` and ``searchBefore`` Queries \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following queries use the token from another query with the same\nsemantics to retrieve paginated results after or before the specified\ntoken. If you ran the example :ref:`search-sequence-token-eg`, the\ntokens for the documents in your results might be different. Make sure\nto replace the tokens in the queries in this section with the tokens\nreturned in your query result.\n\nThe queries use the following pipeline stages:\n\n- :pipeline:`$search` stage to do the following: \n\n  - Search for documents from the |fts| results for the term ``war`` in\n    ``title`` field.  \n  - Sort the results first by score and then by the value of the \n    ``released`` field in ascending order for documents with identical \n    scores. \n    \n- :pipeline:`$limit` stage to limit the results to ``10`` documents. \n- :pipeline:`$project` stage to do the following: \n\n  - Include only the ``title`` and ``released`` fields in the documents. \n  - Add the following fields: \n\n    - Field named ``paginationToken`` that contains the Base64-encoded\n      token for  each document.  \n    - Field named ``score`` that contains the relevance score of each\n      document. \n\n.. _search-after-query-eg:\n\nSearch After the Reference Point \n````````````````````````````````\n\nThe following query requests documents in the |fts| results that contain\nthe term ``war`` in ``title`` field *after* the specified reference\npoint. It uses the token (on line 58) associated with the last document\nfrom the :ref:`search-sequence-token-eg` results as the reference point\nto retrieve the next ``10`` documents in the results.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/paginate-results.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"title\",\n              \"query\": \"war\"\n            },\n            \"sort\": {score: {$meta: \"searchScore\"}, \"released\": 1},\n            \"searchAfter\": \"CMtJGgYQuq+ngwgaCSkAjBYH7AAAAA==\"\n          }\n        },\n        {\n          \"$limit\": 10\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"released\": 1,\n            \"paginationToken\" : { \"$meta\" : \"searchSequenceToken\" },\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json \n      :visible: false\n      :emphasize-lines: 5,11,17,23,29,35,41,47,53,59\n      :linenos:\n\n      [\n        {\n          title: 'The War',\n          released: ISODate('2007-09-23T00:00:00.000Z'),\n          paginationToken: 'CP9xGgYQuq+ngwgaCSkA1KkvFQEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War, Inc.',\n          released: ISODate('2008-06-13T00:00:00.000Z'),\n          paginationToken: 'COhuGgYQuq+ngwgaCSkAtDh/GgEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War, Inc.',\n          released: ISODate('2008-06-13T00:00:00.000Z'),\n          paginationToken: 'COluGgYQuq+ngwgaCSkAtDh/GgEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Dance',\n          released: ISODate('2008-11-01T00:00:00.000Z'),\n          paginationToken: 'CONvGgYQuq+ngwgaCSkAYFlVHQEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Horse',\n          released: ISODate('2011-12-25T00:00:00.000Z'),\n          paginationToken: 'CJWFARoGELqvp4MIGgkpAEyEcjQBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'Cold War',\n          released: ISODate('2012-11-08T00:00:00.000Z'),\n          paginationToken: 'CJGUARoGELqvp4MIGgkpAPBQ3ToBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'Drug War',\n          released: ISODate('2013-04-04T00:00:00.000Z'),\n          paginationToken: 'CMWTARoGELqvp4MIGgkpAMRX0j0BAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Story',\n          released: ISODate('2014-07-30T00:00:00.000Z'),\n          paginationToken: 'CJCdARoGELqvp4MIGgkpAPyQhEcBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'A War',\n          released: ISODate('2015-09-10T00:00:00.000Z'),\n          paginationToken: 'CL2kARoGELqvp4MIGgkpAECNtE8BAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Pigs',\n          released: ISODate('2015-09-18T00:00:00.000Z'),\n          paginationToken: 'CJ6kARoGELqvp4MIGgkpACDA3U8BAAA=',\n          score: 2.8268959522247314\n        }\n      ]\n\n.. _search-before-query-eg:\n\nSearch Before the Reference Point \n`````````````````````````````````\n\nThe following query requests |fts| results for the term ``war`` in\n``title`` field *before* the specified reference point. It uses the\ntoken (on line 59) associated with the last document in the :ref:`sample \n<search-after-query-eg>` ``searchAfter`` query results as the \nreference point to retrieve the preceding ``10`` documents from the\nresults.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/paginate-results.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"title\",\n              \"query\": \"war\"\n            },\n            \"sort\": {score: {$meta: \"searchScore\"}, \"released\": 1},\n            \"searchBefore\": \"CJ6kARoGELqvp4MIGgkpACDA3U8BAAA=\"\n          }\n        },\n        {\n          \"$limit\": 10\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"released\": 1,\n            \"paginationToken\" : { \"$meta\" : \"searchSequenceToken\" },\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json \n      :visible: false\n      :emphasize-lines: 5,11,17,23,29,35,41,47,53,59\n      :linenos:\n\n      [\n        {\n          title: 'A War',\n          released: ISODate('2015-09-10T00:00:00.000Z'),\n          paginationToken: 'CL2kARoGELqvp4MIGgkpAECNtE8BAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Story',\n          released: ISODate('2014-07-30T00:00:00.000Z'),\n          paginationToken: 'CJCdARoGELqvp4MIGgkpAPyQhEcBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'Drug War',\n          released: ISODate('2013-04-04T00:00:00.000Z'),\n          paginationToken: 'CMWTARoGELqvp4MIGgkpAMRX0j0BAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'Cold War',\n          released: ISODate('2012-11-08T00:00:00.000Z'),\n          paginationToken: 'CJGUARoGELqvp4MIGgkpAPBQ3ToBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Horse',\n          released: ISODate('2011-12-25T00:00:00.000Z'),\n          paginationToken: 'CJWFARoGELqvp4MIGgkpAEyEcjQBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Dance',\n          released: ISODate('2008-11-01T00:00:00.000Z'),\n          paginationToken: 'CONvGgYQuq+ngwgaCSkAYFlVHQEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War, Inc.',\n          released: ISODate('2008-06-13T00:00:00.000Z'),\n          paginationToken: 'COluGgYQuq+ngwgaCSkAtDh/GgEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War, Inc.',\n          released: ISODate('2008-06-13T00:00:00.000Z'),\n          paginationToken: 'COhuGgYQuq+ngwgaCSkAtDh/GgEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'The War',\n          released: ISODate('2007-09-23T00:00:00.000Z'),\n          paginationToken: 'CP9xGgYQuq+ngwgaCSkA1KkvFQEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: \"Hart's War\",\n          released: ISODate('2002-02-15T00:00:00.000Z'),\n          paginationToken: 'CMtJGgYQuq+ngwgaCSkAjBYH7AAAAA==',\n          score: 2.8268959522247314\n        }\n      ]\n\nFor the preceding query, note that |fts| results are in reverse order. \nThe following query uses the :pipeline:`$limit` stage with the\n:manual:`toArray() </reference/method/cursor.toArray/>` and\n``reverse()`` methods to build a function similar to \"Previous Page\". \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/paginate-results.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"title\",\n              \"query\": \"war\"\n            },\n            \"sort\": {score: {$meta: \"searchScore\"}, \"released\": 1},\n            \"searchBefore\": \"CJ6kARoGELqvp4MIGgkpACDA3U8BAAA=\"\n          }\n        },\n        {\n          \"$limit\": 10\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"released\": 1,\n            \"paginationToken\" : { \"$meta\" : \"searchSequenceToken\" },\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ]).toArray().reverse()\n\n   .. output::\n      :language: json \n      :visible: false\n      :emphasize-lines: 5,11,17,23,29,35,41,47,53,59\n      :linenos:\n\n      [\n        {\n          title: \"Hart's War\",\n          released: ISODate('2002-02-15T00:00:00.000Z'),\n          paginationToken: 'CMtJGgYQuq+ngwgaCSkAjBYH7AAAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'The War',\n          released: ISODate('2007-09-23T00:00:00.000Z'),\n          paginationToken: 'CP9xGgYQuq+ngwgaCSkA1KkvFQEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War, Inc.',\n          released: ISODate('2008-06-13T00:00:00.000Z'),\n          paginationToken: 'COhuGgYQuq+ngwgaCSkAtDh/GgEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War, Inc.',\n          released: ISODate('2008-06-13T00:00:00.000Z'),\n          paginationToken: 'COluGgYQuq+ngwgaCSkAtDh/GgEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Dance',\n          released: ISODate('2008-11-01T00:00:00.000Z'),\n          paginationToken: 'CONvGgYQuq+ngwgaCSkAYFlVHQEAAA==',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Horse',\n          released: ISODate('2011-12-25T00:00:00.000Z'),\n          paginationToken: 'CJWFARoGELqvp4MIGgkpAEyEcjQBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'Cold War',\n          released: ISODate('2012-11-08T00:00:00.000Z'),\n          paginationToken: 'CJGUARoGELqvp4MIGgkpAPBQ3ToBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'Drug War',\n          released: ISODate('2013-04-04T00:00:00.000Z'),\n          paginationToken: 'CMWTARoGELqvp4MIGgkpAMRX0j0BAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'War Story',\n          released: ISODate('2014-07-30T00:00:00.000Z'),\n          paginationToken: 'CJCdARoGELqvp4MIGgkpAPyQhEcBAAA=',\n          score: 2.8268959522247314\n        },\n        {\n          title: 'A War',\n          released: ISODate('2015-09-10T00:00:00.000Z'),\n          paginationToken: 'CL2kARoGELqvp4MIGgkpAECNtE8BAAA=',\n          score: 2.8268959522247314\n        }\n      ]\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/paginate-results.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \n     \"_id\" : 1,\n     \"type\" : \"sedan\",\n     \"make\" : \"Toyota\",\n     \"description\" : \"Blue four-door sedan, lots of trunk space. Three to four \n     passengers.\"\n   }\n\n.. _ref-path-alt-analyzer-egs:\n\nAlternate Analyzer Search\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSimple Analyzer Example \n#######################\n\nThe following example uses the ``multi`` named ``simpleAnalyzer``\nin the index definition, which uses the :ref:`simple analyzer\n<ref-simple-analyzer>`. \n\nThe query searches the ``description`` field for the string ``driver``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/path-construction.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\" : 2,\n     \"type\" : \"coupe\",\n     \"make\" : \"BMW\",\n     \"description\" : \"Red two-door convertible, driver's-side airbag.\"\n   }\n\nThe :ref:`simple analyzer <ref-simple-analyzer>` indexes ``driver's\nside airbag`` as ``[driver s side airbag``], so it matches on ``driver``.\n\nBy contrast, the default :ref:`standard analyzer <ref-standard-analyzer>` \nindexes ``driver's side airbag`` as ``[driver's side airbag``], so it would \nmatch on ``driver's`` or ``side`` but not ``driver``.\n\nWhitespace Analyzer Example \n###########################\n\nSuppose the ``multi`` object in the index definition for the ``cars`` \ncollection is the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/path-construction.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \n     \"_id\" : 1, \n     \"type\" : \"sedan\", \n     \"make\" : \"Toyota\", \n     \"description\" : \"Blue four-door sedan, lots of trunk space. Three to \n     four passengers.\" \n   }\n\nFor the above query on the term ``Three``, |fts| only returns documents \nmatching the term ``Three`` and not ``three`` becuase the \n:ref:`whitespace analyzer <ref-simple-analyzer>` is case-sensitive. By \ncontrast, the default :ref:`standard analyzer <ref-standard-analyzer>` is \nnot case-sensitive and returns all documents matching the term in the \nquery in the order that they are listed in the collection. \n\nNow, consider the following query:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/path-construction.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \n     \"type\" : \"sedan\", \n     \"description\" : \"Blue four-door sedan, lots of trunk space. Three to four passengers seats.\", \n     \"score\" : 1.1092689037322998 \n   }\n   { \n     \"type\" : \"SUV\", \n     \"description\" : \"Black four-door SUV, three rows of seats.\", \n     \"score\" : 0.17812025547027588 \n   }\n\nFor the above query, |fts| returns documents with both ``Three`` and \n``three``. However, the score of the result with ``Three`` is higher \nbecause while the document with ``three`` was matched using the default \n:ref:`standard analyzer <ref-standard-analyzer>`, the document with \n``Three`` was matched by both the specified ``simpleAnalyzer`` and the \ndefault :ref:`standard analyzer <ref-standard-analyzer>`.\n\nThe following example uses a collection called ``posts`` with the\nfollowing documents:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/path-construction.txt"
  },
  {
    "code": "    :copyable: false\n    :emphasize-lines: 7,17\n\n    { \n      \"_id\" : 1, \n      \"type\" : \"sedan\", \n      \"make\" : \"Toyota\", \n      \"description\" : \"Four-door sedan, lots of trunk space. Three to four passengers.\", \n      \"warehouse\" : [ \n        { \"inventory\" : 3, \"color\" : \"red\" } \n      ] \n    }\n    { \n      \"_id\" : 3, \n      \"type\" : \"SUV\", \n      \"make\" : \"Ford\", \n      \"description\" : \"Four-door SUV, three rows of seats.\", \n      \"warehouse\" : [ \n        { \"inventory\" : 7, \"color\" : \"white\" }, \n        { \"inventory\" : 3, \"color\" : \"red\" } \n      ] \n    }\n\nNested Field Search Example\n###########################\n\nThe following :ref:`query <text-ref>` searches the fields nested \nwithin the ``warehouse`` field for the string ``red``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/path-construction.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 7,17\n\n   { \n     \"_id\" : 1, \n     \"type\" : \"sedan\", \n     \"make\" : \"Toyota\", \n     \"description\" : \"Four-door sedan, lots of trunk space. Three to four passengers.\", \n     \"warehouse\" : [ \n       { \"inventory\" : 3, \"color\" : \"red\" } \n     ] \n   }\n   { \n     \"_id\" : 3, \n     \"type\" : \"SUV\", \n     \"make\" : \"Ford\", \n     \"description\" : \"Four-door SUV, three rows of seats.\", \n     \"warehouse\" : [ \n       { \"inventory\" : 7, \"color\" : \"white\" }, \n       { \"inventory\" : 3, \"color\" : \"red\" } \n     ] \n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/path-construction.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     $search: {\n        \"index\": <index name>, // optional, defaults to \"default\"\n        \"phrase\": {\n          \"query\": \"<search-string>\",\n          \"path\": \"<field-to-search>\",\n          \"score\": <options>,\n          \"slop\": <distance-number>,\n          \"synonyms\": \"<synonyms-mapping-name>\"\n        }\n     }\n   }\n\n.. _phrase-options:\n\nOptions\n-------\n\n``phrase`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``query``\n     - string or array of strings\n     - String or strings to search for.\n     - yes\n\n   * - ``path``\n     - string or array of strings\n     - Indexed field or fields to search. You can also specify a \n       :ref:`wildcard path <ref-path-usage>` to search. See :ref:`Construct a Query Path <ref-path>`. \n     - yes\n\n   * - ``slop``\n     - integer\n     - Allowable distance between words in the ``query`` phrase. Lower\n       value allows less positional distance between the words and\n       greater value allows more reorganization of the words and more\n       distance between the words to satisfy the query. The default is\n       ``0``, meaning that words must be exactly in the same position\n       as the query in order to be considered a match. Exact matches\n       are scored higher.\n     - no\n\n   * - ``score``\n     - object\n     - Score to assign to matching search results. You can modify the\n       default score using the following options:\n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score with the given expression.\n\n       .. include:: /includes/fact-fts-array-scoring.rst\n\n       For information on the options for modifying the default score,\n       see :ref:`scoring-ref`. \n\n     - no\n\n   * - ``synonyms`` \n     - string \n     - Required for running queries using :ref:`synonyms \n       <synonyms-ref>`.\n\n       Name of the :ref:`synonym mapping definition <synonyms-ref>` in \n       the :ref:`index definition <ref-index-definitions>`. Value can't \n       be an empty string.\n\n       .. note:: \n\n          The amount of time that |fts| takes to execute queries that \n          use :ref:`synonym mappings <synonyms-ref>` depends on the \n          number and size of documents in the synonym source \n          collection. A query that uses a synonym mapping that is based \n          on very few synonym documents might be faster than a query \n          that uses a synonym mapping that is based on many synonym \n          documents. \n\n     - Optional \n\nExamples\n--------\n\nThe examples in this page use the ``movies`` collection in the\n``sample_mflix`` database. After loading the :ref:`sample dataset\n<available-sample-datasets>` into your {+cluster+}, create the |fts|\nindex with dynamic mappings and run the example queries on your\n{+cluster+}. To try the :ref:`synonyms <text-ref-synonyms-eg>` examples,\nyou must also add the :ref:`synonymous_terms collection\n<sample-synonyms-coll>` to the ``sample_mflix`` database and then\n:ref:`define the index <synonyms-index-definition-ex>` with the\n``synonyms`` mapping collection.  \n\nSingle Phrase Example\n~~~~~~~~~~~~~~~~~~~~~\n\nThe following |fts| example performs a basic search of the\n``title`` field for the query string ``new york``. There is no\n``slop`` in the query and so the ``slop`` value defaults to\n``0``, which means the position of the words must exactly match\nthe query string to be included in the results. The query also\nincludes a:\n\n- :pipeline:`$limit` stage to limit the output to 10 results.\n- :pipeline:`$project` stage to exclude all fields except\n  ``title`` and add a field named ``score``.\n\n.. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/phrase.txt"
  },
  {
    "code": "      :copyable: true \n      \n      .. input:: \n         :language: json\n         :linenos:\n\n         db.movies.aggregate([\n           {\n             \"$search\": {\n               \"phrase\": {\n                 \"path\": \"title\",\n                 \"query\": \"new york\"\n               }\n             }\n           },\n           { $limit: 10 },\n           {\n             $project: {\n               \"_id\": 0,\n               \"title\": 1,\n               score: { $meta: \"searchScore\" }\n             }\n           }\n         ])\n\n      .. output:: \n         :language: shell\n         :linenos:\n         :visible: false\n\n         [\n           { title: 'New York, New York', score: 6.786321640014648 }\n           { title: 'New York', score: 6.258549213409424 }\n           { title: 'New York Stories', score: 5.3813982009887695 }\n           { title: 'New York Minute', score: 5.3813982009887695 }\n           { title: 'Synecdoche, New York', score: 5.3813982009887695 }\n           { title: 'New York Doll', score: 5.3813982009887695 }\n           { title: 'Little New York', score: 5.3813982009887695 }\n           { title: 'Escape from New York', score: 4.719893455505371 }\n           { title: 'Naked in New York', score: 4.719893455505371 }\n           { title: 'Autumn in New York', score: 4.719893455505371 }\n         ]\n\nMultiple Phrases Example\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following |fts| example performs a basic search of the\n``title`` field for the query strings ``the man`` and ``the\nmoon``. There is no ``slop`` in the query and so the ``slop``\nvalue defaults to ``0``, which means the position of the words\nmust exactly match the query string to be included in the\nresults. The query also includes a:\n\n.. example::\n\n   - :pipeline:`$limit` stage to limit the output to 10.\n   - :pipeline:`$project` stage to exclude all fields except\n     ``title`` and add a field named ``score``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/phrase.txt"
  },
  {
    "code": "      :copyable: true \n      \n      .. input:: \n         :language: json\n         :linenos:\n\n         db.movies.aggregate([\n           {\n             \"$search\": {\n               \"phrase\": {\n                 \"path\": \"title\",\n                 \"query\": [\"the man\", \"the moon\"]\n               }\n             }\n           },\n           { $limit: 10 },\n           {\n             $project: {\n               \"_id\": 0,\n               \"title\": 1,\n               score: { $meta: \"searchScore\" }\n             }\n           }\n         ])\n\n      .. output:: \n         :language: shell\n         :linenos:\n         :visible: false\n\n         [\n           { title: 'The Man in the Moon', score: 4.4830474853515625 },\n           { title: 'Shoot the Moon', score: 3.252699851989746 },\n           { title: 'Kick the Moon', score: 3.252699851989746 },\n           { title: 'The Man', score: 2.8923356533050537 },\n           { title: 'The Moon and Sixpence', score: 2.8528637886047363 },\n           { title: 'The Moon Is Blue', score: 2.8528637886047363 },\n           { title: 'Racing with the Moon', score: 2.8528637886047363 },\n           { title: 'Mountains of the Moon', score: 2.8528637886047363 },\n           { title: 'Man on the Moon', score: 2.8528637886047363 },\n           { title: 'Castaway on the Moon', score: 2.8528637886047363 }\n         ]\n\nSlop Example\n~~~~~~~~~~~~\n\nThe following |fts| example performs a search of the ``title`` field\nfor the query string ``men women``. The ``slop`` value of ``5`` in the\n``query`` allows greater movement of the words and distance between the\nwords ``men`` and ``women``. The query includes a :pipeline:`$project`\nstage to:\n\n- Exclude all fields except ``title``\n- Add a field named ``score``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/phrase.txt"
  },
  {
    "code": "   :copyable: true \n      \n   .. input:: \n      :language: json\n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"phrase\": {\n              \"path\": \"title\",\n              \"query\": \"men women\",\n              \"slop\": 5\n            }\n          }\n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"title\": 1,\n            score: { $meta: \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: shell\n      :linenos:\n      :visible: false\n\n      [\n        { title: 'Men Without Women', score: 3.367523193359375 },\n        { title: 'Men Vs Women', score: 3.367523193359375 },\n        { title: 'Good Men, Good Women', score: 2.8529787063598633 },\n        { title: 'The War Between Men and Women', score: 2.1851978302001953 },\n        { title: 'Women Without Men', score: 1.9656763076782227 },\n        { title: 'Women Vs Men', score: 1.9656763076782227 }\n      ]\n\nSynonyms Example\n~~~~~~~~~~~~~~~~\n\nThe following queries search the ``plot`` field in the ``movies``\ncollection for the terms in the given query string. |fts| returns\nresults based on the :ref:`type of mapping <synonyms-ref>` in the\n:ref:`synonym source collection <synonyms-coll-spec>`,\n``synonymous_terms``, specified in the synonym mapping definition of the \nindex for the ``sample_mflix.movies`` collection. \n\nThe following query searches for the phrase ``automobile race`` anywhere\nin the ``plot`` field with a distance of up to ``5`` between the terms.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/phrase.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          $search: {\n            \"phrase\": {\n              \"path\": \"plot\",\n              \"query\": \"automobile race\",\n              \"slop\": 5,\n              \"synonyms\": \"my_synonyms\"\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"plot\": 1,\n            \"title\": 1,\n            score: { $meta: \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n      :visible: false\n      :emphasize-lines: 3,8,13,18,23\n\n      [\n        {\n          plot: 'When a popular daredevil proposes an automobile race across three continents, his arch rival vows to beat him, while an ambitious female reporter has her own plans for victory.',\n          title: 'The Great Race',\n          score: 29.569732666015625\n        },\n        {\n          plot: 'A wide variety of eccentric competitors participate in a wild and illegal cross-country car race.',\n          title: 'The Cannonball Run',\n          score: 25.50379180908203\n        },\n        {\n          plot: 'A mechanic takes his family to a car race and a series of events occur which brings problems, betrayals, violence and the unexpected death of an elderly person.',\n          title: 'National Mechanics',\n          score: 21.538257598876953\n        },\n        {\n          plot: \"It's time for the annual London to Brighton antique car rally, and Alan McKim and Ambrose Claverhouse are not going to let their friendship stop them from trying to humiliate each other. ...\",\n          title: 'Genevieve',\n          score: 20.19266128540039\n        },\n        {\n          plot: \"A naive drifter runs away from his army father in hopes of making it on the car racing circuit. In Las Vegas, he meets a young scam artist, who develops a crush on him. He is then ...\",\n          title: 'Speedway Junky',\n          score: 18.639965057373047\n        }\n      ]\n\nThe documents in the results contain the following terms in the ``plot``\nfield with up to a distance of ``5`` between the terms:  \n\n- ``automobile``, ``car``, or ``vehicle``, which are defined as\n  ``equivalent`` synonyms in the ``synonymous_terms`` collection, \n- ``race``, ``contest``, or ``rally``, which are defined as\n  ``explicit`` synonyms in the sy``synonymous_terms`` collection,\n      \n|fts| returns similar results for a search for ``car race`` or ``vehicle\nrace`` because we configured ``automobile``, ``car``, and ``vehicle`` to\nbe ``equivalent`` synonyms. However, the results for ``automobile\ncontest`` wouldn't include documents with ``race`` or ``rally`` and the\nresults for ``automobile rally`` wouldn't include documents with\n``race`` or ``contest`` because we didn't configure ``contest`` or\n``rally`` to be synonym of any terms.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/phrase.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"$search\": {\n        \"index\": <index name>, // optional, defaults to \"default\"\n        \"queryString\": {\n           \"defaultPath\": \"<default-field-to-search>\",\n           \"query\": \"(<field-to-search>: (<search-values>) AND|OR (<search-values>)) AND|OR (<search-values>)\"\n        }\n     }\n   }\n\n.. _querystring-options:\n\nOptions\n-------\n\n``queryString`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 15 10 60 15\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``defaultPath``\n     - string\n     - The indexed field to search by default. |fts| only searches the\n       field in ``defaultPath`` if you omit the field to search in the \n       ``query``.\n\n     - yes\n\n   * - ``query``\n     - string\n     - One or more indexed fields and values to search. Fields and\n       values are colon-delimited. For example, to search the ``plot``\n       field for the string ``baseball``, use ``plot:baseball``. The\n       following operators are available to combine multiple search\n       criteria:\n\n       You can combine the fields and values using the following:\n\n       .. list-table::\n          :widths: 10 90\n\n          * - ``AND``\n            - Indicates ``AND`` boolean operator. All search values\n              must be present for a document to be included in the\n              results.\n\n          * - ``OR``\n            - Indicates ``OR`` boolean operator. At least one of the\n              search value must be present for a document to be\n              included in the results.\n\n          * - ``NOT``\n            - Indicates ``NOT`` boolean operator. Specified search \n              value must be absent for a document to be included in \n              the results.\n\n          * - ``TO`` \n            - Indicates the range to search. You can use ``[]`` for an\n              inclusive range, ``{}`` for an exclusive range, or ``{]``\n              and ``[}`` for an half-open range. Any value that falls\n              within the specified range must be present for a document\n              to be included in the results. \n\n          * - ``()``\n            - Delimiters for subqueries. Use the parentheses to group\n              fields and values to search.\n\n       You can run wildcard and regular expression queries using the\n       following: \n\n       .. list-table::\n          :widths: 10 90\n\n          * - ``?``\n            - Indicates any single character to match. \n\n          * - ``*``\n            - Indicates 0 or more characters to match.\n\n              The ``queryString`` operator doesn't support a wildcard query\n              with ``*`` as the first character in the query. The\n              ``queryString`` operator treats any character preceding the\n              ``*`` as prefix or as characters that must exactly match. \n\n          * - ``/`` \n            - Delimiter for regular expression. \n\n          * - ``~``\n            - Indicates fuzzy search to find strings which are similar\n              to the search term by up to the specified number of edits.\n              For example, ``{ \"query\":\"foo\":\"stop\"~2 }`` is equal to the following:\n              \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "                :copyable: false\n                \n                { \"defaultPath\": \"foo\", \"query\": \"stop\", \"maxEdits\": 2 }\n\n              The ``queryString`` operator only supports fuzzy search for\n              up to at most 2 edits. Higher distances are not useful as the \n              results may match many dictionary terms. \n              \n              If you use ``~`` with multiple terms in \n              a string, the ``queryString`` operator does a proximity \n              search for the terms within the specified number of terms. For example, \n              ``{ \"query\":\"foo\":\"New York\"~2 }`` is equal to the following:\n              \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "                 :copyable: false\n\n                 { \"defaultPath\": \"foo\", \"query\": \"New York\", \"slop\": 2 }          \n\n          \n     - yes\n\n   * - ``score``\n     - object\n     - The score assigned to matching search results. You can modify\n       the default score using the following options:\n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score with the given expression.\n       \n       .. include:: /includes/fact-fts-array-scoring.rst\n        \n       For information on using ``score`` in your query, see :ref:`scoring-ref`.\n\n     - no\n\n.. _querystring-ref-examples:\n\nExamples\n--------\n\nThe following examples use the ``movies`` collection in the\n``sample_mflix`` database. If you have the :ref:`sample dataset\n<available-sample-datasets>` on your {+cluster+} , you can create the\n|fts| index named ``default`` with dynamic mappings and run the example \nqueries on your {+cluster+} .  \n\nBoolean Operator Queries\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nBasic Examples \n``````````````\n\n.. tabs::\n\n   tabs:\n     - id: beg1\n       name: AND OR \n       content: |\n\n        The following example uses the ``queryString`` operator to query for\n        movies with the title ``Rocky`` and either ``IV``, ``4``, or ``Four``.\n\n        .. example::\n\n           The following query searches for the combination of ``Rocky`` and\n           either ``IV``, ``4``, or ``Four`` at path ``title`` in the\n           ``movies`` collection. In the following query, a field is specified\n           in the ``defaultPath``, but no fields are specified in the\n           ``query``. The query includes a :pipeline:`$project` stage\n           to exclude all fields except ``title``.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :linenos:\n\n              db.movies.aggregate([\n                 {\n                    $search: {\n                       \"queryString\": {\n                          \"defaultPath\": \"title\",\n                          \"query\": \"Rocky AND (IV OR 4 OR Four)\"\n                       }\n                    }\n                 },\n                 {\n                    $project: {\n                       \"_id\": 0,\n                       \"title\": 1\n                    }\n                 }\n              ])\n\n           For this query, |fts| performs a search at ``defaultPath``\n           because there are no fields in the ``query``. It returns the\n           following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :copyable: false\n\n              { \"title\" : \"Rocky IV\" }\n\n     - id: beg2\n       name: AND NOT \n       content: |\n\n        The following example uses the ``queryString`` operator to \n        query for movies with the title ``Rocky`` and not ``II``,\n        ``III``, ``VI``, or ``V``. \n\n        .. example::\n\n           The following query searches for the string ``Rocky`` and\n           not any form of the numbers ``2``, ``3``, ``4``, or ``5`` at \n           path ``title`` in the ``movies`` collection. In the \n           following query, a field is specified in the \n           ``defaultPath``, but no fields are specified in the \n           ``query``. The query includes a :pipeline:`$project` stage \n           to exclude all fields except ``title``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :linenos:\n\n              db.movies.aggregate([\n                 {\n                    $search: {\n                       \"queryString\": {\n                          \"defaultPath\": \"title\",\n                          \"query\": \"Rocky AND NOT ((II OR 2 OR Two) OR (III OR 3 OR Three) OR (IV OR 4 OR Four) OR (V OR 5 OR Five))\"\n                       }\n                    }\n                 },\n                 {\n                    $project: {\n                       \"_id\": 0,\n                       \"title\": 1\n                    }\n                 }\n              ])\n\n           For this query, |fts| performs a search at ``defaultPath`` \n           because there are no fields in the ``query``. It returns the \n           following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :copyable: false\n\n              [\n                { title: 'Rocky' },\n                { title: 'Rocky Marciano' },\n                { title: 'Rocky Balboa' },\n                { title: 'The Rocky Horror Picture Show' },\n                { title: 'The Adventures of Rocky & Bullwinkle' }\n              ]\n\n     - id: beg3\n       name: AND \n       content: |\n\n        The following example uses the ``queryString`` operator to query for\n        movies with the title ``The Italian`` in the ``Drama`` genre.\n\n        .. example::\n \n           The following query searches a combination of fields for movies with\n           the title ``The Italian`` in the ``Drama`` genre. The ``plot`` field\n           in the ``defaultPath`` will be searched only if no matching results\n           can be found in either of the fields specified in the ``query``\n           field. The ``query`` field contains escaped double quotes as\n           delimiters for the phrase to search.\n\n           The query includes a :pipeline:`$project` stage to:\n\n           - Exclude all fields except ``_id``, ``title``, ``plot``, and\n             ``genres``\n           - Add a field named ``score``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :linenos:\n\n              db.movies.aggregate([\n                 {\n                    $search: {\n                       \"queryString\": {\n                          \"defaultPath\": \"plot\",\n                          \"query\": \"title:\\\"The Italian\\\" AND genres:Drama\"\n                       }\n                    }\n                 },\n                 {\n                    $project: {\n                       \"_id\": 1,\n                       \"title\": 1,\n                       \"plot\": 1,\n                       \"genres\": 1,\n                       score: { $meta: \"searchScore\" }\n                    }\n                 }\n              ])\n\n           This query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :linenos:\n              :copyable: false\n\n              {\n                \"_id\" : ObjectId(\"573a1390f29313caabcd56df\"),\n                \"plot\" : \"An immigrant leaves his sweetheart in Italy to find a better life across the sea in the grimy slums of New York. They are eventually reunited and marry. But life in New York is hard and ...\",\n                \"genres\" : [ \"Drama\" ],\n                \"title\" : \"The Italian\",\n                \"score\" : 4.975106716156006\n              }\n              {\n                \"_id\" : ObjectId(\"573a13b3f29313caabd3e36c\"),\n                \"plot\" : \"Set in 2002, an abandoned 5-year-old boy living in a rundown orphanage in a small Russian village is adopted by an Italian family.\",\n                \"genres\" : [ \"Drama\" ],\n                \"title\" : \"The Italian\",\n                \"score\" : 4.975106716156006\n              }\n              {\n                \"_id\" : ObjectId(\"573a13c7f29313caabd756ee\"),\n                \"plot\" : \"A romantic fairy tale about a 19-year old orphan girl who, as her sole inheritance, gets an antique key that unlocks both an old Italian villa and the secrets of her family history.\",\n                \"genres\" : [ \"Comedy\", \"Drama\", \"Romance\" ],\n                \"title\" : \"The Italian Key\",\n                \"score\" : 4.221206188201904\n              }\n              {\n                \"_id\" : ObjectId(\"573a13caf29313caabd7d1e4\"),\n                \"plot\" : \"A chronicle of the 1969 bombing at a major national bank in Milan and its aftermath.\",\n                \"genres\" : [ \"Drama\" ],\n                \"title\" : \"Piazza Fontana: The Italian Conspiracy\",\n                \"score\" : 3.4441356658935547\n              }\n\n     - id: beg4\n       name: OR AND \n       content: |\n\n        The following example uses the ``queryString`` operator to query for\n        movie plots that contain the terms ``captain`` or ``kirk`` and\n        ``enterprise``.\n\n        .. example::\n\n           The following query searches for a combination of terms, ``captain``\n           or ``kirk`` and ``enterprise``, in the ``plot`` field. It includes a\n           :pipeline:`$limit` stage to limit the output to ``3`` results\n           and a :pipeline:`$project` stage to:\n\n           - Exclude all fields except ``title``, ``plot``, and ``fullplot``\n           - Add a field named ``score``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :linenos:\n\n              db.movies.aggregate([\n                 {\n                    $search: {\n                       \"queryString\": {\n                          \"defaultPath\": \"fullplot\",\n                          \"query\": \"plot:(captain OR kirk) AND enterprise\"\n                       }\n                    }\n                 },\n                 {\n                    $limit: 3\n                 },\n                 {\n                    $project: {\n                       \"_id\": 0,\n                       \"title\": 1,\n                       \"plot\": 1,\n                       \"fullplot\": 1,\n                       score: { $meta: \"searchScore\" }\n                    }\n                 }\n              ])\n\n           This query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :linenos:\n              :copyable: false\n\n              { \n                \"plot\" : \"Captain Picard, with the help of supposedly dead Captain Kirk, must stop a madman willing to murder on a planetary scale in order to enter an energy ribbon.\",\n                \"fullplot\" : \"In the late 23rd century, the gala maiden voyage of the third Starship Enterprise (NCC-1701-B) boasts such luminaries as Pavel Chekov, Montgomery Scott and the legendary Captain James T. Kirk as guests. But the maiden voyage turns to disaster as the unprepared ship is forced to rescue two transport ships from a mysterious energy ribbon. The Enterprise manages to save a handful of the ships' passengers and barely makes it out intact... but at the cost of Captain Kirk's life. Seventy-eight years later, Captain Jean-Luc Picard and the crew of the Enterprise-D find themselves at odds with the renegade scientist Tolian Soran... who is destroying entire star systems. Only one man can help Picard stop Soran's scheme... and he's been dead for seventy-eight years.\",\n                \"title\" : \"Star Trek: Generations\",\n                \"score\" : 11.274821281433105 \n              }\n              { \n                \"plot\" : \"Captain Kirk and his crew must deal with Mr. Spock's long-lost half-brother who hijacks the Enterprise for an obsessive search for God at the center of the galaxy.\",\n                \"fullplot\" : \"When the newly-christened starship Enterprise's shakedown cruise goes poorly, Captain Kirk and crew put her into Spacedock for repairs. But an urgent mission interrupts their Earth-bound shore leave. A renegade Vulcan named Sybok has taken three ambassadors hostage on Nimbus III, the Planet of Galactic Peace. This event also attracts the attention of a Klingon captain who wants to make a name for himself and sets out to pursue the Enterprise. Sybok's ragtag army captures the Enterprise and takes her on a journey to the center of the galaxy in search of the Supreme Being.\",\n                \"title\" : \"Star Trek V: The Final Frontier\",\n                \"score\" : 9.889547348022461 \n              }\n              { \n                \"plot\" : \"When an alien spacecraft of enormous power is spotted approaching Earth, Admiral Kirk resumes command of the Starship Enterprise in order to intercept, examine and hopefully stop the intruder.\",\n                \"fullplot\" : \"A massive alien spacecraft of enormous power is approaching Earth, destroying everything in its path. The only star ship in range is the USS Enterprise still in dry-dock after a major overhaul. As Captain Willard Decker readies his ship and his crew to face this menace, Admiral James T. Kirk arrives with orders to take command of the Enterprise and intercept the alien intruder. But it has been three years since Kirk last commanded the Enterprise on its historic five year mission... is he up to the task of saving the Earth?\",\n                \"title\" : \"Star Trek: The Motion Picture\",\n                \"score\" : 8.322310447692871 \n              }\n\n           The documents in the above results match because:\n\n           - In the first document, the ``plot`` field, which is the field to\n             search per the  ``query``, contains both ``captain`` and ``kirk``,\n             although only either one is required to meet the criteria for a\n             match. For the term ``enterprise``, |fts| searches the\n             ``fullplot`` field, which is the ``defaultPath``, because the\n             ``plot`` field does not contain ``enterprise``, and finds\n             ``enterprise`` in the ``fullplot`` field.\n           - In the second document, the ``plot`` field contains all three\n             search terms.\n           - In the third document, the ``plot`` field contains ``kirk`` and\n             ``enterprise``.\n\nAdvanced Examples\n`````````````````\n\nThe following example uses the ``queryString`` operator to query for\nmovie plots that contain the terms ``captain``, ``kirk``, and\n``chess``. This example shows how different grouping of the same search\nterms using parentheses can result in different documents to be\nincluded in the search results.\n\n.. example::\n\n   The following queries search for a combination of the terms,\n   ``captain``, ``kirk``, and ``chess`` in the ``plot`` field. \n   Each query returns a different result depending\n   on how the search terms are grouped.\n\n   The queries also includes a :pipeline:`$project` stage to:\n\n   - Exclude all fields except ``title``, ``plot``, and ``fullpath``\n   - Add a field named ``score``\n\n   .. tabs::\n\n      tabs:\n        - id: eg1\n          name: Example 1\n          content: |\n\n           The following query searches for ``chess`` and either ``captain`` or \n           ``kirk`` in the ``plot`` field. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :linenos:\n\n              db.movies.aggregate([\n                {\n                  $search: {\n                     \"queryString\": {\n                        \"defaultPath\": \"fullplot\",\n                        \"query\": \"plot:(captain OR kirk) AND chess\"\n                     }\n                  }\n                },\n                {\n                  $project: {\n                     \"_id\": 0,\n                     \"title\": 1,\n                     \"plot\": 1,\n                     \"fullplot\": 1,\n                     score: { $meta: \"searchScore\" }\n                  }\n                }\n              ])\n\n           This query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :copyable: false\n\n              {\n               \"fullplot\" : \"When the crew of the Enterprise is called back home, they find an unstoppable force of terror from within their own organization has detonated the fleet and everything it stands for, leaving our world in a state of crisis. With a personal score to settle, Captain Kirk leads a manhunt to a war-zone world to capture a one-man weapon of mass destruction. As our heroes are propelled into an epic chess game of life and death, love will be challenged, friendships will be torn apart, and sacrifices must be made for the only family Kirk has left: his crew.\",\n               \"plot\" : \"After the crew of the Enterprise find an unstoppable force of terror from within their own organization, Captain Kirk leads a manhunt to a war-zone world to capture a one-man weapon of mass destruction.\",\n               \"title\" : \"Star Trek Into Darkness\",\n               \"score\" : 7.968792915344238\n              }\n        \n           The document in the above results is a match because the\n           ``plot`` contains the terms ``captain`` and ``kirk``, although\n           only one is needed to meet the criteria for a match, and the\n           term ``chess``, although not in the ``plot``, appears in the\n           ``fullplot``, which is the ``defaultPath``.\n\n        - id: eg2\n          name: Example 2\n          content: |\n\n           The following query searches for ``captain`` or\n           both ``kirk`` and ``chess`` in the ``plot`` field. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "              :copyable: false\n\n              {\n               \"fullplot\" : \"When the crew of the Enterprise is called back home, they find an unstoppable force of terror from within their own organization has detonated the fleet and everything it stands for, leaving our world in a state of crisis. With a personal score to settle, Captain Kirk leads a manhunt to a war-zone world to capture a one-man weapon of mass destruction. As our heroes are propelled into an epic chess game of life and death, love will be challenged, friendships will be torn apart, and sacrifices must be made for the only family Kirk has left: his crew.\",\n               \"plot\" : \"After the crew of the Enterprise find an unstoppable force of terror from within their own organization, Captain Kirk leads a manhunt to a war-zone world to capture a one-man weapon of mass destruction.\",\n               \"title\" : \"Star Trek Into Darkness\",\n               \"score\" : 9.227973937988281\n              }\n              {\n               \"plot\" : \"Captain Picard, with the help of supposedly dead Captain Kirk, must stop a madman willing to murder on a planetary scale in order to enter an energy ribbon.\",\n               \"title\" : \"Star Trek: Generations\",\n               \"fullplot\" : \"In the late 23rd century, the gala maiden voyage of the third Starship Enterprise (NCC-1701-B) boasts such luminaries as Pavel Chekov, Montgomery Scott and the legendary Captain James T. Kirk as guests. But the maiden voyage turns to disaster as the unprepared ship is forced to rescue two transport ships from a mysterious energy ribbon. The Enterprise manages to save a handful of the ships' passengers and barely makes it out intact... but at the cost of Captain Kirk's life. Seventy-eight years later, Captain Jean-Luc Picard and the crew of the Enterprise-D find themselves at odds with the renegade scientist Tolian Soran... who is destroying entire star systems. Only one man can help Picard stop Soran's scheme... and he's been dead for seventy-eight years.\",\n               \"score\" : 3.3556222915649414\n              }\n              {\n               \"plot\" : \"An army cadet accompanies an irascible, blind captain on a week-long trip from Turin to Naples. The captain, Fausto, who wants no pity, brooks no disagreement, and charges into every ...\",\n               \"title\" : \"Scent of a Woman\",\n               \"fullplot\" : \"An army cadet accompanies an irascible, blind captain on a week-long trip from Turin to Naples. The captain, Fausto, who wants no pity, brooks no disagreement, and charges into every situation, nicknames the youth Ciccio (\\\"Babyfat\\\"), and spends the next few days ordering him about and generally behaving badly in public. In Rome, Fausto summons a priest to ask for his blessing; in Naples, where Fausto joins a blind lieutenant for drinking and revelry, the two soldiers talk quietly and seriously about \\\"going through with it.\\\" Also in Naples is Sara, in love with Fausto, but treated cruelly by him. What do the blind soldiers plan? Can Sara soften Fausto's hardened heart?\",\n               \"score\" : 3.2553727626800537\n              }\n              {\n               \"plot\" : \"A seductive woman falls in love with a mysterious ship's captain.\",\n               \"title\" : \"Pandora and the Flying Dutchman\",\n               \"fullplot\" : \"Albert Lewin's interpretation of the legend of the Flying Dutchman. In a little Spanish seaport named Esperanza, during the 30s, appears Hendrick van der Zee, the mysterious captain of a yacht (he is the only one aboard). Pandora is a beautiful woman (who men kill and die for). She's never really fallen in love with any man, but she feels very attracted to Hendrick... We are soon taught that Hendrick is the Flying Dutchman, this sailor of the 17th century that has been cursed by God to wander over the seas until the Doomsday... unless a woman is ready to die for him...\",\n               \"score\" : 3.2536067962646484\n              }\n              {\n               \"plot\" : \"The adventures of pirate Captain Red and his first mate Frog.\",\n               \"title\" : \"Pirates\",\n               \"fullplot\" : \"Captain Red runs a hardy pirate ship with the able assistance of Frog, a dashing young French sailor. One day Capt. Red is captured and taken aboard a Spanish galleon, but thanks to his inventiveness, he raises the crew to mutiny, takes over the ship, and kidnaps the niece of the governor of Maracaibo. The question is, can he keep this pace up?\",\n               \"score\" : 3.2536067962646484\n              }\n\n           The documents in the above results match because the ``plot``\n           field contains the term ``captain``. The first document\n           gets a higher score because |fts| also finds the terms ``kirk``\n           and ``chess`` in the ``fullplot`` field although the terms are\n           not required to be present to meet the criteria for a match.\n\nRange Queries \n~~~~~~~~~~~~~\n\n.. tabs::\n\n   .. tab:: TO \n      :tabid: to\n\n      The following example uses the ``queryString`` operator to query the\n      movie titles a range of textual values from the characters\n      ``count`` to any character (defined using the wildcard character\n      ``*``) in ascending alphabetical order. \n\n      .. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "            :copyable: true \n      \n            .. input:: \n               :language: json\n               :linenos: \n\n                db.movies.aggregate([\n                  {\n                    \"$search\": {\n                      \"queryString\": {\n                         \"defaultPath\": \"plot\",\n                         \"query\": \"title:[count TO *]\"\n                      }\n                    }\n                  },\n                  {\n                    \"$limit\": 10\n                  },\n                  {\n                    \"$project\": {\n                      \"_id\": 0,\n                      \"title\": 1\n                    }\n                  }\n                ])\n            \n            .. output:: \n               :language: json\n               :linenos: \n\n               [\n                 { title: 'Blacksmith Scene' },\n                 { title: 'The Great Train Robbery' },\n                 { title: 'The Land Beyond the Sunset' },\n                 { title: 'A Corner in Wheat' },\n                 { title: 'Winsor McCay, the Famous Cartoonist of the N.Y. Herald and His Moving Comics' },\n                 { title: 'Traffic in Souls' },\n                 { title: 'Gertie the Dinosaur' },\n                 { title: 'In the Land of the Head Hunters' },\n                 { title: 'The Perils of Pauline' },\n                 { title: 'The Birth of a Nation' }\n               ]      \n\n         |fts| results include movies with titles ``Blacksmith Scene``\n         and ``A Corner in Wheat`` although the range in the query\n         starts from characters ``count``. When you index with\n         the default analyzer, ``lucene.standard``, |fts| creates\n         separate tokens for the terms in the ``title`` field and\n         matches the query term to the individual tokens. Specifically,\n         |fts| creates the following tokens, at least one of which\n         (indicated by √) matches the query criteria: \n\n         .. list-table:: \n            :widths: 30 70\n            :header-rows: 1\n\n            * - Title \n              - Standard Analyzer Tokens \n\n            * - Blacksmith Scene\n              - ``blacksmith``, ``scene`` √\n         \n            * - A Corner in Wheat\n              - ``a``, ``corner``, ``in``, ``wheat`` √\n         \n         If you index using the ``lucene.keyword`` analyzer, |fts|\n         would create a single token for the whole string in the\n         ``title`` field, resulting in results similar to the following \n         for the same query: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "            :copyable: false \n\n            [\n              { title: 'è Nous la Libertè' },\n              { title: 'tom thumb' },\n              { title: 'è nos amours' },\n              { title: 'èke och hans vèrld' },\n              { title: 'èdipussi' },\n              { title: 's/y Glèdjen' },\n              { title: 'èAy, Carmela!' },\n              { title: 'èlisa' },\n              { title: 'èxtasis' },\n              { title: 'eXistenZ' }\n            ]\n\n   .. tab:: TO AND\n      :tabid: to-and\n\n      The following example uses the ``queryString`` operator to query the\n      movie genres for ``drama`` and the titles for a range of textual\n      values between ``man`` and ``men``, including both, in ascending\n      alphabetical order. \n\n      .. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "            :copyable: true \n      \n            .. input:: \n               :language: json\n               :linenos: \n\n                db.movies.aggregate([\n                  {\n                     \"$search\": {\n                       \"queryString\": {\n                       \"defaultPath\": \"plot\",\n                       \"query\": \"title:[man TO men] AND genres: Drama\"\n                     }\n                   }\n                 },\n                 {\n                   \"$limit\": 10\n                 },\n                 {\n                   \"$project\": {\n                     \"_id\": 0,\n                     \"title\": 1,\n                     \"genres\": 1\n                    }\n                  }\n                ])\n            \n            .. output:: \n               :language: json\n               :linenos:\n\n               [\n                 { genres: [ 'Drama' ], title: 'The Wedding March' },\n                 { genres: [ 'Drama' ], title: 'Maria Chapdelaine' },\n                 { genres: [ 'Drama' ], title: 'Of Mice and Men' },\n                 { genres: [ 'Drama' ], title: 'All the King's Men' },\n                 { genres: [ 'Drama' ], title: 'Wuya yu maque' },\n                 { genres: [ 'Drama' ], title: 'The Men' },\n                 { genres: [ 'Drama' ], title: 'The Member of the Wedding' },\n                 { genres: [ 'Drama' ], title: 'The Great Man' },\n                 { genres: [ 'Drama' ], title: 'A Matter of Dignity' },\n                 { genres: [ 'Drama' ], title: 'The Last Angry Man' }\n               ]\n\n         The documents in the results match because the ``genres`` field\n         contains the term ``drama`` and the movie ``title`` field\n         contains terms between ``Man`` and ``Men`` in alphabetical order\n         (``Man``, ``Maque``, ``March``, ``Maria``, ``Matter``,\n         ``Member``, and ``Men`` in the results). \n\nWildcard Queries \n~~~~~~~~~~~~~~~~\n\nThe following examples use the ``queryString`` operator to query for\nmovie titles using fuzzy, wildcard, and regular expressions. The queries\ninclude a :pipeline:`$project` stage to exclude all fields except\n``title``. \n\n.. tabs:: \n\n   .. tab:: Fuzzy Example \n      :tabid: fuzzy\n\n      The following query uses fuzzy (``~``) to do a fuzzy search in\n      the ``title`` field for movie titles that contain terms similar to \n      ``catch`` with up to a two character variation. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: json\n            :linenos: \n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"queryString\": {\n                    \"defaultPath\": \"title\",\n                    \"query\": \"catch~2\"\n                  }\n                }\n              },\n              {\n                \"$limit\": 10\n              },\n              {\n                \"$project\": {\n                   \"_id\": 0,\n                   \"title\": 1\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json\n            :linenos:\n\n            [\n              { title: 'Catch-22' },\n              { title: 'Catch That Girl' },\n              { title: 'Catch That Kid' },\n              { title: 'Catch a Fire' },\n              { title: 'Catch Me Daddy' },\n              { title: 'Death Watch' },\n              { title: 'Patch Adams' },\n              { title: \"Batch '81\" },\n              { title: 'Briar Patch' },\n              { title: 'Night Watch' }\n            ]\n\n   .. tab:: Wildcard Example \n      :tabid: wildcard \n\n      The following query uses wildcard expression to search the\n      ``title`` field for movie titles that contain characters\n      ``cou*t?*``, where ``*`` indicates any additional number of\n      characters and ``?`` indicates any single character. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: json\n            :linenos: \n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"queryString\": {\n                    \"defaultPath\": \"title\",\n                    \"query\": \"cou*t?*\" \n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json\n            :linenos: \n\n            [\n              { title: 'A Day in the Country' },\n              { title: 'Diary of a Country Priest' },\n              { title: 'Cry, the Beloved Country' },\n              { title: 'The Country Girl' },\n              { title: 'Raintree County' }\n            ]\n\n      The documents in the results match because the ``title``\n      field contains the term ``Country`` or ``County``, which matches\n      the query criteria for characters starting with ``cou`` followed\n      by any number of characters (``n`` in the results) and then ``t`` \n      followed by at least one or many characters (``r`` as in\n      ``country`` or ``y`` as in ``county`` in the results). \n\n   .. tab:: Regular Expression Example \n      :tabid: regex\n\n      The following query uses a regular expression to search the\n      ``title`` field for movie titles that contain characters that\n      start with any character followed by the characters ``tal`` \n      and either ``y`` or ``ian`` after ``tal``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: json\n            :linenos: \n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"queryString\": {\n                    \"defaultPath\": \"title\",\n                    \"query\": \"/.tal(y|ian)/\" \n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1\n                }\n              }\n            ])\n      \n         .. output:: \n            :language: json\n            :linenos: \n\n            [\n              { title: 'The Italian' },\n              { title: 'Journey to Italy' },\n              { title: 'Divorce Italian Style' },\n              { title: 'Marriage Italian Style' },\n              { title: 'Jealousy, Italian Style' }\n            ]\n\n      The documents in the results match because the ``title``\n      field contains the term ``Italy`` or ``Italian``, which matches\n      the query criteria for any character (``I`` in the results)\n      followed by ``tal`` with either ``y`` (as in ``Italy`` in the\n      results) or ``ian`` (as in ``Italian`` in the results).  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/queryString.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n       \"$search\": {\n          \"index\": <index name>, // optional, defaults to \"default\"\n          \"range\": {\n             \"path\": \"<field-to-search>\",\n             \"gt | gte\": <value-to-search>,\n             \"lt | lte\": <value-to-search>,\n             \"score\": <score-options>\n          }\n       }\n   }\n\n.. _range-options:\n\nOptions\n-------\n\n``range`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 20 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``gt`` or ``gte``\n     - BSON date, number, or string, or objectId\n     - Find values greater than (``>``) or greater than or equal to\n       (``>=``) the given value.\n\n       - For number fields, the value can be an ``int32``, ``int64``, \n         or ``double`` data type.\n       - For date fields, the value must be an \n         :term:`ISODate` formatted date. \n       - For string fields, the value must be indexed as |fts| ``token``\n         type. \n       - For ``ObjectId`` fields, the value must be indexed as\n         :ref:`objectId <objectId-ref>` data type or :ref:`dynamic\n         mappings <static-dynamic-mappings>` must be set to ``true``.\n\n     - no\n\n   * - ``lt`` or ``lte``\n     - BSON date, number, or string, or objectId\n     - Find values less than (``<``) or less than or equal to (``<=``)\n       the given value.\n\n       - For number fields, the value can be an ``int32``, ``int64``,\n         or ``double`` data type.\n       - For date fields, the value must be an\n         :term:`ISODate` formatted date.\n       - For string fields, the value must be indexed as |fts| ``token``\n         type. \n       - For ``ObjectId`` fields, the value must be indexed as\n         :ref:`objectId <objectId-ref>` data type or :ref:`dynamic\n         mappings <static-dynamic-mappings>` must be set to ``true``.\n\n     - no\n\n   * - ``path``\n     - string or array of strings\n     - Indexed field or fields to search.\n       See :ref:`Path Construction <ref-path>`.\n     - yes\n\n   * - ``score``\n     - object\n     - Modify the score assigned to matching search results. You can\n       modify the default score using the following options: \n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given number.\n       - ``function``: replace the result score with the given expression.\n\n       .. include:: /includes/fact-fts-array-scoring.rst\n\n       For information on using ``score`` in your query, see\n       :ref:`scoring-ref`.\n       \n\n     - no\n\nExamples\n--------\n\nThe following examples use the collection in the :ref:`sample data\n<available-sample-datasets>`. If you loaded the :ref:`sample data\n<available-sample-datasets>` on your cluster, you can create the \nindexes using the index definitions in the examples below and run the\nexample queries on your cluster. \n\n.. include:: /includes/admonitions/get-started-atlas-search.rst\n\nNumber Example\n~~~~~~~~~~~~~~\n\nThe following examples use indexes on numeric fields in the  \n:ref:`sample data <available-sample-datasets>` and run \n``range`` queries against the indexed fields. \n\n.. tabs:: \n   \n   .. tab:: Example 1\n      :tabid: eg1\n\n      For this example, you can use either static or dynamic mappings to\n      index the ``runtime`` field in the ``sample_mflix.movies``\n      collection. The query uses ``gte`` and ``lte`` fields to define\n      the numeric range to search.\n\n      Sample Index \n      ````````````\n\n      The following index definition named ``default`` indexes all the\n      fields in the ``movies`` collection. \n\n      .. tabs:: \n\n         .. tab:: Dynamic Mapping Example \n            :tabid: dynamic\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "               :linenos:\n               \n               {\n                 \"mappings\": {\n                   \"dynamic\": true\n                 }\n               }\n\n         .. tab:: Static Mapping Example \n            :tabid: static\n\n            The following index definition named ``default`` indexes the\n            ``runtime`` field only in the ``movies`` collection. \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "               :linenos:\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"runtime\": {\n                       \"type\": \"number\"\n                     }\n                   }\n                 }\n               }\n\n      Sample Query \n      ````````````\n         \n      The following query searches for movies with a runtime greater \n      than or equal to ``2`` and less than or equal to ``3``. It \n      includes a :pipeline:`$limit` stage to limit the output to \n      ``5`` results and a :pipeline:`$project` stage to exclude all \n      fields except ``title`` and ``runtime``.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json \n            :linenos:\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"range\": {\n                    \"path\": \"runtime\",\n                    \"gte\": 2,\n                    \"lte\": 3\n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"runtime\": 1\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json\n            :visible: false\n\n            { \"runtime\" : 3, \"title\" : \"Dots\" }\n            { \"runtime\" : 3, \"title\" : \"Sisyphus\" }\n            { \"runtime\" : 3, \"title\" : \"The Fly\" }\n            { \"runtime\" : 2, \"title\" : \"Andrè and Wally B.\" }\n            { \"runtime\" : 2, \"title\" : \"Luxo Jr.\" }\n\n   .. tab:: Example 2\n      :tabid: eg2\n\n      For this example, you can use either static or dynamic mappings to\n      index the ``runtime`` field in the ``sample_mflix.movies``\n      collection. The  query uses the ``lte`` field to search for all\n      values less than or equal to the given value.\n\n      Sample Index \n      ````````````\n\n      The following index definition named ``default`` indexes the\n      ``runtime`` field in the ``movies`` collection.\n\n      .. tabs:: \n\n         .. tab:: Dynamic Mapping Example \n            :tabid: dynamic\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "               :linenos:\n               \n               {\n                 \"mappings\": {\n                   \"dynamic\": true\n                 }\n               }\n\n         .. tab:: Static Mapping Example \n            :tabid: static\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "               :linenos:\n\n               {\n                 \"mappings\": {\n                   \"dynamic\": false,\n                   \"fields\": {\n                     \"runtime\": {\n                       \"type\": \"number\"\n                     }\n                   }\n                 }\n               }\n\n      Sample Query \n      ````````````\n         \n      The following query searches for all movies with a runtime \n      less than or equal to ``2``. It includes a :pipeline:`$limit` \n      stage to limit the output to ``5`` results and \n      :pipeline:`$project` stage to:\n\n      - Exclude all fields except ``title`` and ``runtime``\n      - Add a field named ``score``\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json \n            :linenos:\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"range\": {\n                    \"path\": \"runtime\",\n                    \"lte\": 2\n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"runtime\": 1,\n                  score: { $meta: \"searchScore\" }\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json\n            :visible: false\n\n            { \"runtime\" : 1, \"title\" : \"Blacksmith Scene\", \"score\" : 1 }\n            { \"runtime\" : 2, \"title\" : \"Andrè and Wally B.\", \"score\" : 1 }\n            { \"runtime\" : 2, \"title\" : \"Luxo Jr.\", \"score\" : 1 }\n            { \"runtime\" : 1, \"title\" : \"The Kiss\", \"score\" : 1 }\n            { \"runtime\" : 1, \"title\" : \"Dickson Experimental Sound Film\", \"score\" : 1 }\n\n   .. tab:: Example 3\n      :tabid: eg3\n\n      The following example dynamically indexes all the dynamically \n      indexable fields, including fields with array of numeric values, \n      in the ``sample_analytics.customers`` collection. The sample \n      query uses the ``gte`` and ``lte`` fields to search for all \n      values between the given values in an array of numeric values.\n\n      Sample Index \n      ```````````` \n\n      The following index definition named ``default`` dynamically \n      indexes all fields, including the ``accounts`` field, which is \n      an array of numeric values.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "         :copyable: true\n            \n         .. input:: \n            :language: javascript\n            :linenos:\n\n            db.customers.aggregate([\n              {\n                \"$search\": {\n                  \"range\": {\n                    \"path\": \"accounts\",\n                    \"gt\": 250000,\n                    \"lt\": 400000\n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"accounts\": 1,\n                  \"name\": 1\n                }\n              }\n            ])\n\n         .. output:: \n            :language: javascript\n            :linenos:\n            :visible: false\n\n            [\n              {\n                name: 'Elizabeth Ray',\n                accounts: [ 371138, 324287, 276528, 332179, 422649, 387979 ]\n              },\n              {\n                name: 'Katherine David',\n                accounts: [ 462501, 228290, 968786, 515844, 377292 ]\n              },\n              {\n                name: 'Brad Cardenas',\n                accounts: [ 721914, 817222, 973067, 260799, 87389 ]\n              },\n              {\n                name: 'Gary Nichols',\n                accounts: [ 385397, 337979, 325377, 440243, 586395, 86702 ]\n              },\n              { name: 'Jennifer Lawrence', accounts: [ 344885, 839927, 853542 ] }\n            ]\n\nDate Example\n~~~~~~~~~~~~\n\nThe following example uses the ``range`` operator to query a date\nfield in the ``sample_mflix.movies`` collection. For this example, you \ncan use either static or dynamic mappings to index the ``date`` type \nfield named ``released`` in the collection.\n\nSample Index \n````````````\n\n.. tabs:: \n   \n   .. tab:: Dynamic Mapping Example\n      :tabid: dme\n\n      The following index definition named ``default`` indexes all the \n      dynamically indexable fields in the ``movies`` collection, \n      including the ``released`` field, which is of type ``date``.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input::\n      :language: javascript\n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"range\": {\n              \"path\": \"released\",\n              \"gt\": ISODate(\"2010-01-01T00:00:00.000Z\"),\n              \"lt\": ISODate(\"2015-01-01T00:00:00.000Z\")\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"released\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: javascript\n      :linenos:\n      :visible: false\n\n      [\n        {\n          title: 'Too Much Johnson',\n          released: ISODate('2014-08-30T00:00:00.000Z')\n        },\n        {\n          title: 'Stolen Desire',\n          released: ISODate('2012-07-01T00:00:00.000Z')\n        },\n        {\n          title: 'The Monkey King',\n          released: ISODate('2012-01-12T00:00:00.000Z')\n        },\n        { title: 'The Land', released: ISODate('2012-08-04T00:00:00.000Z') },\n        {\n          title: 'My Childhood',\n          released: ISODate('2013-07-31T00:00:00.000Z')\n        }\n      ]\n\nObjectId Example \n~~~~~~~~~~~~~~~~\n\nThe following example uses the ``range`` operator to query an\n``objectId`` field in the ``sample_mflix.movies`` collection. For this\nexample, you can use either static or dynamic mappings to index the\n``objectId`` type field named ``_id`` in the collection.\n\nSample Index \n````````````\n\nThe following index definition named ``default`` indexes all the\nfields in the ``movies`` collection. \n\n.. tabs:: \n   \n   .. tab:: Dynamic Mapping Example\n      :tabid: dme\n\n      The following index definition named ``default`` indexes all the \n      dynamically indexable fields in the ``movies`` collection, \n      including the ``_id`` field, which is of type ``objectId``.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input::\n      :language: javascript\n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"range\": {\n              \"path\": \"_id\",\n              \"gte\": ObjectId(\"573a1396f29313caabce4a9a\"),\n              \"lte\": ObjectId('573a1396f29313caabce4ae7')\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1,\n            \"released\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: javascript\n      :linenos:\n      :visible: false\n\n      [\n        {\n          _id: ObjectId('573a1396f29313caabce4a9a'),\n          title: 'The Godfather',\n          released: ISODate('1972-03-24T00:00:00.000Z')\n        },\n        {\n          _id: ObjectId('573a1396f29313caabce4a9b'),\n          title: 'Get to Know Your Rabbit',\n          released: ISODate('1972-06-01T00:00:00.000Z')\n        },\n        {\n          _id: ObjectId('573a1396f29313caabce4aad'),\n          title: 'The Tall Blond Man with One Black Shoe',\n          released: ISODate('1973-08-30T00:00:00.000Z')\n        },\n        {\n          _id: ObjectId('573a1396f29313caabce4abe'),\n          title: 'The Great Northfield Minnesota Raid',\n          released: ISODate('1972-05-12T00:00:00.000Z')\n        },\n        {\n          _id: ObjectId('573a1396f29313caabce4ac4'),\n          title: 'The Heartbreak Kid',\n          released: ISODate('1973-02-01T00:00:00.000Z')\n        },\n        {\n          _id: ObjectId('573a1396f29313caabce4ac7'),\n          title: 'Gumshoe',\n          released: ISODate('1971-12-01T00:00:00.000Z')\n        },\n        {\n          _id: ObjectId('573a1396f29313caabce4ad9'),\n          title: 'Heat',\n          released: ISODate('1972-10-06T00:00:00.000Z')\n        },\n        {\n          _id: ObjectId('573a1396f29313caabce4ae7'),\n          title: 'Horror Express',\n          released: ISODate('1973-12-01T00:00:00.000Z')\n        }\n      ]\n\nString Example\n~~~~~~~~~~~~~~\n\nThe following example uses the ``range`` operator to query a string\nfield in the ``sample_mflix.movies`` collection. For this example, you \nmust use static mappings to index the field named ``title`` in the\ncollection as |fts| ``token`` type. \n\nSample Index \n````````````\n\nThe following index definition named ``default`` indexes the ``title``\nfield in the ``movies``  collection as |fts| ``token`` type:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json \n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"range\": {\n              \"path\": \"title\",\n              \"gt\": \"city\",\n              \"lt\": \"country\"\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n      :visible: false\n\n      [\n        { title: 'Civilization' },\n        { title: 'Clash of the Wolves' },\n        { title: 'City Lights' },\n        { title: 'Comradeship' },\n        { title: 'Come and Get It' }\n      ]\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/range.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     $search: {\n       \"index\": <index name>, // optional, defaults to \"default\"\n       \"regex\": {\n         \"query\": \"<search-string>\",\n         \"path\": \"<field-to-search>\",\n         \"allowAnalyzedField\": <boolean>,\n         \"score\": <options>\n       }\n     }\n   }\n\n.. _regex-options:\n\nOptions\n-------\n\n``regex`` uses the following terms to construct a query:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 15 40 10 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n     - Default\n\n   * - ``query``\n     - string or array of strings\n     - String or strings to search for.\n     - yes\n     -\n\n   * - ``path``\n     - string or array of strings\n     - Indexed field or fields to search. You can also specify a \n       :ref:`wildcard path <ref-path-usage>` to search. See :ref:`path\n       construction <ref-path>` for more information. \n     - yes\n     -\n\n   * - ``allowAnalyzedField``\n     - boolean\n     - Must be set to ``true`` if the query is run against an analyzed\n       field.\n     - no\n     - ``false``\n\n   * - ``score``\n     - object\n     - :ref:`Score <scoring-ref>` to assign to matching search term \n       results. Options are: \n\n       - ``boost``: multiply the result score by the given number.\n       - ``constant``: replace the result score with the given\n         number.\n       - ``function``: replace the result score with the given\n         expression. \n\n     - no\n     -\n\nBehavior\n--------\n\n.. _analyzed-field-example:\n\n``regex`` is a term-level operator, meaning that the ``query`` field is\nnot analyzed. Regular expression searches work well with the\n:ref:`keyword analyzer <ref-keyword-analyzer>`, because it indexes\nfields one word at a time. To do a case-sensitive search, do not use \nthe default analyzer, :ref:`standard analyzer <ref-standard-analyzer>`, \nbecause the ``standard`` analyzer lower cases all terms. Specify a \ndifferent :ref:`analyzer <analyzers-ref>` instead.\n\nIt is possible to use the ``regex`` operator to perform searches on an\nanalyzed field by setting the ``allowAnalyzedField`` option to\n``true``, but you may get unexpected results.\n\n.. example::\n\n   Searching for ``*Star Trek*`` on a field indexed with the\n   ``keyword`` analyzer finds all documents in which the field contains\n   the string ``Star Trek`` in any context. Searching for ``*Star\n   Trek*`` on a field indexed with the :ref:`standard analyzer \n   <ref-standard-analyzer>` finds nothing, because there is a space \n   between ``Star`` and ``Trek``, and the index contains no spaces.\n\nLucene Regular Expression Behavior\n----------------------------------\n\nThe |fts| ``regex`` operator uses the `Lucene regular expression engine\n<https://lucene.apache.org/core/8_0_0/core/org/apache/lucene/util/automaton/RegExp.html>`__,\nwhich differs from `Perl Compatible Regular Expressions <https://www.pcre.org/>`__.\n\nReserved characters\n~~~~~~~~~~~~~~~~~~~\n\nThe following characters are reserved as operators when used in regular\nexpressions:\n\n``. ? + * | { } [ ] ( ) < > \" \\ @ #``\n\nTo use any of the above characters literally in a matching expression,\nprecede it with a ``\\`` character. \n\n.. example::\n\n   ``who\\?`` *matches \"who?\"*\n\n\n.. include:: /includes/fact-fts-escape-char-behavior.rst\n\nSupported Operators\n~~~~~~~~~~~~~~~~~~~\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 60 30\n\n   * - Operator\n     - Description\n     - Example\n\n   * - ``.``\n     - Matches any character.\n     - ``x.z`` *matches \"xyz\", \"xaz\", etc.* \n\n   * - ``?``\n     - The preceding character is optional and matches if it occurs no more than\n       once.\n     - ``xyz?`` *matches \"xy\" and \"xyz\"*\n\n   * - ``+``\n     - The preceding character matches if it occurs one or more times.\n     - ``xy+`` *matches \"xy\", \"xyy\", \"xyyy\", etc.*\n\n   * - ``*``\n     - The preceding character matches if it occurs any number of times.\n     - ``xyz*`` *matches \"xy\", \"xyz\", \"xyzz\", etc.*\n\n   * - ``|``\n     - The ``OR`` operator. The expression matches if the longer of the two\n       patterns on either side of the ``|`` operator matches. \n     - ``abc|xyz`` *matches \"abc\" or \"xyz\"*\n\n   * - ``{<number>}``\n     - The preceding character matches if it occurs exactly <number> times.\n     - ``xyz{3}`` *matches \"xyzzz\"*\n\n   * - ``()``\n     - Characters inside parentheses are treated as a single unit for matching\n       purposes.\n     - ``xyz(abc)[2]`` *matches \"xyzabcabc\"*\n\n   * - ``[]``\n     - Matches any of the characters inside the square brackets. \n      \n       Adding a ``^`` to the beginning matches any character except \n       those within the square brackets. \n\n       Inside the square brackets, ``-`` indicates a range, unless ``-`` is \n       the first character or is escaped with a ``\\``.  \n     - | ``[xyz]`` *matches \"x\", \"y\", and \"z\"*\n       | ``[^abc]`` *matches any character except \"a\", \"b\", or \"c\"*\n       | ``[a-d]`` *matches \"a\", \"b\", \"c\", or \"d\"*\n       | ``[0-9]`` *matches any numeric character from 0 through 9* \n\n   * - ``<>`` \n     - Match a numeric range. \n     - ``<1-3>`` *matches \"1\", \"2\", and \"3\"*\n\n   * - ``#`` \n     - The empty language operator. The ``#`` operator does not match any string, including an empty string.\n     - ``#|xyz`` *matches \"xyz\" and nothing else*\n\nUnsupported Operators\n~~~~~~~~~~~~~~~~~~~~~\n\n``regex`` does not support the anchor operators ``^`` and ``$``.\n\nExamples\n--------\n\nThe following examples use the ``movies`` collection in the\n``sample_mflix`` database with a custom index definition that uses the\n:ref:`keyword analyzer <ref-keyword-analyzer>`. If you have the\n:ref:`sample dataset <available-sample-datasets>` on your cluster, you\ncan create an |fts| index on the ``movies`` collection and run the\nexample queries on your cluster. \n\n.. include:: /includes/admonitions/get-started-atlas-search.rst\n\nIndex Definition\n~~~~~~~~~~~~~~~~\n\nThe following index definition indexes the ``title`` field in the\n``movies`` collection with the\n:ref:`keyword analyzer <ref-keyword-analyzer>`:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/regex.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"mappings\": {\n       \"fields\": {\n         \"title\": {\n           \"analyzer\": \"lucene.keyword\",\n           \"type\": \"string\"\n         }\n       }\n     }\n   }\n\nThe following example searches all ``title`` fields for movie titles\nthat end with the word ``Seattle``. The ``(.*)`` regular expression\nmatches any number of characters.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/regex.txt"
  },
  {
    "code": "   :linenos:\n\n   db.movies.aggregate([\n      {\n         \"$search\": {\n            \"regex\": {\n               \"path\": \"title\",\n               \"query\": \"(.*) Seattle\"\n            }\n         }\n      },\n      {\n         $project: {\n            \"_id\": 0,\n            \"title\": 1\n         }\n      }\n   ])\n\nThe above query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/regex.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"title\" : \"Sleepless in Seattle\" }\n   { \"title\" : \"Battle in Seattle\" }\n\nThe following example uses the regular expression ``[0-9]{2} (.){4}s``\nto find movie titles which begin with a 2-digit number followed by a\nspace, and end with a 5-letter word ending in ``s``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/regex.txt"
  },
  {
    "code": "   :linenos:\n\n   db.movies.aggregate([\n      {\n         \"$search\": {\n            \"regex\": {\n               \"path\": \"title\",\n               \"query\": \"[0-9]{2} (.){4}s\"\n            }\n         }\n      },\n      {\n         $project: {\n            \"_id\": 0,\n            \"title\": 1\n         }\n      }\n   ])\n\nThe above query returns the following results:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/regex.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"title\" : \"20 Dates\" }\n   { \"title\" : \"25 Watts\" }\n   { \"title\" : \"21 Grams\" }\n   { \"title\" : \"13 Lakes\" }\n   { \"title\" : \"18 Meals\" }\n   { \"title\" : \"17 Girls\" }\n   { \"title\" : \"16 Acres\" }\n   { \"title\" : \"26 Years\" }\n   { \"title\" : \"99 Homes\" }\n   { \"title\" : \"45 Years\" }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/regex.txt"
  },
  {
    "code": "   :emphasize-lines: 6 \n\n   {\n     $search: {  \n       \"<operator>\": { \n         <operator-specification>\n       },\n       \"returnStoredSource\": true | false // optional, defaults to \"false\"\n     }\n   }\n\nTo learn more about query syntax, see :pipeline:`$search`.\n\n.. _fts-return-stored-source-behavior:\n\nBehavior\n--------\n\nThe ``returnStoredSource`` boolean option specifies whether |fts| must \nperform a full document lookup on the database or return the stored \nfields directly from |fts|. You can use the ``returnStoredSource``  \noption only if your index definition includes the configuration for \nstoring fields on |fts|. To learn more about storing fields on |fts|, \nsee :ref:`ref-index-definitions` and \n:ref:`fts-stored-source-definition`. \n\nYou can set one of the following values for the  ``returnStoredSource`` \noption: \n\n- ``true`` - to return only stored source fields directly from |fts|\n- ``false`` - to do an implicit full document lookup on the backend \n  database (default)\n\nIf you run |fts| queries with the ``returnStoredSource`` boolean option \nset to ``true``:\n\n- |fts| returns an empty document if the document doesn't include the \n  fields configured for storing.\n- |fts| returns errors if the index definition doesn't include the \n  Stored Source configuration.\n- |fts| might return stale data due to a replication lag.\n- |fts| might return duplicate data on sharded clusters.\n\nIf you perform a high volume and rate of data insert and update \noperations for your collection on the backend database, |fts| might \nreturn stale data because the data stored on ``mongot`` might not be \ncurrent due to a replication lag. You can view the approximate number \nof milliseconds that |fts| is behind in replicating changes from the \n:term:`oplog` of |mongod| in the |service| UI. To learn more, see \n:ref:`review-atlas-search-metrics`.\n\nIf there are :manual:`orphaned documents \n</reference/glossary/#term-orphaned-document>` during chunk migration, \n|fts| might return duplicate documents for queries against sharded \ncluster. \n\n.. _fts-return-stored-source-use-case:\n\nSample Use  \n----------\n\nIf your ``$search`` stage discards a lot of the results and you need to \nperform implicit document lookup on your database, we recommend using \nthe ``returnStoredSource`` option. You can store fields required for \nsorting or filtering and use ``returnStoredSource`` option at query \ntime to perform the following actions: \n\n1. Intermediate operations on partial documents returned by |fts|\n2. :pipeline:`$lookup` at the end of the pipeline if full documents are \n   needed. \n\n.. important:: \n\n   For efficiency, configure only a minimum number of fields for \n   storage on |fts|. Use this option if your documents are large enough \n   to cause issues during lookup.\n\n.. _fts-return-stored-source-egs:\n\nExamples \n--------\n\nThe examples in this section use the ``sample_mflix.movies`` \ncollection. The examples show how to do a sort or match on the \ndocuments that |fts| returns after the ``$search`` stage and then \nlookup documents on the database.\n\n.. tabs:: \n         \n   .. tab:: Sort Example \n      :tabid: sorteg\n\n      1. Create the index using the following index definition. The \n         index definition for the collection specifies the following \n         fields:\n\n         - Index ``title`` field\n         - Store ``year`` and ``title`` fields\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/return-stored-source.txt"
  },
  {
    "code": "            :copyable: false \n            :linenos:\n\n            [\n              {\n                _id: ObjectId(\"573a1399f29313caabced370\"),\n                title: 'Mr. Baseball',\n                year: 1992,\n                document: [\n                  { ... } // full document returned by $lookup\n                ]\n              },\n              {\n                _id: ObjectId(\"573a1399f29313caabcee1aa\"),\n                title: 'Baseball',\n                year: 1994,\n                document: [\n                  { ... } // full document returned by $lookup\n                ]\n              }\n            ]\n\n   .. tab:: Match Example \n      :tabid: matcheg\n\n      1. Create the index using the following index definition. The \n         index definition for the collection specifies the following \n         fields:\n\n         - Index ``title`` field \n         - Store ``imdb.rating`` and ``imdb.votes`` fields\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/return-stored-source.txt"
  },
  {
    "code": "            :copyable: false\n            :linenos:\n\n            [\n              {\n                _id: ObjectId(\"573a1399f29313caabcee1aa\"),\n                imdb: { rating: 9.1, votes: 2460 },\n                document: [\n                  { ... } // full document returned by $lookup\n                ]\n              },\n              {\n                _id: ObjectId(\"573a1399f29313caabced370\"),\n                imdb: { rating: 5.8, votes: 7617 },\n                document: [\n                  { ... } // full document returned by $lookup\n                ]\n              }\n            ]\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/return-stored-source.txt"
  },
  {
    "code": "   :emphasize-lines: 6,11\n\n   {\n     \"$search\": {\n       \"<operator>\": {\n         <operator-specification>\n       },\n       \"scoreDetails\": true | false\n     }\n   },\n   {\n     \"$project\": {\n       \"scoreDetails\": {\"$meta\": \"searchScoreDetails\"}\n     }\n   }\n\n.. _fts-score-details-options:\n\nOptions \n-------\n\n*In the $search stage*, the ``scoreDetails`` boolean option\ntakes one of the following values:  \n\n- ``true`` - to include details of the score for the documents in the\n  results. If set to ``true``, |fts| returns a detailed breakdown of\n  the score for each document in the result. To learn more, see\n  :ref:`fts-score-details-output`. \n- ``false`` - to exclude details of the score breakdown for the results.\n  (Default) \n\nIf omitted, the ``scoreDetails`` option defaults to ``false``.\n\n*In the $project stage*, the ``scoreDetails`` field takes\nthe :manual:`$meta </reference/operator/aggregation/meta/>` expression,\nwhich requires the following value: \n\n.. list-table:: \n   :widths: 30 70\n\n   * - ``searchScoreDetails``\n     - Returns a detailed breakdown of the score for each document in\n       the results.\n\n.. _fts-score-details-output:\n\nOutput \n------\n\nThe ``scoreDetails`` option returns the following fields in the\n``details`` array inside the ``scoreDetails`` object for each document\nin the result:\n\n.. list-table:: \n   :header-rows: 1\n   :widths: 15 10 75\n\n   * - Field  \n     - Type \n     - Description \n     \n   * - ``value``\n     - float\n     - Contribution towards the score by a subset of the scoring\n       formula. The top-level ``value`` shows the entire score of the result\n       document, and is equal to the value of ``$searchScore``.\n       \n       The scoring formula varies based on the operator used in\n       the query. For example, |fts| uses the following scoring formula\n       for a :ref:`compound-ref` query with :ref:`text-ref` and \n       :ref:`near-ref` operators:  ``BM25Similarity +\n       distance decay function``. \n          \n\n   * - ``description``\n     - string\n     - Subset of the scoring formula including details about how the\n       document was scored and factors considered in calculating\n       the score. The top-level ``description`` shows the entire scoring formula \n       used to score the document. \n\n       To learn more, see :ref:`fts-score-details-factors`.\n\n   * - ``details``\n     - array of objects \n     - Breakdown of the score for each match in the document based on\n       the subset of the scoring formula. The value is an array of\n       score details objects, recursive in structure.\n\n.. _fts-score-details-factors:\n\nFactors That Contribute to the Score \n------------------------------------\n\nFor ``BM25Similarity``, the score is computed as ``boost * idf * tf``.\n|fts| takes into account the following ``BM25Similarity`` factors for\ncalculating the score: \n\n.. include:: /includes/list-table-fts-bm25similarity.rst\n\nFor distance decay function, the score is computed as ``pivot / (pivot +\nabs(fieldValue - origin))``. |fts| takes into account the following\nfactors for calculating the score: \n\n.. include:: /includes/list-table-fts-distance-decay-function.rst \n\n.. _fts-score-details-egs:\n\nExamples \n--------\n\nThe following examples show how to retrieve the details of the scores\nin the results for the following:\n\n- Queries run using :ref:`text-ref`, :ref:`near-ref`,\n  :ref:`compound-ref`, and :ref:`embedded-document-ref` operators. \n- Queries with scores modified using :ref:`scoring-function` option\n  expressions. \n\n.. tip:: \n\n   To view details of the score recursively in the arrays of objects,\n   configure the settings in {+mongosh+} by running the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "      :copyable: true \n\n      config.set('inspectDepth', Infinity)\n\nOperator Examples \n~~~~~~~~~~~~~~~~~\n\nThe following examples demonstrate how to retrieve a breakdown of the\nscore using the :pipeline:`$search` ``scoreDetails`` option for the\ndocuments in the results for the :ref:`text-ref`, :ref:`near-ref`,\n:ref:`compound-ref`, and :ref:`embedded-document-ref` operator queries. \n\n.. tabs:: \n\n   .. tab:: text\n      :tabid: text\n\n      The following example uses the :ref:`text-ref` operator to query\n      the ``title`` field in the ``sample_mflix.movies`` collection for\n      the term ``autumn``. The query  specifies the ``scoreDetails``\n      option in the :pipeline:`$search` stage to retrieve a detailed\n      breakdown of the score for each document in the results. The query\n      uses the :pipeline:`$limit` stage to limit the results to three\n      documents and the :pipeline:`$project` stage to do the following: \n\n      - Exclude the ``_id`` field.\n      - Include only the ``title`` field.\n      - Add the ``score`` field to the results to return the score of the\n        document and the ``scoreDetails`` field to the results to return a\n        detailed breakdown of the score for the document. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"autumn\"\n                  },\n                  \"scoreDetails\": true\n                }\n              },\n              {\n                \"$limit\": 3\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"score\": { \"$meta\": \"searchScore\" },\n                  \"scoreDetails\": { \"$meta\": \"searchScoreDetails\" }\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json \n            :linenos:\n\n            [\n              {\n                title: 'Autumn Leaves',\n                score: 3.834893226623535,\n                scoreDetails: {\n                  value: 3.834893226623535,\n                  description: '$type:string/title:autumn [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 3.834893226623535,\n                      description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                      details: [\n                        {\n                          value: 7.39188289642334,\n                          description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                          details: [\n                            {\n                              value: 14,\n                              description: 'n, number of documents containing term',\n                              details: []\n                            },\n                            {\n                              value: 23529,\n                              description: 'N, total number of documents with field',\n                              details: []\n                            }\n                          ]\n                        },\n                        {\n                          value: 0.5187978744506836,\n                          description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                          details: [\n                            {\n                              value: 1,\n                              description: 'freq, occurrences of term within document',\n                              details: []\n                            },\n                            {\n                              value: 1.2000000476837158,\n                              description: 'k1, term saturation parameter',\n                              details: []\n                            },\n                            {\n                              value: 0.75,\n                              description: 'b, length normalization parameter',\n                              details: []\n                            },\n                            {\n                              value: 2,\n                              description: 'dl, length of field',\n                              details: []\n                            },\n                            {\n                              value: 2.868375301361084,\n                              description: 'avgdl, average length of field',\n                              details: []\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Late Autumn',\n                score: 3.834893226623535,\n                scoreDetails: {\n                  value: 3.834893226623535,\n                  description: '$type:string/title:autumn [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 3.834893226623535,\n                      description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                      details: [\n                        {\n                          value: 7.39188289642334,\n                          description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                          details: [\n                            {\n                              value: 14,\n                              description: 'n, number of documents containing term',\n                              details: []\n                            },\n                            {\n                              value: 23529,\n                              description: 'N, total number of documents with field',\n                              details: []\n                            }\n                          ]\n                        },\n                        {\n                          value: 0.5187978744506836,\n                          description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                          details: [\n                            {\n                              value: 1,\n                              description: 'freq, occurrences of term within document',\n                              details: []\n                            },\n                            {\n                              value: 1.2000000476837158,\n                              description: 'k1, term saturation parameter',\n                              details: []\n                            },\n                            {\n                              value: 0.75,\n                              description: 'b, length normalization parameter',\n                              details: []\n                            },\n                            {\n                              value: 2,\n                              description: 'dl, length of field',\n                              details: []\n                            },\n                            {\n                              value: 2.868375301361084,\n                              description: 'avgdl, average length of field',\n                              details: []\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Cheyenne Autumn',\n                score: 3.834893226623535,\n                scoreDetails: {\n                  value: 3.834893226623535,\n                  description: '$type:string/title:autumn [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 3.834893226623535,\n                      description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                      details: [\n                        {\n                          value: 7.39188289642334,\n                          description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                          details: [\n                            {\n                              value: 14,\n                              description: 'n, number of documents containing term',\n                              details: []\n                            },\n                            {\n                              value: 23529,\n                              description: 'N, total number of documents with field',\n                              details: []\n                            }\n                          ]\n                        },\n                        {\n                          value: 0.5187978744506836,\n                          description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                          details: [\n                            {\n                              value: 1,\n                              description: 'freq, occurrences of term within document',\n                              details: []\n                            },\n                            {\n                              value: 1.2000000476837158,\n                              description: 'k1, term saturation parameter',\n                              details: []\n                            },\n                            {\n                              value: 0.75,\n                              description: 'b, length normalization parameter',\n                              details: []\n                            },\n                            {\n                              value: 2,\n                              description: 'dl, length of field',\n                              details: []\n                            },\n                            {\n                              value: 2.868375301361084,\n                              description: 'avgdl, average length of field',\n                              details: []\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              }\n            ]\n\n      |fts| takes into account the following ``BM25Similarity`` factors\n      for calculating the score: \n\n      .. include:: /includes/list-table-fts-bm25similarity.rst\n\n   .. tab:: near\n      :tabid: near\n\n      The following example uses the :ref:`near-ref` operator to query\n      the ``released`` field in the ``sample_mflix.movies`` collection\n      for movies released near January 01, 2010. The query specifies the\n      ``scoreDetails`` option in the :pipeline:`$search` stage to\n      retrieve a detailed breakdown of the score for each document in\n      the results. The query uses the :pipeline:`$limit` stage to limit\n      the results to three documents and the :pipeline:`$project` stage\n      to do the following: \n\n      - Exclude the ``_id`` field.\n      - Include only the ``title`` and ``released`` fields.\n      - Add the ``score`` field to the results to return the score of the\n        document and the ``scoreDetails`` field to the results to return a\n        detailed breakdown of the score for the document. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"near\": {\n                    \"path\": \"released\",\n                    \"origin\": ISODate(\"2010-01-01T00:00:00.000+00:00\"),\n                    \"pivot\": 7776000000\n                  },\n                  \"scoreDetails\": true\n                }\n              },\n              {\n                 \"$limit\": 3\n              },\n              {\n                 \"$project\": {\n                    \"_id\": 0,\n                    \"title\": 1,\n                    \"released\": 1,\n                    \"score\": { \"$meta\": \"searchScore\" },\n                    \"scoreDetails\": { \"$meta\": \"searchScoreDetails\" }\n                 }\n              }\n            ])\n\n         .. output:: \n            :language: json \n            :linenos:\n\n            [\n              {\n                title: 'Tony',\n                released: ISODate(\"2010-01-01T00:00:00.000Z\"),\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'Distance score, computed as weight * pivotDistance / (pivotDistance + abs(value - origin)) from:',\n                  details: [\n                    { value: 1, description: 'weight', details: [] },\n                    {\n                      value: 7776000000,\n                      description: 'pivotDistance',\n                      details: []\n                    },\n                    { value: 1262303969280, description: 'origin', details: [] },\n                    {\n                      value: 1262303969280,\n                      description: 'current value',\n                      details: []\n                    }\n                  ]\n                }\n              },\n             {\n                title: 'And Everything Is Going Fine',\n                released: ISODate(\"2010-01-01T00:00:00.000Z\"),\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'Distance score, computed as weight * pivotDistance / (pivotDistance + abs(value - origin)) from:',\n                  details: [\n                    { value: 1, description: 'weight', details: [] },\n                    {\n                      value: 7776000000,\n                      description: 'pivotDistance',\n                      details: []\n                    },\n                    { value: 1262303969280, description: 'origin', details: [] },\n                    {\n                      value: 1262303969280,\n                      description: 'current value',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'A Film with Me in It',\n                released: ISODate(\"2010-01-01T00:00:00.000Z\")\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'Distance score, computed as weight * pivotDistance / (pivotDistance + abs(value - origin)) from:',\n                  details: [\n                    { value: 1, description: 'weight', details: [] },\n                    {\n                      value: 7776000000,\n                      description: 'pivotDistance',\n                      details: []\n                    },\n                    { value: 1262303969280, description: 'origin', details: [] },\n                    {\n                      value: 1262303969280,\n                      description: 'current value',\n                      details: []\n                    }\n                  ]\n                }\n              }\n            ]\n\n      For distance score, |fts| takes into account the following factors\n      for calculating the score: \n\n      .. include:: /includes/list-table-fts-distance-decay-function.rst \n\n   .. tab:: compound\n      :tabid: compound\n\n      The following example uses the :ref:`compound-ref` operator to\n      query the ``sample_mflix.movies`` collection for movies using the\n      following clauses: \n      \n      - ``filter`` clause to find movies that contain the term\n        ``friend`` in the title.\n      - ``must`` clause to find movies released between the years\n        ``2000`` and ``2015``. \n      - ``mustNot`` clause to find movies that are not in the\n        ``Short``, ``Western``, and ``Biography`` genres. \n        \n      The query specifies the ``scoreDetails`` option in the\n      :pipeline:`$search` stage to retrieve a detailed breakdown of the\n      score for each document in the results. The query uses the\n      :pipeline:`$limit` stage to limit the results to three documents\n      and the :pipeline:`$project` stage to do the following: \n\n      - Exclude the ``_id`` field.\n      - Include only the ``title``, ``released``, and ``genres`` fields.\n      - Add the ``score`` field to the results to return the score of the\n        document and the ``scoreDetails`` field to the results to return a\n        detailed breakdown of the score for the document. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"compound\": {\n                    \"filter\": [{\n                      \"text\": {\n                        \"query\": \"friend\",\n                        \"path\": \"title\"\n                      }\n                    }],\n                    \"must\": [{\n                      \"range\": {\n                        \"path\": \"year\",\n                        \"gte\": 2000,\n                        \"lte\": 2015\n                      }\n                    }],\n                    \"mustNot\": [{\n                      \"text\": {\n                        \"query\": [\"Short, Western\", \"Biography\"],\n                        \"path\": \"genres\"\n                      }\n                    }]\n                  },\n                  \"scoreDetails\": true\n                }\n              },\n              {\n                \"$limit\": 3\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"released\": 1,\n                  \"genres\": 1,\n                  \"score\": { \"$meta\": \"searchScore\" },\n                  \"scoreDetails\": { \"$meta\": \"searchScoreDetails\" }\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json \n            :linenos:\n\n            [\n              {\n                genres: [ 'Comedy', 'Drama', 'Mystery' ],\n                title: 'With a Friend Like Harry...',\n                released: ISODate(\"2001-06-15T00:00:00.000Z\"),\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'sum of:',\n                  details: [\n                    {\n                      value: 0,\n                      description: 'match on required clause, product of:',\n                      details: [\n                        { value: 0, description: '# clause', details: [] },\n                        {\n                          value: 1,\n                          description: '$type:string/title:friend',\n                          details: []\n                        }\n                      ]\n                    },\n                    {\n                      value: 1,\n                      description: 'sum of:',\n                      details: [\n                        {\n                          value: 1,\n                          description: 'sum of:',\n                          details: [\n                            {\n                              value: 1,\n                              description: '$type:double/year:[4656510908468559872 TO 4656576879166226432]',\n                              details: []\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                genres: [ 'Drama' ],\n                title: 'My Friend Henry',\n                released: ISODate(\"2004-08-20T00:00:00.000Z\"),\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'sum of:',\n                  details: [\n                    {\n                      value: 0,\n                      description: 'match on required clause, product of:',\n                      details: [\n                        { value: 0, description: '# clause', details: [] },\n                        {\n                          value: 1,\n                          description: '$type:string/title:friend',\n                          details: []\n                        }\n                      ]\n                    },\n                    {\n                      value: 1,\n                      description: 'sum of:',\n                      details: [\n                        {\n                          value: 1,\n                          description: 'sum of:',\n                          details: [\n                            {\n                              value: 1,\n                              description: '$type:double/year:[4656510908468559872 TO 4656576879166226432]',\n                              details: []\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                genres: [ 'Comedy', 'Drama' ],\n                title: 'A Friend of Mine',\n                released: ISODate(\"2006-10-26T00:00:00.000Z\"),\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'sum of:',\n                  details: [\n                    {\n                      value: 0,\n                      description: 'match on required clause, product of:',\n                      details: [\n                        { value: 0, description: '# clause', details: [] },\n                        {\n                          value: 1,\n                          description: '$type:string/title:friend',\n                          details: []\n                        }\n                      ]\n                    },\n                    {\n                      value: 1,\n                      description: 'sum of:',\n                      details: [\n                        {\n                          value: 1,\n                          description: 'sum of:',\n                          details: [\n                            {\n                              value: 1,\n                              description: '$type:double/year:[4656510908468559872 TO 4656576879166226432]',\n                              details: []\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              }\n            ]\n\n      .. note:: \n\n         The ``# clause`` in the results on lines 15, 56, and 97\n         represent the :ref:`compound-ref` query ``filter`` clause,\n         which doesn't contribute to the score of the document.\n\n   .. tab:: embeddedDocument\n      :tabid: embedded\n\n      The following example uses the :ref:`embedded-document-ref`\n      operator to query the ``products.name`` field in the\n      ``sample_training.companies`` collection for products that contain\n      the term ``Basic`` preceded by any number of other characters. The\n      query specifies inside the ``embeddedDocument`` operator that the\n      returned score must be a sum of all the matching embedded\n      documents. The query also specifies the ``scoreDetails`` option in\n      the :pipeline:`$search` stage to retrieve a detailed breakdown of\n      the score for each document in the results. The query uses the\n      :pipeline:`$limit` stage to limit the results to three documents\n      and the :pipeline:`$project` stage to do the following:\n\n      - Exclude the ``_id`` field.\n      - Include only the ``products.name`` field.\n      - Add the ``score`` field to the results to return the score of the\n        document and the ``scoreDetails`` field to the results to return a\n        detailed breakdown of the score for the document. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n\n            db.companies.aggregate({\n              \"$search\": {\n                \"embeddedDocument\": {\n                  \"path\": \"products\",\n                  \"operator\": {\n                    \"wildcard\": {\n                      \"path\": \"products.name\",\n                      \"query\": \"*Basic\",\n                      \"allowAnalyzedField\": true\n                    }\n                 },\n                  \"score\": {\n                    \"embedded\": {\n                      \"aggregate\": \"sum\"\n                    }\n                  }\n                },\n                \"scoreDetails\": true\n              }\n            },\n            {\n              \"$limit\": 3\n            },\n            {\n              \"$project\": {\n                \"_id\": 0,\n                \"name\": 1,\n                \"products.name\": 1,\n                \"score\": { \"$meta\": \"searchScore\" },\n                \"scoreDetails\": { \"$meta\": \"searchScoreDetails\" }\n              }\n            })\n\n         .. output:: \n            :language: json \n            :linenos: \n\n            [\n              {\n                name: 'Plaxo',\n                products: [\n                  { name: 'Plaxo Basic' },\n                  { name: 'Plaxo Pulse' },\n                  { name: 'Plaxo Personal Assistant' }\n                ],\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'Score based on 1 child docs in range from 27 to 29, best match:',\n                  details: [\n                    {\n                      value: 1,\n                      description: '$embedded:8/products/$type:string/products.name:*Basic',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                name: 'The Game Creators',\n                products: [\n                  { name: 'Dark Basic Professional' },\n                  { name: 'FPS Creator' },\n                  { name: 'FPS Creator X10' }\n                ],\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'Score based on 1 child docs in range from 7474 to 7476, best match:',\n                  details: [\n                    {\n                      value: 1,\n                      description: '$embedded:8/products/$type:string/products.name:*basic',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                name: 'Load Impact',\n                products: [\n                  { name: 'Load Impact LIGHT' },\n                  { name: 'Load Impact BASIC' },\n                  { name: 'Load Impact PROFESSIONAL' },\n                  { name: 'Load Impact ADVANCED' }\n                ],\n                score: 1,\n                scoreDetails: {\n                  value: 1,\n                  description: 'Score based on 1 child docs in range from 11545 to 11548, best match:',\n                  details: [\n                    {\n                      value: 1,\n                      description: '$embedded:8/products/$type:string/products.name:*basic',\n                      details: []\n                    }\n                  ]\n                }\n              }\n            ]\n\n      .. note:: \n\n         For scores based on child documents in range, the numbers in\n         the range represent the IDs of parent and child documents\n         indexed by Lucene under the hood. The ``description`` in the\n         child documents (on lines 16, 36, and 57) show an internal\n         representation of a path.\n\nCustom Score Examples \n~~~~~~~~~~~~~~~~~~~~~\n\nThe following examples demonstrate how to retrieve a breakdown of the\nscore using the :pipeline:`$search` ``scoreDetails`` option for the\ndocuments in the results for the :ref:`function expression example\n<function-score-egs>` queries against the ``sample_mflix.movies`` \ncollection. \n\n.. tabs:: \n\n   .. tab:: Arithmetic\n      :tabid: arithmetic\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            :emphasize-lines: 22,33\n\n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"men\",\n                  \"score\": {\n                    \"function\":{\n                      \"multiply\":[\n                        {\n                          \"path\": { \n                            \"value\": \"imdb.rating\",   \n                            \"undefined\": 2 \n                          }\n                        },\n                        {\n                          \"score\": \"relevance\"\n                        }\n                      ]\n                    }\n                  } \n                },\n                \"scoreDetails\": true   \n              }\n            },\n            {\n              $limit: 5\n            },\n            {\n              $project: {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": { \"$meta\": \"searchScore\" },\n                \"scoreDetails\": {\"$meta\": \"searchScoreDetails\"}\n              }\n            }])\n\n         .. output:: \n            :language: json \n            :emphasize-lines: 5-15, 20-30, 35-45, 50-60, 65-75\n\n            [\n              {\n                title: 'Men...',\n                score: 23.431293487548828,\n                scoreDetails: {\n                  value: 23.431293487548828,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by (imdb.rating * scores)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 23.431293487548828,\n                      description: '(imdb.rating * scores)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: '12 Angry Men',\n                score: 22.080968856811523,\n                scoreDetails: {\n                  value: 22.080968856811523,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by (imdb.rating * scores)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 22.080968856811523,\n                      description: '(imdb.rating * scores)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'X-Men',\n                score: 21.34803581237793,\n                scoreDetails: {\n                  value: 21.34803581237793,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by (imdb.rating * scores)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 21.34803581237793,\n                      description: '(imdb.rating * scores)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'X-Men',\n                score: 21.34803581237793,\n                scoreDetails: {\n                  value: 21.34803581237793,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by (imdb.rating * scores)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 21.34803581237793,\n                      description: '(imdb.rating * scores)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Matchstick Men',\n                score: 21.05954933166504,\n                scoreDetails: {\n                  value: 21.05954933166504,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by (imdb.rating * scores)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 21.05954933166504,\n                      description: '(imdb.rating * scores)',\n                      details: []\n                    }\n                  ]\n                }\n              }\n            ]\n\n   .. tab:: Constant\n      :tabid: constant \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            :emphasize-lines: 13,24\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"men\",\n                    \"score\": {\n                      \"function\":{\n                        \"constant\": 3 \n                      }\n                    } \n                  },\n                  \"scoreDetails\": true    \n                }\n              },\n              {\n                $limit: 5\n              },\n              {\n                $project: {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"score\": { \"$meta\": \"searchScore\" },\n                  \"scoreDetails\": {\"$meta\": \"searchScoreDetails\"}\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json \n            :emphasize-lines: 5-9, 14-18, 23-27, 32-36, 41-45\n\n            [\n              {\n                title: 'Men Without Women',\n                score: 3,\n                scoreDetails: {\n                  value: 3,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by constant(3.0)) [BM25Similarity], result of:',\n                  details: [ { value: 3, description: 'constant(3.0)', details: [] } ]\n                }\n              },\n              {\n                title: 'One Hundred Men and a Girl',\n                score: 3,\n                scoreDetails: {\n                  value: 3,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by constant(3.0)) [BM25Similarity], result of:',\n                  details: [ { value: 3, description: 'constant(3.0)', details: [] } ]\n                }\n              },\n              {\n                title: 'Of Mice and Men',\n                score: 3,\n                scoreDetails: {\n                  value: 3,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by constant(3.0)) [BM25Similarity], result of:',\n                  details: [ { value: 3, description: 'constant(3.0)', details: [] } ]\n                }\n              },\n              {\n                title: \"All the King's Men\",\n                score: 3,\n                scoreDetails: {\n                  value: 3,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by constant(3.0)) [BM25Similarity], result of:',\n                  details: [ { value: 3, description: 'constant(3.0)', details: [] } ]\n                }\n              },\n              {\n                title: 'The Men',\n                score: 3,\n                scoreDetails: {\n                  value: 3,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by constant(3.0)) [BM25Similarity], result of:',\n                  details: [ { value: 3, description: 'constant(3.0)', details: [] } ]\n                }\n              }\n            ]\n\n   .. tab:: Gaussian\n      :tabid: gauss \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            :emphasize-lines: 22,33\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"shop\",\n                    \"score\": {\n                      \"function\":{\n                        \"gauss\": {\n                          \"path\": {\n                            \"value\": \"imdb.rating\",\n                            \"undefined\": 4.6\n                          },\n                          \"origin\": 9.5,\n                          \"scale\": 5,\n                          \"offset\": 0,\n                          \"decay\": 0.5\n                        }\n                      }\n                    }\n                  },\n                  \"scoreDetails\": true \n                }\n              },\n              {\n                \"$limit\": 10\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"score\": { \"$meta\": \"searchScore\" },\n                  \"scoreDetails\": {\"$meta\": \"searchScoreDetails\"}\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json \n            :emphasize-lines: 5-15, 20-30, 35-45, 50-60, 65-75, 80-90, 95-105, 110-120\n\n            [\n              {\n                title: 'The Shop Around the Corner',\n                score: 0.9471074342727661,\n                scoreDetails: {\n                  value: 0.9471074342727661,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9471074342727661,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Exit Through the Gift Shop',\n                score: 0.9471074342727661,\n                scoreDetails: {\n                  value: 0.9471074342727661,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9471074342727661,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'The Shop on Main Street',\n                score: 0.9395227432250977,\n                scoreDetails: {\n                  value: 0.9395227432250977,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9395227432250977,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Chop Shop',\n                score: 0.8849083781242371,\n                scoreDetails: {\n                  value: 0.8849083781242371,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.8849083781242371,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Little Shop of Horrors',\n                score: 0.8290896415710449,\n                scoreDetails: {\n                  value: 0.8290896415710449,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.8290896415710449,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'The Suicide Shop',\n                score: 0.7257778644561768,\n                scoreDetails: {\n                  value: 0.7257778644561768,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.7257778644561768,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'A Woman, a Gun and a Noodle Shop',\n                score: 0.6559237241744995,\n                scoreDetails: {\n                  value: 0.6559237241744995,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.6559237241744995,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Beauty Shop',\n                score: 0.6274620294570923,\n                scoreDetails: {\n                  value: 0.6274620294570923,\n                  description: 'FunctionScoreQuery($type:string/title:shop, scored by exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.6274620294570923,\n                      description: 'exp((max(0, |imdb.rating - 9.5| - 0.0)^2) / 2 * (5.0^2 / 2 * ln(0.5)))',\n                      details: []\n                    }\n                  ]\n                }\n              }\n            ]\n\n   .. tab:: Path\n      :tabid: path \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            :emphasize-lines: 15,26\n\n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"men\",\n                  \"score\": {\n                    \"function\":{\n                      \"path\": { \n                        \"value\": \"imdb.rating\", \n                        \"undefined\": 4.6 \n                      }\n                    }\n                  } \n                },\n                \"scoreDetails\": true    \n              }\n            },\n            {\n              $limit: 5\n            },\n            {  \n              $project: {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": { \"$meta\": \"searchScore\" },\n                \"scoreDetails\": {\"$meta\": \"searchScoreDetails\"}\n              }\n            }])\n\n         .. output:: \n            :language: json \n            :emphasize-lines: 5-15, 20-30, 35-45, 50-60, 65-75\n\n            [\n              {\n                title: '12 Angry Men',\n                score: 8.899999618530273,\n                scoreDetails: {\n                  value: 8.899999618530273,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by imdb.rating) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 8.899999618530273,\n                      description: 'imdb.rating',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'The Men Who Built America',\n                score: 8.600000381469727,\n                scoreDetails: {\n                  value: 8.600000381469727,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by imdb.rating) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 8.600000381469727,\n                      description: 'imdb.rating',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'No Country for Old Men',\n                score: 8.100000381469727,\n                scoreDetails: {\n                  value: 8.100000381469727,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by imdb.rating) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 8.100000381469727,\n                      description: 'imdb.rating',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'X-Men: Days of Future Past',\n                score: 8.100000381469727,\n                scoreDetails: {\n                  value: 8.100000381469727,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by imdb.rating) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 8.100000381469727,\n                      description: 'imdb.rating',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'The Best of Men',\n                score: 8.100000381469727,\n                scoreDetails: {\n                  value: 8.100000381469727,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by imdb.rating) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 8.100000381469727,\n                      description: 'imdb.rating',\n                      details: []\n                    }\n                  ]\n                }\n              }\n            ]\n\n   .. tab:: Score\n      :tabid: score \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            :emphasize-lines: 12,23\n           \n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"men\",\n                  \"score\": {\n                    \"function\":{\n                      \"score\": \"relevance\" \n                    }\n                  } \n                },\n                \"scoreDetails\": true    \n              }\n            },\n            {\n              $limit: 5\n            },\n            {\n              $project: {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": { \"$meta\": \"searchScore\" },\n                \"scoreDetails\": {\"$meta\": \"searchScoreDetails\"}\n              }\n            }])\n\n         .. output:: \n            :language: json \n\n            [\n              {\n                title: 'Men...',\n                score: 3.4457783699035645,\n                scoreDetails: {\n                  value: 3.4457783699035645,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by scores) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 3.4457783699035645,\n                      description: 'weight($type:string/title:men in 4705) [BM25Similarity], result of:',\n                      details: [\n                        {\n                          value: 3.4457783699035645,\n                          description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                          details: [\n                            {\n                              value: 5.5606818199157715,\n                              description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                              details: [\n                                {\n                                  value: 90,\n                                  description: 'n, number of documents containing term',\n                                  details: []\n                                },\n                                {\n                                  value: 23529,\n                                  description: 'N, total number of documents with field',\n                                  details: []\n                                }\n                              ]\n                            },\n                            {\n                              value: 0.6196683645248413,\n                              description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                              details: [\n                                {\n                                  value: 1,\n                                  description: 'freq, occurrences of term within document',\n                                  details: []\n                                },\n                                {\n                                  value: 1.2000000476837158,\n                                  description: 'k1, term saturation parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 0.75,\n                                  description: 'b, length normalization parameter',\n                                 details: []\n                                },\n                                {\n                                  value: 1,\n                                  description: 'dl, length of field',\n                                  details: []\n                                },\n                                {\n                                  value: 2.868375301361084,\n                                  description: 'avgdl, average length of field',\n                                  details: []\n                                }\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'The Men',\n                score: 2.8848698139190674,\n                scoreDetails: {\n                  value: 2.8848698139190674,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by scores) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 2.8848698139190674,\n                      description: 'weight($type:string/title:men in 870) [BM25Similarity], result of:',\n                      details: [\n                        {\n                          value: 2.8848698139190674,\n                          description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                          details: [\n                            {\n                              value: 5.5606818199157715,\n                              description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                              details: [\n                                {\n                                  value: 90,\n                                  description: 'n, number of documents containing term',\n                                  details: []\n                                },\n                                {\n                                  value: 23529,\n                                  description: 'N, total number of documents with field',\n                                  details: []\n                                }\n                              ]\n                            },\n                            {\n                              value: 0.5187978744506836,\n                              description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                              details: [\n                                {\n                                  value: 1,\n                                  description: 'freq, occurrences of term within document',\n                                  details: []\n                                },\n                                {\n                                  value: 1.2000000476837158,\n                                  description: 'k1, term saturation parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 0.75,\n                                  description: 'b, length normalization parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 2,\n                                  description: 'dl, length of field',\n                                  details: []\n                                },\n                                {\n                                  value: 2.868375301361084,\n                                  description: 'avgdl, average length of field',\n                                  details: []\n                                }\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Simple Men',\n                score: 2.8848698139190674,\n                scoreDetails: {\n                  value: 2.8848698139190674,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by scores) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 2.8848698139190674,\n                      description: 'weight($type:string/title:men in 6371) [BM25Similarity], result of:',\n                      details: [\n                        {\n                          value: 2.8848698139190674,\n                          description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                          details: [\n                            {\n                              value: 5.5606818199157715,\n                              description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                              details: [\n                                {\n                                  value: 90,\n                                  description: 'n, number of documents containing term',\n                                  details: []\n                                },\n                                {\n                                  value: 23529,\n                                  description: 'N, total number of documents with field',\n                                  details: []\n                                }\n                              ]\n                            },\n                            {\n                              value: 0.5187978744506836,\n                              description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                              details: [\n                                {\n                                  value: 1,\n                                  description: 'freq, occurrences of term within document',\n                                  details: []\n                                },\n                                {\n                                  value: 1.2000000476837158,\n                                  description: 'k1, term saturation parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 0.75,\n                                  description: 'b, length normalization parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 2,\n                                  description: 'dl, length of field',\n                                  details: []\n                                },\n                                {\n                                  value: 2.868375301361084,\n                                  description: 'avgdl, average length of field',\n                                  details: []\n                                }\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'X-Men',\n                score: 2.8848698139190674,\n                scoreDetails: {\n                  value: 2.8848698139190674,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by scores) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 2.8848698139190674,\n                      description: 'weight($type:string/title:men in 8368) [BM25Similarity], result of:',\n                      details: [\n                        {\n                          value: 2.8848698139190674,\n                          description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                          details: [\n                            {\n                              value: 5.5606818199157715,\n                              description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                              details: [\n                                {\n                                  value: 90,\n                                  description: 'n, number of documents containing term',\n                                  details: []\n                                },\n                                {\n                                  value: 23529,\n                                  description: 'N, total number of documents with field',\n                                  details: []\n                                }\n                              ]\n                            },\n                            {\n                              value: 0.5187978744506836,\n                              description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                              details: [\n                                {\n                                  value: 1,\n                                  description: 'freq, occurrences of term within document',\n                                  details: []\n                                },\n                                {\n                                  value: 1.2000000476837158,\n                                  description: 'k1, term saturation parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 0.75,\n                                  description: 'b, length normalization parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 2,\n                                  description: 'dl, length of field',\n                                  details: []\n                                },\n                                {\n                                  value: 2.868375301361084,\n                                  description: 'avgdl, average length of field',\n                                  details: []\n                                }\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'Mystery Men',\n                score: 2.8848698139190674,\n                scoreDetails: {\n                  value: 2.8848698139190674,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by scores) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 2.8848698139190674,\n                      description: 'weight($type:string/title:men in 8601) [BM25Similarity], result of:',\n                      details: [\n                        {\n                          value: 2.8848698139190674,\n                          description: 'score(freq=1.0), computed as boost * idf * tf from:',\n                          details: [\n                            {\n                              value: 5.5606818199157715,\n                              description: 'idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:',\n                              details: [\n                                {\n                                  value: 90,\n                                  description: 'n, number of documents containing term',\n                                  details: []\n                                },\n                                {\n                                  value: 23529,\n                                  description: 'N, total number of documents with field',\n                                  details: []\n                                }\n                              ]\n                            },\n                            {\n                              value: 0.5187978744506836,\n                              description: 'tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:',\n                              details: [\n                                {\n                                  value: 1,\n                                  description: 'freq, occurrences of term within document',\n                                  details: []\n                                },\n                                {\n                                  value: 1.2000000476837158,\n                                  description: 'k1, term saturation parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 0.75,\n                                  description: 'b, length normalization parameter',\n                                  details: []\n                                },\n                                {\n                                  value: 2,\n                                  description: 'dl, length of field',\n                                  details: []\n                                },\n                                {\n                                  value: 2.868375301361084,\n                                  description: 'avgdl, average length of field',\n                                  details: []\n                                }\n                              ]\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                }\n              }\n            ]\n\n   .. tab:: Unary\n      :tabid: unary \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            :emphasize-lines: 17,28\n\n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"men\",\n                  \"score\": {\n                    \"function\": {\n                      \"log\": { \n                        \"path\": { \n                          \"value\": \"imdb.rating\", \n                          \"undefined\": 10 \n                        }\n                      }\n                    }\n                  } \n                },\n                \"scoreDetails\": true \n              }\n            },\n            {\n              $limit: 5\n            },\n            {\n              $project: {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": { \"$meta\": \"searchScore\" },\n                \"scoreDetails\": {\"$meta\": \"searchScoreDetails\"}\n              }\n            }])\n\n         .. output:: \n            :language: json \n            :emphasize-lines: 5-15, 20-30, 35-45, 50-60, 65-75\n\n            [\n              {\n                title: '12 Angry Men',\n                score: 0.9493899941444397,\n                scoreDetails: {\n                  value: 0.9493899941444397,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by log(imdb.rating)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9493899941444397,\n                      description: 'log(imdb.rating)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'The Men Who Built America',\n                score: 0.9344984292984009,\n                scoreDetails: {\n                  value: 0.9344984292984009,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by log(imdb.rating)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9344984292984009,\n                      description: 'log(imdb.rating)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'No Country for Old Men',\n                score: 0.9084849953651428,\n                scoreDetails: {\n                  value: 0.9084849953651428,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by log(imdb.rating)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9084849953651428,\n                      description: 'log(imdb.rating)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'X-Men: Days of Future Past',\n                score: 0.9084849953651428,\n                scoreDetails: {\n                  value: 0.9084849953651428,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by log(imdb.rating)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9084849953651428,\n                      description: 'log(imdb.rating)',\n                      details: []\n                    }\n                  ]\n                }\n              },\n              {\n                title: 'The Best of Men',\n                score: 0.9084849953651428,\n                scoreDetails: {\n                  value: 0.9084849953651428,\n                  description: 'FunctionScoreQuery($type:string/title:men, scored by log(imdb.rating)) [BM25Similarity], result of:',\n                  details: [\n                    {\n                      value: 0.9084849953651428,\n                      description: 'log(imdb.rating)',\n                      details: []\n                    }\n                  ]\n                }\n              }\n            ]\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/get-details.txt"
  },
  {
    "code": "         :linenos:\n\n         db.movies.aggregate([\n           {\n             \"$search\": {\n               \"compound\": {\n                 \"should\": [{\n                   \"text\": {\n                     \"query\": \"Helsinki\",\n                     \"path\": \"plot\"\n                   }\n                 },\n                 {\n                   \"text\": {\n                     \"query\": \"Helsinki\",\n                     \"path\": \"title\",\n                     \"score\": { \"boost\": { \"value\": 3 } }\n                   }\n                 }]\n               }\n             }\n           },\n           {\n             \"$limit\": 5\n           },\n           {\n             \"$project\": {\n               \"_id\": 0,\n               \"title\": 1,\n               \"plot\": 1,\n               \"score\": { \"$meta\": \"searchScore\" }\n             }\n           }\n         ])\n\n      This query returns the following results, in which the score \n      for documents where the ``title`` matches the query term is \n      multiplied by ``3`` from its base value:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "         :copyable: false\n\n         [\n           {\n             plot: 'Epic tale about two generations of men in a wealthy Finnish family, spanning from the 1960s all the way through the early 1990s. The father has achieved his position as director of the ...',\n             title: 'Kites Over Helsinki',\n             score: 12.2470121383667\n           },\n           {\n             plot: 'Alex is Finlander married to an Italian who works as a taxi driver in Berlin. One night in his taxi come two men with a briefcase full of money. Unluckily for Alex, they are being chased by...',\n             title: 'Helsinki-Naples All Night Long',\n             score: 9.56808090209961\n           },\n           {\n             plot: 'The recession hits a couple in Helsinki.',\n             title: 'Drifting Clouds',\n             score: 4.5660295486450195\n           },\n           {\n             plot: 'Two teenagers from Helsinki are sent on a mission by their drug dealer.',\n             title: 'Sairaan kaunis maailma',\n             score: 4.041563034057617\n           },\n           {\n             plot: 'A murderer tries to leave his criminal past in East Helsinki and make a new life for his family',\n             title: 'Bad Luck Love',\n             score: 3.6251673698425293\n           }\n         ]\n\n   .. tab:: ``path`` Field Example\n      :tabid: patheg\n\n      In the following example, the :ref:`compound-ref` operator \n      uses :ref:`text-ref` operator to search for the term \n      ``Helsinki`` in the ``plot`` and ``title`` fields. The query \n      against the ``title`` field uses ``score`` with the ``boost`` \n      option to multiply the score results by the numeric field \n      ``imdb.rating`` in ``path``. If the numeric field isn't found in \n      the specified ``path``, the operator multiplies the score of the \n      documents by ``3``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "         :linenos:\n\n         db.movies.aggregate([\n           {\n             \"$search\": {\n               \"compound\": {\n                 \"should\": [{\n                   \"text\": {\n                     \"query\": \"Helsinki\",\n                     \"path\": \"plot\"\n                   }\n                 },\n                 {\n                   \"text\": {\n                     \"query\": \"Helsinki\",\n                     \"path\": \"title\",\n                     \"score\": {\n                       \"boost\": {\n                         \"path\": \"imdb.rating\",\n                         \"undefined\": 3\n                       }\n                     }\n                   }\n                 }]\n               }\n             }\n           },\n           {\n             \"$limit\": 5\n           },\n           {\n             \"$project\": {\n               \"_id\": 0,\n               \"title\": 1,\n               \"plot\": 1,\n               \"score\": { \"$meta\": \"searchScore\" }\n             }\n           }\n         ])\n\n      This query returns the following results, in which the score \n      for documents where the ``title`` field matches the query term is \n      multiplied from its base value by the value of the numeric field \n      ``imdb.rating`` or ``3``, if the field isn't found in the \n      documents:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "         :copyable: false \n\n         [\n           {\n             plot: 'Epic tale about two generations of men in a wealthy Finnish family, spanning from the 1960s all the way through the early 1990s. The father has achieved his position as director of the ...',\n             title: 'Kites Over Helsinki',\n             score: 24.902257919311523\n           },\n           {\n             plot: 'Alex is Finlander married to an Italian who works as a taxi driver in Berlin. One night in his taxi come two men with a briefcase full of money. Unluckily for Alex, they are being chased by...',\n             title: 'Helsinki-Naples All Night Long',\n             score: 20.411907196044922\n           },\n           {\n             plot: 'The recession hits a couple in Helsinki.',\n             title: 'Drifting Clouds',\n             score: 4.5660295486450195\n           },\n           {\n             plot: 'Two teenagers from Helsinki are sent on a mission by their drug dealer.',\n             title: 'Sairaan kaunis maailma',\n             score: 4.041563034057617\n           },\n           {\n             plot: 'A murderer tries to leave his criminal past in East Helsinki and make a new life for his family',\n             title: 'Bad Luck Love',\n             score: 3.6251673698425293\n           }\n         ]\n\n.. _scoring-constant:\n\n``constant``\n------------\n\nThe ``constant`` option replaces the base score with a specified number. \n\n.. note::\n\n   You must not use the ``constant`` and ``boost`` options together.\n\nExamples\n~~~~~~~~\n\nThe following example uses the default index on the \n``sample_mflix.movies`` collection to query the ``plot`` and ``title`` \nfields using the :ref:`compound-ref` operator. In the query, the \n:ref:`text-ref` operator uses ``score`` with the ``constant`` option to \nreplace all score results with ``5`` for results that match the query \nagainst the ``title`` field only.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "   :linenos:\n\n   db.movies.aggregate([\n     {\n       \"$search\": {\n         \"compound\": {\n           \"should\": [{\n             \"text\": {\n               \"query\": \"tower\",\n               \"path\": \"plot\"\n             }\n           },\n           {\n             \"text\": {\n               \"query\": \"tower\",\n               \"path\": \"title\",\n               \"score\": { \"constant\": { \"value\": 5 } }\n             }\n           }]\n         }\n       }\n     },\n     {\n       \"$limit\": 5\n     },\n     {\n       \"$project\": {\n         \"_id\": 0,\n         \"title\": 1,\n         \"plot\": 1,\n         \"score\": { \"$meta\": \"searchScore\" }\n       }\n     }\n   ])\n\nThe above query returns the following results, in which the score for \ndocuments that match the query against the ``title`` field only is \nreplaced with the specified ``constant`` value:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n\n   [\n     {\n       plot: 'Several months after witnessing a murder, residents of Tower Block 31 find themselves being picked off by a sniper, pitting those lucky enough to be alive into a battle for survival.',\n       title: 'Tower Block',\n       score: 8.15460205078125\n     },\n     {\n       plot: \"When a group of hard-working guys find out they've fallen victim to their wealthy employer's Ponzi scheme, they conspire to rob his high-rise residence.\",\n       title: 'Tower Heist',\n       score: 5\n     },\n     {\n       plot: 'Toru Kojima and his friend Koji are young student boys with one thing in common - they both love to date older women. Koji is a playboy with several women, young and older, whereas Toru is a romantic with his heart set on on certain lady.',\n       title: 'Tokyo Tower',\n       score: 5\n     },\n     {\n       plot: 'A middle-aged mental patient suffering from a split personality travels to Italy where his two personalities set off all kinds of confusing developments.',\n       title: 'The Leaning Tower',\n       score: 5\n     },\n     {\n       plot: 'A documentary that questions the cost -- and value -- of higher education in the United States.',\n       title: 'Ivory Tower',\n       score: 5\n     }\n   ]\n\n.. _scoring-embedded:\n\n``embedded``\n------------\n\n.. note:: \n\n   You can use this option with the :ref:`embedded-document-ref` operator \n   only.\n\nThe ``embedded`` option allows you to configure how to: \n\n- Aggregate the scores of multiple matching embedded documents.\n- Modify the score of an :ref:`embedded-document-ref` operator after \n  aggregating the scores from matching embedded documents.\n\n.. note:: \n\n   .. include:: /includes/fact-embedded-document-preview.rst\n\nFields \n~~~~~~\n\nThe ``embedded`` option takes the following fields: \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 15 10 15 60\n\n   * - Field \n     - Type \n     - Necessity \n     - Description \n\n   * - ``aggregate`` \n     - string\n     - Optional\n     - Configures how to combine scores of matching embedded documents. \n       Value must be one of the following aggregation strategies: \n\n       - ``sum`` - (Default) Sum the score of all matching embedded \n         documents. \n       - ``maximum`` - Choose the greatest score of all matching \n         embedded documents.\n       - ``minimum`` - Choose the least high score of all matching \n         embedded documents.\n       - ``mean`` - Choose the average (arithmetic mean) score of all \n         matching embedded documents. |fts| includes scores of matching \n         embedded documents only when computing the average. |fts| \n         doesn't count embedded documents that don't satisfy query \n         predicates as documents with scores of zero.\n\n       If omitted, this field defaults to ``sum``.\n\n   * - ``outerScore``\n     - :ref:`Scoring Option <scoring-options>`\n     - Optional \n     - Specifies the score modification to apply after applying the \n       aggregation strategy. \n\nExamples \n~~~~~~~~\n\nThe following sample query uses an index named ``default`` on the \n``sample_analytics.transactions`` collection. The index configures an \n``embeddedDocuments`` type on documents in the ``transactions`` array \nand ``string`` type for ``transactions.symbol`` and \n``transactions.transaction_code`` fields.\n\n.. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "      :copyable: true \n      :caption: Sample Index\n\n      {\n        \"mappings\": {\n          \"dynamic\": true,\n          \"fields\": {\n           \"transactions\": {\n              \"dynamic\": true,\n              \"fields\": {\n                \"symbol\": {\n                  \"type\": \"string\"\n                },\n                \"transaction_code\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"embeddedDocuments\"\n            }\n          }\n        }\n      }\n\nThe sample query on the ``transactions`` field, which contains an array \nof documents, includes a ``$limit`` stage to limit the output to ``10`` \nresults and a ``$project`` stage to: \n\n- Exclude all fields except ``account_id`` and ``transaction_count``.\n- Add a field named ``score`` that applies an aggregation strategy and \n  further score modification.\n\n  .. note:: \n\n     You can use :ref:`scoring-function` inside the ``score`` option of \n     the :ref:`embedded-document-ref` operator's ``operator``. However, \n     for function score :ref:`expressions <function-score-expression>` \n     that require the ``path`` option, the numeric field that you \n     specify as the ``path`` for the expression must be inside the \n     :ref:`embedded-document-ref` operator's ``path``. For example, in \n     the following example query, the field ``transactions.amount`` that\n     is specified inside the ``score`` option of the ``compound``\n     operator on line 24 is inside in the ``embeddedDocument``\n     operator's path ``transactions`` on line 4.\n\nThe query searches for accounts that have bought ``AMD`` and multiplies \nthe largest single ``AMD`` purchase (by number of shares) by the \n``log1p`` value of the number of transactions that the account has made \nin this period. It ranks the accounts based on the following: \n\n- Number of ``AMD`` bought in a single transaction\n- Number of transactions in the last period\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "   :copyable: true \n   :linenos: \n\n   db.transactions.aggregate({\n     \"$search\": {\n       \"embeddedDocument\": {\n         \"path\": \"transactions\",\n         \"operator\": {\n           \"compound\": {\n             \"must\": [\n               {\n                 \"text\": {\n                   \"path\": \"transactions.symbol\",\n                   \"query\": \"amd\"\n                 }\n               },\n               {\n                 \"text\": {\n                   \"path\": \"transactions.transaction_code\",\n                   \"query\": \"buy\"\n                 }\n               }\n             ],\n             \"score\": {\n               \"function\": {\n                 \"path\": {\n                   \"value\": \"transactions.amount\",\n                   \"undefined\": 1.0\n                 }\n               }\n             }\n           }\n         },\n         \"score\": {\n           \"embedded\": {\n             \"aggregate\": \"maximum\",\n             \"outerScore\": {\n               \"function\": {\n                 \"multiply\": [\n                   {\n                     \"log1p\": {\n                       \"path\": {\n                         \"value\": \"transaction_count\"\n                       }\n                     }\n                   },\n                   {\n                     \"score\": \"relevance\"\n                   }\n                 ]\n               }\n             }\n           }\n         }\n       }\n     }\n   },\n   { \"$limit\": 10 },\n   {\n     \"$project\": {\n       \"_id\": 0,\n       \"account_id\": 1,\n       \"transaction_count\": 1,\n       \"score\": { $meta: \"searchScore\" }\n     }\n   })\n\n|fts| ranks accounts that have made many transactions in the last \nperiod and bought many ``AMD`` in a single transaction highly.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "   :copyable: false \n   :linenos:\n\n   [\n     { account_id: 467651, transaction_count: 99, score: 19982 },\n     { account_id: 271554, transaction_count: 96, score: 19851.822265625 },\n     { account_id: 71148, transaction_count: 99, score: 19840 },\n     { account_id: 408143, transaction_count: 100, score: 19836.76953125 },\n     { account_id: 977774, transaction_count: 98, score: 19822.64453125 },\n     { account_id: 187107, transaction_count: 96, score: 19754.470703125 },\n     { account_id: 492843, transaction_count: 97, score: 19744.998046875 },\n     { account_id: 373169, transaction_count: 93, score: 19553.697265625 },\n     { account_id: 249078, transaction_count: 89, score: 19436.896484375 },\n     { account_id: 77690, transaction_count: 90, score: 19418.017578125 }\n   ]\n\n.. _scoring-function:\n\n``function``\n------------\n\nThe ``function`` option allows you to alter the final score of the \ndocument using a numeric field . You can specify the numeric field for \ncomputing the final score through an :ref:`expression \n<function-score-expression>`. If the final result of the function score \nis less than ``0``, |fts| replaces the score with ``0``.\n\n.. note:: \n\n   You can use ``function`` inside the ``score`` option of the \n   :ref:`embedded-document-ref` operator's ``operator``. However, for \n   function score expressions that require the ``path`` option, the \n   numeric field that you specify as the ``path`` for the expression \n   must be inside the :ref:`embedded-document-ref` operator's ``path``. \n\n.. _function-score-expression:\n\nExpressions\n~~~~~~~~~~~\n\nUse the following expressions with the ``function`` option \nto alter the final score of the document:\n\n- Arithmetic expressions, which add or multiply a series of numbers. \n\n- Constant expressions, which allow a :ref:`constant \n  <scoring-constant>` number in the function score.\n\n- Gaussian decay expressions, which decay, or reduces, the scores by \n  multiplying at a specified rate.\n\n- Path expressions, which incorporate an indexed numeric field value \n  into a function score. \n\n- Score expressions, which return the relevance score assigned by |fts|.\n\n- Unary expressions, which are expressions that take a single argument. \n  In |fts|, you can calculate the log10(x) or log10(x+1) of a specified \n  number. \n\n.. tabs:: \n\n   .. tab:: Arithmetic\n      :tabid: arithmetic\n\n      An arithmetic expression adds or multiplies a series of numbers. \n      For example, you can use arithmetic expression to modify \n      relevance ranking through a numeric field from a data enrichment \n      pipeline. It must include one of the following options: \n\n      .. list-table::\n         :header-rows: 1\n         :widths: 10 15 75 \n\n         * - Option\n           - Type\n           - Description\n\n         * - ``add`` \n           - array of :ref:`expressions <function-score-expression>`\n           - Adds a series of numbers. Takes an array of \n             :ref:`expressions <function-score-expression>`, which can \n             have negative values. Array length must be greater than or \n             equal to ``2``. For example:\n             \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "                :copyable: false\n                :caption: Arithmetic Expression Syntax\n                \n                \"function\": {\n                  \"add\": [\n                    {\"path\": \"rating\"},\n                    {\"score\": \"relevance\"}\n                  ]\n                }\n\n             In the previous example, |fts| uses the ``path`` and ``score`` expressions to add the following: \n             \n             - Numeric value of the ``rating`` field or ``0``, if \n               the ``rating`` field is not present in the document\n             \n             - Relevance score, which is the score |fts| assigns based on relevance\n\n         * - ``multiply``\n           - array of :ref:`expressions <function-score-expression>`\n           - Multiplies a series of numbers. Takes an array of   \n             :ref:`expressions <function-score-expression>`, which can \n             have negative values. Array length must be greater than or \n             equal to ``2``. For example: \n             \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "                :copyable: false\n                :caption: Arithmetic Expression Syntax\n                \n                \"function\": {\n                  \"multiply\": [\n                    {\n                      \"path\": {\n                        \"value\": \"popularity\",\n                        \"undefined\": 2.5\n                      }\n                    },\n                    {\n                      \"score\": \"relevance\"\n                    },\n                    {\n                      \"constant\": 0.75\n                    }\n                  ]\n                }\n\n             In the previous example, |fts| uses the ``path``, ``score``, and ``constant`` \n             expressions to alter the final score of the document. \n             It multiplies the following:\n             \n             - Numeric value of the path expression, which is the \n               numeric value of the ``popularity`` field or \n               ``2.5``, if the ``popularity`` field is not present\n               in the document\n             - Relevance score, which is the score |fts| assigns\n               based on relevance\n             - Constant value of ``0.75``\n\n      .. note:: \n       \n         You can't replace an arithmetic expression that evaluates to \n         ``undefined`` with a constant value.\n\n   .. tab:: Constant\n      :tabid: constant \n\n      A constant expression allows a :ref:`constant <scoring-constant>` \n      number in the function score. For example, you can use \n      ``constant`` to modify relevance ranking through a numeric value \n      from a data enrichment pipeline. It must include the following \n      option: \n\n      .. list-table::\n         :header-rows: 1\n         :widths: 10 15 60  \n\n         * - Option\n           - Type\n           - Description\n\n         * - ``constant``\n           - float\n           - Number that indicates a fixed value. |fts| supports \n             negative values. \n\n      .. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n            :caption: Constant Expression Syntax\n\n            {\n              \"function\": {\n                \"constant\": -23.78\n              }\n            } \n\n   .. tab:: Gaussian\n      :tabid: gauss\n\n      A gaussian decay expression allows you to decay, or reduce by \n      multiplying, the final scores of the documents based on the \n      distance of a numeric field value from a specified origin point. \n      ``decay`` is computed as: \n\n      .. figure:: /images/fts-decay-computation.png\n         :alt: Screenshot of decay computation\n         :figwidth: 60%\n\n      where sigma is computed to assure that the score takes the value \n      ``decay`` at distance ``scale`` from ``origin±offset``:\n\n      .. figure:: /images/fts-sigma-computation.png\n         :alt: Screenshot of sigma computation\n         :figwidth: 40%\n\n      For example, you can use ``gauss`` to adjust the relevant score \n      of documents based on document freshness, or date influencing  \n      higher ranking. ``gauss`` takes the following options:\n\n      .. list-table:: \n         :header-rows: 1\n         :widths: 15 10 15 60\n\n         * - Field \n           - Type \n           - Necessity \n           - Description \n\n         * - ``decay`` \n           - double \n           - Optional \n           - Rate at which you want to multiply the scores. Value must \n             be a positive number between ``0`` and ``1`` exclusive. If \n             omitted, defaults to ``0.5``.\n\n             For documents whose numeric field value (specified using \n             ``path``) is at a distance (specified using ``scale``) \n             away from ``origin`` plus or minus (``±``) ``offset``, \n             |fts| multiplies the current score using ``decay``. \n\n         * - ``offset`` \n           - double \n           - Optional \n           - Number to use to determine the distance from origin. The \n             decay operation is performed only for documents whose \n             distances are greater than ``origin`` plus or minus \n             (``±``) ``offset``. If ommitted, defaults to ``0``.\n\n         * - ``origin`` \n           - double \n           - Required \n           - Point of origin from which to calculate the distance. \n\n         * - ``path`` \n           - :ref:`expression <function-score-expression>` \n           - Required \n           - Name of the numeric field whose value you want to use to \n             multiply the base score. \n\n         * - ``scale`` \n           - double \n           - Required \n           - Distance from ``origin`` plus or minus (``±``) ``offset`` \n             at which scores must be multiplied. \n\n      .. example:: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n            :caption: Gaussian Expression Syntax\n\n            {\n              \"function\": {\n                \"gauss\": {\n                  \"path\": {\n                    \"value\": \"rating\",\n                    \"undefined\": 50\n                  },\n                  \"origin\": 95,\n                  \"scale\": 5,\n                  \"offset\": 5,\n                  \"decay\": 0.5\n                }\n              }\n            } \n\n         Suppose the max rating is ``100``. |fts| uses the ``rating`` \n         field in the documents to decay the score:\n         \n         - Retains the current score for documents with rating between \n           ``90`` to ``100``.\n         - Multiplies the current score by ``0.5`` for documents with a \n           rating lower than ``90``. \n         - Multiplies the current score by ``0.25`` for documents with \n           a rating lower than ``85``, and so on.\n\n   .. tab:: Path\n      :tabid: path \n\n      A path expression incorporates an indexed numeric field value \n      into a function score. It can either be a ``string`` or an \n      ``object``. \n       \n      If ``string``, the value is the name of the numeric field to \n      search over for the path expression. \n\n      .. example:: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n            :caption: Path Expression Syntax\n\n            {\n              \"function\": {\n                \"path\": \"rating\"\n              }\n            }\n\n         |fts| incorporates the numeric value of the ``rating`` \n         field in the final score of the document.\n       \n      If ``object``, the path expression takes the following options: \n\n      .. list-table::\n         :header-rows: 1\n         :widths: 15 10 15 70 \n\n         * - Option\n           - Type\n           - Necessity\n           - Description\n\n         * - ``value``\n           - string\n           - Required\n           - Name of numeric field. Field can contain negative numeric \n             values.\n\n         * - ``undefined``\n           - float\n           - Optional\n           - Value to use if the numeric field specified using \n             ``value`` is missing in the document. If omitted, defaults \n             to ``0``.\n\n      .. example:: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n            :caption: Path Expression Syntax\n\n            {\n              \"function\": {\n                \"path\": {\"value\": \"quantity\", \"undefined\": 2}\n              }\n            }\n\n         |fts| incorporates numeric value of the ``quantity`` field \n         or ``2``, if the ``quantity`` field is not present in the \n         document, in the final score of the document.\n       \n      A path expression can't be an ``array`` and can't contain \n      :ref:`regex-ref` or :ref:`wildcard-ref` in the ``path``. \n\n   .. tab:: Score\n      :tabid: score \n\n      A score expression represents the relevance score, which is the \n      score |fts| assigns documents based on relevance, of the query. \n      It is the same as the current score of the document. It must \n      include the following option: \n\n      .. list-table::\n         :header-rows: 1\n         :widths: 10 15 60\n\n         * - Option\n           - Type\n           - Description\n\n         * - ``score``\n           - string\n           - Value of relevance score of the query. Value must be \n             ``relevance``. \n\n      .. example:: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n            :caption: Score Expression Syntax\n\n            {\n              \"function\": {\n                \"score\": \"relevance\"\n              }\n            }\n\n   .. tab:: Unary\n      :tabid: unary \n\n      A unary expression is an expression that takes a single argument. \n      In |fts|, you can use unary expressions to calculate the log10(x) \n      or log10(x+1) of a specified number. For example, you can use \n      ``log1p`` to influence the relevance score by document popularity \n      score. It must include one of the following options:\n\n      .. list-table::\n         :header-rows: 1\n         :widths: 10 15 60\n\n         * - Option\n           - Type\n           - Description\n\n         * - ``log``\n           - :ref:`expression <function-score-expression>`\n           - Calculates the log10 of a number. For example:\n           \n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "                :copyable: false\n                :caption: Unary Expression Syntax\n                 \n                {\n                  \"function\": {\n                    \"log\": {\n                      \"multiply\": [\n                        {\"path\": \"popularity\"},\n                        {\"constant\": 0.5},\n                        {\"score\": \"relevance\"}\n                      ]\n                    }\n                  }\n                }\n\n             In the previous example, |fts| calculates the log10 of the arithmetic \n             expression that uses the ``multiply`` option to calculate the product \n             of the numeric value of the ``popularity`` field, the constant value of ``0.5``, \n             and the relevance score assigned by |fts|. \n            \n             If the expression specified for the ``log`` option evaluates to less than or \n             equal to ``0``, then the ``log`` evaluates to undefined. For example:\n            \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "                :copyable: false \n                :caption: Unary Expression syntax\n                \n                {\n                  \"function\": {\n                    \"log\": {\n                      \"constant\": -5.1\n                    }\n                  }\n                }  \n\n             In the previous example, |fts| evaluates the the log10 of the \n             constant expression ``-5.1`` to undefined.\n             Therefore, the final score of the document is ``0``.\n\n         * - ``log1p``\n           - :ref:`expression <function-score-expression>`\n           - Adds ``1`` to the number and then calculates its log10. \n             For example: \n             \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "                :copyable: false \n                :caption: Unary Expression Syntax\n                \n                {\n                  \"function\": {\n                    \"log1p\": {\n                      \"path\": {\n                        \"value\": \"rating\",\n                        \"undefined\": 4\n                      }\n                    }\n                  }\n                }\n             \n             In the previous example, |fts| adds ``1`` to the expression that\n             uses the ``path`` option to evaluate to the numeric value of the ``rating`` field, then \n             calculates the log10 of the resulting sum.\n                \n\n\n\n\n.. _function-score-egs:\n\nExamples\n~~~~~~~~\n\nThe following examples use the default index on the \n``sample_mflix.movies`` collection to query the ``title`` field. The \nsample queries include a ``$limit`` stage to limit the output to ``5`` \nresults and a ``$project`` stage to exclude all fields except ``title`` \nand ``score``.\n\n.. tabs:: \n\n   .. tab:: Arithmetic\n      :tabid: arithmetic\n\n      .. example:: \n\n         In this example, the :ref:`text-ref` operator uses ``score`` \n         with the ``function`` option to multiply the following: \n\n         - Numeric value of the path expression, which is the value of \n           the ``imdb.rating`` field in the documents or ``2``, if the \n           ``imdb.rating`` field is not in the document\n         - Relevance score, or the current score of the document\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n\n            { \"title\" : \"Men...\", \"score\" : 23.431293487548828 }\n            { \"title\" : \"12 Angry Men\", \"score\" : 22.080968856811523 }\n            { \"title\" : \"X-Men\", \"score\" : 21.34803581237793 }\n            { \"title\" : \"X-Men\", \"score\" : 21.34803581237793 }\n            { \"title\" : \"Matchstick Men\", \"score\" : 21.05954933166504 }\n\n   .. tab:: Constant\n      :tabid: constant \n\n      .. example:: \n\n         In the following example, the :ref:`text-ref` operator uses ``score`` \n         with the ``function`` option to replace the current score of \n         the document with the constant numeric value of ``3``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n\n            { \"title\" : \"Men Without Women\", \"score\" : 3 }\n            { \"title\" : \"One Hundred Men and a Girl\", \"score\" : 3 }\n            { \"title\" : \"Of Mice and Men\", \"score\" : 3 }\n            { \"title\" : \"All the King's Men\", \"score\" : 3 }\n            { \"title\" : \"The Men\", \"score\" : 3 }\n\n   .. tab:: Gaussian\n      :tabid: gauss \n\n      .. example:: \n\n         In the following example, the :ref:`text-ref` operator uses ``score`` \n         with the ``function`` option to decay the relevance score \n         of the documents in the result. \n         \n         The query specifies that for documents whose ``imdb.rating`` \n         field value or ``4.6``, if the ``imdb.rating`` field is not \n         present in the documents, is ``scale`` distance, which is \n         ``5``, away from ``origin``, which is ``9.5``, plus or minus \n         ``offset``, which is ``0``, |fts| must multiply the score \n         using ``decay``, which starts at ``0.5``. This query includes \n         a :pipeline:`$limit` stage to limit the output to up to ``10`` \n         results and a :pipeline:`$project` stage to add the \n         ``imdb.rating`` field in the results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n\n            [\n              { title: 'The Shop Around the Corner', imdb: { rating: 8.1 }, score: 0.9471074342727661 },\n              { title: 'Exit Through the Gift Shop', imdb: { rating: 8.1 }, score: 0.9471074342727661 },\n              { title: 'The Shop on Main Street', imdb: { rating: 8 }, score: 0.9395227432250977 },\n              { imdb: { rating: 7.4 }, title: 'Chop Shop', score: 0.8849083781242371 },\n              { title: 'Little Shop of Horrors', imdb: { rating: 6.9 }, score: 0.8290896415710449 },\n              { title: 'The Suicide Shop', imdb: { rating: 6.1 }, score: 0.7257778644561768 },\n              { imdb: { rating: 5.6 }, title: 'A Woman, a Gun and a Noodle Shop', score: 0.6559237241744995 },\n              { title: 'Beauty Shop', imdb: { rating: 5.4 }, score: 0.6274620294570923 }\n            ]\n\n         To compare the results of the Gaussian expressions used in the \n         previous query with the relevance score that is returned in the \n         results by |fts|, run the following query: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n\n            [\n              { title: 'Beauty Shop', imdb: { rating: 5.4 }, score: 4.111973762512207 },\n              { imdb: { rating: 7.4 }, title: 'Chop Shop', score: 4.111973762512207 },\n              { title: 'The Suicide Shop', imdb: { rating: 6.1 }, score: 3.5363259315490723 },\n              { title: 'Little Shop of Horrors', imdb: { rating: 6.9 }, score: 3.1020588874816895 },\n              { title: 'The Shop Around the Corner', imdb: { rating: 8.1 }, score: 2.762784481048584 },\n              { title: 'The Shop on Main Street', imdb: { rating: 8 }, score: 2.762784481048584 },\n              { title: 'Exit Through the Gift Shop', imdb: { rating: 8.1 }, score: 2.762784481048584 },\n              { imdb: { rating: 5.6 }, title: 'A Woman, a Gun and a Noodle Shop', score: 2.0802340507507324 }\n            ]\n\n   .. tab:: Path\n      :tabid: path \n\n      .. example:: \n\n         In the following example, the :ref:`text-ref` operator uses ``score`` \n         with the ``function`` option to replace the relevance score \n         of the query with the value of the numeric field \n         ``imdb.rating`` or ``4.6``, if the ``imdb.rating`` field isn't \n         present in the documents.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n\n            { \"title\" : \"12 Angry Men\", \"score\" : 8.899999618530273 }\n            { \"title\" : \"The Men Who Built America\", \"score\" : 8.600000381469727 }\n            { \"title\" : \"No Country for Old Men\", \"score\" : 8.100000381469727 }\n            { \"title\" : \"X-Men: Days of Future Past\", \"score\" : 8.100000381469727 }\n            { \"title\" : \"The Best of Men\", \"score\" : 8.100000381469727 }\n\n   .. tab:: Score\n      :tabid: score \n\n      .. example:: \n\n         In the following example, the :ref:`text-ref` operator uses ``score`` \n         with the ``function`` option to return the relevance score, \n         which is the same as the current score, of the documents.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false\n\n            { \"title\" : \"Men...\", \"score\" : 3.4457783699035645 }\n            { \"title\" : \"The Men\", \"score\" : 2.8848698139190674 }\n            { \"title\" : \"Simple Men\", \"score\" : 2.8848698139190674 }\n            { \"title\" : \"X-Men\", \"score\" : 2.8848698139190674 }\n            { \"title\" : \"Mystery Men\", \"score\" : 2.8848698139190674 }\n\n   .. tab:: Unary\n      :tabid: unary \n\n      .. example:: \n\n         In the following example, the :ref:`text-ref` operator uses ``score`` \n         with the ``function`` option to calculate the log10 of the \n         ``imdb.rating`` field or ``10``, if the ``imdb.rating`` field \n         is not present in the document.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "            :copyable: false \n\n            { \"title\" : \"12 Angry Men\", \"score\" : 0.9493899941444397 }\n            { \"title\" : \"The Men Who Built America\", \"score\" : 0.9344984292984009 }\n            { \"title\" : \"No Country for Old Men\", \"score\" : 0.9084849953651428 }\n            { \"title\" : \"X-Men: Days of Future Past\", \"score\" : 0.9084849953651428 }\n            { \"title\" : \"The Best of Men\", \"score\" : 0.9084849953651428\n            }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/modify-score.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            \n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"query\": \"Helsinki\",\n                  \"path\": \"plot\"\n                }\n              }\n            },\n            {\n              \"$limit\": 5\n            },\n            {\n              \"$project\": {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": 1,\n                \"maxScore\": 1,\n                \"normalizedScore\": 1\n              }\n            },\n            {\n              \"$addFields\": {\n                \"score\": {\n                  \"$meta\": \"searchScore\"\n                }\n              }\n            },\n            {\n              \"$setWindowFields\": {\n                \"output\": {\n                  \"maxScore\": {\n                    \"$max\": \"$score\"\n                  }\n                }\n              }\n            },\n            {\n              \"$addFields\": {\n                \"normalizedScore\": {\n                  \"$divide\": [\n                    \"$score\", \"$maxScore\"\n                  ]\n                }\n              }\n            }])\n\n         .. output::\n            :language: json\n            :linenos:\n            :emphasize-lines: 6,12,18,24,30\n\n            [\n              {\n                title: 'Drifting Clouds',\n                score: 4.5660295486450195,\n                maxScore: 4.5660295486450195,\n                normalizedScore: 1\n              },\n              {\n                title: 'Sairaan kaunis maailma',\n                score: 4.041563034057617,\n                maxScore: 4.5660295486450195,\n                normalizedScore: 0.8851372929150143\n              },\n              {\n                title: 'Bad Luck Love',\n                score: 3.6251673698425293,\n                maxScore: 4.5660295486450195,\n                normalizedScore: 0.79394303764817\n              },\n              {\n                title: 'Bad Luck Love',\n                score: 3.6251673698425293,\n                maxScore: 4.5660295486450195,\n                normalizedScore: 0.79394303764817\n              },\n              {\n                title: 'Forbidden Fruit',\n                score: 3.6251673698425293,\n                maxScore: 4.5660295486450195,\n                normalizedScore: 0.79394303764817\n              }\n            ]\n\n   .. tab:: Arithmetic\n      :tabid: arithmetic\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/normalize-score.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            \n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"men\",\n                  \"score\": {\n                    \"function\":{\n                      \"multiply\":[\n                        {\n                          \"path\": {\n                            \"value\": \"imdb.rating\",\n                            \"undefined\": 2\n                          }\n                        },\n                        {\n                          \"score\": \"relevance\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"$limit\": 5\n            },\n            {\n              \"$addFields\": {\n                \"score\": {\n                  \"$meta\": \"searchScore\"\n                }\n              }\n            },\n            {\n              \"$setWindowFields\": {\n                \"output\": {\n                  \"maxScore\": {\n                    \"$max\": \"$score\"\n                  }\n                }\n              }\n            },\n            {\n              \"$addFields\": {\n                \"normalizedScore\": {\n                  \"$divide\": [\n                    \"$score\", \"$maxScore\"\n                  ]\n                }\n              }\n            },\n            {\n              \"$project\": {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": 1,\n                \"maxScore\": 1,\n                \"normalizedScore\": 1\n              }\n            }])\n\n         .. output::\n            :language: json\n            :linenos:\n            :emphasize-lines: 6,12,18,24,30\n\n            [\n              {\n                title: 'Men...',\n                score: 23.431293487548828,\n                maxScore: 23.431293487548828,\n                normalizedScore: 1\n              },\n              {\n                title: '12 Angry Men',\n                score: 22.080968856811523,\n                maxScore: 23.431293487548828,\n                normalizedScore: 0.9423708882544255\n              },\n              {\n                title: 'X-Men',\n                score: 21.34803581237793,\n                maxScore: 23.431293487548828,\n                normalizedScore: 0.911090795039637\n              },\n              {\n                title: 'X-Men',\n                score: 21.34803581237793,\n                maxScore: 23.431293487548828,\n                normalizedScore: 0.911090795039637\n              },\n              {\n                title: 'Matchstick Men',\n                score: 21.05954933166504,\n                maxScore: 23.431293487548828,\n                normalizedScore: 0.8987787781692841\n              }\n            ]     \n\n   .. tab:: Gaussian\n      :tabid: gauss \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/normalize-score.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json\n            :linenos:\n            \n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"shop\",\n                  \"score\": {\n                    \"function\":{\n                      \"gauss\": {\n                        \"path\": {\n                          \"value\": \"imdb.rating\",\n                          \"undefined\": 4.6\n                        },\n                        \"origin\": 9.5,\n                        \"scale\": 5,\n                        \"offset\": 0,\n                        \"decay\": 0.5\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"$limit\": 5\n            },\n            {\n              \"$addFields\": {\n                \"score\": {\n                  \"$meta\": \"searchScore\"\n                }\n              }\n            },\n            {\n              \"$setWindowFields\": {\n                \"output\": {\n                  \"maxScore\": {\n                    \"$max\": \"$score\"\n                  }\n                }\n              }\n            },\n            {\n              \"$addFields\": {\n                \"normalizedScore\": {\n                  \"$divide\": [\n                    \"$score\", \"$maxScore\"\n                  ]\n                }\n              }\n            },\n            {\n              \"$project\": {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": 1,\n                \"maxScore\": 1,\n                \"normalizedScore\": 1\n              }\n            }])\n\n         .. output::\n            :language: json\n            :linenos:\n            :emphasize-lines: 6,12,18,24,30\n\n            [\n              {\n                title: 'The Shop Around the Corner',\n                score: 0.9471074342727661,\n                maxScore: 0.9471074342727661,\n                normalizedScore: 1\n              },\n              {\n                title: 'Exit Through the Gift Shop',\n                score: 0.9471074342727661,\n                maxScore: 0.9471074342727661,\n                normalizedScore: 1\n              },\n              {\n                title: 'The Shop on Main Street',\n                score: 0.9395227432250977,\n                maxScore: 0.9471074342727661,\n                normalizedScore: 0.9919917310611205\n              },\n              {\n                title: 'Chop Shop',\n                score: 0.8849083781242371,\n                maxScore: 0.9471074342727661,\n                normalizedScore: 0.9343273488331464\n              },\n              {\n                title: 'Little Shop of Horrors',\n                score: 0.8290896415710449,\n                maxScore: 0.9471074342727661,\n                normalizedScore: 0.8753913353110349\n              }\n            ]\n\n   .. tab:: Path\n      :tabid: path \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/normalize-score.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json\n            :linenos:\n            \n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"men\",\n                  \"score\": {\n                    \"function\":{\n                      \"path\": {\n                        \"value\": \"imdb.rating\",\n                        \"undefined\": 4.6\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"$limit\": 5\n            },\n            {\n              \"$addFields\": {\n                \"score\": {\n                  \"$meta\": \"searchScore\"\n                }\n              }\n            },\n            {\n              \"$setWindowFields\": {\n                \"output\": {\n                  \"maxScore\": {\n                    \"$max\": \"$score\"\n                  }\n                }\n              }\n            },\n            {\n              \"$addFields\": {\n                \"normalizedScore\": {\n                  \"$divide\": [\n                    \"$score\", \"$maxScore\"\n                  ]\n                }\n              }\n            },\n            {\n              \"$project\": {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": 1,\n                \"maxScore\": 1,\n                \"normalizedScore\": 1\n              }\n            }])\n\n         .. output::\n            :language: json\n            :linenos:\n            :emphasize-lines: 6,12,18,24,30\n\n            [\n              {\n                title: '12 Angry Men',\n                score: 8.899999618530273,\n                maxScore: 8.899999618530273,\n                normalizedScore: 1\n              },\n              {\n                title: 'The Men Who Built America',\n                score: 8.600000381469727,\n                maxScore: 8.899999618530273,\n                normalizedScore: 0.9662922191102197\n              },\n              {\n                title: 'No Country for Old Men',\n                score: 8.100000381469727,\n                maxScore: 8.899999618530273,\n                normalizedScore: 0.9101124414213563\n              },\n              {\n                title: 'X-Men: Days of Future Past',\n                score: 8.100000381469727,\n                maxScore: 8.899999618530273,\n                normalizedScore: 0.9101124414213563\n              },\n              {\n                title: 'The Best of Men',\n                score: 8.100000381469727,\n                maxScore: 8.899999618530273,\n                normalizedScore: 0.9101124414213563\n              }\n            ]\n\n   .. tab:: Unary\n      :tabid: unary \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/normalize-score.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: \n            :language: json\n            :linenos:\n            \n            db.movies.aggregate([{\n              \"$search\": {\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"men\",\n                  \"score\": {\n                    \"function\": {\n                      \"log\": {\n                        \"path\": {\n                          \"value\": \"imdb.rating\",\n                          \"undefined\": 10\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"$limit\": 5\n            },\n            {\n              \"$addFields\": {\n                \"score\": {\n                  \"$meta\": \"searchScore\"\n                }\n              }\n            },\n            {\n              \"$setWindowFields\": {\n                \"output\": {\n                  \"maxScore\": {\n                    \"$max\": \"$score\"\n                  }\n                }\n              }\n            },\n            {\n              \"$addFields\": {\n                \"normalizedScore\": {\n                  \"$divide\": [\n                    \"$score\", \"$maxScore\"\n                  ]\n                }\n              }\n            },\n            {\n              \"$project\": {\n                \"_id\": 0,\n                \"title\": 1,\n                \"score\": 1,\n                \"maxScore\": 1,\n                \"normalizedScore\": 1\n              }\n            }])\n\n         .. output::\n            :language: json\n            :linenos:\n            :emphasize-lines: 6,12,18,24,30\n\n            [\n              {\n                title: '12 Angry Men',\n                score: 0.9493899941444397,\n                maxScore: 0.9493899941444397,\n                normalizedScore: 1\n              },\n              {\n                title: 'The Men Who Built America',\n                score: 0.9344984292984009,\n                maxScore: 0.9493899941444397,\n                normalizedScore: 0.9843145968064908\n              },\n              {\n                title: 'No Country for Old Men',\n                score: 0.9084849953651428,\n                maxScore: 0.9493899941444397,\n                normalizedScore: 0.9569144408182233\n              },\n              {\n                title: 'X-Men: Days of Future Past',\n                score: 0.9084849953651428,\n                maxScore: 0.9493899941444397,\n                normalizedScore: 0.9569144408182233\n              },\n              {\n                title: 'The Best of Men',\n                score: 0.9084849953651428,\n                maxScore: 0.9493899941444397,\n                normalizedScore: 0.9569144408182233\n              }\n            ]\n\nThe |fts| results contain the following scores:\n\n- The modified score for the :pipeline:`$search` query in the ``score``\n  field from the :pipeline:`$addFields` stage. \n- The maximum score assigned to the documents in the results in the\n  ``maxScore`` field from the :pipeline:`$setWindowFields` stage.  \n- The normalized score in the ``normalizedScore`` field from the\n  :pipeline:`$addFields` stage, which is computed by dividing the\n  modified score in ``$score`` by the maximum score in ``$maxScore``\n  using :manual:`$divide </reference/operator/aggregation/divide/>`. \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/score/normalize-score.txt"
  },
  {
    "code": "            :copyable: false\n            :linenos:\n            :emphasize-lines: 13\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    <operator-specification>\n                  }\n                }\n              },\n              {\n                \"$project\": {\n                  \"<field-to-include>\": 1,\n                  \"<field-to-exclude>\": 0,\n                  \"score\": { \"$meta\": \"searchScore\" }\n                }\n              }\n            ])\n\n         To learn more, see :ref:`modify <scoring-behavior>` and\n         :ref:`normalize <fts-normalize-score>` the search score.\n\n      .. tab:: Search Score Details\n         :tabid: scoredetails\n      \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/scoring.txt"
  },
  {
    "code": "            :copyable: false\n            :linenos:\n            :emphasize-lines: 7, 14\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    <operator-specification>\n                  },\n                  \"scoreDetails\": true \n                }\n              },\n              {\n                \"$project\": {\n                  \"<field-to-include>\": 1,\n                  \"<field-to-exclude>\": 0,\n                  \"scoreDetails\": { \"$meta\": \"searchScoreDetails\" }\n                }\n              }\n            ])\n\n         To learn more, see :ref:`return <fts-score-details>` the search\n         score details.\n\n      .. tab:: Vector Search Score\n         :tabid: vectorsearchscore\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/scoring.txt"
  },
  {
    "code": "            :copyable: false\n            :linenos:\n            :emphasize-lines: 11\n\n            db.movies.aggregate([\n              {\n                \"$vectorSearch\": {\n                  <query-syntax>\n                }\n              },\n              {\n                \"$project\": {\n                  \"<field-to-include>\": 1,\n                  \"<field-to-exclude>\": 0,\n                  \"score\": { \"$meta\": \"vectorSearchScore\" }\n                }\n              }\n            ])\n\n         To learn more, see :ref:`vectorSearch-agg-pipeline-score`.\n\nAfter a :pipeline:`$project` stage, you don't need to include a\ndescending :pipeline:`$sort` because |fts| returns the documents from\nhighest score to lowest. However, if multiple documents in the results\nhave identical scores, the ordering of the documents in the results is\nnon-deterministic. If you want the results to have a determined order,\nwe recommend that you include the :ref:`sort <sort-ref>` option in your\n:pipeline:`$search` stage to sort the results by a unique field. If you \ndon't specify a unique field, |fts| defaults to sorting the results\narbitrarily when the results have an identical score. You can use the\n:ref:`sort <sort-ref>` option to also return an ascending sort of the\nresults by score. To learn more, see :ref:`sort-ref` and :ref:`Sort by\nScore Examples <sort-by-score-egs>`. \n\n.. note:: \n\n   .. include:: /includes/fact-fts-pagination-search-nodes.rst \n\nMore information about the Lucene scoring algorithm can be found in the\n`Lucene documentation\n<https://lucene.apache.org/core/3_5_0/scoring.html>`__.\n\n.. toctree::\n   :titlesonly:\n   \n   /atlas-search/score/modify-score\n   /atlas-search/score/get-details \n   /atlas-search/score/normalize-score\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/scoring.txt"
  },
  {
    "code": "      :copyable: true \n\n      sort: {score: {$meta: \"searchScore\", order: 1}}\n\nYou can use ``sort`` to also ensure that the results have a determined\norder when multiple documents in the results have identical scores. For\nexample, if you sort the results by a unique field, such as a date field\nnamed ``lastUpdated`` as shown in the following example, |fts| returns\nresults with identical scores in a determined order: \n\n.. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "      :copyable: false\n\n      sort: {score: {$meta: \"searchScore\"}, lastUpdated: 1}\n\nHowever, if you don't specify a unique field to sort the results by,\n|fts| returns the results sorted by score in descending order. |fts|\nreturns results with identical scores or values in an arbitrary order.\nThe following example doesn't sort the results by a unique field.   \n\n.. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "      :copyable: false \n\n      sort: {score: {$meta: \"searchScore\"}}\n\nTo learn more, see :ref:`scoring-ref`.\n\n.. _fts-sort-arrays:\n\nSort Arrays \n```````````\n\n|fts| flattens the arrays for sorting. \n\n.. example:: \n\n   Consider the following array: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "      :copyable: false \n\n      [4, [1, [8,5], 9], 2]\n\n   |fts| flattens the preceding array similar to the following:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "      :copyable: false \n\n      4, 1, 8, 5, 9, 2\n\n   For an ascending sort, |fts| uses ``1`` to compare the array to other\n   values. For a descending sort, |fts| uses ``9`` to compare the array\n   to other values.\n\nWhen comparing with elements inside an array:\n\n- For an ascending sort, |fts| compares the smallest elements of the\n  array or performs a less than (``<``) comparison. \n\n  .. example:: \n\n     |fts| sorts results in the following order if you sort by numbers\n     in ascending order:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "        :copyable: false \n\n        -20\n        [-3, 12] // <- -3 comes before 5.\n        5\n        [6, 18]  // <- 6 comes after 5.\n        13\n        14\n\n- For a descending sort, |fts| compares the largest elements of the\n  array or performs a greater than (``>``) comparison. \n\n  .. example:: \n\n     |fts| sorts results in the following order if you sort by numbers\n     in descending order:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "        :copyable: false \n\n        [6, 18]  // <- 18 comes before 14.\n        14\n        13\n        [-3, 12] // <- 12 comes after 13.\n        5\n        -20\n\n.. _fts-sort-null:\n\nSort by Null Values \n```````````````````\n\n|fts| treats null as equivalent to missing fields and therefore, if you\nsort by fields that contain null values or is missing in some documents,\nthe ordering of the documents in the results is non-deterministic. When\ncomparing values of different |bson| types in sort operations, |fts|\nfollows the :manual:`MongoDB comparison and sort order\n</reference/bson-type-comparison-order/>` and considers null values \nlower than all other :ref:`supported <bson-data-types>` |bson| types.\n\n.. _fts-sort-embedded-documents:\n\nSort on Embedded Documents Array Fields \n```````````````````````````````````````\n\n.. include:: /includes/fact-fts-embedded-documents-sort.rst\n\n.. _sort-considerations:\n\nConsiderations \n~~~~~~~~~~~~~~\n\nConsistency \n```````````\n\n|fts| indexes are eventually :ref:`consistent\n<index-eventual-consistency-and-latency>`, and values returned in\nresults might be different from values used in sorting.\n\nPerformance \n```````````\n\nThis feature optimizes queries that use :pipeline:`$search` with\n:pipeline:`$limit` as a subsequent stage. If |fts| needs to sort all \ndocuments in the collection, the response might be slow.\n\nScoring \n```````\n\n|fts| returns :ref:`scores <scoring-ref>` for all documents in the\nresults. However, you might see higher scoring documents after lower\nscoring documents because the order of documents in the results is based\non the sort criteria unless you explicitly sort by score.\n\nLimitations \n~~~~~~~~~~~\n\n- You can't sort on fields of :ref:`embeddedDocuments\n  <bson-data-types-embedded-documents>` type.\n- You can't use the ``sort`` option with the deprecated\n  :ref:`knn-beta-ref`\n  operator. \n\n.. _sort-compatibility-ref:\n\nCompatibility \n~~~~~~~~~~~~~\n\n|service| supports non-sharded sort queries across all major and minor\nMongoDB 5.0 and later versions. Sharded sort queries are available on\nall major releases for 6.0 and on all major and minor releases for \n7.0 and later versions. If you use ``sort``  on sharded |service|\n{+clusters+} running MongoDB v5.0 and earlier, |fts| returns an error.\n\n.. _sort-syntax-ref:\n\nSyntax \n------\n\n``sort`` has the following syntax:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :emphasize-lines: 7-11\n   :linenos:\n\n   {\n     \"$search\": {  \n       \"index\": \"<index name>\", // optional, defaults to \"default\"\n       \"<operator>\": { // such as \"text\", \"compound\", or \"phrase\"\n         <operator-specification>\n       },\n       \"sort\": { \n         score: {$meta: \"searchScore\"},\n         \"<field-to-sort>\": <sort-order>, \n         ...\n       } \n     }\n   }\n\n.. _fts-sort-egs:\n\nExamples \n--------\n\nThe following examples use the ``sample_mflix.movies``, \n``sample_airbnb.listingsAndReview``, or a custom collection named\n``users``. \n\nIndex Definition\n~~~~~~~~~~~~~~~~\n\nThe example queries in this page use either the ``sample_mflix.movies``,\nthe ``sample_airbnb.listingsAndReview``, or a custom collection. If you\ncreate the following indexes on these collections, you can run the\nsample queries against the indexed fields.\n\n.. tabs:: \n\n   .. tab:: ``movies`` Collection\n      :tabid: movies\n\n      The index definition for the ``movies`` collection specifies the\n      following:  \n\n      - Index ``awards.wins`` field as: \n\n        - ``number`` type for sorting and querying\n        - ``numberFacet`` type for running :ref:`fts-facet-ref` queries\n\n      - Index ``released`` field as: \n\n        - ``date`` type for sorting and querying\n        - ``dateFacet`` type for running :ref:`fts-facet-ref` queries\n\n      - Index ``title`` field as: \n\n        - ``token`` type for sorting \n        - ``string`` type for querying  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n         {\n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"awards\": {\n                 \"dynamic\": false,\n                 \"fields\": {\n                   \"wins\": [\n                     {\n                       \"type\": \"number\"\n                     },\n                     {\n                       \"type\": \"numberFacet\"\n                     }\n                   ]\n                 },\n                 \"type\": \"document\"\n               },\n               \"released\": [\n                 {\n                   \"type\": \"date\"\n                 },\n                 {\n                   \"type\": \"dateFacet\"\n                 }\n               ],\n               \"title\": [{\n                 \"type\": \"token\"\n               }, {\n                 \"type\": \"string\"\n               }]\n             }\n           }\n         }\n\n      For the preceding index definition, |fts| creates an index named\n      ``default`` with :ref:`static mappings <static-dynamic-mappings>`\n      on the specified fields. \n\n   .. tab:: ``listingsAndReviews`` Collection\n      :tabid: airbnb\n\n      The example queries against the\n      ``sample_airbnb.listingsAndReviews`` collection use the following\n      index. The index definition specifies dynamic mappings on the\n      fields in the collection:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "         :copyable: true\n\n         {\n           \"mappings\": {\n             \"dynamic\": true\n           }\n         }\n  \n   .. tab:: ``users`` Collection\n      :tabid: users\n\n      The ``users`` collection contains the following documents: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "         :copyable: true\n\n         db.users.insertMany([\n           {\n             \"_id\": 0,\n             \"a\": UUID(\"1a324de2-e34b-c87e-f2a1-42ce37ad74ed\"),\n             \"b\": \"hello\",\n             \"c\": ObjectId(\"507f1f77bcf86cd799439011\")\n           },\n           {\n             \"_id\": 1,\n             \"a\": UUID(\"3b241101-e2bb-4255-8caf-4136c566a962\"),\n             \"b\": \"hello\",\n             \"c\": true\n           },\n           {\n             \"_id\": 2,\n             \"a\": UUID(\"dee11d4e-63c6-4d90-983c-5c9f1e79e96c\"),\n             \"b\": \"hello\",\n             \"c\": \"foo\"\n           },\n           {\n             \"_id\": 3,\n             \"b\": \"hello\",\n             \"c\": UUID(\"3be11d4e-62cb-4e95-9a3c-5c9f1e56c732\")\n           },\n           {\n             \"_id\": 4,\n             \"a\": UUID(\"d3c12e1c-c36e-25ed-7c3e-1e7f1e53c752\"),\n             \"b\": \"hello\",\n             \"c\": null\n           }\n         ])\n\n      The index definition for the ``users`` collection specifies the\n      following: \n\n      - Dynamically index all the fields except fields named ``c``.\n      - Statically index field named ``c`` as the following types for\n        sorting:  \n\n        - ``token``  \n        - ``uuid`` \n        - ``objectId``\n        - ``boolean``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n         {         \n           \"mappings\": {\n             \"dynamic\": true,\n             \"fields\": {\n               \"c\": [\n                { \"type\": \"token\" },\n                { \"type\": \"uuid\" },\n                { \"type\": \"objectId\" },\n                { \"type\": \"boolean\" }\n               ]\n             }\n           }\n         }\n\n      For the preceding collection, |fts| creates an index named\n      ``default`` with the specified mappings on the specified fields. \n\n.. _fts-sort-eg-date:\n\nDate Search and Sort \n~~~~~~~~~~~~~~~~~~~~\n\nThe following query on the ``sample_mflix.movies`` namespace uses the\n:pipeline:`$search` stage to do the following: \n\n- Search for movies released between 01 January, 2010 and 01, January,\n  2015 using the :ref:`range-ref` operator. \n- Sort the results in descending order of released date using the \n  ``sort`` option. \n\nThe query uses the :pipeline:`$limit` stage to limit the output to ``5``\ndocuments. It also uses the :pipeline:`$project` stage to omit all fields\nexcept ``title`` and ``released`` in the results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"range\": {\n              \"path\": \"released\",\n              \"gt\": ISODate(\"2010-01-01T00:00:00.000Z\"),\n              \"lt\": ISODate(\"2015-01-01T00:00:00.000Z\")\n            },\n            \"sort\": {\n              \"released\": -1\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"released\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        {\n          title: 'Cold in July',\n          released: ISODate(\"2014-12-31T00:00:00.000Z\")\n        },\n        {\n          title: 'The Gambler',\n          released: ISODate(\"2014-12-31T00:00:00.000Z\")\n        },\n        {\n          title: 'Force Majeure',\n          released: ISODate(\"2014-12-30T00:00:00.000Z\")\n        },\n        { \n          title: 'LFO', \n          released: ISODate(\"2014-12-27T00:00:00.000Z\") \n        },\n        {\n          title: 'Peace After Marriage',\n          released: ISODate('2014-12-26T00:00:00.000Z')\n        }\n      ]\n\n.. _fts-sort-eg-number:\n\nNumber Search and Sort \n~~~~~~~~~~~~~~~~~~~~~~\n\nThe following query on the ``sample_mflix.movies`` namespace uses the\n:pipeline:`$search` stage to do the following: \n\n- Search for movies that have won awards.  \n- Sort the results in descending order using ``sort`` option. \n\nThe query uses the :pipeline:`$limit` stage to limit the output to ``5``\ndocuments. It also uses the :pipeline:`$project` stage to omit all fields\nexcept ``title`` and ``awards.wins`` in the results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n             \"range\": {\n               \"path\": \"awards.wins\",\n               \"gt\": 3\n            },\n            \"sort\": {\n              \"awards.wins\": -1\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"awards.wins\": 1\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        { title: '12 Years a Slave', awards: { wins: 267 } },\n        { title: 'Gravity', awards: { wins: 231 } },\n        { title: 'Gravity', awards: { wins: 231 } },\n        {\n          title: 'Birdman: Or (The Unexpected Virtue of Ignorance)',\n          awards: { wins: 210 }\n        },\n        { title: 'Boyhood', awards: { wins: 185 } },\n      ]\n\n.. _fts-sort-eg-string:\n\nString Search and Sort \n~~~~~~~~~~~~~~~~~~~~~~\n\nThe following query on the ``sample_mflix.movies`` namespace uses the\n:pipeline:`$search` stage to do the following: \n\n- Search for movies that have the term ``country`` in the title.  \n- Sort the results in ascending order using ``sort`` option. \n\nThe query uses the :pipeline:`$limit` stage to limit the output to ``5``\ndocuments. It also uses the :pipeline:`$project` stage to do the\nfollowing: \n\n- Omit all fields except ``title`` in the results.\n- Add a field named ``score``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"title\",\n              \"query\": \"country\"\n            },\n            \"sort\": {\n              \"title\": 1\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        { title: 'A Country Called Home', score: 2.536633253097534 },\n        { title: 'A Month in the Country', score: 2.258953094482422 },\n        { title: 'A Quiet Place in the Country', score: 2.0360684394836426 },\n        { title: 'A Sunday in the Country', score: 2.258953094482422 },\n        { title: 'Another Country', score: 3.3635599613189697 }\n      ]\n\n.. _fts-sort-eg-objectid:\n\nSort by ObjectId\n~~~~~~~~~~~~~~~~\n\nThe following query uses the :ref:`range-ref` operator to search the\nthe ``released`` field in the ``sample_mflix.movies`` collection for\nmovies released between ``2015-01-01`` and ``2015-12-31``. It sorts the\nresults by the ``_id`` field, which contains value of type ``ObjectId``,\nin descending order. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"range\": {\n              \"path\": \"released\",\n              \"gt\": ISODate(\"2015-01-01T00:00:00.000Z\"),\n              \"lt\": ISODate(\"2015-12-31T00:00:00.000Z\")\n            },\n            \"sort\": {\n              \"_id\": -1\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"title\": 1,\n            \"released\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        {\n          _id: ObjectId('573a13fbf29313caabdedf31'),\n          title: 'No Home Movie',\n          released: ISODate('2015-08-10T00:00:00.000Z'),\n          score: 1\n        },\n        {\n          _id: ObjectId('573a13fbf29313caabdedf30'),\n          title: 'Our Loved Ones',\n          released: ISODate('2015-08-12T00:00:00.000Z'),\n          score: 1\n        },\n        {\n          _id: ObjectId('573a13faf29313caabded406'),\n          title: 'The Red Spider',\n          released: ISODate('2015-11-20T00:00:00.000Z'),\n          score: 1\n        },\n        {\n          _id: ObjectId('573a13faf29313caabded1d6'),\n          title: 'The Laundryman',\n          released: ISODate('2015-07-11T00:00:00.000Z'),\n          score: 1\n        },\n        {\n          _id: ObjectId('573a13faf29313caabdecaf3'),\n          title: 'Right Now, Wrong Then',\n          released: ISODate('2015-09-01T00:00:00.000Z'),\n          score: 1\n        }\n      ]\n\n.. _fts-sort-eg-uuid:\n\nSort by UUID\n~~~~~~~~~~~~\n\nThe following query searches for the term ``hello`` in field ``b`` in\nthe ``users`` collection. The query sorts the results by field ``a``,\nwhich contains polymorphic data (to demonstrate the sort order), in\nascending order. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.users.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"b\",\n              \"query\": \"hello\"\n            },\n            \"sort\": {\n              \"a\": 1\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"a\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        { _id: 3, score: 0.039550621062517166 },\n        {\n          _id: 0,\n          a: UUID('1a324de2-e34b-c87e-f2a1-42ce37ad74ed'),\n          score: 0.039550621062517166\n        },\n        {\n          _id: 1,\n          a: UUID('3b241101-e2bb-4255-8caf-4136c566a962'),\n          score: 0.039550621062517166\n        },\n        {\n          _id: 4,\n          a: UUID('d3c12e1c-c36e-25ed-7c3e-1e7f1e53c752'),\n          score: 0.039550621062517166\n        },\n        {\n          _id: 2,\n          a: UUID('dee11d4e-63c6-4d90-983c-5c9f1e79e96c'),\n          score: 0.039550621062517166\n        }\n      ]\n\n.. _fts-sort-eg-null:\n\nSort by Null Value\n~~~~~~~~~~~~~~~~~~\n\nThe following query searches field ``b``  for the string ``hello`` in\nthe ``users`` collection using the :ref:`text-ref` operator. The query\nsorts the results by field ``a`` in ascending order.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.users.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"b\",\n              \"query\": \"hello\"\n            },\n            \"sort\": {\n              \"c\": 1\n            }\n          }\n        },\n        {\n          \"$project\": {\n            \"_id\": 1,\n            \"c\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        { _id: 4, c: null, score: 0.039550621062517166 },\n        { _id: 2, c: 'foo', score: 0.039550621062517166 },\n        {\n          _id: 3,\n          c: UUID('3be11d4e-62cb-4e95-9a3c-5c9f1e56c732'),\n          score: 0.039550621062517166\n        },\n        {\n          _id: 0,\n          c: ObjectId('507f1f77bcf86cd799439011'),\n          score: 0.039550621062517166\n        },\n        { _id: 1, c: true, score: 0.039550621062517166 }\n      ]\n\n|fts| returns all the documents, but the ordering of documents with\n``\"_id\": 2`` and ``\"_id\": 4`` is random because |fts| treats\nmissing and nulls equally when sorting. For more details, see the \n:manual:`MongoDB sort order </reference/bson-type-comparison-order/>`\nfor sorting data of different BSON types.  \n\n.. _fts-sort-eg-boolean:\n\nSort by Boolean\n~~~~~~~~~~~~~~~\n\nThe following query searches the ``sample_airbnb.listingsAndReviews``\ncollection for properties in ``Portugal`` and sorts the results in \ndescending order by the ``boolean`` field ``is_location_exact``.\n\nThe query uses the :pipeline:`$limit` stage to limit the output to ``5`` \ndocuments. It also uses the :pipeline:`$project` stage to omit all\nfields except ``name``, ``property_type``, ``address.country``, and\n``address.location.is_location_exact`` in the results. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :linenos: \n\n      db.listingsAndReviews.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"address.country\",\n              \"query\": \"Portugal\"\n            },\n            \"sort\": {\n              \"address.location.is_location_exact\": -1,\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"name\": 1,\n            \"property_type\": 1,\n            \"address.country\": 1,\n            \"address.location.is_location_exact\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: javascript \n      :linenos: \n      :visible: false \n\n      [\n        {\n          name: 'BBC OPORTO 4X2',\n          property_type: 'Apartment',\n          address: { country: 'Portugal', location: { is_location_exact: true } }\n        },\n        {\n          name: 'Heroísmo IV',\n          property_type: 'Apartment',\n          address: { country: 'Portugal', location: { is_location_exact: true } }\n        },\n        {\n          name: 'Spacious and well located apartment',\n          property_type: 'Apartment',\n          address: { country: 'Portugal', location: { is_location_exact: true } }\n        },\n        {\n          name: 'Renovated Classic Design Studio with Sun Room',\n          property_type: 'Apartment',\n          address: { country: 'Portugal', location: { is_location_exact: true } }\n        },\n        {\n          name: \"O'Porto Studio | Historic Center\",\n          property_type: 'Loft',\n          address: { country: 'Portugal', location: { is_location_exact: true } }\n        }\n      ]\n\nIn the preceding results, the value of ``is_location_exact`` is ``true``\nfor the documents because in a descending sort, |fts| ranks ``true``\nvalues above ``false`` values. If you do an ascending sort by changing\nthe value on line 9 of the preceding query to ``1``, |fts| ranks the\ndocuments with ``false`` values higher than ``true`` values and returns\nthe following documents:  \n   \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: false \n\n   [\n     {\n       name: 'Ribeira Charming Duplex',\n       property_type: 'House',\n       address: { country: 'Portugal', location: { is_location_exact: false } }\n     },\n     {\n       name: 'Be Happy in Porto',\n       property_type: 'Loft',\n       address: { country: 'Portugal', location: { is_location_exact: false } }\n     },\n     {\n       name: 'Downtown Oporto Inn (room cleaning)',\n       property_type: 'Hostel',\n       address: { country: 'Portugal', location: { is_location_exact: false } }\n     },\n     {\n       name: 'A Casa Alegre é um apartamento T1.',\n       property_type: 'Apartment',\n       address: { country: 'Portugal', location: { is_location_exact: false } }\n     },\n     {\n       name: 'FloresRooms 3T',\n       property_type: 'Apartment',\n       address: { country: 'Portugal', location: { is_location_exact: false } }\n     }\n   ]\n\n.. _fts-sort-eg-compound:\n\nCompound Search and Sort \n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following query uses the :pipeline:`$search` stage to do the\nfollowing: \n\n- Search for movies that have the term ``dance`` in the title, with\n  a preference for movies that have won 2 or more awards and were\n  released after 01 January, 1990.  \n- Sort the results by the number of awards in descending order, then by\n  the movie title in ascending order, and then by the release date in\n  descending order. \n\nThe query uses the :pipeline:`$limit` stage to limit the output to ``10``\ndocuments. It also uses the :pipeline:`$project` stage to do the\nfollowing: \n\n- Omit all fields except ``title``, ``released``, and ``awards.wins`` in\n  the results. \n- Add a field named ``score``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"compound\": {\n              \"must\": [{\n                \"text\": {\n                  \"path\": \"title\",\n                  \"query\": \"dance\"\n                }\n              }],\n              \"should\": [{\n                \"range\": {\n                  \"path\": \"awards.wins\",\n                  \"gte\": 2\n                }\n              }, {\n                \"range\": {\n                  \"path\": \"released\",\n                  \"gte\": ISODate(\"1990-01-01T00:00:00.000Z\")\n                }\n              }]\n            },\n            \"sort\": {\n              \"awards.wins\": -1, \n              \"title\": 1, \n              \"released\": -1\n            }\n          }\n        },\n        {\n          \"$limit\": 10\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1,\n            \"released\": 1,\n            \"awards.wins\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        {\n          title: 'Shall We Dance?',\n          released: ISODate(\"1997-07-11T00:00:00.000Z\"),\n          awards: { wins: 57 },\n          score: 4.9811458587646484\n        },\n        {\n          title: 'Shall We Dance?',\n          released: ISODate(\"1997-07-11T00:00:00.000Z\"),\n          awards: { wins: 57 },\n          score: 4.9811458587646484\n        },\n        {\n          title: 'War Dance',\n          released: ISODate(\"2008-11-01T00:00:00.000Z\"),\n          awards: { wins: 11 },\n          score: 5.466421127319336\n        },\n        {\n          title: 'Dance with the Devil',\n          released: ISODate(\"1997-10-31T00:00:00.000Z\"),\n          awards: { wins: 6 },\n          score: 4.615056037902832\n        },\n        {\n          title: 'Save the Last Dance',\n          released: ISODate(\"2001-01-12T00:00:00.000Z\"),\n          awards: { wins: 6 },\n          score: 4.615056037902832\n        },\n        {\n          title: 'Dance with a Stranger',\n          released: ISODate(\"1985-08-09T00:00:00.000Z\"),\n          awards: { wins: 4 },\n          score: 3.615056037902832\n        },\n        {\n          title: 'The Baby Dance',\n          released: ISODate(\"1998-08-23T00:00:00.000Z\"),\n          awards: { wins: 4 },\n          score: 4.981145858764648\n        },\n        {\n          title: 'Three-Step Dance',\n          released: ISODate(\"2004-02-19T00:00:00.000Z\"),\n          awards: { wins: 4 },\n          score: 4.981145858764648\n        },\n        {\n          title: \"Cats Don't Dance\",\n          released: ISODate(\"1997-03-26T00:00:00.000Z\"),\n          awards: { wins: 3 },\n          score: 4.981145858764648\n        },\n        {\n          title: 'Dance Me Outside',\n          released: ISODate(\"1995-03-10T00:00:00.000Z\"),\n          awards: { wins: 3 },\n          score: 4.981145858764648\n        }\n      ]\n\n.. _fts-sort-eg-facet:\n\nFacet Search and Sort \n~~~~~~~~~~~~~~~~~~~~~\n\nThe following query uses the :pipeline:`$search` stage to do the\nfollowing: \n\n- Search for movies released between 01 January, 2010 and 01, January,\n  2015 using the :ref:`range-ref` operator. \n- Get a count of the number of movies that won ``1``, ``5``, ``10``, and\n  ``15`` awards.\n- Get a count of the number of movies released on ``2010-01-01``,\n  ``2011-01-01``, ``2012-01-01``, ``2013-01-01``, ``2014-01-01``, and\n  ``2015-01-01``.\n- Sort the results in descending order of released date using the \n  ``sort`` option. \n\nThe query uses the :pipeline:`$limit` stage to do the following: \n\n- Limit the output to ``5`` documents in the ``docs`` output field. \n- Limit the output to ``1`` document in the ``meta`` output field. \n\nIt uses the :pipeline:`$project` stage to omit all fields except the\n``awards.wins``, ``released``, and ``title`` fields.\n\nIt also uses the :pipeline:`$replaceWith` stage to include the metadata\nresults stored in the ``$$SEARCH_META`` variable in the ``meta`` output\nfield and the :pipeline:`$set` stage to add the ``meta`` field to the\nresults.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"facet\": {\n              \"operator\": {\n                \"range\": {\n                  \"path\": \"released\",\n                  \"gt\": ISODate(\"2010-01-01T00:00:00.000Z\"),\n                  \"lt\": ISODate(\"2015-01-01T00:00:00.000Z\")\n                }\n              },\n              \"facets\": {\n                \"awardsFacet\": {\n                  \"type\": \"number\",\n                  \"path\": \"awards.wins\",\n                  \"boundaries\" : [1,5,10,15]\n                },\n                \"releasedFacet\" : {\n                  \"type\" : \"date\",\n                  \"path\" : \"released\",\n                  \"boundaries\" : [ISODate(\"2010-01-01T00:00:00.000Z\"), ISODate(\"2011-01-01T00:00:00.000Z\"), ISODate(\"2012-01-01T00:00:00.000Z\"), ISODate(\"2013-01-01T00:00:00.000Z\"), ISODate(\"2014-01-01T00:00:00.000Z\"), ISODate(\"2015-01-01T00:00:00.000Z\")]\n                }\n              }\n            },\n            \"sort\": {\n              \"released\": -1\n            }\n          }\n        },\n        {\n          \"$facet\": {\n            \"docs\": [\n              { \"$limit\": 5 },\n              { \"$project\":\n                {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"released\": 1,\n                  \"awards.wins\": 1\n                }\n              }\n            ],\n            \"meta\": [\n              {\"$replaceWith\": \"$$SEARCH_META\"},\n              {\"$limit\": 1}\n            ]\n          }\n        },\n        {\n          \"$set\": {\n            \"meta\": {\n              \"$arrayElemAt\": [\"$meta\", 0]\n            }\n          }\n        }\n      ])\n\n   .. output::\n      :language: json\n      :visible: false\n\n      [\n        {\n          docs: [\n            {\n              title: 'Cold in July',\n              released: ISODate(\"2014-12-31T00:00:00.000Z\"),\n              awards: { wins: 1 }\n            },\n            {\n              title: 'The Gambler',\n              released: ISODate(\"2014-12-31T00:00:00.000Z\"),\n              awards: { wins: 7 }\n            },\n\n            {\n              title: 'Force Majeure',\n              released: ISODate(\"2014-12-30T00:00:00.000Z\"),\n              awards: { wins: 31 }\n            },\n            {\n              title: 'LFO',\n              released: ISODate(\"2014-12-27T00:00:00.000Z\"),\n              awards: { wins: 3 }\n            },\n            {\n              title: 'Peace After Marriage',\n              released: ISODate('2014-12-26T00:00:00.000Z'),\n              awards: { wins: 5 }\n            }\n          ],\n          meta: {\n            count: { lowerBound: Long(\"4821\") },\n              facet: {\n                releasedFacet: {\n                  buckets: [\n                    {\n                      _id: ISODate(\"2010-01-01T00:00:00.000Z\"),\n                      count: Long(\"857\")\n                    },\n                    {\n                      _id: ISODate(\"2011-01-01T00:00:00.000Z\"),\n                      count: Long(\"909\")\n                    },\n                    {\n                      _id: ISODate(\"2012-01-01T00:00:00.000Z\"),\n                      count: Long(\"903\")\n                    },\n                    {\n                      _id: ISODate(\"2013-01-01T00:00:00.000Z\"),\n                      count: Long(\"1063\")\n                    },\n                    {\n                      _id: ISODate(\"2014-01-01T00:00:00.000Z\"),\n                      count: Long(\"1089\")\n                    }\n                  ]\n                },\n                awardsFacet: {\n                  buckets: [\n                    { _id: 1, count: Long(\"2330\") },\n                    { _id: 5, count: Long(\"604\") },\n                    { _id: 10, count: Long(\"233\") }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      ]\n\n.. _sort-by-score-egs:\n\nSort by Score\n~~~~~~~~~~~~~\n\nThe following examples demonstrate how to sort the results by the score\nof the documents in the results. The examples demonstrate how to perform\nthe following actions: \n\n- Retrieve the lowest scoring documents first by sorting the results in\n  ascending order.\n- Sort the results by score in descending order and for results with\n  identical scores, sort arbitrarily. \n- Sort the results by score and for results with identical scores, sort\n  using a unique field. \n\n.. tabs:: \n\n   .. tab:: Ascending Sort \n      :tabid: ascending-sort\n\n      The following query uses the :pipeline:`$search` stage to perform\n      the following actions: \n\n      - Search for movies that have the term ``story`` in the title.  \n      - Sort the results by score in ascending order. \n\n      The query uses the :pipeline:`$limit` stage to limit the output to ``5``\n      documents. It also uses the :pipeline:`$project` stage to perform the\n      following actions: \n\n      - Omit all fields except ``title`` in the results.\n      - Add a field named ``score``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json \n            :emphasize-lines: 8\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"story\"\n                  },\n                  \"sort\": {score: {$meta: \"searchScore\", order: 1}}\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"score\": {$meta: \"searchScore\"}\n                }\n              }\n            ])\n\n         .. output::\n            :language: json\n            :emphasize-lines: 12-21\n            :visible: false\n\n            [\n              {\n                title: 'Do You Believe in Miracles? The Story of the 1980 U.S. Hockey Team',\n                score: 0.8674521446228027\n              },\n              {\n                title: 'Once in a Lifetime: The Extraordinary Story of the New York Cosmos',\n                score: 0.9212141036987305\n              },\n              {\n                title: 'The Source: The Story of the Beats and the Beat Generation',\n                score: 0.9820802211761475\n              },\n              {\n                title: 'If These Knishes Could Talk: The Story of the NY Accent',\n                score: 0.9820802211761475\n              },\n              {\n                title: 'Dream Deceivers: The Story Behind James Vance vs. Judas Priest',\n                score: 1.051558256149292\n              }\n            ]\n\n   .. tab:: Default (Descending) Sort \n      :tabid: descending-sort\n\n      The following query uses the :pipeline:`$search` stage to perform\n      the following actions: \n\n      - Search for movies that have the term ``summer`` in the title.  \n      - Sort the results by score in descending order and for results\n        with identical scores, sort arbitrarily. \n\n      The query uses the :pipeline:`$limit` stage to limit the output to ``5``\n      documents. It also uses the :pipeline:`$project` stage to perform the\n      following actions: \n\n      - Omit all fields except ``_id`` and ``title`` in the results.\n      - Add a field named ``score``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json \n            :emphasize-lines: 8\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"summer\"\n                  },\n                  \"sort\": {score: {$meta: \"searchScore\"}}\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 1,\n                  \"title\": 1,\n                  \"score\": {$meta: \"searchScore\"}\n                }\n              }\n            ])\n\n         .. output::\n            :language: json\n            :visible: false\n\n            [\n              {\n                _id: ObjectId(\"573a1398f29313caabcea21e\"),\n                title: 'Summer',\n                score: 3.5844719409942627\n              },\n              {\n                _id: ObjectId(\"573a13a6f29313caabd18eca\"),\n                title: 'Summer Things',\n                score: 3.000213623046875\n              },\n              {\n                _id: ObjectId(\"573a13b8f29313caabd4c1d0\"),\n                title: 'Summer Palace',\n                score: 3.000213623046875\n              },\n              {\n                _id: ObjectId(\"573a1394f29313caabcde8e8\"),\n                title: 'Summer Stock',\n                score: 3.000213623046875\n              },\n              {\n                _id: ObjectId(\"573a13acf29313caabd284fa\"),\n                title: 'Wolf Summer',\n                score: 3.000213623046875\n              }\n            ]\n\n   .. tab:: Sort by Unique Field\n      :tabid: unique-field-sort\n\n      The following query uses the :pipeline:`$search` stage to perform the\n      following actions: \n\n      - Search for movies that have the term ``prince`` in the title.  \n      - Sort the results first by score and then by the value of the\n        ``released`` field in ascending order for results with identical\n        scores.  \n\n      The query uses the :pipeline:`$limit` stage to limit the output to ``5``\n      documents. It also uses the :pipeline:`$project` stage to perform the\n      following actions: \n\n      - Omit all fields except ``title`` and ``released`` in the results.\n      - Add a field named ``score``.\n \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json \n            :emphasize-lines: 8\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"prince\"\n                  },\n                  \"sort\": {score: {$meta: \"searchScore\"}, \"released\": 1}\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1,\n                  \"released\": 1,\n                  \"score\": {$meta: \"searchScore\"}\n                }\n              }\n            ])\n\n         .. output::\n            :language: json\n            :visible: false\n\n            [\n              {\n                title: 'Prince',\n                released: ISODate(\"2015-08-14T00:00:00.000Z\"),\n                score: 4.168826103210449\n              },\n              {\n                title: 'Prince Avalanche',\n                released: ISODate(\"2013-09-19T00:00:00.000Z\"),\n                score: 3.4893198013305664\n              },\n              {\n                title: 'The Prince',\n                released: ISODate(\"2014-08-22T00:00:00.000Z\"),\n                score: 3.4893198013305664\n              },\n              {\n                title: 'Prince of Foxes',\n                released: ISODate(\"1949-12-23T00:00:00.000Z\"),\n                score: 3.0002830028533936\n             },\n              {\n                title: 'The Oil Prince',\n                released: ISODate(\"1966-01-01T00:00:00.000Z\"),\n                score: 3.0002830028533936\n              }\n            ]\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/sort.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n      $search: {\n        \"index\": <index name>, // optional, defaults to \"default\"\n        \"span\": {\n          \"term\" | <positional-operator>\": {\n            <operator-specification>\n          }\n        }\n      }\n   }\n\n.. note::\n\n   ``span`` search queries can't use the :ref:`compound <compound-ref>` \n   operator.\n\n.. _span-term-ref:\n\nTerm Operator \n-------------\n\nYou can use the ``term`` operator to specify the terms to search. The\n``term`` operator is required and when you use it with ``span``\n:ref:`positional <span-positional-operators-ref>` operators, it must be\nthe innermost child of the positional operators.\n\nSyntax \n~~~~~~\n\nThe ``term`` operator has the following syntax: \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: false \n\n   \"term\": {\n     \"path\": \"<path-to-field>\",\n     \"query\": \"<terms-to-search>\"\n   }\n\nFields \n~~~~~~\n\nThe ``term`` operator takes the following fields:  \n\n.. list-table:: \n   :header-rows: 1 \n\n   * - Option  \n     - Type \n     - Required?\n     - Description\n\n   * - ``path``\n     - string \n     - yes\n     - Indexed field to search.\n\n   * - ``query``\n     - string \n     - yes\n     - Term or phrase to search.\n\n.. _span-positional-operators-ref:\n\nPositional Operators  \n--------------------\n\nYou can use the positional operators to specify the position of the\nterms that you want to search with the :ref:`term <span-term-ref>`\noperator. The positional operators are of type ``document``. You must\nspecify at least one positional operator in your ``span`` operator\nquery. The positional operators can take other ``span`` positional\noperators, recursively. \n\n.. note:: About the Examples \n\n   The examples on this page use the ``sample_mflix.movies`` collection.\n   If you :ref:`load the sample data <sample-data>`\n   and :ref:`create <ref-create-index>` a :ref:`dynamic\n   <static-dynamic-mappings>` index named ``default`` on the\n   :ref:`movies collection <sample-mflix>` , you can run the following\n   :pipeline:`$search` sample queries against the collection. The sample\n   queries use the :pipeline:`$limit` stage to limit the results to\n   ``5`` documents and the :pipeline:`$project` stage to exclude all\n   fields except the ``title`` field in the results.  \n\n``span`` takes the following optional positional operators.\n\n.. _span-contains:\n\n``contains`` \n~~~~~~~~~~~~\n   \nThe ``contains`` positional operator matches terms that are contained\nwithin other terms. You can use :ref:`positional operators\n<span-positional-operators-ref>` recursively or just the :ref:`term\n<span-term-ref>` operator within ``contains`` to specify the search\nterms.  \n   \nSyntax \n``````\n\nThe ``contains`` positional operator has the following syntax:  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 4-8\n\n   {\n     \"$search\": {\n       \"span\": {\n         \"contains\": {\n           \"spanToReturn\": \"inner\"|\"outer\",\n           \"little\": { <positional-or-term-operator-specification> },\n           \"big\": { <positional-or-term-operator-specification> }\n         }\n       }\n     }\n   } \n\nFields \n``````\n\nThe ``contains`` positional operator takes the following fields: \n\n.. list-table:: \n   :header-rows: 1 \n\n   * - Fields  \n     - Type \n     - Required?\n     - Description\n\n   * - ``big`` \n     - document \n     - yes\n     - One or more :ref:`positional operators\n       <span-positional-operators-ref>` specified recursively or \n       just the :ref:`term <span-term-ref>` operator. The following table shows\n       the type of query that ``span`` executes for ``big`` based on the\n       value of ``spanToReturn``.\n       \n       .. list-table:: \n          :stub-columns: 1\n\n          * - ``outer``\n            - ``span`` matches terms from ``big`` that *contain* at\n              least one term from ``little``. \n\n          * - ``inner`` \n            - ``span`` matches terms from ``little`` that are *within*\n              terms from ``big``.\n\n   * - ``little`` \n     - document\n     - yes\n     - One or more :ref:`positional operators\n       <span-positional-operators-ref>` specified recursively or \n       just the :ref:`term <span-term-ref>` operator. The following table shows\n       the type of query that ``span`` executes for ``little`` based on\n       the value of ``spanToReturn``.\n       \n       .. list-table:: \n          :stub-columns: 1\n\n          * - ``inner`` \n            - ``span`` matches terms from ``little`` that are *within* \n              terms from ``big``.\n\n          * - ``outer``\n            - ``span`` matches terms from ``big`` that *contain* at\n              least one term from ``little``. \n\n   * - ``score`` \n     - document \n     - no\n     - Score to apply to the results of this search.\n\n   * - ``spanToReturn`` \n     - string \n     - yes \n     - Type of query to execute and matching results to return. Value\n       can be one of the following:  \n\n       - ``inner`` - to execute a *within* query that matches terms from\n         ``little`` that are inside of terms from ``big``\n       - ``outer`` - to execute a *contains* query that matches terms\n         from ``big`` that contain at least one term from ``little``\n\nExample \n``````` \n\nThe following example query uses ``span.contains`` to find documents in\nwhich the term ``train`` appears with the terms ``great`` and\n``robbery``, where ``great`` and ``robbery`` can be up to 5 positions\napart in the ``title`` field. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language: javascript\n      :linenos: \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"span\": {\n              \"contains\": {\n                \"spanToReturn\": \"outer\",\n                \"little\": {\n                  \"term\": {\n                    \"path\": \"title\",\n                    \"query\": \"train\"\n                  }\n                },\n                \"big\": {\n                  \"near\": {\n                    \"clauses\": [\n                      {\n                        \"term\": {\n                          \"path\": \"title\",\n                          \"query\": \"great\"\n                        }\n                      },\n                      {\n                        \"term\": {\n                          \"path\": \"title\",\n                          \"query\": \"robbery\"\n                        }\n                      }\n                    ],\n                    \"slop\": 5\n                  }\n                }\n              }\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: shell\n\n      [\n        { title: 'The Great Train Robbery' },\n        { title: 'The Great Train Robbery' },\n        { title: \"The Great St. Trinian's Train Robbery\" }\n      ]\n\n|fts| returns documents that *contain* the term ``train`` (specified\nusing ``little``) inside the terms ``great`` and ``robbery`` (specified \nusing ``big``). If you set ``spanToReturn`` on line 6 to ``inner``, |fts|\nreturns the same documents because the term ``train`` (specified using\n``little``) appears *within* the terms ``great`` and ``robbery``\n(specified using ``big``). \n\n.. _span-first:\n\n``first`` \n~~~~~~~~~\n\nThe ``first`` positional operator identifies the position of the search\nterm by using a specified number. You can specify the search terms using\n:ref:`positional operators <span-positional-operators-ref>` recursively,\nor just the :ref:`term <span-term-ref>` operator. ``span`` matches\ndocuments where the position of the search term is less than or equal to\nthe specified number. \n\nSyntax \n``````\n\nThe ``first`` positional operator has the following syntax: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 4-8\n\n   {\n     \"$search\": {\n       \"span\": {\n         \"first\": {\n           \"endPositionLte\": <term-position>,\n           \"operator\": { <span-positional-or-term-operator-specification> },\n           \"score\": { <score-options> }\n         }\n       }\n     }\n   }  \n\nFields \n``````\n\nThe ``first`` positional operator takes the following fields:\n\n.. list-table:: \n   :header-rows: 1 \n\n   * - Option  \n     - Type \n     - Required?\n     - Description\n\n   * - ``endPositionLte``\n     - int \n     - no\n     - Number that specifies the position of the search term. If \n       you specify a search for multiple terms, the last term should be\n       less than or equal to this value. If omitted, defaults to ``3``.\n\n   * - ``operator``\n     - document\n     - yes\n     - Document that contains the :ref:`positional operators\n       <span-positional-operators-ref>` or :ref:`term <span-term-ref>`\n       operator options.  \n\n   * - ``score``\n     - document\n     - no\n     - Score to apply to the results of this search.\n\nExample \n```````\n\nThe following example queries use ``span.first`` to find documents \nin which the specified string appears in the ``title`` field. The\n``endPositionLte`` parameter has a value of ``2``, which means that the  \nsearch term specified using the ``term`` operator must be the first or\nsecond word in the field. \n\n.. tabs:: \n\n   .. tab:: term Example \n      :tabid: term-eg\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "         :copyable: true\n   \n         .. input:: \n            :language: javascript\n            :linenos:\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"span\": {\n                    \"first\": {\n                      \"endPositionLte\": 2,\n                      \"operator\": {\n                        \"term\": {\n                          \"path\": \"title\",\n                          \"query\": \"dance\"\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json\n\n            [\n              { title: 'Dance Program' },\n              { title: 'Slam Dance' },\n              { title: 'Last Dance' },\n              { title: 'War Dance' },\n              { title: 'Delhi Dance' }\n            ]\n\n      |fts| returns the documents that contain search word ``dance``\n      in the first or second position of the ``title`` field. \n\n   .. tab:: or Example \n      :tabid: or-eg\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "         :copyable: true\n   \n         .. input:: \n            :language: javascript\n            :linenos:\n\n            db.movies.aggregate([\n              {\n                \"$search\": {\n                  \"span\": {\n                    \"first\": {\n                      \"endPositionLte\": 2,\n                      \"operator\": {\n                        \"or\": {\n                          \"clauses\": [\n                            { \"term\": { \"path\": \"title\", \"query\": \"man\" } },\n                            { \"term\": { \"path\": \"title\", \"query\": \"woman\" } }\n                          ]\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 0,\n                  \"title\": 1\n                }\n              }\n            ])\n\n         .. output:: \n            :language: json\n\n            [\n              { title: \"Everybody's Woman\" },\n              { title: 'Marked Woman' },\n              { title: 'Wonder Man' },\n              { title: 'Designing Woman' },\n              { title: 'Watermelon Man' }\n            ]\n\n      |fts| returns documents that contain the search word ``man``\n      or ``woman`` in the first or second position of the ``title``\n      field. |fts| does not return both search terms in the same ``title`` \n      because the example includes the ``or`` operator ``clauses``\n      to specify the search terms.\n\n.. _span-near:\n\n``near``\n~~~~~~~~\n   \nThe ``near`` positional operator matches two or more clauses that\ncontain the search term near each other. You can specify the search\nterms using a list of :ref:`positional operators\n<span-positional-operators-ref>` recursively or just the :ref:`term \n<span-term-ref>` operator. \n\nSyntax \n``````\n\nThe ``near`` positional operator has the following syntax:  \n \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 4-11\n\n   {\n     \"$search\": {\n       \"span\": {\n         \"near\": {\n           \"clauses\": [\n             { <span-positional-or-term-operator-specification> },\n             ...\n           ],\n           \"slop\": <distance-number>,\n           \"inOrder\": true|false\n         }\n       }\n     }\n   }  \n\nFields \n``````\n\nThe ``near`` positional operator takes the following fields: \n\n.. list-table:: \n   :header-rows: 1 \n\n   * - Field  \n     - Type \n     - Required?\n     - Description\n\n   * - ``clauses`` \n     - array of documents \n     - yes\n     - Span clauses that must be near one another. Clauses can't \n       be empty. Each document contains ``span`` :ref:`positional \n       <span-positional-operators-ref>` or just the :ref:`term\n       <span-term-ref>` operator options. \n\n   * - ``inOrder`` \n     - boolean\n     - no\n     - Flag that specifies whether the search for terms in the\n       clauses must be in the order specified and must not be\n       overlapping. \n\n       Value can be one of the following: \n\n       - ``true`` - to search for terms in the clauses in the\n         specified order specified, without overlapping\n       - ``false`` - to search for terms in the clauses in any order \n              \n       If omitted, defaults to ``false``.\n\n   * - ``score``\n     - document\n     - no\n     - Score to apply to the results of this search.\n\n   * - ``slop`` \n     - integer\n     - no\n     - Allowable distance between terms in the clauses. Lower\n       values allow less positional distance between the terms\n       and greater values allow more distance between the words\n       to satisfy the query. The default is ``0``, which means that\n       words in the different clauses must be adjacent to be\n       considered a match.  \n\nExample \n```````\n\nThe following example query uses ``span.near`` to search for documents in\nwhich the strings ``prince`` and ``pauper`` are found near each other.\nThe ``inOrder`` parameter is set to ``false``, so the search terms can\nbe in any order. The ``slop`` parameter is set to ``4``, so the search\nterms can be separated by up to only 4 words.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\" : {\n            \"span\": {\n              \"near\": {\n                \"clauses\": [\n                  { \"term\": { \"path\": \"title\", \"query\": \"prince\" } },\n                  { \"term\": { \"path\": \"title\", \"query\": \"pauper\" } }\n                ],\n                \"slop\": 4,\n                \"inOrder\": false\n              }\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n\n      [ { title: 'The Prince and the Pauper' } ]\n\n|fts| returns a document that contain search words ``prince`` and\n``pauper``, separated by less than four words, in the ``title`` field.\n\n.. _span-or:\n\n``or``\n~~~~~~ \n   \nThe ``or`` positional operator matches any of two or more clauses. You\ncan specify the search terms using a list of :ref:`positional operators\n<span-positional-operators-ref>` recursively or just the :ref:`term\n<span-term-ref>` operator.  \n\nSyntax \n``````\n\nThe ``or`` positional operator has the following syntax:  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 4-10\n\n   {\n     \"$search\": {\n       \"span\": {\n         \"or\": {\n           \"clauses\": [\n             { <span-positional-or-term-operator-specification> },\n             ...\n           ],\n           \"score\": { <scoring-options> }\n         }\n       }\n     }\n   }  \n\nFields \n``````\n\nThe ``or`` positional operator takes the following fields: \n\n.. list-table:: \n   :header-rows: 1 \n\n   * - Option  \n     - Type \n     - Required?\n     - Description\n\n   * - ``clauses`` \n     -  array of documents\n     -  yes\n     -  Span clauses that specify the search terms. One of the clauses \n        must match, and clauses can't be \n        empty. Each document must contain ``span`` \n        :ref:`positional operators <span-positional-operators-ref>` specified \n        recursively or just the :ref:`term <span-term-ref>` operator options.\n\n   * - ``score``\n     - document\n     - no\n     - Score to apply to the results of this search.\n\nExample \n```````\n\nThe following example query uses ``span.or`` clauses to specify two\n:ref:`term <span-term-ref>` operator queries that search for documents\nin which the ``title`` field has either ``city`` or ``country``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\" : {\n            \"span\": {\n              \"or\": {\n                \"clauses\": [\n                  { \"term\": { \"path\": \"title\", \"query\": \"city\" } },\n                  { \"term\": { \"path\": \"title\", \"query\": \"country\" } }\n                ],\n              }\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n\n      [\n        { title: 'Country' },\n        { title: 'City Lights' },\n        { title: 'King & Country' },\n        { title: 'Fat City' },\n        { title: 'Atlantic City' }\n      ]\n\n|fts| returns the documents that contain the search words ``city`` or \n``country`` in the ``title`` field, but not both in the same ``title``. \n\n.. _span-subtract:\n\n``subtract``\n~~~~~~~~~~~~\n   \nThe ``subtract`` positional operator removes matches that overlap with\nanother match. You can specify the search terms using a list of\n:ref:`positional operators <span-positional-operators-ref>` recursively\nor just the :ref:`term <span-term-ref>` operator. The ``subtract``\nclause can be used to exclude certain strings from your search results.\n\nSyntax \n``````\n\nThe ``subtract`` positional operator has the following syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 4-7\n\n   {\n     \"$search\": {\n       \"span\": {\n         \"subtract\": {\n           \"include\": { <span-positional-or-term-operator-specification> },\n           \"exclude\": { <span-positional-or-term-operator-specification> }\n         }\n       }\n     }\n   }  \n\nFields \n``````\n\nThe ``subtract`` positional operator takes the following fields: \n\n.. list-table:: \n   :header-rows: 1 \n\n   * - Option  \n     - Type \n     - Required?\n     - Description\n\n   * - ``exclude``\n     - document \n     - yes\n     - Document that specifies the term or phrase matches to remove that\n       overlap with the term or phrase matches specified in the\n       ``include`` field. You can specify the term or phrase\n       using any span :ref:`positional operators\n       <span-positional-operators-ref>` and the :ref:`term\n       <span-term-ref>` operator.  \n\n   * - ``include``\n     - document \n     - yes\n     - Document that specifies the term matches to include using \n       any :ref:`positional operators <span-positional-operators-ref>`\n       or just the :ref:`term <span-term-ref>` operator.  \n\n   * - ``score``\n     - document\n     - no\n     - Score to apply to the results of this search.\n\nExample \n```````\n\nThe following example query uses ``span.subtract`` to search for documents\nin which the ``title`` field contains the words ``father`` and ``son``,\nin any order, within 3 words of each other. It excludes any document in \nwhich the word ``like`` occurs between ``father`` and ``son``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: true\n   \n   .. input:: \n      :language: javascript\n      :linenos:\n\n      db.movies.aggregate([\n        {\n          \"$search\" : {\n            \"span\": {\n              \"subtract\": {\n                \"include\": {\n                  \"near\": {\n                    \"clauses\": [\n                      { \"term\": { \"path\": \"title\", \"query\": \"father\" } },\n                      { \"term\": { \"path\": \"title\", \"query\": \"son\" } }\n                    ],\n                    \"inOrder\": false,\n                    \"slop\": 3\n                  }\n                },\n                \"exclude\": { \"term\": { \"path\": \"title\", \"query\": \"like\" } }\n              }\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n\n      [\n        { title: 'Father, Son & Holy Cow' },\n        { title: 'My Father and My Son' },\n        { title: 'Jimmy Rosenberg: The Father, the Son & the Talent' }\n      ]\n\n|fts| doesn't return the document with the title ``Like Father Like\nSon`` because although the ``title`` field includes the words ``father``\nand ``son``, it also has ``like`` between them, which is in the\n``exclude`` criteria of the query. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/span.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 3-8\n\n   {\n     ...,\n     \"storedSource\": true | false | {\n       \"include\" | \"exclude\": [\n         \"<field-name>\", \n         ...\n       ]\n     }\n   }\n\n.. _fts-stored-source-option:\n\nOptions \n-------\n\nThe ``storedSource`` option takes a :ref:`boolean value \n<fts-stored-source-boolean-values>` or an :ref:`object \n<fts-stored-source-option>` in the :ref:`index definition \n<ref-index-definitions>`. \n\n.. _fts-stored-source-boolean-values: \n\nBoolean Values\n~~~~~~~~~~~~~~\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 80\n\n   * - Value\n     - Description\n\n   * - ``true``\n     - Specifies that |fts| must store all the fields in the \n       documents. Storing full documents might significantly impact \n       performance during indexing and querying. To learn more, \n       see :ref:`perf-ref-stored-source`. \n\n   * - ``false``\n     - Specifies that |fts| must not store the original source \n       document. This is the default value for the ``storedSource`` \n       option.\n\n.. _fts-stored-source-document: \n\nObject \n~~~~~~\n\nThe ``storedSource`` option object accepts one of the following \nfields:\n\n.. note:: \n\n   The object must contain either ``include`` or ``exclude``.\n\n.. list-table::\n   :header-rows: 1\n   :widths: 15 25 60\n\n   * - Field\n     - Type\n     - Description\n\n   * - ``include``\n     - array of strings\n     - List that contains the field names or dot-separated paths to \n       fields to store. In addition to the specified fields, |fts| \n       stores ``_id`` also by default. \n\n   * - ``exclude``\n     - array of strings\n     - List that contains the field names or dot-separated paths to \n       fields to exclude from being stored. If specified, |fts| stores \n       original documents except the fields listed here. \n\n.. _fts-stored-source-egs:\n\nExamples \n--------\n\nThe following index examples use the fields in the \n``sample_mflix.movies`` collection to demonstrate how to configure the \nfields to store on |fts| using the ``storedSource`` option. You can use\nthe Visual Editor or the JSON Editor in the {+atlas-ui+} to configure\nthe indexes. \n\n.. tabs:: \n\n   .. tab:: Store Specified \n      :tabid: include \n\n      .. example:: \n\n         The following example stores only the ``title`` and \n         ``awards.wins`` fields in the documents in the collection.\n         After you select your preferred configuration method, select\n         the ``movies`` collection under the ``sample_mflix`` database.   \n\n         .. tabs:: \n\n            .. tab:: Visual Editor\n               :tabid: vib\n\n               a. Click :guilabel:`Refine Your Index` to configure your\n                  index.\n               #. In the :guilabel:`Stored Source Fields` section, click\n                  :guilabel:`Specified`.\n               #. Select ``awards.wins`` from the dropdown in the\n                  :guilabel:`Field Name` column and click :guilabel:`Add`.\n               #. Click :guilabel:`Add Field` to specify another field\n                  to store.  \n               #. Select ``title`` from the dropdown in the\n                  :guilabel:`Field Name` column and click\n                  :guilabel:`Add`. \n               #. Click :guilabel:`Save Changes`.\n            \n            .. tab:: JSON Editor\n               :tabid: jsonib\n\n               Append lines 5 to 10 from the following example to the\n               index definition to store the fields on |fts|. The \n               example uses the :manual:`dot notation\n               </core/document/#dot-notation>` to specify nested \n               fields. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/stored-source-definition.txt"
  },
  {
    "code": "                  :linenos: \n                  :emphasize-lines: 5-10\n\n                  {\n                    \"mappings\": {\n                      ...\n                    },\n                    \"storedSource\": {\n                      \"include\": [\n                        \"title\",\n                        \"awards.wins\"\n                      ]\n                    },\n                    ...\n                  }\n\n   .. tab:: Exclude Specified \n      :tabid: exclude \n\n      .. example:: \n\n         The following example stores all fields except ``directors`` \n         and ``imdb.rating`` in the documents in the collection. After\n         you select your preferred configuration method, select the\n         ``movies`` collection under the ``sample_mflix`` database.  \n\n         .. tabs:: \n\n            .. tab:: Visual Editor\n               :tabid: vib\n\n               a. Click :guilabel:`Refine Your Index` to configure your\n                  index.\n               #. In the :guilabel:`Stored Source Fields` section, click\n                  :guilabel:`All Except Specified`.\n               #. Select ``directors`` from the dropdown in the\n                  :guilabel:`Field Name` column and click :guilabel:`Add`.\n               #. Click :guilabel:`Add Field` to specify another field\n                  to exclude. \n               #. Select ``imdb.rating`` from the dropdown in the\n                  :guilabel:`Field Name` column and click\n                  :guilabel:`Add`.\n               #. Click :guilabel:`Save Changes`.\n\n            .. tab:: JSON Editor\n               :tabid: jsonib\n\n               Append lines 5 to 10 from the following example to the\n               index definition to exclude the fields. The example uses\n               the :manual:`dot notation </core/document/#dot-notation>`\n               to specify nested fields.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/stored-source-definition.txt"
  },
  {
    "code": "                  :linenos: \n                  :emphasize-lines: 5-10\n\n                  {\n                    \"mappings\": {\n                      ...\n                    },\n                    \"storedSource\": {\n                      \"exclude\": [\n                        \"directors\",\n                        \"imdb.rating\"\n                      ]\n                    },\n                    ...\n                  }\n\n   .. tab:: Store All Fields \n      :tabid: storeall  \n\n      .. example:: \n\n         The following example stores all the fields in the documents \n         in the collection. After you select your preferred\n         configuration method, select the ``movies`` collection under\n         the ``sample_mflix`` database. \n\n         .. tabs:: \n\n            .. tab:: Visual Editor\n               :tabid: vib\n\n               a. Click :guilabel:`Refine Your Index` to configure your\n                  index.\n               #. In the :guilabel:`Stored Source Fields` section, click\n                  :guilabel:`All`.\n               #. Click :guilabel:`Save Changes`.\n\n            .. tab:: JSON Editor\n               :tabid: jsonib\n\n               Append line 5 from the following example to the index\n               definition to store all of the fields. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/stored-source-definition.txt"
  },
  {
    "code": "                  :linenos: \n                  :emphasize-lines: 5 \n\n                  {\n                    \"mappings\": {\n                      ...\n                    },\n                    \"storedSource\": true,\n                    ...\n                  }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/stored-source-definition.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n   :copyable: false\n   :emphasize-lines: 9-17 \n\n.. _synonyms-options:\n\nOptions \n-------\n\n``synonyms`` takes the following fields in an index definition:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 15 15 60 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``analyzer``\n     - string\n     - Name of the :ref:`analyzer <analyzers-ref>` to use with this \n       synonym mapping.\n       \n       .. include:: /includes/fact-field-synonym-analyzer.rst\n       \n       To use synonyms with stop words, you must either index the \n       field using the :ref:`ref-standard-analyzer` or add the \n       synonym entry without the stop word.\n\n       You can use any |fts| analyzer except the\n       following:\n\n       :ref:`Language analyzers <ref-language-analyzers>`:\n\n       - ``lucene.kuromoji`` \n       - ``lucene.cjk``\n       \n       :ref:`Custom \n       analyzer <custom-analyzers>` tokenizers and token filters: \n\n       - :ref:`nGram <ngram-tokenizer-ref>` Tokenizer\n       - :ref:`edgeGram <edgegram-tokenizer-ref>` Tokenizer\n       - :ref:`daitchMokotoffSoundex <daitchmokotoffsoundex-tf-ref>` \n         Token Filter\n       - :ref:`nGram <ngram-tf-ref>` Token Filter \n       - :ref:`edgeGram <edgegram-tf-ref>` Token Filter \n       - :ref:`shingle <shingle-tf-ref>` Token Filter\n       - :ref:`wordDelimiterGraph <wordDelimiterGraph-tf-ref>` Token \n         Filter\n         \n\n\n     - Required\n\n   * - ``name``\n     - string \n     - Name of the synonym mapping. Name must be unique in the index \n       definition. Value can't be an empty string. \n     - Required\n\n   * - ``source``\n     - document\n     - :ref:`Source collection <synonyms-coll-spec>` for synonyms. The \n       ``source`` option takes the ``collection`` field. \n     - Required\n\n   * - ``source.collection``\n     - string \n     - Name of the MongoDB collection that is in the same database as \n       the |fts| index. Documents in this collection must be in the \n       format described in the :ref:`synonyms-coll-spec`.\n     - Required\n\n.. _synonyms-coll-spec:\n\nSynonyms Source Collection Documents \n------------------------------------\n\nEach document in the collection specified as the source for the \nsynonyms describe how one or more words map to one or more synonyms of \nthose words. \n\n.. _synonyms_limits_shared_tier:\n\n.. note::\n\n   On free and shared tier |service| clusters, the synonyms collection can't exceed 10,000 documents.\n\n.. _synonyms-coll-format:\n\nFormat of Synonyms Source Collection Documents \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou must configure each document with the following fields: \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 15 10 60 15\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``input``\n     - array of strings\n     - Required for ``mappingType: explicit`` mappings. \n     \n       For ``explicit`` mappings, ``synonyms`` values are synonyms of \n       each ``input`` token. Value can't be an empty or all-whitespace \n       string. You can specify the same ``input`` value in multiple \n       documents.\n       \n     - Conditional\n\n   * - ``mappingType`` \n     - string\n     - Type of mapping. Value can be one of the following: \n\n       - ``equivalent`` - describes a set of tokens that are equivalent \n         to one another. For an example of this ``mappingType``, see \n         :ref:`Example <synonyms-equivalent-mapping-type-eg>`.\n\n       - ``explicit`` - matches ``input`` tokens and replaces them with \n         all alternative ``synonyms`` tokens. For an example of this \n         ``mappingType``, see :ref:`Example \n         <synonyms-explicit-mapping-type-eg>`.\n         \n     - Required\n\n   * - ``synonyms``\n     - array of strings\n     - Words that are synonyms of one another if ``mappingType`` is \n       ``equivalent`` or synonyms of ``input`` tokens if \n       ``mappingType`` is ``explicit``. ``synonyms`` must have at least \n       one value.\n       \n       |fts| considers each string, regardless of the number of\n       words within, to be a single token. For example, |fts| \n       tokenizes the string ``sushi chef`` as a single term and \n       doesn't return any results for a search for ``sushi`` or \n       ``chef`` individually.\n\n       To use synonyms with stop words, you must either add the \n       synonym entry without the stop word or index the field using \n       the :ref:`ref-standard-analyzer`.\n\n       For an example of each ``mappingType`` see \n       :ref:`synonyms-mapping-type-egs`.\n     - Required\n\nThe documents in the collection can contain other fields. The \ndocuments in the collection are additive, and mappings are \ndeduplicated. |fts| synonyms are stored as a separate |service| \ncollection, which counts against the same storage quota as any other \ncollection in |service|. |fts| might use more compute resources to \napply synonyms from larger synonyms source collections.\n\n.. warning:: \n\n   Don't include invalid synonym documents in the synonym source \n   collection. |fts| doesn't create indexes if the indexes use synonym \n   mappings that reference collections with invalid documents. Only \n   include synonym documents that are properly formatted in your \n   synonym source collection.\n\n   MongoDB doesn't recommend adding synonym documents to synonym source \n   collections in a production environment without first validating \n   that they are properly formatted and behave as expected in a test \n   environment.\n\n.. _synonyms-coll-changes:\n\nChanges to Synonyms Source Collection Documents\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you make changes to your synonyms source collection:\n\n- You don't need to reindex because |fts| watches for changes and \n  automatically updates its internal synonym map.\n- The time it takes |fts| to update the synonym mappings increases with \n  the synonym source collection size. Note that the changes to synonym \n  documents are reflected in your |fts| query results eventually.\n\n.. _synonyms-mapping-type-egs:\n\n``mappingType`` Examples \n~~~~~~~~~~~~~~~~~~~~~~~~\n\n|service| provides the documents for the following |fts| mapping type\nexamples in a collection named ``sample_synonyms``. You can load these\ndocuments on your {+cluster+} in the same database as your collection. To\nload these documents on your {+cluster+}, when you\n:ref:`create the index <ref-create-index>` for your collection, do the following: \n\na. When you select the :guilabel:`Configuration Method`, select the\n   :guilabel:`Visual Editor`. \n#. When you :guilabel:`Add synonym mapping` to your index, select\n   :guilabel:`Load sample collection` from the :guilabel:`Synonym source\n   collection` dropdown. \n\n.. _synonyms-equivalent-mapping-type-eg:\n\n``equivalent`` \n``````````````\n\n.. example:: \n\n   In this ``equivalent`` mapping type example, the ``synonyms`` tokens \n   ``car``, ``vehicle``, and ``automobile`` are configured to be \n   synonyms of one another:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/synonyms.txt"
  },
  {
    "code": "      :copyable: false\n\n      {\n        \"mappingType\": \"equivalent\",\n        \"synonyms\": [\"car\", \"vehicle\", \"automobile\"]\n      }\n\n   For a :ref:`text-ref` query for ``car``, ``vehicle``, or \n   ``automobile`` applying a synonym mapping that includes such a \n   document, |fts| returns documents that contain the term ``car``, \n   ``vehicle``, or ``automobile``.\n\n.. _synonyms-explicit-mapping-type-eg:\n\n``explicit`` \n````````````\n\n.. example:: \n\n   In this ``explicit`` mapping type example, ``input`` token ``beer`` \n   is configured to consider ``beer``, ``brew``, and ``pint`` as \n   synonyms:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/synonyms.txt"
  },
  {
    "code": "      :copyable: false\n\n      {\n        \"mappingType\": \"explicit\",\n        \"input\": [\"beer\"],\n        \"synonyms\": [\"beer\", \"brew\", \"pint\"]\n      }\n\n   For a :ref:`text-ref` query for ``beer`` applying a synonym mapping \n   that includes such a document, |fts| returns documents that contain \n   the terms \"beer\", \"brew\", or \"pint\" because the ``input`` token \n   ``beer`` is explicitly mapped to all these ``synonyms`` tokens. \n   However, for a query for ``pint``, |fts| does not find documents \n   that contain ``beer`` because ``pint`` is not explicitly mapped to \n   ``beer``.\n\n.. _synonyms-egs:\n\nExample \n-------\n\nThe examples on this page include:\n\n- A :ref:`sample synonyms source collection <sample-synonyms-coll>` \n  named ``synonymous_terms`` in the ``sample_mflix`` database.\n- :ref:`Index definition examples <synonyms-index-definition-ex>` that \n  rely on documents in the ``sample_mflix.movies`` and \n  ``sample_mflix.synonymous_terms`` collections.\n\n.. _sample-synonyms-coll:\n\nSynonym Source Collection Example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following collection named ``synonymous_terms`` is an example synonym\nsource collection that can be used with the ``movies`` collection in the\n``sample_mflix`` database. \n\n.. note::\n   \n  To learn how to format the documents in the collection, see\n  :ref:`<synonyms-coll-spec>`.\n\nThe ``sample_mflix.synonymous_terms`` collection contains the following\ndocuments: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/synonyms.txt"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: json \n\n         db.movies.aggregate([\n           {\n             $search: {\n               \"text\": {\n                 \"path\": \"title\",\n                 \"query\": \"surfer\"\n               }\n             }\n           },\n           {\n             $project: {\n               \"_id\": 0,\n               \"title\": 1,\n               score: { $meta: \"searchScore\" }\n             }\n           }\n         ])\n\n      .. output:: \n         :language: json \n         :visible: false \n\n         { \"title\" : \"Soul Surfer\", \"score\" : 4.518949508666992 }\n         { \"title\" : \"Little Surfer Girl\", \"score\" : 3.8856077194213867 }\n         { \"title\" : \"Fantastic 4: Rise of the Silver Surfer\", \"score\" : 2.489800453186035 }\n\n.. _text-ref-fuzzy-eg:\n\nFuzzy Examples \n~~~~~~~~~~~~~~\n\nThe following queries use the ``text`` operator to search the \n``title`` field in the ``movies`` collection for terms that are within \none character variation of each term in the ``query`` phrase ``naw \nyark``. |fts| returns different results depending on whether you use the \ndefault ``fuzzy`` options or define the ``maxExpansions``, ``prefixLength``, \nor ``maxEdits`` fields. \n\nClick the following tabs for example queries that use\ndefault and specified options:\n\n.. tabs::\n   \n   tabs:\n     - id: default\n       name: Default Example\n       content: |\n\n         .. example:: \n   \n            The following query searches the ``title`` field for the \n            phrase ``naw yark``. It uses the ``fuzzy`` default options \n            where: \n\n            - ``maxEdits`` allows up to two character variation of each \n              term in the given phrase to match the query to a document.\n            - ``maxExpansions`` considers up to fifty similar terms for \n              each term in ``naw yark`` to find matches.\n            - ``prefixLength`` is disabled. \n\n            The query also includes a :manual:`$limit \n            </reference/operator/aggregation/limit>` stage to limit the \n            output to 10 results and a :manual:`$project \n            </reference/operator/aggregation/project>` stage to: \n\n            - Exclude all fields except ``title``\n            - Add a field named ``score``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: json \n\n                  db.movies.aggregate([\n                    {\n                      $search: {\n                        \"text\": {\n                          \"path\": \"title\",\n                          \"query\": \"naw yark\",\n                          \"fuzzy\": {}  \n                        }\n                      }\n                    },\n                    {\n                      $limit: 10\n                    },\n                    {\n                      $project: {\n                        \"_id\": 0,\n                        \"title\": 1,\n                        score: { $meta: \"searchScore\" }\n                      }\n                    }\n                  ])\n\n               .. output:: \n                  :language: json \n                  :visible: false \n\n                  { \"title\" : \"New York, New York\", \"score\" : 3.6040148735046387 }\n                  { \"title\" : \"New York\", \"score\" : 3.323730945587158 }\n                  { \"title\" : \"New York Stories\", \"score\" : 2.8579015731811523 }\n                  { \"title\" : \"New York Minute\", \"score\" : 2.8579015731811523 }\n                  { \"title\" : \"Synecdoche, New York\", \"score\" : 2.8579015731811523 }\n                  { \"title\" : \"New York Doll\", \"score\" : 2.8579015731811523 }\n                  { \"title\" : \"Little New York\", \"score\" : 2.8579015731811523 }\n                  { \"title\" : \"Escape from New York\", \"score\" : 2.506596088409424 }\n                  { \"title\" : \"Naked in New York\", \"score\" : 2.506596088409424 }\n                  { \"title\" : \"Autumn in New York\", \"score\" : 2.506596088409424 }\n\n     - id: maxexpansions\n       name: maxExpansions Example\n       content: |\n\n         .. example:: \n   \n            The following query searches the ``title`` field for terms \n            that are within one character of each term in the string \n            ``naw yark``. It uses: \n\n            - The ``maxEdits`` field to indicate that only one \n              character variation is allowed for each term to match the \n              query to a document.\n            - The ``maxExpansions`` field to indicate that up to one \n              hundred similar terms for ``naw`` and one hundred similar \n              terms to ``yark`` must be considered when matching the \n              query to a document.\n\n            The query also includes a :manual:`$limit \n            </reference/operator/aggregation/limit>` stage to limit the \n            output to 10 results and a :manual:`$project \n            </reference/operator/aggregation/project>` stage to: \n\n            - Exclude all fields except ``title``\n            - Add a field named ``score``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: json \n\n                  db.movies.aggregate([\n                    {\n                      $search: {\n                        \"text\": {\n                          \"path\": \"title\",\n                          \"query\": \"naw yark\",\n                          \"fuzzy\": {\n                            \"maxEdits\": 1,\n                            \"maxExpansions\": 100,\n                          }  \n                        }\n                      }\n                    },\n                    {\n                      $limit: 10\n                    },\n                    {\n                      $project: {\n                        \"_id\": 0,\n                        \"title\": 1,\n                        score: { $meta: \"searchScore\" }\n                      }\n                    }\n                  ])\n\n               .. output::  \n                  :language: shell\n                  :visible: false \n\n                  { \"title\" : \"New York, New York\", \"score\" : 4.38106107711792 }\n                  { \"title\" : \"New York\", \"score\" : 4.040346145629883 }\n                  { \"title\" : \"New York Stories\", \"score\" : 3.4740817546844482 }\n                  { \"title\" : \"New York Minute\", \"score\" : 3.4740817546844482 }\n                  { \"title\" : \"Synecdoche, New York\", \"score\" : 3.4740817546844482 }\n                  { \"title\" : \"New York Doll\", \"score\" : 3.4740817546844482 }\n                  { \"title\" : \"Little New York\", \"score\" : 3.4740817546844482 }\n                  { \"title\" : \"Escape from New York\", \"score\" : 3.047032356262207 }\n                  { \"title\" : \"Naked in New York\", \"score\" : 3.047032356262207 }\n                  { \"title\" : \"Autumn in New York\", \"score\" : 3.047032356262207 }\n\n     - id: prefixlength\n       name: prefixLength Example\n       content: |\n\n         .. example:: \n\n            The following query searches the ``title`` field for terms \n            that are within one character of each term in the string \n            ``naw yark``. It uses: \n\n            - The ``maxEdits`` field to indicate that only one \n              character variation is allowed to match the query to a \n              document.\n            - The ``prefixLength`` field to indicate that the first two \n              characters of each term in the string ``naw yark`` may \n              not be changed to match the query to a document.\n\n            The query also includes a :manual:`$limit \n            </reference/operator/aggregation/limit>` stage to limit the \n            output to 8 results and a :manual:`$project \n            </reference/operator/aggregation/project>` stage to: \n\n            - Exclude all fields except ``_id`` and ``title``\n            - Add a field named ``score``\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: json \n\n                  db.movies.aggregate([\n                    {\n                      $search: {\n                        \"text\": {\n                          \"path\": \"title\",\n                          \"query\": \"naw yark\",\n                          \"fuzzy\": {\n                            \"maxEdits\": 1,\n                            \"prefixLength\": 2,\n                          }  \n                        }\n                      }\n                    },\n                    {\n                      $limit: 8\n                    },\n                    {\n                      $project: {\n                        \"_id\": 1,\n                        \"title\": 1,\n                        score: { $meta: \"searchScore\" }\n                      }\n                    }\n                  ])\n\n               .. output::  \n                  :language: shell\n                  :visible: false \n\n                  { \"_id\" : ObjectId(\"573a1396f29313caabce5646\", \"title\" : \"The Longest Yard\", \"score\" : 2.914206027984619 }\n                  { \"_id\" : ObjectId(\"573a13aff29313caabd31ed8\", \"title\" : \"The Longest Yard\", \"score\" : 2.914206027984619 }\n                  { \"_id\" : ObjectId(\"573a13b7f29313caabd4ad8b\", \"title\" : \"Stomp the Yard\", \"score\" : 2.914206027984619 }\n                  { \"_id\" : ObjectId(\"573a13eaf29313caabdcf410\", \"title\" : \"Naz & Maalik\", \"score\" : 2.5460386276245117 }\n                  { \"_id\" : ObjectId(\"573a1393f29313caabcddbed\", \"title\" : \"La nao capitana\", \"score\" : 2.1892051696777344 }\n                  { \"_id\" : ObjectId(\"573a1399f29313caabcee781\", \"title\" : \"Kabhi Haan Kabhi Naa\", \"score\" : 1.9200985431671143 }\n                  { \"_id\" : ObjectId(\"573a13a2f29313caabd0b815\", \"title\" : \"Kaho Naa... Pyaar Hai\", \"score\" : 1.9200985431671143 }\n                  { \"_id\" : ObjectId(\"573a13a7f29313caabd1b5c0\", \"title\" : \"Oysters at Nam Kee's\", \"score\" : 1.9200985431671143 }\n\n.. _text-ref-match-all-eg:\n\nMatch ``all``\n`````````````\n\nThe following query uses the ``text`` operator to search the ``plot``\nfield in the ``movies`` collection for all the terms in the query string \n``automobile race``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"plot\",\n              \"query\": \"automobile race\",\n              \"matchCriteria\": \"all\"\n            }\n          }\n        },\n        {\n          \"$limit\": 20\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"plot\": 1,\n            \"title\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: shell \n\n      [\n        {\n          plot: 'A young driver, Speed Racer, aspires to be champion of the racing world with the help of his family and his high-tech Mach 5 automobile.',\n          title: 'Speed Racer',\n          score: 6.122188568115234\n        },\n        {\n          plot: 'A gorgeous young automobile fanatic--and front to the hottest unsigned band on the West coast--finds herself caught up in illegal drag-racing competitions organized by exotic car fanatics.',\n          title: 'Redline',\n          score: 5.497724533081055\n        },\n        {\n          plot: 'When a popular daredevil proposes an automobile race across three continents, his arch rival vows to beat him, while an ambitious female reporter has her own plans for victory.',\n          title: 'The Great Race',\n          score: 5.282209396362305\n        }\n      ]\n\n|fts| returns documents that contain the terms ``automobile`` and\n``race`` anywhere in the ``plot`` field. \n\n.. _text-ref-synonyms-eg:\n\nSynonyms Examples \n~~~~~~~~~~~~~~~~~\n\nThe following examples use the ``text`` operator to search the \n``plot`` field in the ``sample_mflix.movies`` namespace. |fts| returns\nresults based on the :ref:`type of mapping <synonyms-ref>` in the\n:ref:`synonym source collection <synonyms-coll-spec>`,\n``synonymous_terms``, specified in the synonym mapping definition \nof the index for the ``sample_mflix.movies`` collection. \n\n.. _text-ref-synonyms-equivalent-maptype-eg:\n\nMatch ``any`` Using ``equivalent`` Mapping \n``````````````````````````````````````````\n\nThe following query searches the ``plot`` field for the phrase  \n``attire``. It uses the synonym mapping named ``mySynonyms`` in\nthe index for the collection to also search for words that are\nconfigured to be synonyms of the word ``dress``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"plot\",\n              \"query\": \"attire\",\n              \"synonyms\": \"my_synonyms\",\n              \"matchCriteria\": \"any\"\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"plot\": 1,\n            \"title\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n      :visible: false \n\n      [\n        {\n          plot: 'The Sanguiwon are responsible for the attire worn by royalty. Dol-Seok (Han Suk-Kyu) is the best master artisan in charge of royal attire. He views set rules as paramount to his job. ...',\n          title: 'The Royal Tailor',\n          score: 15.825017929077148\n        },\n        {\n          plot: \"During Christmas' holidays, the children of a village split in two gang to play a snowball war. But that half-tone war scattered some bitterness and make more difficult the mutual attirance...\",\n          title: 'La guerre des tuques',\n          score: 11.863945007324219\n        },\n        {\n          plot: 'The Dress is a tale filled with sex, violence, comedy and drama as it follows the life of a dress. Conceived under a cloud of frustration and despair, the dress serves as the hub in a great...',\n          title: 'The Dress',\n          score: 5.061710834503174\n        },\n        {\n          plot: \"Boardroom and dressing-room intrigues spill on to the field at the Australian Rules football club.\",\n          title: 'The Club',\n          score: 3.991994857788086\n        },\n        {\n          plot: 'Deserting soldier dresses as a woman to escape detection; liking the female role he goes to a dance with another soldier and is exposed.',\n          title: 'The Triple Echo',\n          score: 3.5169785022735596\n        }\n      ]\n\n|fts| returns the documents that contain the terms  ``attire``,\n``apparel``, and ``dress`` because we configured all these terms to be\n``equivalent`` synonym in the synonyms source collection, \n``synonymous_terms``, which mean all these terms are synonyms of one\nanother. Therefore, |fts| returns similar documents for searches on\n``dress`` and ``attire``.  \n\n.. _text-ref-synonyms-explicit-maptype-eg:\n\nMatch ``any`` Using ``explicit`` Mapping\n````````````````````````````````````````\n\nThe following query searches the ``plot`` field for the phrase ``boat\nrace``. It uses the synonym mapping named ``my_synonyms`` in the index \nfor the collection to also search for words that are configured to be \nsynonyms of the word ``boat`` and ``race``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"plot\",\n              \"query\": \"boat race\",\n              \"synonyms\": \"my_synonyms\",\n              \"matchCriteria\": \"any\"\n            }\n          }\n        },\n        {\n          \"$limit\": 10\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"plot\": 1,\n            \"title\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n      :visible: false \n\n      [\n        {\n          plot: 'A man is picked up by a fishing boat, bullet-riddled and suffering from amnesia, before racing to elude assassins and regain his memory.',\n          title: 'The Bourne Identity',\n          score: 15.405073165893555\n        },\n        {\n          plot: 'A few friends builds a sailing boat together. They plan trips and during the completion of the boat marriages crumble, new relations blossom and the boat burns. They rebuild it and the ...',\n          title: 's/y Glèdjen',\n          score: 13.40434741973877\n        },\n        {\n          plot: 'Famous motor-racing champion Joe Greer returns to his hometown to compete in a local race. He discovers his younger brother has aspirations to become a racing champion and during the race ...',\n          title: 'The Crowd Roars',\n          score: 10.466073036193848\n        },\n       {\n          plot: 'The claustrophobic world of a WWII German U-boat; boredom, filth, and sheer terror.',\n          title: 'Das Boot',\n          score: 10.304922103881836\n        },\n        {\n          plot: 'Several survivors of a torpedoed ship find themselves in the same boat with one of the men who sunk it.',\n          title: 'Lifeboat',\n          score: 9.776729583740234\n        },\n        {\n          plot: 'A fishing-boat crew takes on a dangerous commission to smuggle a group of illegal immigrants from China to Korea.',\n          title: 'Haemoo',\n          score: 9.532430648803711\n        },\n        {\n          plot: 'A land baron tries to reconnect with his two daughters after his wife is seriously injured in a boating accident.',\n          title: 'The Descendants',\n          score: 9.300044059753418\n        },\n       {\n          plot: 'A weekend boating party turns into a nightmare for a group of young Londoners when they stumble upon a terrifying secret hidden in the reeds.',\n          title: 'The Reeds',\n          score: 9.078716278076172\n        },\n        {\n          plot: 'Documentary telling the true story of the sinking of the liner Laconia by a German U-boat in 1942 through the eyes of six survivors.',\n          title: 'The Sinking of the Laconia',\n          score: 9.078716278076172\n        },\n        {\n          plot: 'Sabotage efforts damage an international air race.',\n          title: 'Those Magnificent Men in Their Flying Machines or How I Flew from London to Paris in 25 hours 11 minutes',\n          score: 8.983794212341309\n        }\n      ]\n\n|fts| returns documents that contain the term ``boat``, ``vessel,`` or\n``sail``, or ``race``, ``rally``, or ``contest`` because we configured\n``boat`` to be an ``explicit`` synonym or ``vessel`` and ``sail`` and we\nconfigured ``race`` to be an ``explicit`` synonym of ``rally`` and\n``contest``. |fts| doesn't return any results for a query on ``vessel``\nand ``sail`` or ``rally`` and ``contest`` because we didn't configure\nthese words to consider any of the other words as synonyms.   \n\n.. _text-ref-synonyms-match-all-eg:\n\nMatch ``all`` Using Synonyms \n````````````````````````````\n\nThe following query uses the ``text`` operator to search the ``plot``\nfield in the ``movies`` collection for all terms in the query string\n``automobile race``. \n\n|fts| returns results based on the :ref:`type of\nmapping <synonyms-ref>` in the :ref:`synonym source collection\n<synonyms-coll-spec>`, ``synonymous_terms``, specified in the synonym\nmapping definition of the index for the ``sample_mflix.movies``\ncollection.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"path\": \"plot\",\n              \"query\": \"automobile race\",\n              \"matchCriteria\": \"all\",\n              \"synonyms\": \"my_synonyms\"\n            }\n          }\n        },\n        {\n          \"$limit\": 20\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"plot\": 1,\n            \"title\": 1,\n            \"score\": { \"$meta\": \"searchScore\" }\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json \n      :visible: false\n\n      [\n        {\n          plot: 'A young driver, Speed Racer, aspires to be champion of the racing world with the help of his family and his high-tech Mach 5 automobile.',\n          title: 'Speed Racer',\n          score: 17.354578018188477\n        },\n        {\n          plot: 'A gorgeous young automobile fanatic--and front to the hottest unsigned band on the West coast--finds herself caught up in illegal drag-racing competitions organized by exotic car fanatics.',\n          title: 'Redline',\n          score: 16.085742950439453\n        },\n        {\n          plot: 'When a popular daredevil proposes an automobile race across three continents, his arch rival vows to beat him, while an ambitious female reporter has her own plans for victory.',\n          title: 'The Great Race',\n          score: 15.087226867675781\n        },\n        {\n          plot: 'A race car driver becomes a champion with a Volkswagen Beetle with a mind of its own.',\n          title: 'The Love Bug',\n          score: 5.1777167320251465\n        },\n        {\n          plot: 'A wide variety of eccentric competitors participate in a wild and illegal cross-country car race.',\n          title: 'The Cannonball Run',\n          score: 5.041530609130859\n        },\n        {\n          plot: 'The original characters from the first Cannonball movie race across the country once more in various cars and trucks.',\n          title: 'Cannonball Run II',\n          score: 4.67281436920166\n        },\n        {\n          plot: 'After a tied 1st place in a local stunt race, two drivers start a contest to decide who of them will own the prize, a dune buggy. But when a mobster destroys the car, they are determined to get it back.',\n          title: \"Watch Out, We're Mad\",\n          score: 4.500225067138672\n        },\n        {\n          plot: 'Four teenagers are killed in a car accident. Two of the teenagers refuse to go with \"The Grim Reaper\" and a race between life and death ensues!',\n          title: 'Soultaker',\n         score: 4.455573081970215\n        },\n        {\n          plot: \"The driver races to locate a kidnapped victim locked in the trunk of an abandoned car somewhere on the water's edge. Linked to her only by cell phone, the driver narrows in on her location in a desperate race against time and tide.\",\n          title: 'Hostage',\n          score: 4.429774284362793\n        },\n        {\n          plot: 'Race car driver Lucky Jackson goes to Las Vegas to earn money to pay for a new engine for his motor car. Working as a waiter, he still finds the time to court young Rusty Martin.',\n          title: 'Viva Las Vegas',\n          score: 4.379656791687012\n        },\n        {\n          plot: 'Barry Pepper portrays legendary race car drive Dale Earnhardt, who died in 2001 during the last lap of the Daytona 500.',\n          title: '3: The Dale Earnhardt Story',\n          score: 4.3543548583984375\n        },\n        {\n          plot: 'Bounty hunters from the future transport a doomed race-car driver to 2009 New York, where his mind will be replaced with that of a dead billionaire.',\n          title: 'Freejack',\n          score: 4.257633209228516\n        },\n        {\n          plot: 'A mechanic takes his family to a car race and a series of events occur which brings problems, betrayals, violence and the unexpected death of an elderly person.',\n          title: 'National Mechanics',\n          score: 4.257633209228516\n        },\n        {\n          plot: 'A hot-shot race-car named Lightning McQueen gets waylaid in Radiator Springs, where he finds the true meaning of friendship and family.',\n          title: 'Cars',\n          score: 4.257633209228516\n        },\n       {\n          plot: 'Star race car Lightning McQueen and his pal Mater head overseas to compete in the World Grand Prix race. But the road to the championship becomes rocky as Mater gets caught up in an intriguing adventure of his own: international espionage.',\n          title: 'Cars 2',\n          score: 4.231379985809326\n        },\n        {\n          plot: \"An illegal race that takes place over the United States and nothing will stop this bunch of racers except for the occasional cop or a damsel in distress. Jackie Chan's car is not in this ...\",\n          title: 'Cannonball Fever',\n          score: 4.1651153564453125\n        },\n        {\n          plot: 'Roy is mad about cars, and runs Stallion Parts while attending to his yellow Mustang, far away from his daughter, which comes on holiday, while he is to attend a race. Soon he is challenged in a illegal race through the length of Norway.',\n          title: 'Bèrning',\n          score: 4.050384521484375\n        },\n        {\n          plot: \"It's time for the annual London to Brighton antique car rally, and Alan McKim and Ambrose Claverhouse are not going to let their friendship stop them from trying to humiliate each other. ...\",\n          title: 'Genevieve',\n          score: 3.9916391372680664\n        },\n        {\n          plot: \"After a young man's premonition of a deadly race-car crash helps saves the lives of his peers, Death sets out to collect those who evaded their end.\",\n          title: 'The Final Destination',\n          score: 3.9916391372680664\n        },\n        {\n          plot: \"A fast-paced comedy about a young Belgian car nut and hairdresser's apprentice, his girlfriend, and their legal and illegal attempts to get a Porsche under him for his nearing debut race.\",\n          title: 'The Departure',\n          score: 3.832036256790161\n        }\n      ]\n\n|fts| returns documents that contain the query terms ``automobile``,\n``car``, or ``vehicle`` and ``race``, ``context``, or ``rally`` because\nwe configured ``automobile``, ``vehicle``, and ``car`` to be\n``equivalent`` synonyms and we configured ``rally`` and ``contest`` to\nbe ``explicit`` synonyms of ``race`` in the ``synonymous_terms``\ncollection.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/text.txt"
  },
  {
    "code": "   :emphasize-lines: 7-9 \n\n   {\n     $search: {  \n       \"index\": \"<index name>\", \n       \"<operator>\": { \n         <operator-specification>\n       },\n       \"tracking\": { \n         \"searchTerms\": \"<term-to-search>\"\n       }\n     }\n   }\n\n.. _fts-tracking-options:\n\nOptions \n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 25 10 55 10\n\n   * - Field\n     - Type\n     - Description\n     - Necessity\n\n   * - ``searchTerms``\n     - string\n     - Text or term associated with the query to track. You can specify\n       only one term per query.\n     - Required\n\n.. _fts-tracking-behavior:\n\nBehavior\n--------\n\nFor each |fts| index on your |service| cluster, |service| collects the\nfollowing metrics for the tracked search terms that were run using that\nindex: \n\n- Number of |fts| queries for the tracked terms.\n- Number of times |fts| didn't return any results for queries for the\n  tracked terms. \n\n|service| counts the number of queries per day for tracked search terms.\n|service| has a limit on the number of search terms that it captures per\n{+cluster+} each day from tracked :pipeline:`$search` queries. Once\n|service| reaches the limit, it doesn't capture new, unique search\nterms. However, if you run queries for previously tracked terms for the\nday after |service| reaches the limit and stops capturing, |service|\ncontinues to increment the counter for those terms regardless of the\nlimit for the day.  \n\n|service| resets the terms that are tracked, the count for the terms\nthat are tracked, and the limit on the number of tracked search terms at\nthe beginning of each day in :abbr:`UTC (Coordinated Universal Time)`.\n\n.. example:: \n\n   This example demonstrates how |service| counts the terms that are\n   tracked. Suppose you run queries for the term ``summer`` on:\n   \n   - Day 1 before |service| reaches the limit on the number of tracked\n     search terms for that day. Then on Day 1, |service| counts the\n     number of queries for ``summer`` and  metrics are available for\n     ``summer`` if ``summer`` is one of the top search terms on that day.\n   - Day 2 before and after |service| reaches the limit on the number of\n     tracked search terms for that day. Then on Day 2, |service| counts\n     the number of queries for ``summer`` before and after it reaches\n     the limit for the number of tracked search terms and metrics are\n     available for ``summer`` if ``summer`` is one of the top search\n     terms on that day. \n   - Day 3 after |service| reaches the limit on the number of tracked\n     search terms for that day. Then on Day 3, |service| doesn't count\n     the query for term ``summer`` and metrics aren't available for\n     ``summer`` on that day. \n\n|fts| doesn't use the term that you specify with the ``tracking`` option\nto process the query. Also, the search term that you specify with the\n``tracking`` option doesn't have any effect on the results that |fts|\nreturns for the query. \n\n.. _fts-tracking-output:\n\nOutput \n------\n\nYou can view metrics for the queries tracked using the ``tracking``\noption in the {+atlas-ui+} :guilabel:`Query Analytics` page for an\n|fts| index. To learn more, see :ref:`fts-query-analytics-page-nav`. \n\nThe :guilabel:`Query Analytics` page displays the following metrics \nfor a predefined date range such as the current day, last 7 days, last \n30 days, or last 90 days, or a custom range (in :abbr:`UTC (Coordinated\nUniversal Time)`) that you specify, with a per day granularity: \n\n- :ref:`fts-query-analytics-all-tracked-queries`\n- :ref:`fts-query-analytics-no-results-queries`\n\nTo learn more, see :ref:`fts-query-analytics`.\n\n.. _fts-tracking-egs:\n\nExamples \n--------\n\nThe following query against the ``sample_mflix.movies`` collection\nsearches the ``title`` field for the term ``summer``. The query uses the\n``tracking`` option (highlighted) to enable |fts| to capture analytics\ninformation for the query term ``summer``. If you have the sample data\non your cluster and an |fts| index named ``default`` on the ``title``\nfield in the collection, you can run the following query against the \n``sample_mflix.movies`` collection on your cluster. To learn more about\nloading the sample data and creating an |fts| index, see\n:ref:`fts-tutorial-ref` tutorial.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tracking.txt"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: json \n      :emphasize-lines: 8-10\n\n      db.movies.aggregate([\n        {\n          \"$search\": {\n            \"text\": {\n              \"query\": \"summer\",\n              \"path\": \"title\"\n            },\n            \"tracking\": {\n              \"searchTerms\": \"summer\"\n            }\n          }\n        },\n        {\n          \"$limit\": 5\n        },\n        {\n          \"$project\": {\n            \"_id\": 0,\n            \"title\": 1\n          }\n        }\n      ])\n\n   .. output:: \n      :language: json\n\n      [\n        { title: 'Summer' },\n        { title: 'Summer Stock' },\n        { title: 'Early Summer' },\n        { title: 'Summer Interlude' },\n        { title: 'Violent Summer' }\n      ]\n\nIf you run this query, you can view metrics for it in the\n:guilabel:`Query Analytics` page for the index if |service| collected\ndata for the tracked search term. To learn more, see\n:ref:`fts-query-analytics`. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tracking.txt"
  },
  {
    "code": "   :copyable: false \n\n   MongoError: Remote error from mongot :: caused by :: Error connecting to localhost:28000.\n\nThe ``mongot`` process is installed only when the first |fts| index is \ndefined. If you don't have any |fts| index in your |service| cluster, \ncreate at least one |fts| index to resolve this error. \n\n.. seealso:: \n\n   - :ref:`ref-index-definitions`\n   - :ref:`ref-create-index`\n   \n.. _troubleshoot-empty-results:\n\nEmpty Result Set \n----------------\n\n``mongot`` doesn't return any errors, but returns an empty result set if\nyour :pipeline:`$search` query:\n\n- References an index that doesn't exist. If you don't specify an index\n  by name in the query, |fts| defaults to an index named ``default``. If\n  you don't have an index named ``default`` or if the index that you\n  specified doesn't exist, |fts| doesn't return an error and returns an\n  empty result set. You can specify a valid index by its name using the\n  ``index`` option. To learn more, see |fts| :ref:`aggregation pipeline\n  stage options <query-syntax-ref>`.\n- Specifies a non-indexed field. If you run a query against a field that\n  isn't indexed, |fts| doesn't return an error and returns an empty\n  result set. You must specify only indexed fields as values for the \n  ``path`` parameter. You can enable :ref:`dynamic mapping\n  <static-dynamic-mappings>` in your index definition for the collection\n  to ensure that all the :ref:`dynamically indexable fields\n  <bson-data-chart>` in the collection are automatically indexed. To\n  learn more, see :ref:`dynamic mapping <static-dynamic-mappings>`.\n- Uses the ``text`` operator on a field path which is not indexed as a \n  ``string`` type. If a field is indexed as an |fts| field type other than \n  ``string``, such as ``stringFacet`` or ``autocomplete``, |fts| doesn't \n  return an error and returns an empty result set. You *must* index the \n  fields with ``string`` |bson| data type values as \n  :ref:`string <bson-data-types-string>` type to query the fields using \n  the :ref:`text <text-ref>` operator.\n\n``PlanExecutor`` Error\n----------------------\n\n``mongot`` returns a ``PlanExecutor`` error if your :pipeline:`$search` query:\n\n- Specifies a field that is indexed as an incorrect data type. In this\n  case, if you run a query, |fts| returns an error message identifying the \n  field that was indexed incorrectly and its correct data type. For \n  example:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/troubleshooting-search.txt"
  },
  {
    "code": "     :copyable: false\n\n     PlanExecutor error during aggregation :: caused by :: Cannot facet on field \"genres\" because \n     it was not indexed as a \"stringFacet\" field.\n\n  For example, to run :ref:`fts-facet-ref` queries\n  against ``string``, ``number``, or ``date`` fields, create an index\n  for the fields using the corresponding |fts| field type such as\n  ``stringFacet``, ``numberFacet``, and ``dateFacet`` respectively. To \n  learn more, see :ref:`Supported and Unsupported Data Types <bson-data-chart>`. \n\n``Failed to Execute search Command`` Error \n------------------------------------------\n\nIf you deployed ``mongot`` to run alongside ``mongod`` (i.e. didn't\nconfigure :ref:`configure-search-nodes`), ``mongot`` might return this\nerror if the ``mongot`` process terminates, such as during any of the\nfollowing events:  \n\n- {+Cluster+} upscale\n- Node failover\n- ``mongot`` upgrade\n\nIf you deployed ``mongot`` on a dedicated search node, ``mongod`` uses a\nproxy that is aware of each search node and therefore, ``mongod`` routes\nsearch queries to only healthy nodes where the ``mongot`` is active.  \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/troubleshooting-search.txt"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: /includes/fts-tutorial/sequential-pagination/point-of-ref-query-mongosh.json \n      :language: json\n\n   .. output:: /includes/fts-tutorial/sequential-pagination/point-of-ref-mongosh-query-results.json\n      :language: json\n      :visible: false\n\n.. _sequential-pagination-tutorial-after-query:\n\nRetrieve Page 2 Using ``searchAfter``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo retrieve additional results, you specify the point of reference after\nwhich you want to retrieve the results. This query demonstrates how to\nretrieve results to build a function like \"Next Page\" in your\napplication. \n\n.. include:: /includes/extracts/fts-sequential-pagination-search-after-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/divide-results-tutorial.txt"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: /includes/fts-tutorial/sequential-pagination/search-after-query-mongosh.json \n      :language: json\n\n   .. output:: /includes/fts-tutorial/sequential-pagination/search-after-mongosh-query-results.json \n      :language: json\n      :visible: false\n\n.. _sequential-pagination-tutorial-before-query:\n\nReturn to Page 1 Using ``searchBefore``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo retrieve previous results, you specify the point of reference before\nwhich you want to retrieve the results. This query demonstrates how to\nretrieve results to build a function like \"Previous Page\" in your \napplication. \n\n.. include:: /includes/extracts/fts-sequential-pagination-search-before-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/divide-results-tutorial.txt"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: /includes/fts-tutorial/sequential-pagination/search-before-query-mongosh.json\n      :language: json\n\n   .. output:: /includes/fts-tutorial/sequential-pagination/search-before-mongosh-query-results.json\n      :language: json\n      :visible: false \n\n.. _sequential-pagination-tutorial-skip-query:\n\nJump from Page 2 to Page 5 Using ``searchAfter`` and ``$skip``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo skip results and jump from page 2 to 5, you use the token generated by\n``searchSequenceToken`` to specify the point of reference after which you\nwant to retrieve the results and then skip twenty documents in the\nresults. This query demonstrates how to retrieve results to build a\nfunction in your application that allows skipping pages.\n\n.. include:: /includes/extracts/fts-sequential-pagination-skip-results-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/divide-results-tutorial.txt"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: /includes/fts-tutorial/sequential-pagination/skip-results-query-mongosh.json \n      :language: json\n\n   .. output:: /includes/fts-tutorial/sequential-pagination/skip-results-mongosh-query-results.json \n      :language: json\n      :visible: false\n\n.. _sequential-pagination-tutorial-facet-query:\n\nUse Facet with the Paginated Results  \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis section demonstrates how ``searchSequenceToken`` can be used with Atlas Search facets.\n\n.. include:: /includes/extracts/fts-sequential-pagination-facet-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/divide-results-tutorial.txt"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: /includes/fts-tutorial/sequential-pagination/facet-query-mongosh.json \n      :language: json\n\n   .. output:: /includes/fts-tutorial/sequential-pagination/facet-mongosh-query-results.json \n      :language: json\n      :visible: false\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/divide-results-tutorial.txt"
  },
  {
    "code": "                  :linenos: \n\n                  {\n                    \"mappings\": {\n                      \"dynamic\": true,\n                      \"fields\": {\n                        \"clubs\": {\n                          \"dynamic\": true,\n                          \"fields\": {\n                            \"sports\": {\n                              \"dynamic\": true,\n                              \"type\": \"embeddedDocuments\"\n                            }\n                          },\n                          \"type\": \"document\"\n                        },\n                        \"teachers\": [\n                          {\n                            \"dynamic\": true,\n                            \"fields\": {\n                              \"classes\": {\n                                \"dynamic\": true,\n                                \"type\": \"embeddedDocuments\"\n                              }\n                            },\n                            \"type\": \"embeddedDocuments\"\n                          },\n                          {\n                            \"dynamic\": true,\n                            \"fields\": {\n                              \"classes\": {\n                                \"dynamic\": true,\n                                \"fields\": {\n                                  \"grade\": {\n                                    \"type\": \"stringFacet\"\n                                  }\n                                },\n                                \"type\": \"document\"\n                              }\n                            },\n                            \"type\": \"document\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n\n            #. Click :guilabel:`Next`.\n            \n   .. step:: Click :guilabel:`Create Search Index`.\n\n      |service| displays a modal window to let you know your index is\n      building.  \n\n   .. step:: Click the :guilabel:`Close` button and wait for the index to finish building. \n\n      The index should take about one minute to build. While it is \n      building, the :guilabel:`Status` column reads ``Build in\n      Progress``. When it is finished building, the :guilabel:`Status`\n      column reads ``Active``. \n\nRun ``$search`` Queries Against Embedded Document Fields \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can run queries against the embedded document fields. This \ntutorial uses :ref:`embedded-document-ref` and :ref:`text-ref` \noperators inside the :ref:`compound-ref` operator in the queries. \n\nIn this section, you will connect to your |service| {+cluster+} and run \nthe sample queries using the operators against the fields in the \n``schools`` collection. \n\n.. tabs-selector:: drivers\n\n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu on this page to \nset the language of the examples in this section.\n\n----------\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. include:: /includes/steps-fts-embedded-document-query-atlas-ui.txt\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/steps-fts-embedded-document-query-mongosh.txt \n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/steps-fts-embedded-document-query-compass.txt\n\n   .. tab::\n      :tabid: csharp\n\n      .. include:: /includes/steps-fts-embedded-document-query-csharp.txt\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/steps-fts-embedded-document-query-go.txt\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/steps-fts-embedded-document-query-java.txt\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/steps-fts-embedded-document-query-kotlin.txt\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/steps-fts-embedded-document-query-nodejs.txt\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/steps-fts-embedded-document-query-python.txt\n\nRun ``$searchMeta`` Query Against Embedded Document Fields\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can run :pipeline:`$searchMeta` queries against the embedded\ndocument fields. In this section, you will connect to your |service|\n{+cluster+} and run a sample query using the ``$searchMeta`` stage and\nfacet on an embedded document field. \n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-atlas-ui.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-mongosh.rst \n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-compass.rst\n\n   .. tab::\n      :tabid: csharp\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-nodejs.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/steps-fts-embedded-document-facet-query-python.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/embedded-documents-tutorial.txt"
  },
  {
    "code": "            :copyable: true \n\n            .. input:: \n               :language: sh\n\n               show dbs \n\n            .. output:: \n               :language: sh\n               :emphasize-lines: 1\n\n               sample_airbnb       55.3 MB\n               sample_analytics    9.59 MB\n               sample_geospatial   1.43 MB\n               sample_guides         41 kB\n               sample_mflix        51.1 MB\n               sample_restaurants  6.95 MB\n               sample_supplies     1.21 MB\n               sample_training     55.5 MB\n               sample_weatherdata  2.89 MB\n               admin                348 kB\n               local                2.1 GB\n\n      #. Run the following command to switch to the ``sample_airbnb`` \n         database.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/query-date-number-fields.txt"
  },
  {
    "code": "            :copyable: true \n\n            .. input:: \n               :language: sh\n\n               use sample_airbnb \n\n            .. output:: \n               :language: sh\n               :emphasize-lines: 1 \n\n               switched to db sample_airbnb\n\n   .. step:: Create a materialized view named ``airbnb_mat_view``.\n\n      To create a materialized view, run the following query. The query \n      specifies the following aggregation pipeline stages:\n\n      - :pipeline:`$project`: In this stage, the query does the \n        following:\n\n        - Converts the ``last_scraped`` date object to a string in the \n          format ``YYYY-MM-DD`` using :expression:`$dateToString`.\n        - Includes ``name`` and ``property_type`` string fields.\n        - Converts ``accomodates`` number field to a string using \n          :expression:`$toString`.\n        - Converts ``maximum_nights`` number field to a string using \n          :expression:`$toString`.\n\n      - :pipeline:`$merge`: In this stage, the query writes the output \n        fields from the :pipeline:`$project` stage to a  materialized \n        view named ``airbnb_mat_view``.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/query-date-number-fields.txt"
  },
  {
    "code": "           :copyable: true \n\n           db.listingsAndReviews.aggregate( [\n             {\n               $project: {\n                 lastScrapedDate: { $dateToString: { format: \"%Y-%m-%d\", date: \"$last_scraped\" } },\n                 propertyName: \"$name\",\n                 propertyType: \"$property_type\",\n                 accommodatesNumber: { $toString: \"$accommodates\" },\n                 maximumNumberOfNights: { $toString: \"$maximum_nights\" }\n               }\n             },\n             { $merge: { into: \"airbnb_mat_view\", whenMatched: \"replace\" } }\n           ] )\n\n   .. step:: Verify that the materialized view was successfully created. \n\n      To verify, run the following command:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/query-date-number-fields.txt"
  },
  {
    "code": "            :copyable: true \n\n            .. input:: \n               :language: sh\n\n               db.airbnb_mat_view.findOne() \n\n            .. output:: \n               :language: json\n               :emphasize-lines: 1 \n\n               {\n                 _id: '10006546',\n                 lastScrapedDate: '2019-02-16',\n                 propertyName: 'Ribeira Charming Duplex',\n                 propertyType: 'House',\n                 accommodatesNumber: '8',\n                 maximumNumberOfNights: '30'\n               }\n\n.. _query-nonstring-create-index:\n\nCreate |fts| Indexes on Fields in the Materialized View \n-------------------------------------------------------\n\nIn this section, you will create |fts| indexes on the \n``lastScrapedDate``, ``name``, ``propertyType``, \n``accommodatesNumber``, and ``maximumNumberOfNights`` fields for \nrunning queries against these fields. \n\n.. procedure:: \n   :style: normal\n\n   .. include:: /includes/nav/steps-db-deployments-page.rst\n\n   .. include:: /includes/nav/steps-atlas-search.rst\n\n   .. step:: Click :guilabel:`Create Search Index`.\n\n   .. step:: Select a :guilabel:`Configuration Method` and click :guilabel:`Next`.\n\n      - For a guided experience, select :guilabel:`Visual Editor`.\n      - To edit the raw index definition, select \n        :guilabel:`JSON Editor`.\n\n   .. step:: Enter the :guilabel:`Index Name`, and set the :guilabel:`Database and Collection`.\n\n      a. In the :guilabel:`Index Name` field, enter ``date-number-fields-tutorial``.\n\n         .. include:: /includes/default-fts-index-name.rst \n\n      #. In the :guilabel:`Database and Collection` section, find the \n         ``sample_airbnb`` database, and select the ``airbnb_mat_view`` \n         collection.\n\n   .. step:: Define an index on the fields in the materialized view.\n\n      You can create one of the following indexes:\n  \n      - Index that uses dynamic mappings for running queries using the \n        :ref:`querystring-ref` operator. You can't run queries using \n        the :ref:`autocomplete-ref` operator if your index definition \n        uses only dynamic mappings.\n      - Index that uses static mappings for running queries using \n        :ref:`autocomplete-ref` operator. You can't run queries using \n        the :ref:`querystring-ref` operator against fields indexed as \n        type ``autocomplete``.\n\n      .. tabs:: \n\n         .. tab:: Dynamic Mappings\n            :tabid: dynamic\n\n            You can use the :guilabel:`Visual Editor` or the \n            :guilabel:`JSON Editor` in the |service| user interface to \n            create the index. \n\n            .. tabs:: \n  \n               .. tab:: Visual Editor\n                  :tabid: vib\n  \n                  a. Click :guilabel:`Next`.\n                  #. Click :guilabel:`Create Search Index`.\n\n               .. tab:: JSON Editor \n                  :tabid: jsoneditor\n\n                  a. Review the index definition. \n          \n                     Your index definition should look similar to the \n                     following: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/tutorial/query-date-number-fields.txt"
  },
  {
    "code": "   :linenos:\n\n   {\n     \"mappings\": {\n       \"fields\": {\n         \"title\": {\n           \"analyzer\": \"lucene.keyword\",\n           \"type\": \"string\"\n         }\n       }\n     }\n   }\n\nThe following example searches all ``title`` fields for movie titles\nthat begin with ``Green D``, followed by any number of other\ncharacters.\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/wildcard/single-char-compass.rst\n\n   .. tab::\n      :tabid: csharp\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: python\n         :dedent:\n\nThe above query returns the following results:\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         SCORE: 1  _id:  \"573a1393f29313caabcddaf5\"\n           plot: \"Sophie loved Edmund, but he left town when her parents forced her to m…\"\n           genres: Array\n           runtime: 141\n\n         SCORE: 1  _id:  \"573a13a2f29313caabd0a4e4\"\n           plot: \"The story of some Vietnamese refugees as they first arrive at Camp Pen…\"\n           genres: Array\n           runtime: 115\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Green Dolphin Street\" }\n         { \"title\" : \"Green Dragon\" }\n\n   .. tab::\n      :tabid: compass\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Green Dolphin Street\" }\n         { \"title\" : \"Green Dragon\" }\n\n   .. tab::\n      :tabid: csharp\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Green Dolphin Street\" }\n         { \"title\" : \"Green Dragon\" }\n\n   .. tab:: \n      :tabid: go\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         [{title Green Dolphin Street}]\n         [{title Green Dragon}]\n\n   .. tab:: \n      :tabid: java-sync \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\"title\": \"Green Dolphin Street\"}\n         {\"title\": \"Green Dragon\"}\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         Document{{title=Green Dolphin Street}}\n         Document{{title=Green Dragon}}\n\n   .. tab::\n      :tabid: nodejs\n      \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { title: 'Green Dolphin Street' }\n         { title: 'Green Dragon' }\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         {'title': 'Green Dolphin Street'}\n         {'title': 'Green Dragon'}\n\nThe following example searches all ``title`` fields for movie titles\nthat begin with the string ``Wom?n`` (where ``?`` may be any single\ncharacter), followed by a space and then any number of additional\ncharacters.\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n      .. include:: /includes/fts-tutorial/wildcard/multiple-char-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: python\n         :dedent:\n\nThe above query returns the following results:\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         SCORE: 1  _id:  \"573a1393f29313caabcdcbdd\"\n           plot: \"Rival reporters Sam and Tess fall in love and get married, only to fin…\"\n           genres: Array\n           runtime: 114\n\n         SCORE: 1  _id:  \"573a1394f29313caabce08c6\"\n           plot: \"A married, middle-aged woman is shocked to discover that her husband, …\"\n           genres: Array\n           runtime: 93\n\n         SCORE: 1  _id:  \"573a1395f29313caabce254c\"\n           plot: \"An entomologist searching for insects by the seaside is trapped by loc…\"\n           genres: Array\n           runtime: 123\n\n         SCORE: 1  _id:  \"573a1396f29313caabce42e5\"\n           plot: \"The battle of the sexes and relationships among the elite of Britian's…\"\n           genres: Array\n           runtime: 131\n\n         SCORE: 1  _id:  \"573a1398f29313caabceb06d\"\n           fullplot: \"A woman's lover leaves her, and she tries to contact him to find out w…\"\n           imdb: Object\n           year: 1988\n\n         SCORE: 1  _id:  \"573a139df29313caabcf9c83\"\n           plot: \"A new woman comes between a widower and his adult son.\"\n           genres: Array\n           runtime: 110\n\n         SCORE: 1  _id:  \"573a13a0f29313caabd050bf\"\n           fullplot: \"Isabella is a great cook, making her husband's restaurant in Bahia, Br…\"\n           imdb: Object\n           year: 2000\n\n         SCORE: 1  _id:  \"573a13aaf29313caabd22c05\"\n           countries: Array\n           genres: Array\n           runtime: 115\n\n         SCORE: 1  _id:  \"573a13aef29313caabd2d899\"\n           countries: Array\n           genres: Array\n           runtime: 72\n\n         SCORE: 1  _id:  \"573a13aff29313caabd32566\"\n           fullplot: \"An adaptation of Bishop T.D. Jakes' self-help novel, chronciling a wom…\"\n           imdb: Object\n           year: 2004\n         \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Woman of the Year\" }\n         { \"title\" : \"Woman in a Dressing Gown\" }\n         { \"title\" : \"Woman in the Dunes\" }\n         { \"title\" : \"Women in Love\" }\n         { \"title\" : \"Women on the Verge of a Nervous Breakdown\" }\n\n   .. tab::\n      :tabid: compass\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Woman of the Year\" }\n         { \"title\" : \"Woman in a Dressing Gown\" }\n         { \"title\" : \"Woman in the Dunes\" }\n         { \"title\" : \"Women in Love\" }\n         { \"title\" : \"Women on the Verge of a Nervous Breakdown\" }\n\n   .. tab::\n      :tabid: csharp\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Woman of the Year\" }\n         { \"title\" : \"Woman in a Dressing Gown\" }\n         { \"title\" : \"Woman in the Dunes\" }\n         { \"title\" : \"Women in Love\" }\n         { \"title\" : \"Women on the Verge of a Nervous Breakdown\" }\n\n   .. tab:: \n      :tabid: go\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         [{title Woman of the Year}]\n         [{title Woman in a Dressing Gown}]\n         [{title Woman in the Dunes}]\n         [{title Women in Love}]\n         [{title Women on the Verge of a Nervous Breakdown}]\n\n   .. tab:: \n      :tabid: java-sync \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\"title\": \"Woman of the Year\"}\n         {\"title\": \"Woman in a Dressing Gown\"}\n         {\"title\": \"Woman in the Dunes\"}\n         {\"title\": \"Women in Love\"}\n         {\"title\": \"Women on the Verge of a Nervous Breakdown\"}\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         Document{{title=Woman in the Meadow}}\n         Document{{title=Woman on the Beach}}\n         Document{{title=Woman in Love}}\n         Document{{title=Woman of the Year}}\n         Document{{title=Woman in a Dressing Gown}}\n\n   .. tab::\n      :tabid: nodejs\n      \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { title: 'Woman of the Year' }\n         { title: 'Woman in a Dressing Gown' }\n         { title: 'Woman in the Dunes' }\n         { title: 'Women in Love' }\n         { title: 'Women on the Verge of a Nervous Breakdown' }\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         {'title': 'Woman of the Year'}\n         {'title': 'Woman in a Dressing Gown'}\n         {'title': 'Woman in the Dunes'}\n         {'title': 'Women in Love'}\n         {'title': 'Women on the Verge of a Nervous Breakdown'}\n\nEscape Character Example\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example searches for documents in which the ``title``\nfield ends with a question mark.\n\n.. note::\n\n   The following example is intended to run in {+mongosh+}. For\n   more information about using the escape characters with a driver,\n   see :ref:`Escape Character Behavior <escape-character-behavior>`.\n\nThe ``*`` character in the ``query`` field matches any characters, and\nthe ``\\\\?`` string matches a literal question mark.\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n      .. include:: /includes/fts-tutorial/wildcard/escape-char-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-wildcard-limit-project-stages.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :language: python\n         :dedent:\n\nThe above query returns the following results:\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         SCORE: 1  _id:  \"573a1390f29313caabcd5ea4\"\n           plot: \"A District Attorney's outspoken stand on abortion gets him in trouble …\"\n           genres: Array\n           runtime: 62\n\n         SCORE: 1  _id:  \"573a1392f29313caabcdab4a\"\n           plot: \"Robin is crooning to a Mae West-like Jenny Wren when he is shot with a…\"\n           genres: Array\n           runtime: 8\n\n         SCORE: 1  _id:  \"573a1394f29313caabce08ab\"\n           plot: \"Elmer Fudd is again hunting rabbits - only this time it's an opera. Wa…\"\n           genres: Array\n           runtime: 7\n\n         SCORE: 1  _id:  \"573a1394f29313caabce08c8\"\n           plot: \"To save his career, an ad man wants a sex symbol to endorse a lipstick…\"\n           genres: Array\n           runtime: 93\n\n         SCORE: 1  _id:  \"573a1395f29313caabce1555\"\n           plot: \"In order to get back into the good graces with his wife with whom he h…\"\n           genres: Array\n           runtime: 115\n\n         SCORE: 1  _id:  \"573a1395f29313caabce1dce\"\n           plot: \"A former child star torments her crippled sister in a decaying Hollywo…\"\n           genres: Array\n           runtime: 134\n\n         SCORE: 1  _id:  \"573a1395f29313caabce2422\"\n           plot: \"Roger Willoughby is considered to be a leading expert on sports fishin…\"\n           genres: Array\n           runtime: 120\n\n         SCORE: 1  _id:  \"573a1395f29313caabce2d63\"\n           plot: \"The true story of the departure of the German occupiers from Paris in …\"\n           genres: Array\n           runtime: 173\n\n         SCORE: 1  _id:   \"573a1395f29313caabce2db5\"\n           plot: \"In this excoriating satire of the fashion industry, Polly Maggoo is a …\"\n           genres: Array\n           runtime: 101\n\n         SCORE: 1  _id:   \"573a1395f29313caabce2ecc\"\n           plot: \"A bitter aging couple with the help of alcohol, use a young couple to …\"\n           genres: Array\n           runtime: 131\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Where Are My Children?\" }\n         { \"title\" : \"Who Killed Cock Robin?\" }\n         { \"title\" : \"What's Opera, Doc?\" }\n         { \"title\" : \"Will Success Spoil Rock Hunter?\" }\n         { \"title\" : \"Who Was That Lady?\" }\n\n   .. tab::\n      :tabid: compass\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Where Are My Children?\" }\n         { \"title\" : \"Who Killed Cock Robin?\" }\n         { \"title\" : \"What's Opera, Doc?\" }\n         { \"title\" : \"Will Success Spoil Rock Hunter?\" }\n         { \"title\" : \"Who Was That Lady?\" }\n\n   .. tab::\n      :tabid: csharp\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { \"title\" : \"Where Are My Children?\" }\n         { \"title\" : \"Who Killed Cock Robin?\" }\n         { \"title\" : \"What's Opera, Doc?\" }\n         { \"title\" : \"Will Success Spoil Rock Hunter?\" }\n         { \"title\" : \"Who Was That Lady?\" }\n\n   .. tab:: \n      :tabid: go\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         [{title Where Are My Children?}]\n         [{title Who Killed Cock Robin?}]\n         [{title What's Opera, Doc?}]\n         [{title Will Success Spoil Rock Hunter?}]\n         [{title Who Was That Lady?}]\n\n   .. tab:: \n      :tabid: java-sync \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\"title\": \"Where Are My Children?\"}\n         {\"title\": \"Who Killed Cock Robin?\"}\n         {\"title\": \"What's Opera, Doc?\"}\n         {\"title\": \"Will Success Spoil Rock Hunter?\"}\n         {\"title\": \"Who Was That Lady?\"}\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         Document{{title=Who Are You, Polly Magoo?}}\n         Document{{title=Where Were You When the Lights Went Out?}}\n         Document{{title=Why Does Herr R. Run Amok?}}\n         Document{{title=What's Up, Doc?}}\n         Document{{title=Who Is Killing the Great Chefs of Europe?}}\n\n   .. tab::\n      :tabid: nodejs\n      \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         { title: 'Where Are My Children?' }\n         { title: 'Who Killed Cock Robin?' }\n         { title: \"What's Opera, Doc?\" }\n         { title: 'Will Success Spoil Rock Hunter?' }\n         { title: 'Who Was That Lady?' }\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "         :copyable: false\n\n         {'title': 'Where Are My Children?'}\n         {'title': 'Who Killed Cock Robin?'}\n         {'title': \"What's Opera, Doc?\"}\n         {'title': 'Will Success Spoil Rock Hunter?'}\n         {'title': 'Who Was That Lady?'}\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-search/wildcard.txt"
  },
  {
    "code": "      :copyable: true\n\n      .. input:: \n         :language: sh\n\n         sp.listStreamProcessors()\n\n      .. output:: \n         :language: json\n         :linenos:\n\n         {\n           id: '0135',\n           name: \"proc01\",\n           last_modified: ISODate(\"2023-03-20T20:15:54.601Z\"),\n           state: \"RUNNING\",\n           error_msg: '',\n           pipeline: [\n             {\n               $source: {\n                 connectionName: \"myKafka\", \n                 topic: \"stuff\"\n               }\n             },\n             {\n               $match: { \n                 temperature: 46 \n               }\n             },\n             {\n               $emit: {\n                 connectionName: \"mySink\",\n                 topic: \"output\",\n               }  \n             }\n           ],\n           lastStateChange: ISODate(\"2023-03-20T20:15:59.442Z\")\n         },\n         {   \n           id: '0218',\n           name: \"proc02\",\n           last_modified: ISODate(\"2023-03-21T20:17:33.601Z\"),\n           state: \"STOPPED\",\n           error_msg: '',\n           pipeline: [\n             {\n               $source: {\n                 connectionName: \"myKafka\", \n                 topic: \"things\"\n               }\n             },\n             {\n               $match: { \n                 temperature: 41 \n               }\n             },\n             {\n               $emit: {\n                 connectionName: \"mySink\",\n                 topic: \"results\",\n               }  \n             }\n           ],\n           lastStateChange: ISODate(\"2023-03-21T20:18:26.139Z\")\n         }\n\n   If you run the command again on the same {+spi+}, filtering for a \n   ``\"state\"`` of ``\"running\"``, you see the following output:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/manage-stream-processor.txt"
  },
  {
    "code": "      :copyable: true\n\n      .. input:: \n         :language: sh\n\n         sp.listStreamProcessors({\"state\": \"running\"})\n\n      .. output:: \n         :language: json\n         :linenos:\n\n         {\n           id: '0135',\n           name: \"proc01\",\n           last_modified: ISODate(\"2023-03-20T20:15:54.601Z\"),\n           state: \"RUNNING\",\n           error_msg: '',\n           pipeline: [\n             {\n               $source: {\n                 connectionName: \"myKafka\", \n                 topic: \"stuff\"\n               }\n             },\n             {\n               $match: { \n                 temperature: 46 \n               }\n             },\n             {\n               $emit: {\n                 connectionName: \"mySink\",\n                 topic: \"output\",\n               }  \n             }\n           ],\n           lastStateChange: ISODate(\"2023-03-20T20:15:59.442Z\")\n         }\n\n.. _streams-manage-sample:\n.. _atlas-sp-manage-processor-sample:\n\nSample from a Stream Processor\n------------------------------\n\nTo return an array of sampled results from an existing stream processor \nto ``STDOUT`` with {+mongosh+}, use the \n``sp.<streamprocessor>.sample()`` method. ``<streamprocessor>`` must be \nthe name of a currently running stream processor defined for the \ncurrent {+spi+}. For example, the following command samples from a \nstream processor named ``proc01``.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/manage-stream-processor.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     _dlqMessage: {\n       _stream_meta: {\n\t source: {\n\t   type: \"<type>\"\n\t }\n       },\n       errInfo: {\n\t reason: \"<reasonForError>\"\n       },\n       doc: {\n\t _id: ObjectId('<group-id>'),\n\t ...\n       },\n       processorName: '<procName>'\n     }\n  }\n\nYou can use these messages to diagnose data hygiene issues without\ndefining a :ref:`dead letter queue <atlas-sp-dlq>` collection.\n\n.. _streams-manage-stats:\n.. _atlas-sp-manage-processor-stats:\n\nView Statistics of a Stream Processor\n-------------------------------------\n\nTo return a document summarizing the current status of an existing \nstream processor with {+mongosh+}, use the \n``sp.<streamprocessor>.stats()`` method. ``streamprocessor`` must be \nthe name of a currently running stream processor defined for the \ncurrent {+spi+}. It has the following syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/manage-stream-processor.txt"
  },
  {
    "code": "   :copyable: true\n\n   curl -H 'Accept: application/vnd.atlas.2023-11-15+json' -s \\\n   'https://cloud.mongodb.com/api/atlas/v2/unauth/controlPlaneIPAddresses'\n\nThis returns a list of available {+service+} IP addresses, grouped by\nprovider and region. Identify all outbound IP addresses for the\nprovider-region pair in which the target {+spi+} is deployed, and add\nthese to your external data source's access list. To learn more, see\n:ref:`atlas-add-inbound-ips`.\n\nWhen you configure a connection to an external streaming data source,\nyou can choose between access over public IP addresses, or over a\n:ref:`VPC peering <vpc-peering>` connection. To learn more, see\n:ref:`atlas-sp-manage-connection-add`.\n\n.. note:\n\n   VPC peering for {+atlas-sp+} is currently in private\n   preview. To learn more, contact your account team.\n\nRestricting Access to Specific {+spi+}s\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, a user with {+atlas-sp+} privilege actions can perform the\nassociated operations on all {+spi+}s. You can restrict the\napplication of these privileges to specific {+spi+}s.\n\n.. procedure::\n   :style:normal\n\n   .. include:: /includes/nav/steps-db-access.rst\n\n   .. step:: Click :guilabel:`Edit` in the row of the user whose\n      permissions you want to modify.\n\n   .. step:: In the modal window, toggle the switch labeled\n      :guilabel:`Restrict Access to Specific Clusters\n      /Federated Database Instances/Stream Processing Instances` on.\n\n   .. step:: Find the names of the {+spi+}s for which you want to grant\n      the user privileges. Check the box next to a name to grant the\n      user privileges for that {+spi+}. Uncheck the box to deny the user\n      privileges for that {+spi+}\n\n   .. step:: Click :guilabel:`Update User`.\n\nExecution Profiles\n------------------\n\nYou can configure the database user role that you use when connecting\nto an {+service+} database as either a :pipeline:`$source` or a\n:pipeline:`$merge` sink. This allows you to prevent\n{+atlas-sp+}-specific database users from gaining indirect access to\nthe cluster hosting that database through the credentials of the\nelevated-privilege {+service+} user that configures the {+spi+} and its\nconnections.\n\n.. note::\n\n   In accordance with the principle of least privilege, define a\n   custom role with only those privileges a user needs to perform\n   their desired operations.\n\n.. procedure::\n   :style:normal\n\n   .. include:: /includes/nav/steps-stream-processing.rst\n\n   .. step:: In the pane of the {+spi+} you want to configure, click\n      :guilabel:`Configure`.\n\n   .. step:: Click the :guilabel:`Connection Registry` tab. In the row\n      of the {+service+} database connection you want to configure, click\n      :icon-fa5:`pencil-alt`.\n\n   .. step:: From the :guilabel:`Execute As` drop-down menu, select the\n      role to use when connecting to the database.\n\n   .. step:: Click :guilabel:`Save changes`.\n\nAuditing\n--------\n\n{+atlas-sp+} auditing lets administrators track authentication and\nentity management events on their {+spi+}s. Each time an auditable\nevent occurs on a given {+spi+}, {+atlas-sp+} writes that event to the\nlog for that {+spi+}. A log persists for the lifetime of the {+spi+}\nto which it belongs, and {+atlas-sp+} never truncates old events. If\nyou delete a {+spi+}, the log belonging to that {+spi+} persists for\nan additional 30 days.\n\n.. note:\n\n   {+atlas-sp+} audit logs conform to `OCSF schema\n   <https://schema.ocsf.io>`__ classes\n\nTo download audit logs for your {+spi+}, see :ref:`Download Audit Logs\n<atlas-sp-manage-spi-audit>`.\n\n{+atlas-sp+} supports auditing the following authentication events:\n\n.. list-table::\n   :widths: 35 65\n   :header-rows: 1\n\n   * - Event\n     - Description\n\n   * - Successful Authentication\n     - Occurs when a user successfully connects to a {+spi+}\n\n   * - Failed Authentication\n     - Occurs when a user fails to connect to a {+spi+}\n\n   * - Connection Termination\n     - Occurs when a user closes their connection\n\n{+atlas-sp+} supports auditing the following entity management events:\n\n.. list-table::\n   :widths: 35 65\n   :header-rows: 1\n\n   * - startStreamProcessor\n     - Occurs when a user starts a stream processor\n\n   * - createStreamProcessor\n     - Occurs when a user creates a stream processor\n\n   * - stopStreamProcessor\n     - Occurs when a user stops a stream processor\n\n   * - dropStreamProcessor\n     - Occurs when a user deletes a stream processor\n\n   * - .process()\n     - Occurs when a user issues a :ref:`.process()\n       <atlas-sp-manage-processor-interactive>` call\n\n   * - .sample()\n     - Occurs when a user issues a :ref:`.sample()\n       <atlas-sp-manage-processor-sample>` call\n\n   * - Audit log accessed\n     - Occurs when a user attempts to download the audit log\n\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/security.txt"
  },
  {
    "code": "   :copyable: true\n\n   {\n     '$source': {\n       connectionName: 'sample_weatherdata',\n       topic: 'my_weatherdata',\n       tsFieldName: 'ingestionTime'\n     }\n   },\n   { '$match': { 'airTemperature.value': { '$lt': 30 } } },\n   {\n     '$emit': {\n       connectionName: 'weatherStreamOutput',\n       topic: 'stream'\n     }\n   }\n\nDocuments in the ``stream`` topic take the following form:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-emit.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"st\":\"x+34700+119500\",\n     \"position\": {\n       \"type\": \"Point\",\n       \"coordinates\": [122.8,116.1]\n     },\n     \"elevation\": 9999,\n     \"callLetters\": \"6ZCM\",\n     \"qualityControlProcess\": \"V020\",\n     \"dataSource\": \"4\",\n     \"type\": \"SAO\",\n     \"airTemperature\": {\n       \"value\": 6.7,\n       \"quality\": \"9\"\n     },\n     \"dewPoint\": {\n       \"value\": 14.1,\n       \"quality\": \"1\"\n     },\n     \"pressure\": {\n       \"value\": 1022.2,\n       \"quality\": \"1\"\n     },\n     \"wind\": {\n       \"direction\": {\n         \"angle\": 200,\n\t \"quality\": \"9\"\n       },\n       \"type\": \"C\",\n       \"speed\": {\n         \"rate\": 35,\n\t \"quality\": \"1\"\n       }\n     },\n     \"visibility\": {\n       \"distance\": {\n         \"value\": 700,\n\t \"quality\": \"1\"\n       },\n       \"variability\": {\n         \"value\": \"N\",\n         \"quality\": \"1\"\n       }\n     },\n     \"skyCondition\": {\n       \"ceilingHeight\": {\n         \"value\": 1800,\n\t \"quality\": \"9\",\n\t \"determination\": \"9\"\n       },\n       \"cavok\": \"N\"\n     },\n     \"sections\": [\"AA1\",\"AG1\",\"UG1\",\"SA1\",\"MW1\"],\n     \"precipitationEstimatedObservation\": {\n       \"discrepancy\": \"0\",\n       \"estimatedWaterDepth\": 999\n     },\n     \"atmosphericPressureChange\": {\n       \"tendency\": {\n         \"code\": \"4\",\n\t \"quality\": \"1\"\n       },\n       \"quantity3Hours\": {\n         \"value\": 3.8,\n\t \"quality\": \"1\"\n       },\n       \"quantity24Hours\": {\n         \"value\": 99.9,\n\t \"quality\": \"9\"\n       }\n     },\n     \"seaSurfaceTemperature\": {\n       \"value\": 9.7,\n       \"quality\": \"9\"\n     },\n     \"waveMeasurement\": {\n       \"method\": \"M\",\n       \"waves\": {\n         \"period\": 8,\n\t \"height\": 3,\n\t \"quality\": \"9\"\n       },\n       \"seaState\": {\n         \"code\": \"00\",\n\t \"quality\": \"9\"\n       }\n     },\n     \"pastWeatherObservationManual\": {\n       \"atmosphericCondition\": {\n         \"value\": \"6\",\n\t \"quality\": \"1\"\n       },\n       \"period\": {\n         \"value\": 3,\n\t \"quality\": \"1\"\n       }\n     },\n     \"skyConditionObservation\": {\n       \"totalCoverage\": {\n         \"value\": \"02\",\n\t \"opaque\": \"99\",\n\t \"quality\": \"9\"\n       },\n       \"lowestCloudCoverage\": {\n         \"value\": \"00\",\n\t \"quality\": \"9\"\n       },\n       \"lowCloudGenus\": {\n         \"value\": \"00\",\n\t \"quality\": \"1\"\n       },\n       \"lowestCloudBaseHeight\":{\n         \"value\": 1750,\n\t \"quality\": \"1\"\n       },\n       \"midCloudGenus\": {\n         \"value\": \"99\",\n\t \"quality\": \"1\"\n       },\n       \"highCloudGenus\": {\n         \"value\": \"00\",\n\t \"quality\": \"1\"\n       }\n     },\n     \"presentWeatherObservationManual\": {\n       \"condition\": \"52\",\n       \"quality\": \"1\"\n     },\n     \"atmosphericPressureObservation\": {\n       \"altimeterSetting\": {\n         \"value\": 1015.9,\n\t \"quality\": \"9\"\n       },\n       \"stationPressure\": {\n         \"value\": 1026,\n\t \"quality\": \"1\"\n       }\n     },\n     \"skyCoverLayer\": {\n       \"coverage\": {\n         \"value\": \"08\",\n\t \"quality\": \"1\"\n       },\n       \"baseHeight\": {\n         \"value\": 2700,\n\t \"quality\": \"9\"\n       },\n       \"cloudType\": {\n         \"value\": \"99\",\n\t \"quality\": \"9\"\n       }\n     },\n     \"liquidPrecipitation\": {\n       \"period\": 12,\n       \"depth\": 20,\n       \"condition\": \"9\",\n       \"quality\": \"9\"\n     },\n     \"extremeAirTemperature\": {\n       \"period\": 99.9,\n       \"code\": \"N\",\n       \"value\": -30.4,\n       \"quantity\": \"1\"\n     },\n     \"ingestionTime\":{\n       \"$date\":\"2024-09-26T17:34:41.843Z\"\n     },\n     \"_stream_meta\":{\n       \"source\":{\n         \"type\": \"kafka\",\n\t \"topic\": \"my_weatherdata\",\n\t \"partition\": 0,\n\t \"offset\": 4285\n       }\n     }\n   }\n\n.. note::\n\n   The preceding is a representative example. Streaming data are\n   not static, and each user sees distinct documents.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-emit.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n    :language: json\n\n      db.getSiblingDB(\"sample_weatherstream\").stream.find()\n\n   .. output::\n    :language: json\n\n    {\n      _id: ISODate('2024-08-28T19:30:20.000Z'),\n      _stream_meta: {\n        source: { type: 'kafka' },\n        window: {\n          start: ISODate('2024-08-28T19:30:20.000Z'),\n          end: ISODate('2024-08-28T19:32:00.000Z')\n        }\n      },\n      averagePrecipitation: 2264.3973214285716\n    },\n    {\n      _id: ISODate('2024-08-28T19:30:40.000Z'),\n      _stream_meta: {\n        source: { type: 'kafka' },\n        window: {\n          start: ISODate('2024-08-28T19:30:40.000Z'),\n          end: ISODate('2024-08-28T19:32:20.000Z')\n        }\n      },\n      averagePrecipitation: 2285.7061611374406\n    },\n    {\n      _id: ISODate('2024-08-28T19:31:00.000Z'),\n      _stream_meta: {\n        source: { type: 'kafka' },\n        window: {\n          start: ISODate('2024-08-28T19:31:00.000Z'),\n          end: ISODate('2024-08-28T19:32:40.000Z')\n        }\n      },\n      averagePrecipitation: 2357.6940154440153\n    },\n    {\n      _id: ISODate('2024-08-28T19:31:20.000Z'),\n      _stream_meta: {\n        source: { type: 'kafka' },\n        window: {\n          start: ISODate('2024-08-28T19:31:20.000Z'),\n          end: ISODate('2024-08-28T19:33:00.000Z')\n        }\n      },\n      averagePrecipitation: 2378.374061433447\n    }\n\n.. note::\n\n   The preceding is a representative example. Streaming data are\n   not static, and each user sees distinct documents.\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-hopping.txt"
  },
  {
    "code": "      :copyable: false \n\n      { _id: 1, count: 2 }\n      { _id: 1, count: 3 }\n\n   Suppose your query contains the following inside the pipeline: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-lookup.txt"
  },
  {
    "code": "      :copyable: false \n\n      {\n        ...,\n        pipeline: [\n          { $lookup on _id == foreignDoc._id from collection A }\n          { $project: { _id: 1, count: $count + $foreignDoc.count } }\n          { $merge: { into collection A } }\n        ]\n      }\n\n   If you are trying to maintain an incremental view, you might expect a\n   result similar to the following:\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-lookup.txt"
  },
  {
    "code": "      :copyable: false \n\n      { _id: 1, count: 5 } \n\n   However, {+atlas-sp+} might return a count of ``5`` or ``3``\n   depending on whether {+atlas-sp+} has processed the documents.\n\nFor more information, see :pipeline:`$lookup`.\n\n.. _atlas-sp-agg-lookup-examples:\n\nExamples\n~~~~~~~~\n\nA streaming data source generates detailed weather reports from\nvarious locations, conformant to the schema of the :ref:`Sample\nWeather Dataset <sample-weather>`. A collection named\n``humidity_descriptions`` contains documents of the form:\n\n.. code-block: json\n   :copyable: false\n\n   {\n     'dew_point': 16.2,\n     'relative_humidity': 79,\n     'condition': 'sticky, oppressive'\n   }\n\nWhere the ``relative_humidity`` field describes the relative humidity at\nroom temperature (20 Celsius), and ``condition`` lists verbal\ndescriptors appropriate to that level of humidity. You can use the\n:ref:`$lookup <atlas-sp-agg-lookup>` stage to enrich the streaming\nweather reports with suggested descriptors for meteorologists to use\nin weather broadcasts.\n\nThe following aggregation has four stages:\n\n1. The :pipeline:`$source` stage establishes a connection with the\n   {+kafka+} broker collecting these reports in a topic named\n   ``my_weatherdata``, exposing each record as it is ingested to the\n   subsequent aggregation stages. This stage also overrides the name\n   of the timestamp field it projects, setting it to\n   ``ingestionTime``.\n\n2. The ``$lookup`` stage joins the records from the\n   ``humidity_descriptions`` database into the weather reports on the\n   ``dewPoint`` field.\n\n3. The :pipeline:`$match` stage excludes documents that have an empty\n   ``humidity_info`` field, and passes along documents with a populated\n   ``humidity_info`` field to the next stage.\n\n4. The :pipeline:`$merge` stage writes the output to an {+service+}\n   collection named ``enriched_stream`` in the\n   ``sample_weatherstream`` database. If no such database or\n   collection exist, {+service+} creates them.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-lookup.txt"
  },
  {
    "code": "   :copyable: true\n   \n   {\n     '$source': {\n       connectionName: 'sample_weatherdata',\n       topic: 'my_weatherdata',\n       tsFieldName: 'ingestionTime'\n     }\n   },\n   {\n     '$lookup': {\n       from: {\n         connectionName: 'weatherStream',\n         db: 'humidity',\n         coll: 'humidity_descriptions'\n       },\n     'localField':'dewPoint.value',\n     'foreignField':'dewPoint',\n     'as': 'humidity_info'\n     }\n   }\n   { '$match': { 'humidity_info': { '$ne': [] } } }\n   {\n     '$merge': {\n       into: {\n\t connectionName: 'weatherStream',\n\t db: 'sample_weatherstream',\n\t coll: 'enriched_stream'\n       }\n     }\n   }\n\nTo view the documents in the resulting ``sample_weatherstream.enriched_stream``\ncollection, connect to your {+service+} cluster and run the following command:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-lookup.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.getSiblingDB(\"sample_weatherstream\").enriched_stream.find()\n\n   .. output::\n      :language: json\n\n      {\n\tst: 'x+55100+006100',\n\tposition: {\n\t  type: 'Point',\n\t  coordinates: [\n\t    92.7,\n\t    -53.6\n\t  ]\n\t},\n\televation: 9999,\n\tcallLetters: 'UECN',\n\tqualityControlProcess: 'V020',\n\tdataSource: '4',\n\ttype: 'FM-13',\n\tairTemperature: {\n\t  value: -11,\n\t  quality: '9'\n\t},\n\tdewPoint: {\n\t  value: 12.5,\n\t  quality: '1'\n\t},\n\tpressure: {\n\t  value: 1032.7,\n\t  quality: '9'\n\t},\n\twind: {\n\t  direction: {\n\t    angle: 300,\n\t    quality: '9'\n\t  },\n\t  type: '9',\n\t  speed: {\n\t    rate: 23.6,\n\t    quality: '2'\n\t  }\n\t},\n\tvisibility: {\n\t  distance: {\n\t    value: 14000,\n\t    quality: '1'\n\t  },\n\t  variability: {\n\t    value: 'N',\n\t    quality: '1'\n\t  }\n\t},\n\tskyCondition: {\n\t  ceilingHeight: {\n\t    value: 390,\n\t    quality: '9',\n\t    determination: 'C'\n\t  },\n\t  cavok: 'N'\n\t},\n\tsections: [\n\t  'SA1',\n\t  'AA1',\n\t  'OA1',\n\t  'AY1',\n\t  'AG1'\n\t],\n\tprecipitationEstimatedObservation: {\n\t  discrepancy: '4',\n\t  estimatedWaterDepth: 21\n\t},\n\tatmosphericPressureChange: {\n\t  tendency: {\n\t    code: '1',\n\t    quality: '1'\n\t  },\n\t  quantity3Hours: {\n\t    value: 5.5,\n\t    quality: '1'\n\t  },\n\t  quantity24Hours: {\n\t    value: 99.9,\n\t    quality: '9'\n\t  }\n\t},\n\tseaSurfaceTemperature: {\n\t  value: 1.3,\n\t  quality: '9'\n\t},\n\twaveMeasurement: {\n\t  method: 'M',\n\t  waves: {\n\t    period: 4,\n\t    height: 2.5,\n\t    quality: '9'\n\t  },\n\t  seaState: {\n\t    code: '00',\n\t    quality: '9'\n\t  }\n\t},\n\tpastWeatherObservationManual: {\n\t  atmosphericCondition: {\n\t    value: '4',\n\t    quality: '1'\n\t  },\n\t  period: {\n\t    value: 6,\n\t    quality: '1'\n\t  }\n\t},\n\tskyConditionObservation: {\n\t  totalCoverage: {\n\t    value: '07',\n\t    opaque: '99',\n\t    quality: '1'\n\t  },\n\t  lowestCloudCoverage: {\n\t    value: '06',\n\t    quality: '1'\n\t  },\n\t  lowCloudGenus: {\n\t    value: '07',\n\t    quality: '9'\n\t  },\n\t  lowestCloudBaseHeight: {\n\t    value: 2250,\n\t    quality: '9'\n\t  },\n\t  midCloudGenus: {\n\t    value: '07',\n\t    quality: '9'\n\t  },\n\t  highCloudGenus: {\n\t    value: '00',\n\t    quality: '1'\n\t  }\n\t},\n\tpresentWeatherObservationManual: {\n\t  condition: '75',\n\t  quality: '1'\n\t},\n\tatmosphericPressureObservation: {\n\t  altimeterSetting: {\n\t    value: 9999.9,\n\t    quality: '9'\n\t  },\n\t  stationPressure: {\n\t    value: 1032.6,\n\t    quality: '1'\n\t  }\n\t},\n\tskyCoverLayer: {\n\t  coverage: {\n\t    value: '09',\n\t    quality: '1'\n\t  },\n\t  baseHeight: {\n\t    value: 240,\n\t    quality: '9'\n\t  },\n\t  cloudType: {\n\t    value: '99',\n\t    quality: '9'\n\t  }\n\t},\n\tliquidPrecipitation: {\n\t  period: 6,\n\t  depth: 3670,\n\t  condition: '9',\n\t  quality: '9'\n\t},\n\textremeAirTemperature: {\n\t  period: 99.9,\n\t  code: 'N',\n\t  value: -30.9,\n\t  quantity: '9'\n\t},\n\tingestionTime: ISODate('2024-09-19T20:04:34.346Z'),\n\thumidity_info: [\n\t  {\n\t    _id: ObjectId('66ec805ad3cfbba767ebf7a5'),\n\t    dewPoint: 12.5,\n\t    relativeHumidity: 62,\n\t    condition: 'humid, muggy'\n\t  }\n\t],\n\t_stream_meta: {\n\t  source: {\n\t    type: 'kafka',\n\t    topic: 'my_weatherdata',\n\t    partition: 0,\n\t    offset: 2055\n\t  }\n\t}\n      }\n\n.. note::\n\n   The preceding is a representative example. Streaming data are\n   not static, and each user sees distinct documents.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-lookup.txt"
  },
  {
    "code": "   :copyable: true\n   \n   {\n     '$source': {\n       connectionName: 'sample_weatherdata',\n       topic: 'my_weatherdata',\n       tsFieldName: 'ingestionTime'\n     }\n   },\n   { '$match': { 'dewPoint.value': { '$gt': 5 } } },\n   {\n     '$merge': {\n       into: {\n\t connectionName: 'weatherStreamOutput',\n\t db: 'sample_weatherstream',\n\t coll: 'stream'\n       }\n     }\n   }\n\nTo view the documents in the resulting ``sample_weatherstream.stream``\ncollection, connect to your {+service+} cluster and run the following command:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-merge.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.getSiblingDB(\"sample_weatherstream\").stream.find()\n\n   .. output::\n      :language: json\n \n      {\n\t_id: ObjectId('66ad2edfd4fcac13b1a28ce3'),\n\t_stream_meta: {\n\t  source: {\n\t    type: 'kafka',\n\t    topic: 'my_weatherdata',\n\t    partition: 0,\n\t    offset: Long('165235')\n\t  }\n\t},\n\tairTemperature: { quality: '1', value: 27.7 },\n\tatmosphericPressureChange: {\n\t  quantity24Hours: { quality: '9', value: 99.9 },\n\t  quantity3Hours: { quality: '1' },\n\t  tendency: { code: '1', quality: '1' }\n\t},\n\tatmosphericPressureObservation: {\n\t  altimeterSetting: { quality: '1', value: 1015.9 },\n\t  stationPressure: { quality: '1', value: 1021.9 }\n\t},\n\tcallLetters: 'CGDS',\n\tdataSource: '4',\n\tdewPoint: { quality: '9', value: 25.7 },\n\televation: 9999,\n\textremeAirTemperature: { code: 'N', period: 99.9, quantity: '9', value: -30.4 },\n\tingestionTime: ISODate('2024-08-02T19:09:18.071Z'),\n\tliquidPrecipitation: { condition: '9', depth: 160, period: 24, quality: '2' },\n\tpastWeatherObservationManual: {\n\t  atmosphericCondition: { quality: '1', value: '8' },\n\t  period: { quality: '9', value: 3 }\n\t},\n\tposition: { coordinates: [ 153.3, 50.7 ], type: 'Point' },\n\tprecipitationEstimatedObservation: { discrepancy: '4', estimatedWaterDepth: 4 },\n\tpresentWeatherObservationManual: { condition: '53', quality: '1' },\n\tpressure: { quality: '1', value: 1016.3 },\n\tqualityControlProcess: 'V020',\n\tseaSurfaceTemperature: { quality: '9', value: 27.6 },\n\tsections: [ 'AA2', 'SA1', 'MW1', 'AG1', 'GF1' ],\n\tskyCondition: {\n\t  cavok: 'N',\n\t  ceilingHeight: { determination: 'C', quality: '1', value: 6900 }\n\t},\n\tskyConditionObservation: {\n\t  highCloudGenus: { quality: '1', value: '05' },\n\t  lowCloudGenus: { quality: '9', value: '03' },\n\t  lowestCloudBaseHeight: { quality: '9', value: 150 },\n\t  lowestCloudCoverage: { quality: '1', value: '05' },\n\t  midCloudGenus: { quality: '9', value: '08' },\n\t  totalCoverage: { opaque: '99', quality: '1', value: '06' }\n\t},\n\tskyCoverLayer: {\n\t  baseHeight: { quality: '9', value: 99999 },\n\t  cloudType: { quality: '9', value: '05' },\n\t  coverage: { quality: '1', value: '04' }\n\t},\n\tst: 'x+35700-027900',\n\ttype: 'SAO',\n\tvisibility: {\n\t  distance: { quality: '1', value: 4000 },\n\t  variability: { quality: '1', value: 'N' }\n\t},\n\twaveMeasurement: {\n\t  method: 'I',\n\t  seaState: { code: '99', quality: '9' },\n\t  waves: { height: 99.9, period: 14, quality: '9' }\n\t},\n\twind: {\n\t  direction: { angle: 280, quality: '9' },\n\t  speed: { quality: '1', rate: 30.3 },\n\t  type: '9'\n\t}\n      }\n\n.. note::\n\n   The preceding is a representative example. Streaming data are\n   not static, and each user sees distinct documents.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-merge.txt"
  },
  {
    "code": "          :copyable: false \n\n          asp-${streamProcessorId}-consumer\n\n       {+atlas-sp+} commits partition offsets to the {+kafka+} broker \n       for the specified consumer group ID after a checkpoint is \n       committed. It commits an offset when messages up through that \n       offset are durably recorded in a checkpoint. This allows you to \n       track the offset lag and progress of the stream processor \n       directly from the Kafka broker consumer group metadata.\n\n   * - ``config.keyFormat``\n     - string\n     - Optional\n     - Data type used to deserialize {+kafka+} key data. Must be one\n       of the following values:\n\n       - ``\"binData\"``\n       - ``\"string\"``\n       - ``\"json\"``\n       - ``\"int\"``\n       - ``\"long\"``\n\n       Defaults to ``binData``.\n     \n   * - ``config.keyFormatError``\n     - string\n     - Optional\n     - How to handle errors encountered when deserializing {+kafka+} key\n       data. Must be one of the following values:\n\n       - ``dlq``, which writes the document to your :ref:`Dead Letter Queue <atlas-sp-dlq>`.\n       - ``passThrough``, which sends the document to the next stage without key data.\n\n\n.. note::\n\n   {+atlas-sp+} requires that documents in the source data stream be\n   valid ``json`` or ``ejson``. {+atlas-sp+} sets the documents that\n   don't meet this requirement to your :ref:`dead letter queue\n   <atlas-sp-dlq>` if you have configured one.\n\n.. _atlas-sp-agg-source-syntax-coll:\n\nMongoDB Collection Change Stream\n--------------------------------\n\nTo operate on streaming data from an {+service+} collection change\nstream, the ``$source`` stage has the following prototype form:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-source.txt"
  },
  {
    "code": "   :copyable: true\n   \n   {\n     '$source': {\n       connectionName: 'sample_weatherdata',\n       topic: 'my_weatherdata',\n       tsFieldName: 'ingestionTime'\n     }\n   },\n   { '$match': { 'dewPoint.value': { '$gt': 5 } } },\n   {\n     '$merge': {\n       into: {\n\t connectionName: 'weatherStreamOutput',\n\t db: 'sample_weatherstream',\n\t coll: 'stream'\n       }\n     }\n   }\n\nTo view the documents in the resulting ``sample_weatherstream.stream``\ncollection, connect to your {+service+} cluster and run the following command:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-source.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.getSiblingDB(\"sample_weatherstream\").stream.find()\n\n   .. output::\n      :language: json\n \n      {\n\t_id: ObjectId('66ad2edfd4fcac13b1a28ce3'),\n\t_stream_meta: {\n\t  source: {\n\t    type: 'kafka',\n\t    topic: 'my_weatherdata',\n\t    partition: 0,\n\t    offset: Long('165235')\n\t  }\n\t},\n\tairTemperature: { quality: '1', value: 27.7 },\n\tatmosphericPressureChange: {\n\t  quantity24Hours: { quality: '9', value: 99.9 },\n\t  quantity3Hours: { quality: '1' },\n\t  tendency: { code: '1', quality: '1' }\n\t},\n\tatmosphericPressureObservation: {\n\t  altimeterSetting: { quality: '1', value: 1015.9 },\n\t  stationPressure: { quality: '1', value: 1021.9 }\n\t},\n\tcallLetters: 'CGDS',\n\tdataSource: '4',\n\tdewPoint: { quality: '9', value: 25.7 },\n\televation: 9999,\n\textremeAirTemperature: { code: 'N', period: 99.9, quantity: '9', value: -30.4 },\n\tingestionTime: ISODate('2024-08-02T19:09:18.071Z'),\n\tliquidPrecipitation: { condition: '9', depth: 160, period: 24, quality: '2' },\n\tpastWeatherObservationManual: {\n\t  atmosphericCondition: { quality: '1', value: '8' },\n\t  period: { quality: '9', value: 3 }\n\t},\n\tposition: { coordinates: [ 153.3, 50.7 ], type: 'Point' },\n\tprecipitationEstimatedObservation: { discrepancy: '4', estimatedWaterDepth: 4 },\n\tpresentWeatherObservationManual: { condition: '53', quality: '1' },\n\tpressure: { quality: '1', value: 1016.3 },\n\tqualityControlProcess: 'V020',\n\tseaSurfaceTemperature: { quality: '9', value: 27.6 },\n\tsections: [ 'AA2', 'SA1', 'MW1', 'AG1', 'GF1' ],\n\tskyCondition: {\n\t  cavok: 'N',\n\t  ceilingHeight: { determination: 'C', quality: '1', value: 6900 }\n\t},\n\tskyConditionObservation: {\n\t  highCloudGenus: { quality: '1', value: '05' },\n\t  lowCloudGenus: { quality: '9', value: '03' },\n\t  lowestCloudBaseHeight: { quality: '9', value: 150 },\n\t  lowestCloudCoverage: { quality: '1', value: '05' },\n\t  midCloudGenus: { quality: '9', value: '08' },\n\t  totalCoverage: { opaque: '99', quality: '1', value: '06' }\n\t},\n\tskyCoverLayer: {\n\t  baseHeight: { quality: '9', value: 99999 },\n\t  cloudType: { quality: '9', value: '05' },\n\t  coverage: { quality: '1', value: '04' }\n\t},\n\tst: 'x+35700-027900',\n\ttype: 'SAO',\n\tvisibility: {\n\t  distance: { quality: '1', value: 4000 },\n\t  variability: { quality: '1', value: 'N' }\n\t},\n\twaveMeasurement: {\n\t  method: 'I',\n\t  seaState: { code: '99', quality: '9' },\n\t  waves: { height: 99.9, period: 14, quality: '9' }\n\t},\n\twind: {\n\t  direction: { angle: 280, quality: '9' },\n\t  speed: { quality: '1', rate: 30.3 },\n\t  type: '9'\n\t}\n      }\n\n.. note::\n\n   The preceding is a representative example. Streaming data are\n   not static, and each user sees distinct documents.\n\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-source.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n    :language: json\n\n      db.getSiblingDB(\"sample_weatherstream\").stream.find()\n\n   .. output::\n    :language: json\n\n    {\n       _id: ISODate('2024-09-26T16:34:00.000Z'),\n       _stream_meta: {\n\t source: { type: 'kafka' },\n\t window: {\n\t   start: ISODate('2024-09-26T16:34:00.000Z'),\n\t   end: ISODate('2024-09-26T16:34:30.000Z')\n\t }\n       },\n       averagePressure: 5271.47894736842,\n       maxPressure: 9999.9,\n       medianPressure: 1015.9,\n       minPressure: 1015.9\n     },\n     {\n       _id: ISODate('2024-09-26T16:34:30.000Z'),\n       _stream_meta: {\n\t source: { type: 'kafka' },\n\t window: {\n\t   start: ISODate('2024-09-26T16:34:30.000Z'),\n\t   end: ISODate('2024-09-26T16:35:00.000Z')\n\t }\n       },\n       averagePressure: 5507.9,\n       maxPressure: 9999.9,\n       medianPressure: 1015.9,\n       minPressure: 1015.9\n     }\n\n\n.. note::\n\n   The preceding is a representative example. Streaming data are\n   not static, and each user sees distinct documents.\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-tumbling.txt"
  },
  {
    "code": "   :copyable: true\n\n   {\n     '$source': {\n       connectionName: 'sample_weatherdata',\n       topic: 'my_weatherdata',\n       tsFieldName: 'ingestionTime'\n     }\n   },\n   {\n     '$validate': {\n       validator: {\n\t '$jsonSchema': { properties: { position: [Object], sections: [Object] } }\n       },\n       validationAction: 'dlq'\n     }\n   },\n   { '$match': { 'wind.speed.rate': { '$lt': 30 } } },\n   {\n     '$merge': {\n       into: {\n\t connectionName: 'weatherStreamOutput',\n\t db: 'sample_weatherstream',\n\t coll: 'stream'\n       }\n     }\n   }\n    \nTo view the documents in the resulting ``sample_weatherstream.sample``\ncollection, you can connect to your {+service+} cluster using\n{+mongosh+} to run the following command:\n\n.. note::\n\n   The following is a representative example. Streaming data are\n   not static, and each user sees distinct documents.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-validate.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.getSiblingDB(\"sample_weatherstream\").stream.find()\n\n   .. output::\n      :language: json\n\n      {\n\t_id: ObjectId('66b25302fe8bbac5f39dbdba'),\n\t_stream_meta: {\n\t  source: {\n\t    type: 'kafka',\n\t    topic: 'my_weatherdata',\n\t    partition: 0,\n\t    offset: Long('168843')\n\t  }\n\t},\n\tairTemperature: { quality: '9', value: 3.5 },\n\tatmosphericPressureChange: {\n\t  quantity24Hours: { quality: '9', value: 99.9 },\n\t  quantity3Hours: { quality: '1', value: 10.9 },\n\t  tendency: { code: '3', quality: '1' }\n\t},\n\tatmosphericPressureObservation: {\n\t  altimeterSetting: { quality: '1', value: 1015.9 },\n\t  stationPressure: { quality: '9', value: 1022.5 }\n\t},\n\tcallLetters: 'JIVX',\n\tdataSource: '4',\n\tdewPoint: { quality: '9', value: 20.5 },\n\televation: 9999,\n\textremeAirTemperature: { code: 'N', period: 99.9, quantity: '9', value: -30.4 },\n\tingestionTime: ISODate('2024-08-06T16:44:50.322Z'),\n\tliquidPrecipitation: { condition: '9', depth: 7000, period: 12, quality: '9' },\n\tpastWeatherObservationManual: {\n\t  atmosphericCondition: { quality: '1', value: '7' },\n\t  period: { quality: '1', value: 3 }\n\t},\n\tposition: { coordinates: [ 120.7, -98.2 ], type: 'Point' },\n\tprecipitationEstimatedObservation: { discrepancy: '5', estimatedWaterDepth: 999 },\n\tpresentWeatherObservationManual: { condition: '90', quality: '1' },\n\tpressure: { quality: '1', value: 1028.2 },\n\tqualityControlProcess: 'V020',\n\tseaSurfaceTemperature: { quality: '9', value: 11.1 },\n\tsections: [ 'UG1', 'MA1', 'GA3', 'KA1', 'UA1' ],\n\tskyCondition: {\n\t  cavok: 'N',\n\t  ceilingHeight: { determination: 'C', quality: '1', value: 390 }\n\t},\n\tskyConditionObservation: {\n\t  highCloudGenus: { quality: '1', value: '06' },\n\t  lowCloudGenus: { quality: '9', value: '07' },\n\t  lowestCloudBaseHeight: { quality: '1', value: 800 },\n\t  lowestCloudCoverage: { quality: '9', value: '06' },\n\t  midCloudGenus: { quality: '9', value: '07' },\n\t  totalCoverage: { opaque: '99', quality: '1', value: '99' }\n\t},\n\tskyCoverLayer: {\n\t  baseHeight: { quality: '9', value: 1200 },\n\t  cloudType: { quality: '9', value: '04' },\n\t  coverage: { quality: '1', value: '09' }\n\t},\n\tst: 'x+36700+144300',\n\ttype: 'FM-13',\n\tvisibility: {\n\t  distance: { quality: '9', value: 9000 },\n\t  variability: { quality: '9', value: 'N' }\n\t},\n\twaveMeasurement: {\n\t  method: 'I',\n\t  seaState: { code: '00', quality: '9' },\n\t  waves: { height: 9.5, period: 4, quality: '9' }\n\t},\n\twind: {\n\t  direction: { angle: 140, quality: '1' },\n\t  speed: { quality: '2', rate: 15.9 },\n\t  type: 'N'\n\t}\n      }\n\nObserve that all documents in this collection have the expected\n``array``-type values for ``position.coordinates`` and\n``sections``. To view the documents that failed validation, given a\ndead letter queue named ``dlq``, run the following command:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-validate.txt"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: json\n\n      db.getSiblingDB(\"sample_weatherstream\").dlq.find()\n\n   .. output::\n      :language: json\n\n      {\n\t_id: ObjectId('66b254d3a045fb1406047394'),\n\t_stream_meta: {\n\t  source: {\n\t    type: 'kafka',\n\t    topic: 'my_weatherdata',\n\t    partition: 0,\n\t    offset: Long('168949'),\n\t    key: Binary.createFromBase64('', 0),\n\t    headers: []\n\t  }\n\t},\n\terrInfo: { reason: 'Input document found to be invalid in $validate stage' },\n\tdoc: {\n\t  airTemperature: { quality: '9', value: 7.6 },\n\t  atmosphericPressureChange: {\n\t    quantity24Hours: { quality: '9', value: 99.9 },\n\t    quantity3Hours: { quality: '1', value: 0.3 },\n\t    tendency: { code: '8', quality: '1' }\n\t  },\n\t  atmosphericPressureObservation: {\n\t    altimeterSetting: { quality: '9', value: 1015.9 },\n\t    stationPressure: { quality: '1', value: 1017 }\n\t  },\n\t  callLetters: 'WRGL',\n\t  dataSource: '4',\n\t  dewPoint: { quality: '9', value: 25.3 },\n\t  elevation: 9999,\n\t  extremeAirTemperature: { code: 'M', period: 99.9, quantity: '1', value: -30.9 },\n\t  liquidPrecipitation: { condition: '9', period: 99, quality: '9' },\n\t  pastWeatherObservationManual: {\n\t    atmosphericCondition: { quality: '1', value: '2' },\n\t    period: { quality: '1', value: 6 }\n\t  },\n\t  position: { coordinates: -100.2, type: 'Point' },\n\t  precipitationEstimatedObservation: { discrepancy: '5', estimatedWaterDepth: 17 },\n\t  presentWeatherObservationManual: { condition: '08', quality: '1' },\n\t  pressure: { quality: '9', value: 1001 },\n\t  qualityControlProcess: 'V020',\n\t  seaSurfaceTemperature: { quality: '9', value: 10.4 },\n\t  sections: [ 'GA2', 'GA1', 'KA1', 'AA1', 'OA1' ],\n\t  skyCondition: {\n\t    cavok: 'N',\n\t    ceilingHeight: { determination: 'C', quality: '1', value: 240 }\n\t  },\n\t  skyConditionObservation: {\n\t    highCloudGenus: { quality: '1', value: '02' },\n\t    lowCloudGenus: { quality: '9', value: '02' },\n\t    lowestCloudBaseHeight: { quality: '1', value: 150 },\n\t    lowestCloudCoverage: { quality: '1', value: '03' },\n\t    midCloudGenus: { quality: '1', value: '06' },\n\t    totalCoverage: { opaque: '99', quality: '1', value: '06' }\n\t  },\n\t  skyCoverLayer: {\n\t    baseHeight: { quality: '9', value: 450 },\n\t    cloudType: { quality: '9', value: '03' },\n\t    coverage: { quality: '1', value: '07' }\n\t  },\n\t  st: 'x+20500-074300',\n\t  type: 'SAO',\n\t  visibility: {\n\t    distance: { quality: '9', value: 3800 },\n\t    variability: { quality: '9', value: 'N' }\n\t  },\n\t  waveMeasurement: {\n\t    method: 'I',\n\t    seaState: { code: '00', quality: '9' },\n\t    waves: { height: 37.5, period: 7, quality: '9' }\n\t  },\n\t  wind: {\n\t    direction: { angle: 230, quality: '1' },\n\t    speed: { quality: '1', rate: 46.3 },\n\t    type: 'N'\n\t  },\n\t  ingestionTime: ISODate('2024-08-06T16:52:35.287Z'),\n\t  _stream_meta: {\n\t    source: {\n\t      type: 'kafka',\n\t      topic: 'my_weatherdata',\n\t      partition: 0,\n\t      offset: Long('168949')\n\t    }\n\t  }\n\t},\n\tprocessorName: 'sampleWeather'\n      }\n\nObserve that all documents in the dead letter queue have invalid\nvalues for either ``position.coordinates``, ``sections``, or both.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/sp-agg-validate.txt"
  },
  {
    "code": "         :copyable: true\n\n\t {\n\t   device_id: 'device_8',\n\t   group_id: 7,\n\t   timestamp: '2024-08-12T21:41:01.788+00:00',\n\t   max_watts: 450,\n\t   event_type: 0,\n\t   obs: {\n\t     watts: 252,\n\t     temp: 17\n\t   },\n\t   _ts: ISODate('2024-08-12T21:41:01.788Z'),\n\t   _stream_meta: {\n\t     source: {\n\t       type: 'generated'\n\t     }\n\t   }\n\t }\n\n      To verify that this source emits messages, create a stream\n      processor interactively.\n\n      a. Open a terminal application of your choice.\n\n      #. Connect to your {+spi+} with {+mongosh+}.\n            \n         Paste the {+mongosh+} connection string that you copied\n         in a previous step into your terminal, where \n         ``<atlas-stream-processing-url>`` is the URL of your {+spi+}\n         and ``<username>`` is a user with the \n         :atlasrole:`atlasAdmin` role.\n            \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "            :copyable: true\n\n            sp.process([{\"$source\": {\n               \"connectionName\": \"sample_stream_solar\"\n            }}])\n\n         Verify that data from the ``sample_stream_solar`` \n         connection displays to the console, and terminate \n         the process.\n\n         Stream processors you create with ``sp.process()`` don't\n         persist after you terminate them.\n\n   .. step:: Create a persistent stream processor.\n\n      Using an :manual:`aggregation pipeline\n      <aggregation-pipeline-intro>`, you can transform each document\n      as it is ingested. The following aggregation pipeline derives\n      the maximum temperature and the average, median, maximum, and\n      minimum wattages of each solar device at one-second intervals.\n\n      a. Configure a :pipeline:`$source` stage.\n\n         The following ``$source`` stage ingests data from the\n         ``sample_stream_solar`` source and sets the {+atlas-sp+} time\n         field value equal to the value of the source's ``timestamp``\n         field.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "\t    :copyable: true\n\n\t    let s = {\n\t       $source: {\n\t\t  connectionName: \"sample_stream_solar\",\n\t\t  timeField: {\n\t\t     $dateFromString: {\n\t\t\tdateString: '$timestamp'\n\t\t     }\n\t\t  }\n\t       }\n\t    }\n\t   \n      #. Configure a :pipeline:`$group` stage.\n\n         The following ``$group`` stage organizes all incoming data\n         according to their ``group_id``, accumulates the values of\n         the ``obs.temp`` and ``obs.watts`` fields of all documents\n         for each ``group_id``, then derives the desired data.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "\t    :copyable: true\n\t    \n\t    let g = {\n\t       $group: {\n\t\t  _id: \"$group_id\",\n\t\t  max_temp: {\n\t\t     $avg: \"$obs.temp\"\n\t\t  },\n\t\t  avg_watts: {\n\t\t     $min: \"$obs.watts\"\n\t\t  },\n\t\t  median_watts: {\n\t\t     $min: \"$obs.watts\"\n\t\t  },\n\t\t  max_watts: {\n\t\t     $max: \"$obs.watts\"\n\t\t  },\n\t\t  min_watts: {\n\t\t     $min: \"$obs.watts\"\n\t\t  }\n\t       }\n\t    }\n\n      #. Configure a :pipeline:`$tumblingWindow` stage.\n\n         In order to perform accumulations such as ``$group`` on\n         streaming data, {+atlas-sp+} uses :ref:`windows\n         <atlas-sp-windows>` to bound the data set. The following\n         ``$tumblingWindow`` stage separates the stream into\n         consecutive 10-second intervals.\n\n         This means, for example, that when the ``$group`` stage\n         computes a value for ``median_watts``, it takes the\n         ``obs.watts`` values for all documents with a given\n         ``group_id`` ingested in the previous 10 seconds.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "\t    :copyable: true\n\t    \n\t     let t = {\n\t\t$tumblingWindow: {\n\t\t   interval: {\n\t\t      size: NumberInt(10),\n\t\t      unit: \"second\"\n\t\t   },\n\t\t   pipeline: [g]\n\t\t}\n\t     }\n\n      #. Configure a :ref:`$merge <atlas-sp-agg-merge>` stage.\n\n         ``$merge`` allows you to write your processed streaming data\n         to an {+service+} database. \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "\t    :copyable: true\n\t    \n\t    let m = {\n\t       $merge: {\n\t\t  into: {\n\t\t     connectionName: \"mongodb1\",\n\t\t     db: \"solarDb\",\n\t\t     coll: \"solarColl\"\n\t\t  }\n\t       }\n\t    }\n\n      #. Create the stream processor.\n\n         Assign a name to your new stream processor, and declare its\n         aggregation pipeline by listing each stage in order. The\n         ``$group`` stage belongs to the nested pipeline of the\n         ``$tumblingWindow``, and you must not include it in the\n         processor pipeline definition.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "\t    :copyable: true\n\n            sp.createStreamProcessor(\"solarDemo\", [s, t, m])\n\n      This creates a stream processor named ``solarDemo`` that\n      applies the previously defined query and writes the \n      processed data to the ``solarColl`` collection of the \n      ``solarDb`` database on the {+cluster+} you connected to.\n      It returns various measurements derived from 10-second intervals\n      of observations from your solar devices.\n\n      To learn more about how {+atlas-sp+} writes to at-rest\n      databases, see :ref:`<atlas-sp-agg-merge>`.\n\n   .. step:: Start the stream processor. \n\n      Run the following command in {+mongosh+}:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n\t    :language: sh\n\n            sp.solarDemo.sample()\n\n         .. output::\n\t    :language: json\n            \n\t    {\n\t      _id: 10,\n\t      max_watts: 136,\n\t      min_watts: 130,\n\t      avg_watts: 133,\n\t      median_watts: 130,\n\t      max_temp: 7,\n\t      _stream_meta: {\n\t\tsource: {\n\t\t  type: 'generated'\n\t\t},\n\t\twindow: {\n\t\t  start: ISODate('2024-08-12T22:49:05.000Z'),\n\t\t  end: ISODate('2024-08-12T22:49:10.000Z')\n\t\t}\n\t      }\n\t    }\n\n      .. note::\n\n         The preceding is a representative example. Streaming data are\n         not static, and each user sees distinct documents.\n\n   .. step:: Drop the stream processor.\n\n      Run the following command in {+mongosh+}:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "         :copyable: true\n\n         sp.avgWatts.drop()\n\n      To confirm that you have dropped ``avgWatts``, list\n      all your available stream processors:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "         :copyable: true\n\n         sp.listStreamProcessors()\n\nNext Steps\n----------\n\nLearn how to:\n\n- :ref:`streams-manage-processor`\n- :ref:`manage-spi`\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-stream-processing/tutorial.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"operationType\": <string>,\n     \"providers\": <array of strings>,\n     \"user\": <user object>,\n     \"time\": <ISODate>\n   }\n\n.. list-table::\n   :header-rows: 1\n   :widths: 10 30\n\n   * - Field\n     - Description\n\n   * - ``operationType``\n     - The :ref:`operation type <atlas-authentication-event-operation-types>`\n       of the authentication event.\n\n   * - ``providers``\n     - The :ref:`authentication providers <authentication-providers>`\n       that emitted the event. One of the following names represents each\n       authentication provider:\n\n       - ``\"anon-user\"``\n       - ``\"local-userpass\"``\n       - ``\"api-key\"``\n       - ``\"custom-token\"``\n       - ``\"custom-function\"``\n       - ``\"oauth2-facebook\"``\n       - ``\"oauth2-google\"``\n       - ``\"oauth2-apple\"``\n\n   * - ``user``\n     - The user object of the user that interacted with the authentication\n       provider.\n\n   * - ``time``\n     - The time at which the event occurred.\n\n.. _atlas-authentication-triggers-example:\n\nExample\n-------\n\nAn online store wants to store custom metadata for each of its customers\nin |service|. Each customer needs a document in the ``store.customers`` collection.\nThen, the store can record and query metadata in the customer's document.\n\nThe collection must represent each customer. To guarantee this, the store\ncreates an authentication Trigger. This Trigger listens for newly created users\nin the email/password authentication provider, then it passes the\n:ref:`authentication event object <atlas-authentication-events>` to its linked\nFunction ``createNewUserDocument``.\n\nThe ``createNewUserDocument`` Function creates a new document that describes the\nuser and their activity. The Function then inserts the document into the\n``store.customers`` collection.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/authentication-triggers.txt"
  },
  {
    "code": "   :caption: createNewUserDocument Function\n\n   exports = async function(authEvent) {\n     const mongodb = context.services.get(\"mongodb-atlas\");\n     const customers = mongodb.db(\"store\").collection(\"customers\");\n\n     const { user, time } = authEvent;\n     const isLinkedUser = user.identities.length > 1;\n\n     if(isLinkedUser) {\n       const { identities } = user;\n       return users.updateOne(\n         { id: user.id },\n         { $set: { identities } }\n       )\n\n     } else {\n       return users.insertOne({ _id: user.id, ...user })\n        .catch(console.error)\n     }\n     await customers.insertOne(newUser);\n   }\n\n.. seealso::\n\n  `Triggers examples <https://github.com/mongodb/atlas-app-services-examples/tree/main/triggers-examples>`__\n  on Github.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/authentication-triggers.txt"
  },
  {
    "code": "               :caption: <functionName>.js\n\n               exports = async function(error, changeEvent) {\n                  // This sample function will log additional details if the error is not\n                  // a DOCUMENT_TOO_LARGE error\n                  if (error.code === 'DOCUMENT_TOO_LARGE') {\n                     console.log('Document too large error');\n\n                     // Comment out the line below in order to skip this event and not suspend the Trigger\n                     throw new Error('Encountered error: ${error.code}');\n                  }\n\n                  console.log('Error sending event to EventBridge');\n                  console.log('DB: ${changeEvent.ns.db}');\n                  console.log('Collection: ${changeEvent.ns.coll}');\n                  console.log('Operation type: ${changeEvent.operationType}');\n\n                  // Throw an error in your Function to suspend the Trigger\n                  // and stop processing additional events\n                  throw new Error('Encountered error: ${error.message}');\n               };\n\n            For more information on creating Functions, see :ref:`Functions\n            <atlas-functions>`.\n\n         .. step:: Add the Error Handler to Your Trigger Configuration\n\n            Add an ``error_handler`` attribute to your Trigger configuration\n            file in the ``Triggers`` folder.\n\n            The Trigger configuration file should resemble the following:\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/aws-eventbridge.txt"
  },
  {
    "code": "               :emphasize-lines: 13-18\n               :caption: <triggerName>.json\n\n                     {\n                        \"name\": \"...\",\n                        \"type\": \"DATABASE\",\n                        \"event_processors\": {\n                           \"AWS_EVENTBRIDGE\": {\n                              \"config\": {\n                                 \"account_id\": \"<AWS Account ID>\",\n                                 \"region\": \"<AWS Region>\",\n                                 \"extended_json_enabled\": <boolean>\n                              }\n                           }\n                        },\n                        \"error_handler\": {\n                           \"config\": {\n                              \"enabled\": <boolean>,\n                              \"function_name\": \"<Error Handler Function Name>\"\n                           }\n                        }\n                     }\n\n            For more information, see\n            :ref:`Trigger Configuration Files <appconfig-triggers>`.\n\n         .. step:: Deploy Your Changes\n\n            .. include:: /includes/triggers/app-services/cli-deploy.rst\n\n   .. tab:: App Services API\n      :tabid: api\n\n      .. note::\n\n         This procedure refers to App Services Admin API endpoints. It does\n         *not* use {+atlas-admin-api+} endpoints.\n\n      .. procedure::\n\n         .. step:: Authenticate a MongoDB |service| User\n\n            .. include:: /includes/triggers/app-services/api-authenticate-instructions.rst\n\n         .. step:: Create a Deployment Draft (Optional)\n\n            A draft represents a group of application changes that you\n            can deploy or discard as a single unit. If you don't create\n            a draft, updates automatically deploy individually.\n\n            To create a draft, send a ``POST`` request with no body to\n            the :admin-api-endpoint:`Create a Deployment Draft\n            <tag/deploy/operation/adminCreateDeploymentDraft>` endpoint:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/aws-eventbridge.txt"
  },
  {
    "code": "         :caption: Trigger Configuration\n         \n         {\n           \"type\": \"DATABASE\",\n           \"name\": \"shippingLocationUpdater\",\n           \"function_name\": \"textShippingUpdate\",\n           \"config\": {\n             \"service_name\": \"mongodb-atlas\",\n             \"database\": \"store\",\n             \"collection\": \"orders\",\n             \"operation_types\": [\"UPDATE\"],\n             \"unordered\": false,\n             \"full_document\": true,\n             \"match\": {}\n           },\n           \"disabled\": false\n         }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/database-triggers.txt"
  },
  {
    "code": "   :caption: textShippingUpdate\n\n   exports = async function (changeEvent) {\n     // Destructure out fields from the change stream event object\n     const { updateDescription, fullDocument } = changeEvent;\n\n     // Check if the shippingLocation field was updated\n     const updatedFields = Object.keys(updateDescription.updatedFields);\n     const isNewLocation = updatedFields.some(field =>\n       field.match(/shippingLocation/)\n     );\n\n     // If the location changed, text the customer the updated location.\n     if (isNewLocation) {\n       const { customerId, shippingLocation } = fullDocument;\n       const mongodb = context.services.get(\"mongodb-atlas\");\n       const customers = mongodb.db(\"store\").collection(\"customers\");\n       const { location } = shippingLocation.pop();\n       const customer = await customers.findOne({ _id: customerId });\n\n       const twilio = require('twilio')(\n         // Your Account SID and Auth Token from the Twilio console:\n         context.values.get(\"TwilioAccountSID\"),\n         context.values.get(\"TwilioAuthToken\"),\n       );\n\n       await twilio.messages.create({\n         To: customer.phoneNumber,\n         From: context.values.get(\"ourPhoneNumber\"),\n         Body: `Your order has moved! The new location is ${location}.`\n       })\n     }\n   };\n\n.. _atlas-suspended_triggers:\n.. _atlas-resume-a-suspended-trigger:\n\nSuspended Triggers\n------------------\n\nDatabase Triggers may enter a suspended state in response to an event\nthat prevents the Trigger's change stream from continuing. Events that\ncan suspend a Trigger include:\n\n- :manual:`invalidate events </reference/change-events/#invalidate-event>`\n  such as ``dropDatabase``, ``renameCollection``, or those caused by\n  a network disruption.\n\n- the **resume token** required to resume the change stream is no longer in the\n  cluster :manual:`oplog </core/replica-set-oplog/>`. The App logs\n  refer to this as a ``ChangeStreamHistoryLost`` error.\n\nIn the event of a suspended or failed Trigger, |service| sends the\nproject owner an email alerting them of the issue.\n\n.. _atlas-automatically-resume-a-suspended-trigger:\n\nAutomatically Resume a Suspended Trigger\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can configure a Trigger to automatically resume if the Trigger was suspended\nbecause the resume token is no longer in the oplog.\nThe Trigger does not process any missed change stream events between\nwhen the resume token is lost and when the resume process completes.\n\nWhen :ref:`creating or updating a Database Trigger\n<atlas-create-a-database-trigger>` in the {+atlas-ui+}:\n\na. Navigate to the configuration page of the Trigger you want to automatically\n   resume if suspended.\n\n#. In the :guilabel:`Advanced (Optional)` section, select :guilabel:`Auto-Resume\n   Triggers`.\n\n#. Save and deploy the changes.\n\n.. _atlas-manually-resume-a-suspended-trigger:\n\nManually Resume a Suspended Trigger\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen you manually resume a suspended Trigger, your App attempts to resume the Trigger\nat the next change stream event after the change stream stopped.\nIf the resume token is no longer in the cluster oplog, the Trigger\nmust be started without a resume token. This means the Trigger begins\nlistening to new events but does not process any missed past events.\n\nYou can adjust the oplog size to keep the resume token for more time after\na suspension by :atlas:`scaling your |service| cluster </scale-cluster/>`.\nMaintain an oplog size a few times greater than\nyour cluster's peak oplog throughput (GB/hour) to reduce the risk of a\nsuspended Trigger's resume token dropping off the oplog\nbefore the Trigger executes.\nView your cluster's oplog throughput in the **Oplog GB/Hour** graph in the\n:atlas:`|service| cluster metrics </monitor-cluster-metrics/>`.\n\nYou can restart a suspended Trigger from the {+atlas-ui+} or with the App Services CLI.\n\n.. tabs::\n\n   .. tab:: {+atlas-ui+}\n      :tabid: ui\n\n      .. procedure::\n\n         .. include:: /includes/nav/steps-triggers.rst\n\n         .. step:: Find the Suspended Trigger\n\n            On the :guilabel:`Triggers` page, find the Trigger that you want to\n            disable in the list of Triggers. |service| marks suspended Triggers\n            with a\n            :guilabel:`Status` of :guilabel:`Suspended`.\n\n         .. step:: Restart the Trigger\n\n            Click :guilabel:`Restart` in the Trigger's :guilabel:`Actions` column.\n            You can choose to restart the Trigger with a change stream\n            :manual:`resume token </changeStreams/#resume-a-change-stream>` or\n            open a new change stream.\n\n            Indicate whether or not to use a resume token, then click :guilabel:`Resume Database Trigger`.\n\n            **Note:** If you use a :manual:`resume token\n            </changeStreams/#resume-a-change-stream>`, |service|\n            attempts to resume the Trigger's underlying change\n            stream at the event immediately following the last\n            change event it processed. If successful, the Trigger\n            processes any events that occurred while it was\n            suspended. If you do not use a resume token, the\n            Trigger begins listening for new events but will not\n            fire for any events that occurred while it was\n            suspended.\n\n            .. figure:: /images/triggers/resume-database-trigger-modal.png\n                :alt: The resume database Trigger modal in the UI\n\n   .. tab:: App Services CLI\n      :tabid: cli\n\n      .. procedure::\n\n         .. step:: Authenticate a MongoDB |service| User\n\n            .. include:: /includes/triggers/app-services/cli-login.rst\n\n         .. step:: Pull Your App's Latest Configuration Files\n\n            .. include:: /includes/triggers/app-services/cli-pull-latest.rst\n\n         .. step:: Verify the Trigger Configuration File Exists\n\n            If you exported a new copy of your application, it should already\n            include an up-to-date configuration file for the suspended Trigger.\n            You can confirm that the configuration file exists by looking\n            in the ``/triggers`` directory for a :ref:`Trigger configuration file\n            <config-database-trigger>` with the same name as the Trigger.\n\n         .. step:: Redeploy the Trigger\n\n            After you have verified that the Trigger configuration file exists,\n            push the configuration back to your app. App Services\n            automatically attempts to resume any suspended Triggers included\n            in the deployment.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/database-triggers.txt"
  },
  {
    "code": "            :emphasize-lines: 9\n\n            {\n               \"id\": \"6142146e2f052a39d38e1605\",\n               \"name\": \"steve\",\n               \"type\": \"SCHEDULED\",\n               \"config\": {\n                  \"schedule\": \"*/1 * * * *\"\n               },\n               \"function_name\": \"myFunc\",\n               \"disabled\": true\n            }\n\n      #. Deploy your changes:\n\n         .. include:: /includes/triggers/app-services/cli-deploy.rst\n\n\nRestoring from a Snapshot\n-------------------------\n\nWhen you restore the database from a snapshot, any Trigger that was disabled or\nsuspended is re-enabled. The Trigger will not fire for events that have already\nbeen processed. For more information on restoring from snapshots, see\n:ref:`restore-overview`.\n\nConsider the following scenario:\n\n1. Your database Trigger is disabled or suspended.\n\n#. New documents are added while the Trigger is disabled.\n\n#. You restore the database from a snapshot to a time prior to the new documents\n   being added.\n\n#. |service| restarts the disabled database Trigger.\n\n#. The restarted Trigger picks up all of the newly-added documents and fires for\n   each document. However, it will *not* fire again for events that have already\n   been processed.\n\n.. note::\n\n   If a previously-enabled database Trigger is running during snapshot restoration,\n   you will see an error in the Edit Trigger section of the {+atlas-ui+} because the\n   Trigger cannot connect to the |service| cluster during the restore process.\n   After the\n   snapshot restoration completes, the error disappears and the Trigger continues\n   to execute normally.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/disable.txt"
  },
  {
    "code": "   :caption: The JSON schema for store.purchases\n\n  {\n    \"title\": \"Purchase\",\n    \"required\": [\"_id\", \"customerId\", \"items\"],\n    \"properties\": {\n      \"_id\": { \"bsonType\": \"objectId\" },\n      \"customerId\": { \"bsonType\": \"objectId\" },\n      \"items\": {\n        \"bsonType\": \"array\",\n        \"items\": {\n          \"bsonType\": \"object\",\n          \"required\": [\"name\", \"quantity\"],\n          \"properties\": {\n            \"name\": { \"bsonType\": \"string\" },\n            \"quantity\": { \"bsonType\": \"int\" }\n          }\n        }\n      }\n    }\n  }\n\n.. include:: /includes/triggers/functions/setup.rst\n\nRun an Aggregation Pipeline\n---------------------------\n\nYou can execute an aggregation pipeline using the\n:method:`collection.aggregate()` method.\n\nThe following :ref:`Function <atlas-functions>` snippet groups all documents\nin the ``purchases`` collection by their ``customerId`` value and\naggregates a count of the number of items each customer purchases as\nwell as the total number of purchases that they made. After grouping the\ndocuments the pipeline adds a new field that calculates the average\nnumber of items each customer purchases at a time,\n``averageNumItemsPurchased``, to each customer's document:\n\n.. include:: /includes/triggers/functions/snippets/aggregate.rst\n\nFind Data with |service| Search\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can run :ref:`|service| Search <fts-top-ref>` queries on a collection\nwith :method:`collection.aggregate()` and the ``$search`` aggregation\nstage.\n\n.. important::\n\n   |service| Functions perform ``$search`` operations as a system user and\n   enforce field-level rules on the returned search results. This means that a\n   user may search on a field for which they do not have read access. In this\n   case, the search is based on the specified field but no returned documents\n   include the field.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/aggregate.txt"
  },
  {
    "code": "   :emphasize-lines: 2\n\n   const mongodb = context.services.get(\"mongodb-atlas\");\n   const admin = mongodb.admin();\n\nParameters\n~~~~~~~~~~\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/api.txt"
  },
  {
    "code": "   :emphasize-lines: 2\n\n   const mongodb = context.services.get(\"mongodb-atlas\");\n   const admin = mongodb.admin();\n   const dbNames = admin.getDBNames();\n\nParameters\n~~~~~~~~~~\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/api.txt"
  },
  {
    "code": "   :emphasize-lines: 2\n\n   const mongodb = context.services.get(\"mongodb-atlas\");\n   const db = mongodb.db(\"myDB\");\n\nParameters\n~~~~~~~~~~\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/api.txt"
  },
  {
    "code": "   :emphasize-lines: 2\n\n   const mongodb = context.services.get(\"mongodb-atlas\");\n   const db = mongodb.db(\"myDB\");\n   const collectionNames = db.getCollectionNames();\n\nParameters\n~~~~~~~~~~\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/api.txt"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   const mongodb = context.services.get(\"mongodb-atlas\");\n   const db = mongodb.db(\"myDB\");\n   const collection = db.collection(\"myCollection\");\n\nParameters\n~~~~~~~~~~\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/api.txt"
  },
  {
    "code": "   :emphasize-lines: 4-8\n   :linenos:\n\n   const taskCollection = context.services.get(\"mongodb-atlas\")\n     .db(\"tracker\").collection(\"tasks\");\n\n   return taskCollection.distinct(\"status\", {})\n     .then(results => {\n         console.log(JSON.stringify(results));\n         console.log(results.length);\n     })\n     .catch(err => console.error(err))\n\nParameters\n~~~~~~~~~~\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/api.txt"
  },
  {
    "code": "   :caption: Read and write data in MongoDB Atlas\n\n   exports = async function() {\n      // Get the cluster's data source client\n      const mdb = context.services.get(\"mongodb-atlas\");\n      // Reference a specific database/collection\n      const db = mdb.db(\"myApp\");\n      const collection = db.collection(\"myCollection\");\n      // Run a MongoDB query\n      return await collection.find({\n         name: \"Rupert\",\n         age: { $lt: 50 },\n      })\n   };\n\n.. _atlas-context-request:\n\nGet Request Metadata (``context.request``)\n------------------------------------------\n\nYou can access information about the incoming request with the\n:ref:`context.request <atlas-context-request>` interface.\n\n.. tip::\n\n   The ``context.request`` interface does not include request body\n   payloads.\n\ncontext.request\n~~~~~~~~~~~~~~~\n\nAn object that contains information about the HTTP request that\ncaused the Function to execute.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/context.txt"
  },
  {
    "code": "   :emphasize-lines: 2\n\n   exports = () => {\n      const R = require(\"ramda\");\n      return R.map(x => x*2, [1,2,3]);\n   }\n\nImport a Module Subfolder\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/dependencies.txt"
  },
  {
    "code": "   :emphasize-lines: 2\n\n   exports = function(arg){\n      const cloneDeep = require(\"lodash/cloneDeep\");\n\n      var original = { name: \"Deep\" };\n      var copy = cloneDeep(original);\n      copy.name = \"John\";\n\n      console.log(`original: ${original.name}`);\n      console.log(`copy: ${copy.name}`);\n      return (original != copy);\n   };\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/dependencies.txt"
  },
  {
    "code": "    :copyable: false\n\n    (high32 * (2**32)) + low32\n\n.. _atlas-bson-double:\n\nBSON.Double\n~~~~~~~~~~~\n\nThe ``BSON.Double`` type represents a 64-bit (8-byte) floating point\nnumber. It constructs a ``BSON.Double`` object from a 64-bit decimal value.\n\n.. important:: Use Decimal128 for Money\n\n   ``BSON.Double`` is subject to floating point rounding errors, so it\n   is not recommended for use cases where decimal values must round\n   exactly, e.g. financial data. For these cases, use\n   :ref:`BSON.Decimal128 <atlas-bson-decimal128>` instead.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/globals.txt"
  },
  {
    "code": "   :language: js\n\n.. _atlas-functions-view-logs:\n\nView Logs\n---------\n\nYou can view records of all Function executions invoked by an |service| Trigger\non the :guilabel:`Logs` page. This includes Functions that failed to\nsuccessfully execute due to an error.\n\nFor more information, see :ref:`atlas-logs`.\n\n.. _atlas-functions-retry:\n\nRetry Functions\n---------------\n\nAtlas Functions do not have built-in retry behavior.\n\nYou can add custom retry behavior. For example, you might want to add\nretry behavior if the third-party service that your Function calls has\nintermittent connectivity, and you want the Function to re-execute\neven if the third-party service is temporarily down.\n\nThe following sections describe the available strategies to add retry\nbehavior to your Functions:\n\n- :ref:`Recursively Call Functions in Error Handling Blocks <functions-recursive-call>`\n- :ref:`Use Database Triggers to Retry Functions <functions-database-trigger-retry>`\n\n.. _atlas-functions-recursive-call:\n\nRecursively Call Function in Error Handling Blocks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can handle operations that might fail by calling a Function recursively.\n\nOn a high level, this process includes the following components:\n\n- Execute operations that you want to retry in a ``try`` statement\n  and have the Function call itself in a ``catch`` statement.\n- To prevent indefinite execution, set a maximum number of retries.\n  Every time the Function fails and enters the ``catch`` statement,\n  increment a count of the current number of retries.\n  Stop the recursive execution when the Function's current number of retries\n  reaches the max number of retries.\n- You may also want to throttle retries to reduce the total number of executions\n  in a time frame.\n\nThe following table describes some advantages and disadvantages\nof handling Function retries with the recursive call strategy.\n\n.. list-table::\n   :header-rows: 1\n   :widths: 50 50\n\n   * - Advantages\n     - Disadvantages\n\n   * - - All retry logic occurs within one function.\n       - Function can return a value after a retry.\n       - Minimal additional code.\n     - - All retries must occur within a single Function's max execution time.\n\nThe following code example demonstrates an implementation of retrying a Function\nby using recursion in error-handling blocks:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "   :language: js\n   :caption: Recursive Call Strategy Example\n\n.. _atlas-functions-database-trigger-retry:\n\nUse Database Triggers to Retry\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can also retry Functions by using a :ref:`Database Trigger <atlas-database-trigger>` to execute retries and a MongoDB collection to track previously-failed executions.\n\nOn a high level, this process includes the following components:\n\n- **Main Function** that executes the logic you want to retry,\n  wrapped in the handler function.\n- **Failed execution tracker MongoDB collection**\n  that tracks failed executions of the main Function.\n- **Handler Function** that invokes the main Function and logs when the function fails\n  to the failed execution tracker collection.\n- **Database Trigger Function** that reruns the handler function whenever\n  the handler function adds an error to the failed execution tracker collection.\n\nYou can support multiple main functions with one set of a handler Function,\nexecution tracker collection, and Database Trigger Function.\n\n.. list-table::\n   :header-rows: 1\n   :widths: 50 50\n\n   * - Advantages\n     - Disadvantages\n\n   * - - Each retry is its own Function execution, with own max execution time\n         and resources.\n     - - If the Function is retried, it cannot return a value.\n       - Each Function call requires two Function invocations, one for the Function\n         itself and one for the retry handler.\n       - More complex logic, which can be more difficult to write, debug, and monitor.\n\nYou can create a retry mechanism for Functions in the {+atlas-ui+} or using the\nApp Services CLI. The following procedure walks you through creating a handler,\na retry Database Trigger Function, and a main Function.\n\n.. procedure::\n\n   .. step:: Create the Handler Function\n\n      First, create the handler Function ``handleRetry`` that invokes the main Function.\n\n      ``handleRetry`` accepts the following parameters:\n\n      .. list-table::\n        :header-rows: 1\n        :widths: 25 25 50\n\n        * - Parameter\n          - Type\n          - Description\n\n        * - ``functionToRetry``\n          - JavaScript Function\n          - Function to retry.\n        * - ``functionName``\n          - String\n          - Name of the function you want to retry.\n        * - ``operationId``\n          - ObjectId\n          - Unique identifier for the main function's execution, including retries.\n        * - ``previousRetries``\n          - Number\n          - How many times the main function has previously been tried.\n        * - ``...args``\n          - Rest parameters\n          - Indefinite number of arguments passed to the main function.\n\n      ``handleRetry`` performs the following operations:\n\n      a. Attempts to execute ``functionToRetry`` in a ``try`` statement.\n         If the execution is successful, ``handleRetry`` returns the value\n         returned by ``functionToRetry``.\n      #. If the execution of ``functionToRetry`` in the previous step throws an error,\n         the ``catch`` statement handles the error as follows:\n\n         i. Checks if the number of previous retries equals the\n            maximum permitted number of retries.\n            If the two numbers are the same, then the function throws an error\n            because the max retries has been reached. The function no longer attempts\n            to retry.\n         #. Build a function execution log entry object to insert into the database.\n         #. Get a reference to the failed execution tracker collection.\n         #. Insert the function log execution log entry into\n            the failed execution tracker collection. This insertion operation\n            causes the Database Trigger Function, which you will make in the next step,\n            to fire.\n\n      The main function is passed as the argument ``functionToRetry``.\n      ``handleRetry`` attempts to execute the main Function.\n      If the execution fails, this function attempts to retry the main function.\n\n      .. tabs::\n\n         .. tab:: {+atlas-ui+}\n            :tabid: ui\n\n            a. Navigate to :guilabel:`Functions`. Click the button :guilabel:`Create New Function`.\n\n            #. In the field :guilabel:`Name`, add ``handleRetry``.\n\n            #. In the :guilabel:`Function Editor` add the following code, then\n               save the Function:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :language: js\n                  :caption: handleRetry.js\n\n         .. tab:: App Services CLI\n            :tabid: cli\n\n            a. Add the following to :file:`functions/config.json`:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :caption: functions/config.json\n\n                  [\n                    {\n                      \"name\": \"handleRetry\",\n                      \"private\": true,\n                      \"run_as_system\": true\n                    }\n                    // ...other configuration\n                  ]\n\n            #. Create the file for the Function\n               :file:`functions/handleRetry.js`:\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                   :language: js\n                   :caption: functions/handleRetry.js\n\n            #. Deploy your changes:\n\n               .. include:: /includes/triggers/app-services/cli-deploy.rst\n\n   .. step:: Create the Retry Database Trigger\n\n      .. tabs::\n\n         .. tab:: {+atlas-ui+}\n            :tabid: ui\n\n            a. Navigate to the :guilabel:`Triggers` page:\n\n               .. include:: /includes/nav/list-triggers.rst\n\n            #. Click :guilabel:`Add a Trigger`.\n\n            #. Create the Trigger with the following configuration:\n\n               .. list-table::\n                  :header-rows: 1\n                  :widths: 50 50\n\n                  * - Field\n                    - Value\n\n                  * - Name\n                    - Name of your choosing (ex: ``retryOperation``)\n\n                  * - Enabled\n                    - Yes\n\n                  * - Skip Events on Re-Enable\n                    - Yes\n\n                  * - Event Ordering\n                    - Yes\n\n                  * - Cluster Name\n                    - Name of your choosing (ex: ``mongodb-atlas``)\n\n                  * - Database Name\n                    - Name of your choosing (ex: ``logs``)\n\n                  * - Collection Name\n                    - Name of your choosing (ex: ``failed_execution_logs``)\n\n                  * - Operation Type\n                    - Insert\n\n                  * - Full Document\n                    - Yes\n\n                  * - Document Preimage\n                    - No\n\n                  * - Select An Event Type\n                    - Function\n\n                  * - Function\n                    - Click :guilabel:`+ New Function`. Refer to the following information\n                      about the contents of the function.\n\n                  * - Advanced Configuration\n                    - N/A - No advanced configuration necessary.\n\n            #. Now add the code to the Function that the Trigger invokes.\n\n               The function ``retryOperation`` takes as a parameter ``logEntry``, the document that the\n               retry handler posted to the failed execution tracker collection.\n               Then, ``retryOperation`` uses :ref:`context.functions.execute() <context-functions>`\n               to invoke the main function with information from ``logEntry``.\n\n               i. In the field :guilabel:`Function Name`, add ``retryOperationDbTrigger``.\n\n               #. For the field :guilabel:`Function`, add the following code,\n                  then save the Trigger:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                     :language: js\n                     :caption: functions/retryOperationDbTrigger.js\n\n         .. tab:: App Services CLI\n            :tabid: cli\n\n            a. Authenticate a MongoDB |service| user:\n\n               .. include:: /includes/triggers/app-services/cli-login.rst\n\n            #. Pull your App's latest configuration files:\n\n               .. include:: /includes/triggers/app-services/cli-pull-latest.rst\n\n            #. Add configuration for the Database Trigger. For more information,\n               refer to the :ref:`Trigger configuration reference\n               <appconfig-triggers>`.\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :language: json\n                  :caption: triggers/retryOperation.json\n\n            #. Now add the code to the :file:`functions/config.json` Function\n               that the Trigger invokes.\n\n               The function ``retryOperation`` takes as a parameter ``logEntry``, the document that the\n               retry handler posted to the failed execution tracker collection.\n               Then, ``retryOperation`` uses :ref:`context.functions.execute() <context-functions>`\n               to invoke the main function with information from ``logEntry``.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :caption: functions/config.json\n\n                  [\n                    // ...other configuration\n                    {\n                      \"name\": \"retryOperationDbTrigger\",\n                      \"private\": true\n                    }\n                  ]\n\n            #. Add the following code to the file :file:`functions/retryOperationDbTrigger.js`:\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :language: js\n                  :caption: retryOperationDbTrigger.js\n\n            #. Deploy your changes:\n\n               .. include:: /includes/triggers/app-services/cli-deploy.rst\n\n   .. step:: Create the Main Function\n\n      Now that you have the function handler and the retry Database Trigger Function,\n      you can write the main function.\n\n      In the following example, the Function randomly throws an error when performing addition.\n      The JavaScript functions that execute this logic are the following:\n\n      - ``getRandomOneTwoThree()``: Helper function for generating errors\n        for the example.\n      - ``additionOrFailure()``: Function with the main logic.\n\n      The invocation of ``additionOrFailure()`` wrapped by the retry handler\n      occurs in the exported function ``additionWithRetryHandler()``.\n      *All* functions that use the retry handler function should resemble this function.\n\n      You must include the correct parameters to make this function work\n      with the rest of the retry logic. These parameters are:\n\n      .. list-table::\n         :header-rows: 1\n         :widths: 25 25 50\n\n         * - Parameter\n           - Type\n           - Description\n\n         * - ``...args``\n           - Rest parameters\n           - Zero or more parameters to pass to the function with main logic.\n             In the case of this example, the two numbers added\n             in ``additionOrFailure()``, ``num1`` and ``num2``.\n\n         * - ``operationId``\n           - :ref:`BSON.Object.Id<bson-objectid>`\n           - Unique identifier for the Function\n             call and retries. Set default value to a ``new BSON.ObjectId()``.\n\n         * - ``retries``\n           - Number\n           - Set default value to 0.\n\n      The body of ``additionWithRetryHandler`` is the retry handler ``handleRetry``\n      invoked by ``context.functions.execute()``,\n      which in turn invokes ``additionOrFailure``. The arguments you pass to\n      ``context.functions.execute()`` are the following:\n\n      .. list-table::\n         :header-rows: 1\n         :widths: 25 25 50\n\n         * - Argument\n           - Type\n           - Description\n\n         * - ``\"handleRetry\"``\n           - String\n           - Name of the Function you defined to invoke the main function\n             and post to the retry logs if the main function doesn't properly execute.\n\n         * - ``additionOrFailure``\n           - JavaScript function\n           - The main function that ``handleRetry()`` invokes.\n\n         * - ``operationId``\n           - BSON.ObjectId\n           - Passed in as argument from the parameter ``operationId`` of ``additionWithRetryHandler()``.\n\n         * - ``retries``\n           - Number\n           - Passed in as argument from the parameter ``retries`` of ``additionWithRetryHandler()``.\n\n         * - ``...args``\n           - Spread arguments\n           - Zero or more arguments to pass to the function with main logic.\n             Passed in as argument from the parameter ``...args`` of\n             ``additionWithRetryHandler()``\n\n      .. tabs::\n\n         .. tab:: {+atlas-ui+}\n            :tabid: ui\n\n            a. In the field :guilabel:`Function Name`, add\n               ``additionWithRetryHandler``.\n\n            #. For the field :guilabel:`Function`, add the following code:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :language: js\n                  :caption: additionWithRetryHandler.js\n\n            #. Click :guilabel:`Save`.\n\n         .. tab:: App Services CLI\n            :tabid: cli\n\n            a. Add the Function metadata to :file:`functions/config.json`:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :caption: functions/config.json\n\n                  [\n                      // ...other configuration\n                      {\n                        \"name\": \"additionWithRetryHandler\",\n                        \"private\": false\n                      }\n                  ]\n\n            #. Add the following code to the file :file:`functions/additionWithRetryHandler.js`:\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "                  :language: js\n                  :caption: functions/additionWithRetryHandler.js\n\n            #. Deploy your changes:\n\n               .. include:: /includes/triggers/app-services/cli-deploy.rst\n\n      Now when you invoke ``additionWithRetryHandler``, the Function will retry if it fails.\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/handle-errors.txt"
  },
  {
    "code": "   :caption: Nested Query Expressions\n\n   { \"<Field Name>\": { \"<Nested Field Name>\": <Value | Expression> } }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/read.txt"
  },
  {
    "code": "   :caption: Dot Notation\n\n   { \"<Field Name>.<Nested Field Name>\": <Value | Expression> }\n\n.. example::\n\n   The following query matches documents where the first review in the\n   ``reviews`` array was left by someone with the username\n   ``JoeMango``:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/read.txt"
  },
  {
    "code": "               :caption: values/<ValueName>.json\n\n               {\n                  \"name\": \"<Value Name>\",\n                  \"from_secret\": <boolean>,\n                  \"value\": <Stored JSON Value|Secret Name>\n               }\n\n            .. list-table::\n               :header-rows: 1\n               :widths: 25 75\n\n               * - Field\n                 - Description\n\n               * - ``name``\n                 - A unique name for the Value. This name is how you refer to\n                   the Value in Functions and rules.\n\n               * - ``from_secret``\n                 - Default: ``false``. If ``true``, the Value exposes a\n                   :ref:`Secret <atlas-app-secret>` instead of a plain-text JSON Value.\n\n               * - ``value``\n                 - The stored data the Value exposes when referenced:\n\n                   - If ``from_secret`` is ``false``, ``value`` can be a\n                     standard JSON string, array, or object.\n\n                   - If ``from_secret`` is ``true``, ``value`` is a string\n                     that contains the name of the Secret the Value exposes.\n\n         .. step:: Deploy Your Changes:\n\n            .. include:: /includes/triggers/app-services/cli-deploy.rst\n\nAccess a Value\n--------------\n\nYou can access a Value's stored data from an |service| Function\nusing the :ref:`context.values <atlas-context-values>` module.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/values.txt"
  },
  {
    "code": "   :caption: Example Function that uses a Value\n\n   exports = function() {\n      const adminUsers = context.values.get(\"adminUsers\");\n      const isAdminUser = adminUsers.indexOf(context.user.id) > 0;\n      return isAdminUser;\n   }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/values.txt"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   db.products.update(\n     { sku: \"unknown\" },\n     { $unset: { _id__baas_transaction: \"\" } }\n   )\n\n.. _atlas-mongodb-update-a-single-document:\n\nUpdate a Single Document (``updateOne()``)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can update a single document using the\n:method:`collection.updateOne()` method.\n\nThe following :ref:`Function <atlas-functions>` snippet updates the ``name``\nof a single document in the ``items`` collection from ``lego`` to\n``blocks`` and adds a ``price`` of ``20.99``:\n\n.. include:: /includes/triggers/functions/snippets/updateOneSetField.rst\n\nAlternatively, you can update a single document using \n:method:`collection.findOneAndUpdate()` or \n:method:`collection.findOneAndReplace()`. Both methods allow you to\nfind, modify, and return the updated document in a single operation.\n\n.. _atlas-mongodb-update-one-or-more-documents:\n\nUpdate One or More Documents (``updateMany()``)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can update multiple documents in a collection using the\n:method:`collection.updateMany()` method.\n\nThe following :ref:`Function <atlas-functions>` snippet updates all documents\nin the ``items`` collection by multiplying their ``quantity`` values by\n``10``:\n\n.. include:: /includes/triggers/functions/snippets/updateMany.rst\n\n.. _atlas-mongodb-upsert-documents:\n\nUpsert Documents\n~~~~~~~~~~~~~~~~\n\nIf an update operation does not match any document in the collection,\nyou can automatically insert a single new document into the collection\nthat matches the update query by setting the ``upsert`` option to\n``true``.\n\nThe following :ref:`Function <atlas-functions>` snippet updates a document in\nthe ``items`` collection that has a ``name`` of ``board game`` by\nincrementing its ``quantity`` by ``5``. The ``upsert`` option is\nenabled, so if no document has a ``name`` value of ``\"board game\"`` then\nMongoDB inserts a new document with the ``name`` field set to ``\"board\ngame\"`` and the ``quantity`` value set to ``5``:\n\n.. include:: /includes/triggers/functions/snippets/updateOneUpsert.rst\n\n.. _atlas-mongodb-update-operators-fields:\n\nField Update Operators\n~~~~~~~~~~~~~~~~~~~~~~\n\nField operators let you modify the fields and values of a document.\n\nSet the Value of a Field\n````````````````````````\n\nYou can use the :manual:`$set </reference/operator/update/set/>`\noperator to set the value of a single field without affecting other\nfields in a document.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/write.txt"
  },
  {
    "code": "      :emphasize-lines: 3\n      \n      await students.updateMany(\n         {},\n         { $inc: { \"grades.$[]\": 10 } },\n      )\n   \n   After the update, every grade value has increased by 10:\n   \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/write.txt"
  },
  {
    "code": "      :emphasize-lines: 5, 9\n      \n      await students.updateMany(\n         { },\n         {\n           $set: {\n             \"grades.$[grade]\" : 100\n           }\n         },\n         {\n           arrayFilters: [{ \"grade\": { $gt: 100 } }]\n         }\n      )\n   \n   After the update, all grade values greater than 100 are set to exactly 100\n   and all other grades are unaffected:\n   \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/write.txt"
  },
  {
    "code": "      :emphasize-lines: 4\n\n      await accounts.updateOne(\n        { name: userSubtractPoints },\n        { $inc: { browniePoints: -1 * pointVolume } },\n        { session }\n      );\n\n#. If the callback encounters an error, call\n   ``session.abortTransaction()`` to stop the transaction. An aborted\n   transaction does not modify any data.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/write.txt"
  },
  {
    "code": "      :emphasize-lines: 4\n      \n      try {\n        // ...\n      } catch (err) {\n        await session.abortTransaction();\n      }\n\n#. When the transaction is complete, call ``session.endSession()`` to\n   end the session and free resources.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/write.txt"
  },
  {
    "code": "      :emphasize-lines: 4\n      \n      try {\n        // ...\n      } finally {\n        await session.endSession();\n      }\n\nThe following example creates two users, \"henry\" and \"michelle\", and\na uses a transaction to move \"browniePoints\" between those users\natomically:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/write.txt"
  },
  {
    "code": "   :language: javascript\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions/write.txt"
  },
  {
    "code": "   :caption: A basic Function that returns a greeting\n\n   exports = function(name) {\n     return `Hello, ${name ?? \"stranger\"}!`\n   }\n\n**Functions are Serverless**\n\nWhen a Function is called, your app routes the\nrequest to a managed app server that evaluates your code and returns the\nresult. This model makes Functions *serverless*, which means that you don't\nhave to deploy and manage a server to run the code. Instead, you write the\nFunction source code and your app handles the execution environment.\n\n**Functions have Context**\n\nA Function runs in a context that reflects its\nexecution environment. The context includes the user that called the Function,\nhow they called it, and the state of your app when they called it. You can use\ncontext to run user-specific code and work with other parts of your app.\n\nTo learn more about how to work with Function context, see :ref:`Context\n<atlas-function-context>`.\n\n.. _atlas-when-to-use-functions:\n\nWhen to Use Functions\n---------------------\n\nFunctions can run arbitrary JavaScript code that you define, which means\nyou can use them for almost anything. Common use cases include\nlow-latency, short-running tasks like data movement, transformations,\nand validation. You can also use them to connect to external services\nand abstract away implementation details from your client applications.\n\n:ref:`Triggers <atlas-triggers>` automatically call Functions to handle specific\nevents. For example, whenever a Database Trigger observes a change event it\ncalls its associated Function with the change event as an argument. In the\nTrigger Function, you can then access information from the change event and\nrespond appropriately.\n\n.. note::\n\n   Database and Scheduled Triggers always execute in the context of a\n   system user.\n\nHow to Write a Function\n-----------------------\n\nThe code for a Function is essentially a named JavaScript source file,\nwhich means you can define multiple JavaScript functions in a single\nFunction file. The file must export a single JavaScript function to\nserve as the entrypoint for incoming calls. When you call a Function by\nname, you're actually calling the JavaScript function assigned to\n``exports`` in the Function's source file.\n\nFor example, here's a simple Function that accepts a ``name`` argument,\nadds a log message, and returns a greeting for the provided name:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "               :caption: functions/hello.js\n\n               exports = async function hello(...args) {\n                 // Write your function logic here! You can...\n                 // Import dependencies\n                 const assert = require(\"assert\")\n                 assert(typeof args[0] === \"string\")\n                 // Use ES6+ syntax\n                 const sayHello = (name = \"world\") => {\n                   console.log(`Hello, ${name}.`)\n                 }\n                 // Return values back to clients or other functions\n                 return sayHello(args[0])\n               }\n\n            .. note::\n\n               You can use most modern (ES6+) JavaScript features in Functions,\n               including async/await, destructuring, and template literals.\n\n         .. step:: Configure the Function\n\n            In the ``functions`` directory of your local application, open the\n            ``config.json`` file and add a :ref:`configuration object\n            <appconfig-functions>` for your new Function to the array.\n\n            The object must have the following form:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "                    :caption: System User Configuration\n\n                    {\n                       \"run_as_system\": true,\n                       \"run_as_user_id\": \"\",\n                       \"run_as_user_id_script_source\": \"\"\n                    }\n\n               - **Script**: To execute the Function as a user returned from another Function, use the following configuration:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "                    :caption: Script Configuration\n\n                    {\n                       \"run_as_system\": false,\n                       \"run_as_user_id\": \"\",\n                       \"run_as_user_id_script_source\": \"<Function Source Code>\"\n                    }\n\n               - **User (Deprecated)**: To execute a Function as a specific\n                 user, use the following configuration:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "                    :caption: User ID Configuration (Deprecated)\n\n                    {\n                       \"run_as_system\": false,\n                       \"run_as_user_id\": \"<App Services User Id>\",\n                       \"run_as_user_id_script_source\": \"\"\n                    }\n\n            b. Configure the Function logs:\n\n               To include the arguments that the Function received in the log\n               entry for each execution of the Function, set ``disable_arg_logs``\n               to ``false``.\n\n            c. Specify an Authorization expression:\n\n               You can dynamically authorize requests based on the contents of\n               each request by defining a :guilabel:`Can Evaluate`\n               :ref:`expression <expressions>`. |service| evaluates the\n               expression whenever the Function is called. If you do not specify\n               an expression, |service| automatically authorizes all\n               authenticated incoming requests.\n\n               The expression can expand standard :ref:`expression variables\n               <expressions>`, including the :json-expansion:`%%request` and\n               :json-expansion:`%%user` expansions.\n\n               For example, the following expression only authorizes incoming\n               requests if the sender's IP address is not included in the\n               specified list of addresses:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "                  :caption: Example Authorization Expression\n\n                  {\n                     \"%%request.remoteIPAddress\": {\n                        \"$nin\": [\n                           \"248.88.57.58\",\n                           \"19.241.23.116\",\n                           \"147.64.232.1\"\n                        ]\n                     }\n                  }\n\n            d. Configure the privacy level:\n\n               To prevent client applications from seeing or calling the\n               Function, set ``private`` to ``true``.\n\n         .. step:: Deploy Your Changes:\n\n            Push the Function configuration and source code to deploy it to your app. You can begin using the Function immediately.\n\n            .. include:: /includes/triggers/app-services/cli-deploy.rst\n\n.. _atlas-call-function-json-expression:\n\nCall a Function\n---------------\n\nYou can call a Function from another Function or using the App Services CLI.\n\nThe examples in this section demonstrate calling a simple Function named\n``sum`` that takes two arguments, adds them, and returns the result:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "   :caption: functions/sum.js\n\n   // sum: adds two numbers\n   exports = function sum(a, b) {\n     return a + b;\n   };\n\n.. _atlas-call-function-from-function:\n\nCall from a Function\n~~~~~~~~~~~~~~~~~~~~\n\nYou can call a Function from another Function through the\n:ref:`context.functions <atlas-context-functions>` interface, which is\navailable as a global variable in any Function. The called Function\nruns in the same context as the Function that called it.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "   :emphasize-lines: 4\n\n   appservices function run \\\n     --name=sum \\\n     --args=1 --args=2 \\\n     --user=61a50d82532cbd0de95c7c89\n\n.. _atlas-function-constraints:\n\nConstraints\n-----------\n\n- Functions are capped at 300 seconds of runtime\n  per request, after which a Function will time out and fail.\n\n- Functions may use up to 350MB of memory at any time.\n\n- Functions are limited to 1000 async operations.\n\n- Functions support most commonly used ES6+ features and Node.js\n  built-in modules. However, some features that are uncommon or unsuited\n  to serverless workloads are not supported. For more information, see\n  :ref:`JavaScript Support <atlas-js-support>`.\n\n- A Function may open a maximum of 25 sockets using the :nodejs:`net\n  <docs/v10.18.1/api/net.html>` built-in module.\n\n- Incoming requests are limited to a maximum size of 18 MB. This limit\n  applies to the total size of all arguments passed to the Function.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/functions.txt"
  },
  {
    "code": "            :caption: /triggers/<triggers name>.json\n\n            {\n               \"type\": \"SCHEDULED\",\n               \"name\": \"<Trigger Name>\",\n               \"function_name\": \"<Trigger Function Name>\",\n               \"config\": {\n                 \"schedule\": \"<CRON expression>\"\n               },\n               \"disabled\": <boolean>\n            }\n\n      #. Deploy your changes:\n\n         .. include:: /includes/triggers/app-services/cli-deploy.rst\n\n.. _atlas-scheduled-triggers-configuration:\n\nConfiguration\n-------------\n\nScheduled Triggers have the following configuration options:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 15 30\n\n   * - Field\n     - Description\n\n   * - | :guilabel:`Trigger Type`\n       | ``type: <string>``\n\n     - Select :guilabel:`Scheduled`.\n\n   * - | :guilabel:`Schedule Type`\n       | ``config.schedule: <string>``\n\n     - Required. You can select :guilabel:`Basic` or :guilabel:`Advanced`. A Basic\n       schedule executes the Trigger periodically based on the interval you set,\n       such as \"every five minutes\" or \"every Monday\".\n\n       An Advanced schedule runs the Trigger based on the custom\n       :ref:`CRON expression <atlas-CRON-expressions>` that you define.\n\n   * - | :guilabel:`Skip Events on Re-Enable`\n       | ``skip_catchup_event: <boolean>``\n\n     - Disabled by default. If enabled, any change events that occurred while\n       this Trigger was disabled will not be processed.\n\n   * - | :guilabel:`Event Type`\n       | ``function_name: <string>``\n\n     - Within the :guilabel:`Event Type` section, you choose what action is taken when\n       the Trigger fires. You can choose to run a :ref:`Function <atlas-functions>` or use\n       :ref:`AWS EventBridge <atlas-aws-eventbridge>`.\n\n       A Scheduled Trigger does not pass any arguments to its linked\n       Function.\n     \n   * - | :guilabel:`Trigger Name`\n       | ``name: <string>``\n\n     - The name of the trigger.\n\n.. _atlas-CRON-expressions:\n\nCRON Expressions\n----------------\n\nCRON expressions are user-defined strings that use standard\n:wikipedia:`cron <Cron>` job syntax to define when a scheduled\nTrigger should execute. |service| executes Trigger CRON expressions based on\n:wikipedia:`UTC time <Coordinated_Universal_Time>`. Whenever all of the fields\nin a CRON expression match the current date and time, |service| fires the\nTrigger associated with the expression.\n\nExpression Syntax\n-----------------\n\nFormat\n~~~~~~\n\nCRON expressions are strings composed of five space-delimited fields.\nEach field defines a granular portion of the schedule on which its\nassociated Trigger executes:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/scheduled-triggers.txt"
  },
  {
    "code": "         :caption: Trigger Configuration\n         \n         {\n           \"type\": \"SCHEDULED\",\n           \"name\": \"reportDailyOrders\",\n           \"function_name\": \"generateDailyReport\",\n           \"config\": {\n             \"schedule\": \"0 7 * * *\"\n           },\n           \"disabled\": false\n         }\n\nTo generate the daily report, the store creates a scheduled Trigger\nthat fires every day at ``7:00 AM UTC``. When the\nTrigger fires, it calls its linked |service| Function,\n``generateDailyReport``, which runs an aggregation\nquery on the ``store.orders`` collection to generate the report. The\nFunction then stores the result of the aggregation in the\n``store.reports`` collection.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/scheduled-triggers.txt"
  },
  {
    "code": "   :caption: generateDailyReport\n\n   exports = function() {\n     // Instantiate MongoDB collection handles\n     const mongodb = context.services.get(\"mongodb-atlas\");\n     const orders = mongodb.db(\"store\").collection(\"orders\");\n     const reports = mongodb.db(\"store\").collection(\"reports\");\n\n     // Generate the daily report\n     return orders.aggregate([\n       // Only report on orders placed since yesterday morning\n       { $match: {\n           orderDate: {\n             $gte: makeYesterdayMorningDate(),\n             $lt: makeThisMorningDate()\n           }\n       } },\n       // Add a boolean field that indicates if the order has already shipped\n       { $addFields: {\n           orderHasShipped: {\n             $cond: {\n               if: \"$shipDate\", // if shipDate field exists\n               then: 1,\n               else: 0\n             }\n           }\n       } },\n       // Unwind individual items within each order\n       { $unwind: {\n           path: \"$orderContents\"\n       } },\n       // Calculate summary metrics for yesterday's orders\n       { $group: {\n           _id: \"$orderDate\",\n           orderIds: { $addToSet: \"$_id\" },\n           numSKUsOrdered: { $sum: 1 },\n           numItemsOrdered: { $sum: \"$orderContents.qty\" },\n           totalSales: { $sum: \"$orderContents.price\" },\n           averageOrderSales: { $avg: \"$orderContents.price\" },\n           numItemsShipped: { $sum: \"$orderHasShipped\" },\n       } },\n       // Add the total number of orders placed\n       { $addFields: {\n           numOrders: { $size: \"$orderIds\" }\n       } }\n     ]).next()\n       .then(dailyReport => {\n         reports.insertOne(dailyReport);\n       })\n       .catch(err => console.error(\"Failed to generate report:\", err));\n   };\n\n   function makeThisMorningDate() {\n     return setTimeToMorning(new Date());\n   }\n\n   function makeYesterdayMorningDate() {\n     const thisMorning = makeThisMorningDate();\n     const yesterdayMorning = new Date(thisMorning);\n     yesterdayMorning.setDate(thisMorning.getDate() - 1);\n     return yesterdayMorning;\n   }\n\n   function setTimeToMorning(date) {\n     date.setHours(7);\n     date.setMinutes(0);\n     date.setSeconds(0);\n     date.setMilliseconds(0);\n     return date;\n   }\n\nPerformance Optimization\n------------------------\n\nUse the Query API with a :manual:`$match</reference/operator/aggregation/match/>`\nexpression to reduce the number of documents your Function looks at.\nThis helps your Function improve performance and not reach\n:ref:`Function memory limits <atlas-function-constraints>`.\n\nSee also the :ref:`Example section for a Scheduled Trigger using a $match expression <atlas-scheduled-trigger-example>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-ui/triggers/scheduled-triggers.txt"
  },
  {
    "code": "   :language: javascript\n   :copyable:\n\nSave the file, then run the following command to load your data into |service|.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/ai-integrations/langchain-js.txt"
  },
  {
    "code": "               :language: javascript\n               :copyable:\n\n         .. step:: Run the following command to execute your file.\n\n            .. include:: /includes/ai-integrations/langchain/langchain-perform-qa-node-output.rst\n\n   .. tab:: RAG with Filtering and MMR Search\n      :tabid: langchain-js-rag-filtering\n\n      .. procedure::\n         :style: normal\n\n         .. step:: Add the following code to your asynchronous function and save the file. \n\n            This code does the following: \n\n            - Instantiates {+avs+} as a `retriever \n              <https://js.langchain.com/docs/modules/data_connection/retrievers/>`__\n              to query for semantically similar documents. It also specifies the\n              following optional parameters:\n\n              - ``searchType`` as ``mmr``, which specifies that {+avs+} retrieves \n                documents based on Max Marginal Relevance (MMR).\n\n              - ``filter`` to add a pre-filter on the ``log.pageNumbers`` field to include \n                documents that appear on page 17 only.\n\n              - The following :abbr:`MMR (Max Marginal Relevance)`-specific parameters:\n\n                - ``fetchK`` to fetch only ``20`` documents before passing \n                  the documents to the :abbr:`MMR (Max Marginal Relevance)` algorithm.\n\n                - ``lambda``, a value between ``0`` and ``1`` to determine the degree of \n                  diversity among the results, with ``0`` representing maximum diversity\n                  and ``1`` representing minimum diversity.\n               \n            .. include:: /includes/ai-integrations/langchain/langchain-perform-qa-description-node.rst\n            \n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/ai-integrations/langchain-js.txt"
  },
  {
    "code": "               :language: javascript\n               :copyable:\n \n         .. step:: Run the following command to execute your file.\n\n            .. include:: /includes/ai-integrations/langchain/langchain-perform-qa-node-filtered-output.rst\n\nNext Steps\n----------\n\nMongoDB also provides the following developer resources:\n\n- :website:`AI Shop: The Power of LangChain, OpenAI, and MongoDB Atlas Working Together \n  </developer/products/atlas/ai-shop-mongodb-atlas-langchain-openai/>`\n- :github:`MongoDB Developer GitHub Repository </mongodb-developer>`\n\n.. seealso:: \n\n   - `LangChain JS/TS Documentation <https://js.langchain.com/docs/integrations/vectorstores/mongodb_atlas>`__\n   - `LangChain JS/TS API Reference <https://api.js.langchain.com/modules/langchain_mongodb.html>`__\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/ai-integrations/langchain-js.txt"
  },
  {
    "code": "      :language: csharp\n      :copyable:\n\nSave the file, then run the following command to load your data into |service|:\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/ai-integrations/semantic-kernel-csharp.txt"
  },
  {
    "code": "         :language: python\n\n.. tabs::\n   :hidden: true\n\n   .. tab:: Local {+Deployment+}\n      :tabid: local\n\n      This code takes some time to run. After it's finished, you can\n      connect to your local {+deployment+} \n      from {+mongosh+} or your application by using your {+deployment+}\\'s \n      connection string. Then, to view your vector embeddings,\n      run :manual:`read operations \n      </crud/#read-operations>` on the \n      ``sample_airbnb.listingsAndReviews`` collection. \n      \n   .. tab:: Cloud {+Deployment+}\n      :tabid: cloud\n\n      This code takes some time to run. After it's finished, you can\n      view your vector embeddings :ref:`in the {+atlas-ui+} <atlas-ui-view-collections>`\n      by navigating to the ``sample_airbnb.listingsAndReviews`` collection in your \n      {+cluster+} and expanding the fields in a document.\n\n.. note:: \n\n   Convert the embeddings in the sample data to |bson| vectors for\n   efficient storage and ingestion of vectors in |service|. To learn\n   more, see :ref:`how to convert native embeddings to BSON vectors\n   <avs-bindata-vector-subtype>`. \n\nCreate the {+avs+} Index\n------------------------------------\n\nTo enable vector search on the ``sample_airbnb.listingsAndReviews`` \ncollection, create an {+avs+} index.\n\n.. tabs::\n\n   .. tab:: Local {+Deployment+}\n      :tabid: local\n\n      If you're using a local |service| {+deployment+}, complete the following steps:\n\n      .. include:: /includes/ai-integrations/langchain/local-rag-create-index-cli.rst\n\n   .. tab:: Cloud {+Deployment+}\n      :tabid: cloud\n      \n      .. note:: \n\n         To create an {+avs+} index, you must have :authrole:`Project Data Access \n         Admin` or higher access to the |service| project.\n\n      If you're using an |service| {+cluster+}, complete the following steps:\n\n      .. tabs-drivers::\n\n         .. tab::\n            :tabid: nodejs\n\n            .. include:: /includes/avs-examples/local-rag/create-index-programmatically-javascript.rst\n\n         .. tab::\n            :tabid: python\n\n            .. include:: /includes/avs-examples/local-rag/create-index-programmatically-python.rst\n\nAnswer Questions with a Local LLM\n---------------------------------\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: nodejs\n\n      This section demonstrates a sample |rag| implementation \n      that you can run locally by using {+avs+} and GPT4All.\n\n      .. include:: /includes/avs-examples/local-rag/perform-qa-javascript.rst\n\n   .. tab::\n      :tabid: python\n\n      This section demonstrates a sample |rag| implementation \n      that you can run locally by using {+avs+}, LangChain, and GPT4All.\n\n      In your interactive Python notebook, run the following code snippets:\n\n      .. include:: /includes/ai-integrations/langchain/local-rag-perform-qa.rst\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/tutorials/local-rag.txt"
  },
  {
    "code": "   :copyable: false \n\n   score = (1 + cosine(v1,v2)) / 2\n\nFor ``dotProduct``, {+avs+} uses the following algorithm to normalize\nthe score:  \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "   :copyable: false \n\n   score = (1 + dotProduct(v1,v2)) / 2\n\nThese algorithms show that {+avs+} normalizes the score by considering\nthe similarity score of the document vector (``v1``) and the query vector\n(``v2``), which has the range [``-1``, ``1``]. {+avs+} adds ``1`` to the\nsimilarity score to normalize the score to a range [``0``, ``2``] and\nthen divides by ``2`` to ensure a value between ``0`` and ``1``.   \n\nFor ``euclidean`` similarity, {+avs+} uses the following algorithm to\nnormalize the score to ensure a value between ``0`` and ``1``: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "   :copyable: false \n\n   score = 1 / (1 + euclidean(v1,v2))\n\nThe preceding algorithm shows that {+avs+} normalizes the score by\ncalculating the euclidean distance, which is the distance between the \ndocument vector (``v1``) and the query vector (``v2``), which has the range \n[``0``, ``∞``]. {+avs+} then transforms the distance to a similarity\nscore by adding ``1`` to the distance and then divides ``1`` by the\nsimilarity score to ensure a value between ``0`` and ``1``.\n\nThe score assigned to a returned document is part of the document's\nmetadata. To include each returned document's score along with the\nresult set, use a :pipeline:`$project` stage in your aggregation\npipeline. \n\nTo retrieve the score of your {+avs+} query results, use\n``vectorSearchScore`` as the value in the :manual:`$meta \n</reference/operator/aggregation/meta/>` expression. That is, after the\n:pipeline:`$vectorSearch` stage, in the :pipeline:`$project` stage, the\n``score`` field takes the :manual:`$meta\n</reference/operator/aggregation/meta/>` expression. The expression\nrequires the ``vectorSearchScore`` value to return the score of\ndocuments for the vector search. \n\n.. example:: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "      :copyable: false\n      :linenos:\n      :emphasize-lines: 11\n\n      db.<collection>.aggregate([\n        {\n          \"$vectorSearch\": {\n            <query-syntax>\n          }\n        },\n        {\n          \"$project\": {\n            \"<field-to-include>\": 1,\n            \"<field-to-exclude>\": 0,\n            \"score\": { \"$meta\": \"vectorSearchScore\" }\n          }\n        }\n      ]) \n\n.. include:: /includes/fact-avs-pre-filtering-score-impact.rst\n\n.. _vectorSearch-agg-pipeline-filter:\n\n{+avs+} Pre-Filter\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe :pipeline:`$vectorSearch` ``filter`` option matches only |bson|\nboolean, date, objectId, numeric, string, and UUID values. You **must** index the fields\nthat you want to filter your data by as the :ref:`filter\n<avs-types-vector-search>` type in a :ref:`vectorSearch\n<avs-types-vector-search>` type index definition. Filtering your data is \nuseful to narrow the scope of your semantic search and ensure that not\nall vectors are considered for comparison. \n\n{+avs+} supports the :pipeline:`$vectorSearch` ``filter`` option\nfor the following :abbr:`MQL (MongoDB Query Language)` \nmatch expressions:\n\n- :query:`$gt`\n- :query:`$lt`\n- :query:`$gte`\n- :query:`$lte`\n- :query:`$eq`\n- :query:`$ne`\n- :query:`$in`\n- :query:`$nin`\n- :query:`$nor`\n- :query:`$not`\n- :expression:`$and`\n- :expression:`$or`\n\nThe :pipeline:`$vectorSearch` ``filter`` option supports only the following \n:manual:`aggregation pipeline </reference/operator/aggregation/>`\noperators: \n\n- :expression:`$and`\n- :expression:`$or`\n\n.. note:: \n\n   The :pipeline:`$vectorSearch` ``filter`` option doesn't support other\n   :manual:`query operators </reference/operator/query/>`,\n   :manual:`aggregation pipeline operators </reference/operator/aggregation/>`,\n   or :ref:`{+fts+} operators <operators-ref>`.\n\n.. _vectorSearch-agg-pipeline-limitations:\n\nConsiderations\n~~~~~~~~~~~~~~\n\n{+avs+} also supports the short form of ``$eq``. In the short\nform, you don't need to specify ``$eq`` in the query. For example,\nconsider the following ``$eq`` query: \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n     \"filter\": { \"_id\": { \"$eq\": ObjectId(\"5a9427648b0beebeb69537a5\") }\n   }\n\nYou can run the preceding query using the short form of ``$eq`` in the\nfollowing way: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "   :copyable: false \n\n\n   {\n     \"filter\": { \"_id\": ObjectId(\"5a9427648b0beebeb69537a5\") }\n   }\n\nLimitations \n~~~~~~~~~~~\n\n:pipeline:`$vectorSearch` is supported only on |service| {+clusters+}\nrunning the following MongoDB versions: \n\n- v6.0.11\n- v7.0.2 and later (including :abbr:`RCs (Release Candidates)`). \n\n:pipeline:`$vectorSearch` can't be used in \n:manual:`view definition </core/views/>` and the following pipeline\nstages:  \n\n- :pipeline:`$lookup` sub-pipeline :icon-fa5:`star`\n- :pipeline:`$unionWith` sub-pipeline :icon-fa5:`star`\n- :pipeline:`$facet` pipeline stage\n\n:icon-fa5:`star` You can pass the results of :pipeline:`$vectorSearch`\nto this stage.\n\n.. _vectorSearch-agg-pipeline-clients:\n\nSupported Clients\n~~~~~~~~~~~~~~~~~\n\nYou can run :pipeline:`$vectorSearch` queries using the |service|\n:guilabel:`Data Explorer`, {+mongosh+}, and the following drivers: \n\n- :driver:`C# </csharp/current/>`\n- :driver:`Go </go/current/>`\n- :driver:`Java </java-drivers/>`\n- :driver:`Node </node/current/>`\n- :driver:`Pymongo </pymongo/>`\n\nYou can also use {+avs+} with local |service| deployments that you\ncreate with the {+atlas-cli+}. To learn more, see :atlascli:`Create a\nLocal Atlas Deployment </atlas-cli-deploy-local>`. \n\n.. _vectorSearch-concurrent-queries:\n\nParallel Query Execution Across Segments \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWe recommend dedicated :ref:`Search Nodes <configure-search-nodes>`\nto isolate vector search query processing. You might see improved query \nperformance on the dedicated Search Nodes. Note that the high-CPU systems\nmight provide more performance improvement. When {+avs+} runs on search\nnodes, {+avs+} parallelizes query execution across segments of data. \n\nParallelization of query processing improves the response time in many\ncases, such as queries on large datasets. Using intra-query parallelism\nduring {+avs+} query processing utilizes more resources, but improves\nlatency for each individual query. \n\n.. note:: \n\n   {+avs+} doesn't guarantee that each query will run concurrently. For\n   example, when too many concurrent queries are queued, {+avs+} might\n   fall back to single-threaded execution.\n\n   You might see inconsistent results for the same successive queries.\n   To mitigate this, increase the value of ``numCandidates`` in your\n   :pipeline:`$vectorSearch` queries.\n\n.. _vectorSearch-agg-pipeline-egs:\n \nExamples \n--------\n\nThe following queries search the sample ``sample_mflix.embedded_movies``\ncollection using the :pipeline:`$vectorSearch` stage. The queries search\nthe ``plot_embedding`` field, which contains embeddings created using\nOpenAI's ``text-embedding-ada-002`` embeddings model. If you added the\n:ref:`sample collection <mflix-embedded_movies>` to your |service|\n{+cluster+} and created the :ref:`sample indexes <avs-types-vector-search-egs>` \nfor the collection, you can run the following queries against the\ncollection. \n\n.. note:: \n\n   Pasting the ``queryVector`` from the sample code into your terminal\n   might take a while depending on your machine.  \n\n.. tabs-selector:: drivers\n\n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu to set the\nlanguage of the examples in this page.\n\n----------\n\n|ann| Examples \n~~~~~~~~~~~~~~\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: shell \n\n      .. tabs:: \n\n         .. tab:: Basic Example \n            :tabid: basic \n\n            .. include:: /includes/extracts/avs-basic-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/basic-query.sh\n                  :language: json\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-shell-output.js\n                  :language: js\n                  :linenos: \n\n         .. tab:: Filter Example \n            :tabid: filter \n\n            .. include:: /includes/extracts/avs-filter-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/filter-query.sh\n                  :language: json\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/filter-query-shell-output.js \n                  :language: js\n                  :linenos: \n\n            .. include:: /includes/extracts/avs-filter-query-results.rst          \n\n   .. tab::\n      :tabid: csharp \n\n      .. tabs:: \n\n         .. tab:: Basic Example \n            :tabid: basic \n\n            .. include:: /includes/extracts/avs-basic-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/basic-query.cs\n                  :language: csharp\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-csharp-output.js\n                  :language: js\n                  :linenos: \n\n         .. tab:: Filter Example \n            :tabid: filter \n\n            .. include:: /includes/extracts/avs-filter-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/filter-query.cs \n                  :language: csharp\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/filter-query-csharp-output.js  \n                  :language: js\n                  :linenos: \n\n            .. include:: /includes/extracts/avs-filter-query-results.rst    \n\n   .. tab:: \n      :tabid: go\n\n      .. tabs:: \n\n         .. tab:: Basic Example \n            :tabid: basic \n\n            .. include:: /includes/extracts/avs-basic-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/ann-basic-query.go\n                  :language: go\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/ann-basic-query-go-output.sh\n                  :language: shell\n                  :linenos: \n\n         .. tab:: Filter Example \n            :tabid: filter \n\n            .. include:: /includes/extracts/avs-filter-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/filter-query.go\n                  :language: go\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/filter-query-go-output.sh\n                  :language: shell\n                  :linenos: \n\n            .. include:: /includes/extracts/avs-filter-query-results.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. tabs:: \n\n         .. tab:: Basic Example \n            :tabid: basic \n\n            .. include:: /includes/extracts/avs-basic-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/basic-query.java\n                  :language: java\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-java-output.js \n                  :language: js\n                  :linenos: \n\n         .. tab:: Filter Example \n            :tabid: filter \n\n            .. include:: /includes/extracts/avs-filter-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/filter-query.java \n                  :language: java\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/filter-query-java-output.js  \n                  :language: js\n                  :linenos: \n\n            .. include:: /includes/extracts/avs-filter-query-results.rst\n\n\n   .. tab::\n      :tabid: nodejs\n\n      .. tabs:: \n\n         .. tab:: Basic Example \n            :tabid: basic \n\n            .. include:: /includes/extracts/avs-basic-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/basic-query.js\n                  :language: js\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-nodejs-output.js \n                  :language: js\n                  :linenos: \n\n         .. tab:: Filter Example \n            :tabid: filter \n\n            .. include:: /includes/extracts/avs-filter-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/filter-query.js \n                  :language: js\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/filter-query-nodejs-output.js  \n                  :language: js\n                  :linenos: \n\n            .. include:: /includes/extracts/avs-filter-query-results.rst    \n\n\n   .. tab::\n      :tabid: python\n\n      .. tabs:: \n\n         .. tab:: Basic Example \n            :tabid: basic \n\n            .. include:: /includes/extracts/avs-basic-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/basic-query.py \n                  :language: python\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-python-output.js\n                  :language: js\n                  :linenos: \n\n         .. tab:: Filter Example \n            :tabid: filter \n\n            .. include:: /includes/extracts/avs-filter-query-desc.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/avs-examples/pipeline-stage-examples/filter-query.py \n                  :language: python\n                  :linenos: \n\n               .. output:: /includes/avs-examples/pipeline-stage-examples/filter-query-python-output.js  \n                  :language: js\n                  :linenos: \n\n            .. include:: /includes/extracts/avs-filter-query-results.rst    \n\n|enn| Example \n~~~~~~~~~~~~~\n\n.. include:: /includes/extracts/avs-enn-query-description.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: shell \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query.sh\n            :language: shell\n            :linenos: \n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query-shell-output.js \n            :language: js\n            :linenos: \n\n   .. tab::\n      :tabid: csharp \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "         :copyable: false\n\n         Not yet available.\n\n   .. tab::\n      :tabid: go\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query.go\n            :language: go\n            :linenos: \n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query-go-output.sh\n            :language: sh\n            :linenos: \n\n   .. tab:: \n      :tabid: java-sync \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "         :copyable: false\n\n         Not yet available.\n\n   .. tab::\n      :tabid: nodejs\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query.js\n            :language: js\n            :linenos: \n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query-nodejs-output.js \n            :language: js\n            :linenos: \n\n   .. tab::\n      :tabid: python\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query.py\n            :language: python\n            :linenos: \n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/enn-basic-query-py-output.js \n            :language: js\n            :linenos:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-stage.txt"
  },
  {
    "code": "   :copyable: true \n   :linenos:\n\n   {\n     \"fields\":[ \n       {\n         \"type\": \"vector\",\n         \"path\": \"<field-to-index>\",\n         \"numDimensions\": <number-of-dimensions>,\n         \"similarity\": \"euclidean | cosine | dotProduct\"\n       },\n       {\n         \"type\": \"filter\",\n         \"path\": \"<field-to-index>\"\n       },\n       ...\n     ]\n   }\n\n.. _avs-types-vector:\n\nAbout the ``vector`` Type \n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYour index definition's ``vector`` field must contain an array of numbers of \n*one* of the following types: \n\n- |bson| ``double`` \n- |bson| :manual:`BinData </reference/method/BinData/>` ``vector``\n  subtype ``float32``  \n- |bson| :manual:`BinData </reference/method/BinData/>` ``vector``\n  subtype ``int8`` \n\n.. note:: \n\n   To learn more about generating |bson| :manual:`BinData\n   </reference/method/BinData/>` ``vector`` subtype ``float32``\n   or ``vector`` subtype ``int8`` vectors for your data, see\n   :ref:`avs-bindata-vector-subtype`.\n\nYou must index the vector field as the ``vector`` type inside the\n``fields`` array.\n\nThe following syntax defines the ``vector`` field type: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "   :copyable: true \n   :linenos:\n   :emphasize-lines: 4-7\n\n   {\n     \"fields\":[ \n       {\n         \"type\": \"vector\",\n         \"path\": <field-to-index>,\n         \"numDimensions\": <number-of-dimensions>,\n         \"similarity\": \"euclidean | cosine | dotProduct\"\n       },\n       ...\n     ]\n   }\n\n.. _avs-types-filter:\n\nAbout the ``filter`` Type \n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can optionally index boolean, date, number, objectId, string, and\nUUID fields to pre-filter your data. Filtering your data is useful to\nnarrow the scope of your semantic search and ensure that not all vectors\nare considered for comparison. You must index these fields using the\n``filter`` type inside the ``fields`` array.\n\nThe following syntax defines the ``filter`` field type: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "   :copyable: true \n   :linenos:\n   :emphasize-lines: 8-9\n\n   {\n     \"fields\":[ \n       {\n         \"type\": \"vector\",\n         ...\n       },\n       {\n         \"type\": \"filter\",\n         \"path\": \"<field-to-index>\"\n       },\n       ...\n     ]\n   }\n\n.. include:: /includes/fact-avs-pre-filtering-score-impact.rst\n\n.. _avs-types-vector-search-options:\n\n{+avs+} Index Fields\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe {+avs+} index definition takes the following fields:\n\n.. list-table::\n   :widths: 25 10 15 50\n   :header-rows: 1\n\n   * - Option\n     - Type \n     - Necessity\n     - Purpose\n\n   * - ``fields``\n     - array of documents \n     - Required \n     - Vector and filter fields to index, one per document. At least one\n       document *must* contain the field definition for the vector\n       field. You can optionally also index boolean, date, number, objectId,\n       string, and UUID fields, one per document, for pre-filtering the data.\n\n   * - ``fields.type``\n     - string \n     - Required \n     - Field type to use to index fields for :pipeline:`$vectorSearch`.\n       You can specify one of the following values:  \n       \n       - ``vector`` - for fields that contain vector embeddings.\n       - ``filter`` - for fields that contain boolean, date, objectId, numeric, \n         string, or UUID values. \n\n   * - ``fields.path``\n     - string \n     - Required \n     - Name of the field to index. For nested fields, use dot notation\n       to specify path to embedded fields. You can't index field names\n       with two consecutive dots (``.``) and field names ending with\n       dots (``.``). For example, {+avs+} *doesn't* support indexing the \n       following field names: \n\n       .. list-table:: \n          :stub-columns: 1\n\n          * - ``foo..bar`` \n            - Field name has two consecutive dots.\n       \n          * - ``foo_bar.`` \n            - Field name ends with a dot.\n\n   * - ``fields.numDimensions``\n     - int\n     - Required\n     - Number of vector dimensions that {+avs+} enforces at index-time and\n       query-time. You must specify a value less than or equal to\n       ``4096``. You can set this field only for ``vector`` type fields.\n\n   * - ``fields.similarity``\n     - string\n     - Required\n     - .. _fields-similarity:\n      \n       Vector similarity function to use to search for top K-nearest \n       neighbors. You can set this field only for ``vector`` type\n       fields. Value can be one of the following: \n\n       - ``euclidean`` - measures the distance between ends of vectors. \n         This value allows you to measure similarity based on varying \n         dimensions. To learn more, see :wikipedia:`Euclidean \n         <Euclidean_distance>`.\n       - ``cosine`` - measures similarity based on the angle between \n         vectors. This value allows you to measure similarity that isn't \n         scaled by magnitude. You can't use zero magnitude vectors with \n         ``cosine``. To measure cosine similarity, we recommend that \n         you normalize your vectors and use ``dotProduct`` instead. To \n         learn more, see :wikipedia:`Cosine <Cosine_similarity>`.\n       - ``dotProduct`` - measures similarity like ``cosine``, but takes \n         into account the magnitude of the vector. If you normalize the magnitude, \n         ``cosine`` and ``dotProduct`` are almost identical in measuring similarity. \n         \n         Setting ``fields.similarity`` to the ``dotProduct`` value \n         allows you to efficiently measure similarity based on both angle and \n         magnitude. To use ``dotProduct``, you must normalize the \n         vector to unit length at index-time and query-time. To learn more, \n         see :wikipedia:`Dot Product <Dot_product>`.\n\n\n\n.. \n  .. _avs-types-vector-search-clients:\n\n  Supported Clients \n  -----------------\n\n  You can create and manage {+avs+} indexes through the {+atlas-ui+},\n  {+mongosh+}, and the following MongoDB :driver:`drivers </>`: \n\n  - :driver:`C# </csharp/current/>`\n  - :driver:`Go </go/current/>`\n  - :driver:`Java </java-drivers/>`\n  - :driver:`Node </node/current/>`\n  - :driver:`Pymongo </pymongo/>`\n\n  You can also use {+avs+} with local |service| deployments that you\n  create with the {+atlas-cli+}. To learn more, see :atlascli:`Create a\n  Local Atlas Deployment </atlas-cli-deploy-local>`. \n\n.. tabs-selector:: drivers\n\n.. _avs-create-index:\n\nCreate an {+avs+} Index\n------------------------------------\n\n.. include:: /includes/facts/fts-index-description.rst\n\nYou can create an {+avs+} index for all collections that contain vector\nembeddings less than or equal to 4096 dimensions in length for any kind\nof data along with other data on your |service| {+cluster+} through the\n{+atlas-ui+}, {+atlas-admin-api+}, {+atlas-cli+}, {+mongosh+},\nor a supported :driver:`MongoDB Driver </>`.\n\n.. _avs-create-index-prerequisites:\n\nPrerequisites\n~~~~~~~~~~~~~\n\nTo create an {+avs+} index, you must have an |service| {+cluster+} with\nthe following prerequisites: \n\n- MongoDB version ``6.0.11``, ``7.0.2``, or higher\n- A collection for which to create the {+avs+} index \n\n.. |command-type| replace:: create\n\n.. include:: /includes/fact-search-commands-cluster-tier.rst\n\n.. _avs-create-index-access:\n\nRequired Access\n~~~~~~~~~~~~~~~\n\nYou need the :authrole:`Project Data Access Admin` or higher role to create\nand manage {+avs+} indexes.\n\n.. _avs-types-vector-search-egs:\n.. _avs-create-index-supported-clients:\n.. _avs-create-index-procedure:\n\nFree and Shared {+Cluster+} Limitations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. include:: /includes/fact-fts-shared-tier-limitations.rst\n\nProcedure \n~~~~~~~~~\n\n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu to select the\nclient you want to use to create your index.\n\n----------\n\n.. note::\n\n   The procedure includes index definition examples for the \n   ``embedded_movies`` collection in the ``sample_mflix`` database. If\n   you load the :ref:`sample data <mflix-embedded_movies>` on your\n   {+cluster+} and create the example |fts| indexes for this collection,\n   you can run the sample :pipeline:`$vectorSearch` queries against this\n   collection. To learn more about the sample queries that you can run,\n   see :ref:`$vectorSearch Examples <vectorSearch-agg-pipeline-egs>`. \n\n.. tabs-drivers:: \n\n   .. tab::  \n      :tabid: atlas-ui \n\n      .. include:: /includes/steps-avs-create-index-atlas-ui.txt\n\n   .. tab::  \n      :tabid: atlas-api \n\n      To create an {+avs+} index for a collection using the\n      {+atlas-admin-api+}, send a ``POST`` request to the |fts|\n      ``indexes`` endpoint with the required parameters. \n      \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "         :language: shell\n         :copyable:\n         :linenos:\n      \n      To learn more about the syntax and parameters for the endpoint, see\n      :oas-atlas-op:`Create One Atlas Search Index </createAtlasSearchIndex>`.  \n      \n      .. example:: \n\n         The following index definition indexes the ``plot_embedding``\n         field as the ``vector`` type and the ``genres`` and ``year``\n         fields as the ``filter`` type in an {+avs+} index. The\n         ``plot_embedding`` field contains embeddings created using\n         OpenAI's ``text-embedding-ada-002`` embeddings model. The index \n         definition specifies ``1536`` vector dimensions and measures\n         similarity using ``euclidean`` distance. \n\n         .. tabs:: \n\n            .. tab:: Basic Example\n               :tabid: basic\n\n               The following index definition indexes only the vector\n               embeddings field for performing vector search.\n                  \n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "                  :language: shell\n                  :copyable:\n                  :linenos:\n\n            .. tab:: Filter Example \n               :tabid: advanced\n\n               This index definition indexes the following fields: \n         \n               - A string field (``genres``) and a numeric field (``year``)\n                 for pre-filtering the data. \n               - The vector embeddings field (``plot_embedding``) for\n                 performing vector search against pre-filtered data.\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "                  :language: shell\n                  :copyable:\n                  :linenos:\n\n   .. tab::  \n      :tabid: atlas-cli \n\n      To create an {+avs+} index for a collection using the\n      {+atlas-cli+} v1.14.3 or later, perform the following steps: \n\n      .. include:: /includes/steps-avs-create-index-acli.rst \n\n   .. tab::\n      :tabid: go\n\n      To create an {+avs+} index for a collection using the\n      :driver:`MongoDB Go driver </node/go/current/fundamentals/indexes/>` \n      v1.16.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-create-index-go.rst\n\n   .. tab::  \n      :tabid: shell \n\n      To create an {+avs+} index for a collection using {+mongosh+}\n      v2.1.2 or later, perform the following steps:\n      \n      .. include:: /includes/steps-avs-create-index-mongosh.rst \n\n   .. tab::\n      :tabid: python\n\n      To create an {+avs+} index for a collection using the\n      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__\n      driver v4.7 or later, perform the following steps: \n\n      .. include:: /includes/steps-avs-create-index-pymongo.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      To create an {+avs+} index for a collection using the\n      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>` \n      v6.6.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-create-index-nodejs.rst\n\n.. _avs-view-index:\n\nView an {+avs+} Index\n------------------------------------\n\n\nYou can view {+avs+} indexes for all collections from the\n{+atlas-ui+}, {+atlas-admin-api+}, {+atlas-cli+}, {+mongosh+},\nor a supported :driver:`MongoDB Driver </>`.\n\n.. _avs-view-index-access:\n\nRequired Access\n~~~~~~~~~~~~~~~\n\nYou need the :authrole:`Project Search Index Editor` or higher role to view\n{+avs+} indexes. \n\n.. |command-type| replace:: retrieve\n\n.. include:: /includes/fact-search-commands-cluster-tier.rst\n\n.. _avs-view-index-procedure:\n\nProcedure\n~~~~~~~~~\n\n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu to set the \nlanguage of the example in this section.\n\n----------\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui \n\n      .. include:: /includes/steps-avs-view-index-atlas-ui.txt\n\n      The page displays the following details for the indexes on the page: \n\n      .. list-table:: \n         :stub-columns: 1 \n         :widths: 20 80\n\n         * - Name \n           - Label that identifies the index. \n\n         * - Index Type\n           - Label that indicates an |fts| or {+avs+} index. Values\n             include:  \n     \n             - ``search`` for |fts| indexes.\n             - ``vectorSearch`` for {+avs+} indexes.\n\n         * - Index Fields\n           - List that contains the fields that this index indexes.\n\n         * - Status\n           - Current state of the index on the primary node of the\n             {+cluster+}. For valid values, see\n             :ref:`avs-node-status-ref`. \n\n         * - Size\n           - Size of the index on the primary node.\n\n         * - Documents \n           - Number of indexed documents out of the total number of\n             documents in the collection.\n\n         * - Actions \n           - Actions that you can take on the index. You can:\n     \n             - :ref:`avs-edit-index`\n             - :ref:`avs-delete-index`\n\n             You can't run queries in the :guilabel:`Search Tester` UI\n             against indexes of the ``vectorSearch`` type. If you click the\n             :guilabel:`Query` button, {+avs+} displays a sample\n             :pipeline:`$vectorSearch` that you can copy, modify, and run\n             in :guilabel:`Data Explorer` and using other\n             :ref:`supported clients <vectorSearch-agg-pipeline-clients>`. \n\n   .. tab:: \n      :tabid: atlas-api \n\n      To retrieve all the {+avs+} indexes for a collection using the\n      {+atlas-admin-api+}, send a ``GET`` request to the |fts|\n      ``indexes`` endpoint with the name of the database and collection. \n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "         :language: shell\n         :copyable:\n         :linenos:\n\n      To learn more about the syntax and parameters for the endpoint,\n      see :oas-atlas-op:`Return All Atlas Search Indexes for One\n      Collection </listAtlasSearchIndexes>`.\n\n      To retrieve one {+avs+} index for a collection using the\n      {+atlas-admin-api+}, send a ``GET`` request to the |fts|\n      ``indexes`` endpoint with either the unique ID or name of the\n      index (line 4) to retrieve. \n      \n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "         :language: shell\n         :copyable:\n         :linenos:\n\n      To learn more about the syntax and parameters for the endpoint, \n      :oas-atlas-op:`Get One By Name </getAtlasSearchIndexByName>` and\n      :oas-atlas-op:`Get One By ID </getAtlasSearchIndex>`.\n\n   .. tab:: \n      :tabid: atlas-cli \n\n      To return {+avs+} indexes for a collection using {+atlas-cli+},\n      perform the following steps: \n\n      .. include:: /includes/steps-avs-view-index-acli.rst\n\n   .. tab::\n      :tabid: go\n\n      To view an {+avs+} index for a collection using \n      :driver:`MongoDB Go driver </go/current/fundamentals/indexes/>` \n      v1.16.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-view-index-go.rst\n\n   .. tab::  \n      :tabid: shell \n\n      To view an {+avs+} index for a collection using {+mongosh+},\n      perform the following steps: \n\n      .. include:: /includes/steps-avs-view-index-mongosh.rst\n      \n   .. tab::\n      :tabid: python\n\n      To view {+avs+} indexes for a collection using \n      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__\n      driver v4.7 or later, perform the following steps: \n\n      .. include:: /includes/steps-avs-view-index-pymongo.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      To view an {+avs+} index for a collection using \n      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>` \n      v6.6.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-view-index-nodejs.rst\n\n.. _avs-edit-index:\n\nEdit an {+avs+} Index\n-----------------------------------\n\nYou can change the :ref:`index definition <avs-types-vector-search>`\nof an existing {+avs+} index from the {+atlas-ui+}, {+atlas-admin-api+}, \n{+atlas-cli+}, {+mongosh+}, or a supported :driver:`MongoDB Driver </>`. \nYou can't rename an index or change the index type. If you need to\nchange an index name or type, you must create a new index and delete the old one.\n\n.. important::\n\n   After you edit an index, {+avs+} rebuilds it. \n   While the index rebuilds, you can continue to run vector \n   search queries by using the old index definition. \n   When the index finishes rebuilding, the old index is automatically \n   replaced. This process follows the same process as standard \n   |fts| indexes.\n  \n   To learn more, see :ref:`index-create-and-update`.\n\nRequired Access \n~~~~~~~~~~~~~~~\n\nYou must have the :authrole:`Project Search Index Editor` or higher role to\nedit an {+avs+} index.\n\n.. |command-type| replace:: edit\n\n.. include:: /includes/fact-search-commands-cluster-tier.rst\n\n.. _avs-edit-index-procedure:\n\nProcedure\n~~~~~~~~~\n\n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu to select the\nclient you want to use to edit your index.\n\n----------\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui \n\n      .. include:: /includes/steps-avs-edit-index-atlas-ui.txt\n\n   .. tab:: Atlas Administration API \n      :tabid: atlas-api \n\n      To edit an {+avs+} index for a collection using the\n      {+atlas-admin-api+}, send a ``PATCH`` request to the |fts|\n      ``indexes`` endpoint with either the unique ID or name of the\n      index (line 4) to edit. \n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "         :language: shell\n         :copyable:\n         :linenos:\n      \n      To learn more about the syntax and parameters for the endpoints, see\n      :oas-atlas-op:`Update One By Name </updateAtlasSearchIndexByName>` and\n      :oas-atlas-op:`Update One By ID </updateAtlasSearchIndex>`.\n\n   .. tab:: Atlas CLI \n      :tabid: atlas-cli \n\n      To edit an {+avs+} index for a collection using {+atlas-cli+},\n      perform the following steps:\n\n      .. include:: /includes/steps-avs-edit-index-acli.rst \n\n   .. tab::\n      :tabid: go\n\n      To update an {+avs+} index for a collection using the\n      :driver:`MongoDB Go driver </go/current/fundamentals/indexes/>` \n      v1.16.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-edit-index-go.rst\n\n   .. tab::  \n      :tabid: shell \n\n      To edit an {+avs+} index for a collection using {+mongosh+},\n      perform the following steps: \n\n      .. include:: /includes/steps-avs-edit-index-mongosh.rst \n\n   .. tab::\n      :tabid: python\n\n      To update an {+avs+} index for a collection using the\n      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__\n      driver v4.7 or later, perform the following steps: \n\n      .. include:: /includes/steps-avs-edit-index-pymongo.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      To update an {+avs+} index for a collection using the\n      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>` \n      v6.6.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-edit-index-nodejs.rst\n\n.. _avs-delete-index:\n\nDelete an {+avs+} Index\n--------------------------------------\n\nYou can delete an {+avs+} index at any time from the \n{+atlas-ui+}, {+atlas-admin-api+}, {+atlas-cli+}, {+mongosh+},\nor a supported :driver:`MongoDB Driver </>`.\n\nRequired Access\n~~~~~~~~~~~~~~~\n\nYou must have the :authrole:`Project Search Index Editor` or higher role to \ndelete an {+avs+} index.\n\n.. |command-type| replace:: delete\n\n.. include:: /includes/fact-search-commands-cluster-tier.rst\n\n.. _avs-delete-index-procedure:\n\nProcedure\n~~~~~~~~~\n\n----------\n\n.. |arrow| unicode:: U+27A4\n\n|arrow| Use the **Select your language** drop-down menu to select the\nclient you want to use to delete your index.\n\n----------\n\n.. tabs-drivers::\n\n   .. tab:: \n      :tabid: atlas-ui \n\n      .. include:: /includes/steps-avs-delete-index-atlas-ui.txt\n\n   .. tab::  \n      :tabid: atlas-api \n\n      To delete an {+avs+} index for a collection using the\n      {+atlas-admin-api+}, send a ``DELETE`` request to the |fts|\n      ``indexes`` endpoint with either the unique ID or the name of the \n      index to delete. \n      \n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "         :language: shell\n         :copyable:\n         :linenos:\n\n      To learn more about the syntax and parameters for the endpoint, see \n      :oas-atlas-op:`Remove One Search Index By Name </deleteAtlasSearchIndexByName>`\n      and :oas-atlas-op:`Remove One Search Index By ID </deleteAtlasSearchIndex>`.\n\n   .. tab::  \n      :tabid: atlas-cli \n\n      To delete an {+avs+} index for a collection using {+atlas-cli+},\n      perform the following steps: \n\n      .. include:: /includes/steps-avs-delete-index-acli.rst\n\n   .. tab::\n      :tabid: go\n\n      To delete an {+avs+} index for a collection using \n      :driver:`MongoDB Go driver </go/current/fundamentals/indexes/>` \n      v1.16.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-delete-index-go.rst\n\n   .. tab::  \n      :tabid: shell \n\n      To delete an {+avs+} index for a collection using {+mongosh+},\n      perform the following steps:\n\n      .. include:: /includes/steps-avs-delete-index-mongosh.rst \n      \n   .. tab::\n      :tabid: python\n\n      To delete an {+avs+} index for a collection using \n      `PyMongo <https://www.mongodb.com/docs/languages/python/pymongo-driver/current/indexes/atlas-search-index/>`__\n      driver v4.7 or later, perform the following steps: \n\n      .. include:: /includes/steps-avs-delete-index-pymongo.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      To delete an {+avs+} index for a collection using \n      :driver:`MongoDB Node driver </node/current/fundamentals/indexes/>` \n      v6.6.0 or later, perform the following steps:\n\n      .. include:: /includes/steps-avs-delete-index-nodejs.rst\n\n.. _avs-node-status-ref:\n\nIndex Status\n------------\n\nWhen you create the {+avs+} index, the :guilabel:`Status` column shows \nthe current state of the index on the primary node of the cluster. \nClick the :guilabel:`View status details` link below the status to view \nthe state of the index on all the nodes of the cluster.\n\nWhen the :guilabel:`Status` column reads :guilabel:`Active`, the index\nis ready to use. In other states, queries against the index may return\nincomplete results.\n\n.. list-table::\n   :header-rows: 1\n   :widths: 25 75\n\n   * - Status\n     - Description\n\n   * - Not Started \n     - |service| has not yet started building the index.\n\n   * - Initial Sync \n     - |service| is building the index or re-building the \n       index after an edit. When the index is in this state:\n       \n       - For a new index, {+avs+} doesn't serve queries until the \n         index build is complete. \n       - For an existing index, you can continue to use the old index \n         for existing and new queries until the index rebuild \n         is complete.\n\n   * - Active\n     - Index is ready to use.\n\n   * - Recovering\n     - Replication encountered an error. This state commonly occurs \n       when the current replication point is no longer available on the \n       |mongod| oplog. You can still query the existing index until it \n       updates and its status changes to :guilabel:`Active`. Use the \n       error in the :guilabel:`View status details` modal window to \n       troubleshoot the issue. To learn more, see \n       :ref:`atlas-search-alerts`.\n\n   * - Failed \n     - |service| could not build the index. Use the error  \n       in the :guilabel:`View status details` modal window to \n       troubleshoot the issue. To learn more, see \n       :ref:`atlas-search-alerts`.\n\n   * - Delete in Progress\n     - |service| is deleting the index from the cluster nodes.\n\nWhile |service| builds the index and after the build completes, the \n:guilabel:`Documents` column shows the percentage and number of \ndocuments indexed. The column also shows the total number of documents \nin the collection.\n\nThe following sections describe how to create and manage {+avs+} indexes\nfrom the \n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/atlas-vector-search/vector-search-type.txt"
  },
  {
    "code": "         :copyable: false\n\n         /exported_snapshots/<orgUUID>/<projectUUID>/<clusterName>/<initiationDateOfSnapshot>/<timestamp>/\n\n      .. note:: \n\n         By default, |service| uses organization and project UUIDs in \n         the path for the metadata files. To use organization and \n         project names instead of UUIDs, set the \n         ``useOrgAndGroupNamesInExportPrefix`` flag to ``true`` via the \n         :oas-atlas-op:`API \n         </updateCloudBackupBackupPolicyForOneCluster>`. |service| \n         replaces any spaces with underscores (``_``) and removes any \n         :aws:`characters that might require special handling \n         </AmazonS3/latest/userguide/object-keys.html>` and \n         :aws:`characters to avoid \n         </AmazonS3/latest/userguide/object-keys.html>` from the \n         organization and project names in the path.\n\n      The ``.complete`` metadata file is in |json| format and contains \n      the following fields: \n\n      .. list-table::\n         :header-rows: 1\n         :widths: 35 65 \n\n         * - Field\n           - Description \n\n         * - ``orgId``\n           - Unique 24-hexadecimal digit string that identifies the \n             |service| organization.\n\n         * - ``orgName``\n           - Name of the |service| organization. \n\n         * - ``groupId``\n           - Unique 24-hexadecimal digit string that identifies the \n             project in the |service| organization.\n\n         * - ``groupName``\n           - Name of the |service| project. \n\n         * - ``clusterUniqueId``\n           - Unique 24-hexadecimal digit string that identifies the \n             |service| cluster.\n\n         * - ``clusterName``\n           - Name of the |service| project.\n\n         * - ``snapshotInitiationDate``\n           - Date when snapshot was taken.\n\n         * - ``totalFiles``\n           - Total number of files uploaded to the |s3| Bucket or\n             {+az-bs+} Container.\n\n         * - ``labels``\n           - Labels of the {+cluster+} whose snapshot was exported.\n\n         * - ``customData``\n           - Custom data, if any, that you specified when creating the \n             export job.\n\n      .. example:: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "            :copyable: false \n\n            {\n              \"orgId\": \"60512d6f65e4047fe0842095\",\n              \"orgName\": \"org1\",\n              \"groupId\": \"60512dac65e4047fe084220f\",\n              \"groupName\": \"group1\",\n              \"clusterUniqueId\": \"60512dac65e4047fe0842212\",\n              \"clusterName\": \"cluster0\",\n              \"snapshotInitiationDate\": \"2020-04-03T05:50:29.321Z\"\n              \"totalFiles\": 23,\n              \"labels\": [\n                {\n                  \"key\": \"key1\",\n                  \"value\": \"xyz\"\n                },\n                {\n                  \"key\": \"key2\",\n                  \"value\": \"xyzuio\"\n                }\n              ],\n              \"customData\": [\n                {\n                  \"key\": \"key1\",\n                  \"value\": \"xyz\"\n                },\n                {\n                  \"key\": \"key2\",\n                  \"value\": \"xyzuio\"\n                }\n              ]\n            }\n\n   .. tab:: metadata.json File \n      :tabid: metadata\n\n      |service| uploads the ``metadata.json`` file for each collection \n      in the following path on your |s3| Bucket: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "         :copyable: false\n\n         /exported_snapshots/<orgUUID>/<projectUUID>/<clusterName>/<initiationDateOfSnapshot>/<timestamp>/<dbName>/<collectionName>/metadata.json\n\n      .. note:: \n\n         By default, |service| uses organization and project UUIDs in \n         the path for the metadata files. To use organization and \n         project names instead of UUIDs, set the \n         ``useOrgAndGroupNamesInExportPrefix`` flag via the \n         :oas-atlas-op:`API \n         </updateCloudBackupBackupPolicyForOneCluster>` to true. \n         |service| replaces any spaces with underscores (``_``) and \n         removes any :aws:`characters that might require special \n         handling </AmazonS3/latest/userguide/object-keys.html>` and \n         :aws:`characters to avoid \n         </AmazonS3/latest/userguide/object-keys.html>` from the \n         organization and project names in the path.\n\n      The metadata file is in |json| format and contains the following \n      fields: \n\n      .. list-table::\n         :header-rows: 1\n         :widths: 35 65 \n\n         * - Field\n           - Description \n\n         * - ``collectionName``\n           - Human-readable label that identifies the collection.\n\n         * - ``indexes``\n           - List of all the indexes on the collection in the format \n             returned by :manual:`db.collection.getIndexes \n             </reference/method/db.collection.getIndexes/#output>` \n             command. \n\n         * - ``options``\n           - Configuration options defined on the collection. To learn \n             more about the options, see :manual:`db.createCollection() \n             </reference/method/db.createCollection/>` command.\n\n         * - ``type``\n           - Type of collection. Value can be one of the following: \n\n             - ``view`` - for a view on a collection \n             - ``timeseries`` - for a timeseries collection \n\n             This field is not returned for a standard collection.\n\n         * - ``uuid``\n           - Collection's UUID. To learn more about UUID, see \n             :manual:`UUID </reference/method/UUID/>`.\n\n      .. example:: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "            :copyable: false \n\n            {\n              \"options\":{\n                \"viewOn\":\"othercol\",\n                \"pipeline\":[{\"$project\":{\"namez\":\"$name\"}}]\n              },\n              \"indexes\":[],\n              \"collectionName\":\"viewcol\",\n              \"type\":\"view\"\n            }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "            :copyable: false\n\n            {\n              \"options\":{\n                \"timeseries\":{\n                  \"timeField\":\"timestamp\",\n                  \"granularity\":\"seconds\",\n                  \"bucketMaxSpanSeconds\":{\"$numberInt\":\"3600\"}\n                }\n              },\n              \"indexes\":[],\n              \"collectionName\":\"timeseriescol\",\n              \"type\":\"timeseries\"\n            }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "            :copyable: false\n\n            {\n              \"indexes\": [\n                {\n                  \"v\":{\"$numberInt\":\"2\"},\n                  \"key\":{\n                    \"_id\":{\"$numberInt\":\"1\"}\n                  },\n                  \"name\":\"_id_\"\n                }\n              ],\n              \"uuid\":\"342c40a937c34c478bab03de8ce44f3e\",\n              \"collectionName\":\"somecol\"\n            }\n\nIf an export job fails: \n\n- |service| doesn't automatically try to export again.\n- |service| doesn't remove any partial data in your |s3| Bucket or\n  {+az-bs+} Container.\n\nExported Data Format\n--------------------\n\n|service| uploads the contents of your database to |s3| or {+az-bs+} in\n``.json.gz`` format with documents in extended |json| format within. The\nfollowing is the path to the files on |s3| or {+az-bs+}:  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "   :copyable: false \n\n   /exported_snapshots/<orgName>/<projectName>/<clusterName>/<initiationDateOfSnapshot>/<timestamp>/<dbName>/<collectionName>/<shardName>.<increment>.json.gz\n\nWhere: \n\n.. list-table:: \n   :widths: 35 65\n\n   * - ``<orgName>``\n     - Name of your |service| organization.\n\n   * - ``<projectName>``\n     - Name of your |service| project.\n\n   * - ``<clusterName>``\n     - Name of your |service| cluster.\n\n   * - ``<initiationDateOfSnapshot>``\n     - Date when snapshot was taken.\n\n   * - ``<timestamp>``\n     - Timestamp when the export job was created.\n\n   * - ``<dbName>``\n     - Name of the database in the |service| cluster.\n\n   * - ``<collectionName>``\n     - Name of the |service| collection.\n\n   * - ``<shardName>``\n     - Name of the replica set.\n\n   * - ``<increment>``\n     - Count that is incremented as chunks are uploaded. Starts at \n       ``0``.\n\nLimitations \n-----------\n\nThe following limitations apply:\n\n- You can only export snapshots for `currently supported versions of\n  MongoDB <https://www.mongodb.com/support-policy/lifecycles>`__, but\n  you can always download saved snapshots, regardless of the version.\n- You can't export :ref:`fallback snapshots <cps-fallback-snapshots>`.\n- You can have only one active export per snapshot.\n\nRequired Access\n---------------\n\nTo manage your {+Cloud-Backup+} snapshots, you must have\n:authrole:`Project Owner` access to the project. Users with\n:authrole:`Organization Owner` access must add themselves as a ``Project\nOwner`` to the project before they can manage {+Cloud-Backup+}\nsnapshots. \n\nPrerequisites\n-------------\n\nTo export your {+Cloud-Backup+} snapshots, you need an ``M10`` or higher \n|service| {+cluster+} with {+Cloud-Backup+} :ref:`enabled\n<backup-cloud-provider>`. In addition, to export to an |aws| |s3|\nBucket or {+az-bs+} Container, you must do the following:\n\n.. tabs:: \n\n   .. tab:: AWS \n      :tabid: aws\n\n      1. Configure |aws| `IAM role <https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html>`__ \n         with ``STS:AssumeRole`` that grants |service| access to your |aws| \n         resources. To learn more about configuring |aws| access for \n         |service|, see :ref:`set-up-unified-aws-access`.\n      #. Configure |aws| `IAM role policy <https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html>`__ \n         that grants |service| write access or the ``S3:PutObject`` and \n         ``S3:GetBucketLocation`` permissions to your |aws| resources. To \n         learn more about configuring write access to |aws| resources, see \n         :ref:`set-up-unified-aws-access`.\n\n         .. example:: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "                   : copyable: true \n\n                   az role assignment create --assignee-object-id <service-principal-id> --role \"Storage Blob Delegator\" --scope /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Storage/storageAccounts/<storage-account-name>\n\n            * - Storage Blob Data Contributor\n              - This allows read, write, and delete blob access for the \n                |azure| Storage Container. To assign this role, run the\n                following command:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "                   :copyable: true \n\n                   az role assignment create --assignee-principal-type ServicePrincipal --assignee-object-id <service-principal-id> --role \"Storage Blob Data Contributor\" --scope /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Storage/storageAccounts/<storage-account-name>/blobServices/default/containers/<container-name>\n\nExport Management \n-----------------\n\nYou can create and manage snapshot exports to |aws| |s3| Buckets from\nthe {+atlas-cli+} and {+atlas-admin-api+} or to {+az-bs+} Containers\nfrom the {+atlas-admin-api+}.\n\n.. tabs::\n\n   .. tab:: {+atlas-cli+}\n      :tabid: atlascli\n\n      .. note:: \n\n         You can't export snapshots to {+az-bs+} Containers using the\n         {+atlas-cli+}. \n\n      Manage Export Jobs\n      ~~~~~~~~~~~~~~~~~~\n\n      You can manage export jobs using the {+atlas-cli+} by creating or viewing export jobs.\n\n      Create an Export Job\n      `````````````````````\n\n      .. include:: /includes/extracts/atlas-backups-exports-jobs-create-and-watch.rst\n\n      View Export Jobs\n      `````````````````\n\n      .. include:: /includes/extracts/atlas-backups-exports-jobs-describe-and-list.rst\n\n      Manage Export Buckets\n      ~~~~~~~~~~~~~~~~~~~~~\n\n      You can manage export buckets using the {+atlas-cli+} by creating, viewing, or deleting export buckets.\n\n      Create One Export Bucket\n      ````````````````````````\n\n      .. include:: /includes/extracts/atlas-backups-exports-buckets-create.rst\n\n      View Export Buckets\n      ```````````````````\n\n      .. include:: /includes/extracts/atlas-backups-exports-buckets-describe-and-list.rst\n\n      Delete an Export Bucket\n      ```````````````````````\n\n      .. include:: /includes/extracts/atlas-backups-exports-buckets-delete.rst\n\n   .. tab:: {+atlas-admin-api+}\n      :tabid: api\n\n      To grant and manage cloud provider access and to create and manage\n      snapshot export jobs, the |api| that you use must have the\n      :authrole:`Project Owner` role.\n\n      Manage Export Buckets \n      ~~~~~~~~~~~~~~~~~~~~~\n\n      Use the following to :oas-atlas-tag:`manage </Cloud-Backups>`\n      export Buckets or Containers.\n      \n      Create One Export Bucket \n      ````````````````````````\n      \n      To grant access to |aws| |s3| Bucket or {+az-bs+} Container for\n      exporting snapshots, send a ``POST`` request to the\n      :oas-atlas-tag:`Cloud Backups </Cloud-Backups>` resource\n      :oas-atlas-op:`endpoint </createExportBucket>`. This enables the\n      |aws| |s3| Bucket or {+az-bs+} Container to receive |service|\n      Cloud Backup snapshots. When sending the request to grant access,\n      you must provide the following information: \n\n      .. tabs:: \n\n         .. tab:: AWS \n            :tabid: aws \n\n            - Unique 24-hexadecimal character string that identifies the\n              unified AWS access role ID that |service| must use to \n              access the |aws| |s3| Bucket. To learn more, see\n              :ref:`set-up-unified-aws-access`. \n\n         .. tab:: Azure \n            :tabid: azure \n\n            - Unique 24-hexadecimal character string that identifies the\n              |azure| Service Principal that |service| must use to\n              access the {+az-bs+}. To learn more, see\n              :ref:`manage-azure-access`. \n            - Service endpoint of your {+az-bs+} account. To learn more,\n              see :azure:`Azure Documentation </storage/common/storage-account-get-info?tabs=azure-cli#get-service-endpoints-for-the-storage-account>`.\n            - UUID string that identifies the Microsoft Entra tenant ID.\n              To learn more, see  `Microsoft Entra Documentation <https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant>`__.\n      \n      List All Export Buckets \n      ```````````````````````\n\n      To retrieve all the |aws| |s3| Buckets and {+az-bs+} Containers\n      to which |service| exports snapshots, send a ``GET`` request to \n      the :oas-atlas-tag:`Cloud Backups </Cloud-Backups>` resource\n      :oas-atlas-op:`endpoint </listExportBuckets>`. \n      \n      Delete One Export Bucket\n      ````````````````````````\n      \n      To delete an Export Bucket, you must first disable automatic export of snapshots to\n      the |aws| |s3| Bucket or {+az-bs+} Container for all {+clusters+}\n      in the project and then send a ``DELETE`` request to the\n      :oas-atlas-tag:`Cloud Backups </Cloud-Backups>` resource\n      :oas-atlas-op:`endpoint </deleteExportBucket>` with the ID of the\n      Export Bucket. If necessary, send a ``GET`` request to the\n      :oas-atlas-op:`endpoint </listExportBuckets>` to retrieve the\n      export Bucket ID.  \n      \n      Manage Export Jobs \n      ~~~~~~~~~~~~~~~~~~\n\n      Use the following to :oas-atlas-tag:`manage </Cloud-Backups>`\n      export jobs.\n\n      Create Snapshot Export Job\n      ``````````````````````````\n\n      To export one |service| backup snapshot to an |aws| |s3| Bucket or\n      {+az-bs+} Container, send a ``POST`` request to the\n      :oas-atlas-tag:`Cloud Backups </Cloud-Backups>` resource\n      :oas-atlas-op:`endpoint </createBackupExportJob>` with the ID of\n      the snapshot to export and the ID of the |aws| |s3| Bucket or\n      {+az-bs+} Container.\n\n      Retrieve Snapshot Export Job \n      ````````````````````````````\n\n      To retrieve one snapshot export job by its ID, send a ``GET``\n      request to the :oas-atlas-tag:`Cloud Backups </Cloud-Backups>`\n      resource :oas-atlas-op:`endpoint </getBackupExportJob>` with the\n      ID of the export job. \n\n      To retrieve all running snapshot export jobs, send a ``GET``\n      request to the :oas-atlas-tag:`Cloud Backups </Cloud-Backups>`\n      resource :oas-atlas-op:`endpoint </listBackupExportJobs>`. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/backup/cloud-backup/export.txt"
  },
  {
    "code": "   :copyable: false\n\n   Organizations with less than $20 of usage can't access the Cost Explorer.\n\n.. _cross-org-billing:\n\nCross-Organization Billing\n--------------------------\n\n*Cross-organization billing* is an |service| subscription feature that \nenables you to share a billing subscription across many \n:doc:`organizations </tutorial/manage-organizations/>` and to pay a \nsingle invoice for them. After \n:ref:`configuring a paying organization <configure-paying-org>`, you \npay invoices for the paying organization that include a list of charges \nincurred for all linked organizations.\n\nA paying organization's :guilabel:`Overview` tab includes the\n:guilabel:`Running Invoice Total`.\n\nThe :guilabel:`Running Invoice Total` shows:\n\n- the paying organization's charges, or\n- if you have linked organizations, the paying and linked organizations'\n  combined charges.\n\nTo display linked organizations and their contributions to the \n:guilabel:`Running Invoice Total`, view the :ref:`payment details <payment-details>`\nsection of your organization's invoice.\n\nLinked organizations are subject to the subscription agreement of the \npaying organization, including the level of support, the charges \nassociated with the subscription, discounts, and payment terms.\n\nLinked Organization Invoices\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou pay for all linked organization usage through the paying \norganization. To help you account for usage, each linked organization\nhas its own monthly invoice.\n\nLinked organization invoices include:\n\n- All charges incurred by that organization.\n- A percentage of your total cross-organization  billing subscription\n  cost proportional to that organization's usage.\n\nEach day, |service| bills linked and paying organizations for\nsubscription uplift based on their own usage.\n\nAt the end of a paying organization's billing period, |service| bills\nlinked and paying organizations proportionally to their usage for the unmet \nmonthly minimum, if there is one.\n\n.. example::\n   A paying organization has an |service| Pro subscription and two \n   linked organizations. The paying organization incurs no charges. \n   \n   Linked organization #1 incurs $400 in subscription uplift charges \n   while linked organization #2 incurs $200 in subscription uplift \n   charges. The paying organization has a monthly minimum of $799, so \n   at the end of the month, the unmet $199 is proportionally distributed \n   across invoices for linked organizations #1 and #2:\n\n   - |service| charges linked organization #1 $132.70 of the unmet $199 \n     because it incurred 2/3 of the total charges.\n\n   - |service| charges linked organization #2 $66.30 of the unmet $199 \n     because it incurred 1/3 of the total charges.\n\n   You still pay all charges through the paying organization.\n\n.. note::\n   \n   At the end of the paying organization's billing period, simultaneous \n   charges for daily subscription uplift and an unmet minimum could \n   trigger daily maximum billing alerts.\n\n.. _cross-org-billing-use-cases:\n\nUse Cases\n~~~~~~~~~\n\nUse cross-organization billing to:\n\n- Create broad levels of authorization using |service| organizations.\n- Exceed the 250-project limit on |service| organizations.\n\n.. example::\n\n   A company with sales and engineering teams requires that\n   each team has different organization-level authorization. At the same\n   time, the company prefers to receive a single invoice for the\n   company's database use. \n\n   To pay all costs through that paying organization and maintain control\n   over the authorizations of each team organization, the company can:\n\n   1. Create two organizations for sales and engineering.\n   2. Link these organizations to a paying organization.\n\n   A company with over 250 projects might create new organizations for new\n   projects, then link all organizations to a paying organization to \n   maintain a single source of invoicing.\n\n.. _configure-paying-org:\n\nConfigure a Paying Organization\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPrerequisites and Limitations\n`````````````````````````````\n\n.. include:: /includes/fact-cross-org-billing-prereqs.rst\n\nTo configure a paying organization and link other organizations to it:\n\n.. include:: /includes/steps-configure-paying-organization.rst\n\nThe :guilabel:`Linked Organizations` tab displays your linked \norganizations. To link additional organizations, click \n:guilabel:`Link More Organizations`.\n\n.. _unlink-with-cross-org-billing:\n\nUnlink Organizations\n~~~~~~~~~~~~~~~~~~~~\n\nYou can unlink organizations from your paying organization.\n\nWhen you unlink an organization, the change takes effect upon processing\nyour next invoice. If you change your mind and want to re-link \nan organization before your next invoice, you can cancel \nthe unlinking request before that invoice is processed.\n\nYou can unlink or cancel unlinking from the |service| Admin UI. You must have\npermissions to make changes to your linked organization's billing settings. To \nunlink a linked organization, follow these steps:\n\n.. procedure::\n   :style: normal\n\n   .. include:: /includes/nav/steps-org-billing.rst\n   \n   .. step:: Click the :guilabel:`Linked Organizations` tab.\n   \n   .. step:: Click :guilabel:`Unlink` next to the organization you want to unlink.\n   \n      .. important::\n   \n         The organization will be unlinked upon generating your next \n         invoice. \n         For the current invoice period, the organization will continue \n         to incur charges on the paying organization. After that, the \n         organization will be unlinked and receive a separate invoice.\n\n   .. step:: Enter and save new payment method. \n          \n      You can enter a credit card number or a MongoDB activation code. \n\n      After the upcoming invoice, |service| bills your new organization \n      separately.\n\nIf you want to cancel the unlinking request, navigate to the \n:guilabel:`Linked Organizations` tab. Click \n:guilabel:`Cancel Unlinking` next to the organization you \nwant to cancel the unlinking process for. \nIf you applied an activation code, you can apply\nthat code to your paying organization or \nremove it to use elsewhere.\n\nBilling Quota Management\n------------------------\n\nYou can use :ref:`billing alerts <billing-alerts>` to help manage your\nbilling quotas. Billing alerts notify a designated person when a bill\nhas exceeded a |usd| limit, or when a credit card is about to expire.\n\nTo :ref:`configure billing alerts <configure-alert-settings-tabs>`:\n\n.. procedure::\n   :style: normal\n\n   .. include:: /includes/nav/steps-org-settings.rst\n\n   .. include:: /includes/nav/steps-org-alerts.rst\n\n.. toctree::\n   :caption: Reference\n   :titlesonly:\n   :includehidden:\n   :hidden:\n\n   Invoices </billing/invoices>\n   Subscriptions </billing/subscriptions>\n   Billing Optimization </billing/billing-breakdown-optimization>\n   Cluster Configuration </billing/cluster-configuration-costs>\n   Serverless Instances </billing/serverless-instance-costs>\n   Data Federation </billing/data-federation>\n   Data Transfer </billing/data-transfer-costs>\n   Stream Processing </billing/stream-processing-costs>\n   Online Archive </billing/online-archive>\n   Search Nodes </billing/search-node>\n   AWS Marketplace </billing/aws-self-serve-marketplace>\n   Azure Marketplace </billing/azure-self-serve-marketplace>\n   GCP Marketplace </billing/gcp-self-serve-marketplace>\n   Additional Services </billing/additional-services>\n   International Usage & Taxes </billing/international-usage>\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/billing.txt"
  },
  {
    "code": "               :copyable: true\n\n               db.runCommand({ \"create\" : \"<collection-name>|*\", \"dataSources\" : [{ \"storeName\" : \"<store-name>\", \"path\" : \"<path-to-files-or-folders>\", \"defaultFormat\" : \"<file-extension>\", \"omitAttributes\": <boolean> }]})\n\n         .. tab:: Azure  \n            :tabid: azure\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true\n\n               db.runCommand({ \"create\" : \"<collection-name>|*\", \"dataSources\" : [{ \"storeName\" : \"<store-name>\", \"path\" : \"<path-to-files-or-folders>\", \"defaultFormat\" : \"<file-extension>\", \"omitAttributes\": <boolean> }]})\n\n         .. tab:: Atlas Cluster\n            :tabid: atlas\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true\n\n               db.runCommand({ \"create\" : \"<collection-name>\"|\"*\", \"dataSources\" : [{ \"storeName\" : \"<store-name>\", \"database\" : \"<atlas-database-name>\", \"collection\" :  \"<atlas-collection-name>\" | \"collectionRegex\": \"<regex-pattern>\" }]})\n\n         .. tab:: HTTP \n            :tabid: http\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true\n\n               db.runCommand({ \"create\" : \"<collection-name>\", \"dataSources\" : [{ \"storeName\" : \"<store-name>\", \"allowInsecure\" : true|false, \"urls\" : [ \"<url>\" ], \"defaultFormat\" :  \"<file-extension>\" }]})\n\n         .. tab:: Atlas Online Archive \n            :tabid: oa\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true\n\n               db.runCommand({ \"create\" : \"<collection-name>|*\", \"dataSources\" : [{ \"storeName\" : \"<store-name>\", \"datasetName\" : \"<online-archive-dataset-name>\", \"datasetPrefix\": \"<prefix-name>\", \"trimLevel\" :  <trim-number>, \"maxDatasets\": <maximum-number-of-datasets> }]})\n\n   .. tab:: Views \n      :tabid: views\n\n      .. tabs:: \n         :hidden: \n\n         .. tab:: Standard View \n            :tabid: source\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "   :copyable: false\n\n   { ok: 1 }\n\n.. _adf-collections-views-create-cmd-egs:\n\nExamples \n--------\n\n.. tabs:: \n   :hidden:\n\n   .. tab:: Create Collections Examples\n      :tabid: coll\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: S3 Example \n            :tabid: s3\n\n            The following examples use the sample ``airbnb`` data on an\n            |aws| |s3| store with the following settings:\n\n            .. list-table:: \n               :stub-columns: 1\n               :widths: 20 80\n\n               * - **Store Name** \n                 - ``egS3Store``\n\n               * - **Region**\n                 - ``us-east-2``\n\n               * - **Bucket**\n                 - ``test-data-federation``\n\n               * - **Prefix**\n                 - ``json``\n\n               * - **Delimiter**\n                 - ``/``\n\n               * - **Sample Dataset**\n                 - ``airbnb``\n\n         .. tab:: Azure Example \n            :tabid: azure\n\n            The following examples use the sample ``airbnb`` data on an\n            {+az-bs+} container with the following settings:\n\n            .. list-table:: \n               :stub-columns: 1\n               :widths: 20 80\n\n               * - **Store Name** \n                 - ``egAzureStore``\n\n               * - **Prefix**\n                 - ``sample``\n\n               * - **Delimiter**\n                 - ``/``\n\n               * - **Sample Dataset**\n                 - ``airbnb``\n\n         .. tab:: Atlas Example \n            :tabid: atlas \n\n            The following examples use the \n            ``sample_airbnb.listingsAndReviews`` collection from the \n            :atlas:`sample dataset </sample-data/sample-airbnb/>` \n            on the |service| cluster with the following settings: \n\n            .. list-table:: \n               :stub-columns: 1\n               :widths: 20 80\n\n               * - **Store Name** \n                 - ``egAtlasStore``\n\n               * - **Sample Dataset**\n                 - ``sample_airbnb.listingsAndReviews``\n\n            Review :atlas:`Load Sample Data into Your Atlas Cluster \n            </sample-data/>` to load the sample dataset in your \n            |service| cluster.\n\n         .. tab:: HTTP Example \n            :tabid: http \n\n            The following examples use the following |url|\\s:\n\n            - ``https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json`` \n            - ``https://atlas-data-lake.s3.amazonaws.com/json/sample_weatherdata/data.json`` \n\n         .. tab:: Atlas Online Archive Example \n            :tabid: oa \n\n            The following examples use an online archive with the\n            following settings:  \n\n            .. list-table:: \n               :stub-columns: 1\n               :widths: 20 80\n\n               * - Store Name\n                 - ``adlStore``\n\n               * - {+Online-Archive+} Name\n                 - ``v1$atlas$archive$testCluster$sample_airbnb$219eb1cb-20a6-4ce3-800a-aaefd6c227c6$66d512939b1fa57fe057aa22``\n\n      .. _dl-create-collection-cmd-basic-eg:\n\n      Basic Example \n      ~~~~~~~~~~~~~\n\n      The following command creates a collection named ``airbnb`` in \n      the ``sampleDB`` database in the storage configuration. \n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: S3 Example \n            :tabid: s3\n      \n            The ``airbnb`` collection maps to the ``airbnb`` sample \n            dataset in the ``json`` folder in the |s3| store named \n            ``egS3Store``.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript\n\n                  use sampleDB\n                  db.runCommand({ \"create\" : \"airbnb\", \"dataSources\" : [{ \"storeName\" : \"egS3Store\", \"path\" : \"/json/airbnb\", \"defaultFormat\" : \".json\" }]})\n\n               .. output::\n                  :language: json\n\n                  { \"ok\" : 1 }\n\n            The following commands show that the collection was \n            successfully created: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  show collections\n\n               .. output::\n                  :language: javascript\n\n                  airbnb\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript\n\n                  db.runCommand({\"storageGetConfig\" : 1 })\n\n               .. output::\n                  :language: json\n\n                  {\n\t                  \"ok\" : 1,\n\t                  \"storage\" : {\n\t\t                  \"stores\" : [{\n\t\t\t\t                \"name\" : \"egS3Store\",\n\t\t\t\t                \"provider\" : \"s3\",\n\t\t\t\t                \"region\" : \"us-east-2\",\n\t\t\t\t                \"bucket\" : \"test-data-federation\",\n\t\t\t\t                \"delimiter\" : \"/\",\n\t\t\t\t                \"prefix\" : \"\"\n\t\t                  }],\n\t\t                  \"databases\" : [{\n\t\t\t                  \"name\" : \"sampleDB\",\n\t\t\t                  \"collections\" : [{\n\t\t\t\t                  \"name\" : \"airbnb\",\n\t\t\t\t                  \"dataSources\" : [{\n\t\t\t\t\t                  \"storeName\" : \"egS3Store\",\n\t\t\t\t\t                  \"path\" : \"/json/airbnb\",\n\t\t\t\t\t                  \"defaultFormat\" : \".json\"\n\t\t\t\t                  }]\n\t\t\t                  }]\n\t\t                  }]\n\t                  }\n                  }\n\n         .. tab:: Azure Example \n            :tabid: azure\n      \n            The ``airbnb`` collection maps to the ``airbnb`` sample \n            dataset in the ``sample`` folder in the |azure| store named \n            ``egAzureStore``.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript\n\n                  use sampleDB\n                  db.runCommand({ \"create\" : \"airbnb\", \"dataSources\" : [{ \"storeName\" : \"egAzureStore\", \"path\" : \"/sample/airbnb\", \"defaultFormat\" : \".json\" }]})\n\n               .. output::\n                  :language: json\n\n                  { \"ok\" : 1 }\n\n            The following commands show that the collection was \n            successfully created: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  show collections\n\n               .. output::\n                  :language: javascript\n\n                  airbnb\n\n         .. tab:: Atlas Example \n            :tabid: atlas\n      \n            The ``airbnb`` collection maps to the \n            ``listingsAndReviews`` sample collection in the \n            ``sample_airbnb`` database on the |service| cluser.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  use sampleDB\n                  db.runCommand({ \"create\" : \"airbnb\", \"dataSources\" : [{ \"storeName\" : \"egAtlasStore\", \"database\" : \"sample_airbnb\", \"collection\" : \"listingsAndReviews\" }]})\n\n               .. output::\n                  :language: json\n\n                  { \"ok\" : 1 }\n\n            The following commands show that the collection was \n            successfully created: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  show collections\n\n               .. output::\n                  :language: javascript\n\n                  airbnb\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript\n\n                  db.runCommand({\"storageGetConfig\":1})\n\n               .. output::\n                  :language: json\n\n                  {\n\t                 \"ok\" : 1,\n\t                 \"storage\" : {\n\t\t                \"stores\" : [{\n\t\t\t\t            \"name\" : \"egAtlasStore\",\n\t\t\t\t            \"provider\" : \"atlas\",\n\t\t\t\t            \"clusterName\" : \"myTestCluster\",\n\t\t\t\t            \"projectId\" : \"<project-id>\"\n\t\t\t             }],\n\t\t                \"databases\" : [{\n\t\t\t               \"name\" : \"sampleDB\",\n\t\t\t               \"collections\" : [{\n\t\t\t\t              \"name\" : \"airbnb\",\n\t\t\t\t              \"dataSources\" : [{\n\t   \t\t\t\t          \"storeName\" : \"egAtlasStore\",\n\t\t\t\t\t             \"database\" : \"sample_airbnb\",\n\t\t\t\t\t             \"collection\" : \"listingsAndReview\"\n\t\t\t\t              }]\n\t\t\t               }]\n\t\t                }]\n\t                 }\n                  }\n\n         .. tab:: HTTP Example \n            :tabid: http\n      \n            The ``airbnb`` collection includes a partition for \n            each |url| in the collection. The ``allowInsecure`` flag is \n            not set and defaults to ``false``.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript\n\n                  use sampleDB\n                  db.runCommand({ \"create\" : \"airbnb\", \"dataSources\" : [{ \"storeName\" : \"http-store\", \"urls\": [\"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json\",\"https://atlas-data-lake.s3.amazonaws.com/json/sample_weatherdata/data.json\"], \"defaultFormat\" : \".json\" }]})\n\n               .. output::\n                  :language: json\n\n                  { \"ok\" : 1 }\n\n            The following commands show that the collection was \n            successfully created: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  show collections\n\n               .. output::\n                  :language: javascript\n\n                  airbnb\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript\n\n                  db.runCommand({\"storageGetConfig\":1})\n\n               .. output::\n                  :language: json\n\n                  {\n   \t              \"ok\" : 1,\n\t                 \"storage\" : {\n\t\t                \"stores\" : [\n\t\t\t               {\n\t\t\t\t              \"name\" : \"http-store\",\n\t\t\t\t              \"provider\" : \"http\",\n\t\t\t\t              \"urls\" : [\n\t\t\t\t\t             \"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json\",\n\t\t\t\t\t             \"https://atlas-data-lake.s3.amazonaws.com/json/sample_weatherdata/data.json\"\n\t\t\t\t              ],\n\t\t\t\t              \"defaultFormat\" : \".json\"\n\t\t\t               }\n\t\t                ],\n\t\t                \"databases\" : [\n\t\t\t               {\n\t\t\t\t              \"name\" : \"sampleDb\",\n\t\t\t\t              \"collections\" : [\n\t\t\t\t\t             {\n\t\t\t\t\t\t            \"name\" : \"airbnb\",\n\t\t\t\t\t\t            \"dataSources\" : [\n\t\t\t\t\t\t\t           {\n\t\t\t\t\t\t\t\t           \"storeName\" : \"http-store\",\n\t\t\t\t\t\t\t\t           \"defaultFormat\" : \".json\",\n\t\t\t\t\t\t\t\t           \"urls\" : [\n\t\t\t\t\t\t\t\t\t          \"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json\",\n\t\t\t\t\t\t\t\t\t          \"https://atlas-data-lake.s3.amazonaws.com/json/sample_weatherdata/data.json\"\n\t\t\t\t\t\t\t\t           ]\n\t\t\t\t\t\t\t           }\n\t\t\t\t\t\t            ]\n\t\t\t\t\t             }\n\t\t\t\t              ]\n\t\t\t               }\n\t\t                ]\n\t                 }\n                  }\n\n         .. tab:: Atlas Online Archive Example \n            :tabid: oa \n\n            The ``airbnb`` collection maps to the online archive datasets in \n            the ``sample_airbnb.listingsAndReviews`` pipeline.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  use sampleDB\n                  db.runCommand({ \"create\" : \"airbnb\", \"dataSources\" : [{ \"storeName\" : \"adlStore\", \"datasetName\" : \"v1$atlas$snapshot$testCluster$sample_airbnb$listingsAndReviews\" }]})\n\n               .. output::\n                  :language: json \n\n                  { \"ok\" : 1 }\n\n      .. _dl-create-collection-cmd-wildcard-eg:\n\n      Wildcard Usage Examples\n      ~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: S3 Example \n            :tabid: s3\n\n            These examples show how the wildcard ``\"*\"`` can be \n            specified with the ``create`` command.\n\n            .. tabs:: \n\n               .. tab:: Collection Name Example\n                  :tabid: collnameeg\n            \n                  The following example uses the ``create`` command to \n                  dynamically create collections.\n\n                  The following example uses the ``create`` command to \n                  dynamically create collections for the files in the \n                  path ``/json/`` in the ``egS3Store`` {+fdi+} store. \n                  It uses the ``collectionName()`` function to name the \n                  collections after the filenames in the specified path.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n         \n                        use sampleDB \n                        db.runCommand({ \"create\" : \"*\", \"dataSources\" : [{ \"storeName\" : \"egS3Store\", \"path\": \"/json/{collectionName()}\"}]})\n\n                     .. output::\n                        :language: json \n\n                        { \"ok\" : 1 }\n      \n                  The following commands show that the collection was \n                  successfully created:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        show collections\n                    \n                     .. output::\n                        :language: javascript\n\n                        airbnb\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript\n\n                        db.runCommand({\"storageGetConfig\" : 1 })\n\n                     .. output::\n                        :language: json\n\n                        {\n                          \"ok\" : 1,\n                          \"storage\" : {\n                            \"stores\" : [{\n                              \"name\" : \"egS3Store\",\n                              \"provider\" : \"s3\",\n                              \"region\" : \"us-east-2\",\n                              \"bucket\" : \"test-data-federation\",\n                              \"delimiter\" : \"/\",\n                              \"prefix\" : \"\"\n                            }],\n                            \"databases\" : [{\n                              \"name\" : \"sampleDB\",\n                              \"collections\" : [{\n                                \"name\" : \"*\",\n                                \"dataSources\" : [{\n                                  \"storeName\" : \"egS3Store\",\n                                  \"path\" : \"/json/{collectionName()}\"\n                                }]\n                              }]\n                            }]\n                          }\n                        }\n\n               .. tab:: Path Glob Example\n                  :tabid: pathglobeg\n\n                  The following example uses the ``create`` command to \n                  create a collection named ``egCollection`` that maps \n                  to a {+adf+} store named ``egS3Store``. The \n                  ``egS3Store`` contains the sample dataset, ``airbnb``, in a folder named ``json``. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript  \n      \n                        use sampleDB\n                        db.runCommand({ \"create\" : \"egCollection\", \"dataSources\" : [{ \"storeName\" : \"egS3Store\", \"path\": \"/json/*\"}]}})\n\n                     .. output::\n                        :language: json \n\n                        { \"ok\" : 1 }\n\n                  The following commands show that the collection was \n                  successfully created: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        show collections\n\n                     .. output::\n                        :language: javascript\n\n                        egCollection\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript\n\n                        db.runCommand({\"storageGetConfig\" : 1 })\n\n                     .. output::\n                        :language: json\n\n                        {\n\t                       \"ok\" : 1,\n\t                       \"storage\" : {\n\t\t                      \"stores\" : [{\n\t\t                        \"name\" : \"egS3Store\",\n\t\t                        \"provider\" : \"s3\",\n\t\t                        \"region\" : \"us-east-2\",\n\t\t                        \"bucket\" : \"test-data-federation\",\n\t\t                        \"delimiter\" : \"/\",\n\t\t                        \"prefix\" : \"\"\n\t\t                      }],\n\t\t                      \"databases\" : [{\n\t\t                        \"name\" : \"sample\",\n\t\t                        \"collections\" : [{\n\t\t\t                       \"name\" : \"egCollection\",\n\t\t\t                       \"dataSources\" : [{\n\t\t\t\t                      \"storeName\" : \"egS3Store\",\n\t\t\t\t                      \"path\" : \"/json/*\"\n\t\t\t\t                    }]\n\t\t\t                     }]\n\t\t                      }]\n\t                       }\n                        }\n         \n         .. tab:: Azure Example \n            :tabid: azure\n\n            The following examples show how to specify a wildcard\n            ``\"*\"`` with the ``create`` command.\n\n            .. tabs:: \n\n               .. tab:: Collection Name Example\n                  :tabid: collnameeg\n         \n                  The following example uses the ``create`` command to \n                  dynamically create collections for the files in the \n                  path ``/sample/`` in the ``egAzureStore`` {+fdi+}\n                  store. It uses the ``collectionName()`` function to\n                  name the collections after the filenames in the\n                  specified path. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n         \n                        use sampleDB \n                        db.runCommand({ \"create\" : \"*\", \"dataSources\" : [{ \"storeName\" : \"egAzureStore\", \"path\": \"/json/{collectionName()}\"}]})\n\n                     .. output::\n                        :language: json \n\n                        { \"ok\" : 1 }\n      \n                  The following commands show that the collection was \n                  successfully created:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        show collections\n                    \n                     .. output::\n                        :language: javascript\n\n                        airbnb\n\n               .. tab:: Path Glob Example\n                  :tabid: pathglobeg\n\n                  The following example uses the ``create`` command to \n                  create a collection named ``egCollection`` that maps \n                  to a {+adf+} store named ``egAzureStore``. The \n                  ``egAzureStore`` contains the sample dataset,\n                  ``airbnb``, in a folder named ``sample``. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript  \n      \n                        use sampleDB\n                        db.runCommand({ \"create\" : \"egCollection\", \"dataSources\" : [{ \"storeName\" : \"egAzureStore\", \"path\": \"/sample/*\"}]}})\n\n                     .. output::\n                        :language: json \n\n                        { \"ok\" : 1 }\n\n                  The following commands show that the collection was \n                  successfully created: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        show collections\n\n                     .. output::\n                        :language: javascript\n\n                        egCollection\n\n         .. tab:: Atlas Example \n            :tabid: atlas\n\n            These examples show how the wildcard ``\"*\"`` can be \n            specified with the ``create`` command.\n\n            .. tabs:: \n\n               .. tab:: Basic Example \n                  :tabid: basic\n            \n                  The following example uses the ``create`` command to \n                  dynamically create collections for the documents in \n                  the ``sample_airbnb`` database on the |service| \n                  cluster name ``myTestCluster``. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n    \n                        use sampleDB \n                        db.runCommand({ \"create\" : \"*\", \"dataSources\" : [{ \"storeName\" : \"egAtlasStore\", \"database\": \"sample_airbnb\"}]})\n\n                     .. output::\n                        :language: json\n\n                        { \"ok\" : 1 }\n            \n                  The following commands show that the collection was \n                  successfully created:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript\n\n                        db.runCommand({storageGetConfig:1})\n\n                     .. output::\n                        :language: json\n\n                        {\n                          \"ok\" : 1,\n                          \"storage\" : {\n                            \"stores\" : [{\n                              \"name\" : \"egAtlasStore\",\n                              \"provider\" : \"atlas\",\n                              \"clusterName\" : \"myTestCluster\",\n                              \"projectId\" : \"<project-id>\"\n                            }],\n                            \"databases\" : [{\n                              \"name\" : \"sampleDB\",\n                              \"collections\" : [{\n                                \"name\" : \"*\",\n                                \"dataSources\" : [{\n                                  \"storeName\" : \"egAtlasStore\",\n                                  \"database\" : \"sample_airbnb\"\n                                }]\n                              }]\n                            }]\n                          }\n                        }\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript\n\n                        show collections \n\n                     .. output::\n                        :language: json\n                     \n                        listingsAndReviews\n\n               .. tab:: Regex Example \n                  :tabid: regex\n\n                  The following example uses the ``create`` command to \n                  dynamically create collections whose names match a \n                  specified regex pattern in the ``sample_airbnb`` \n                  database on the |service| cluster named \n                  ``myTestCluster``.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript  \n    \n                        use sampleDB \n                        db.runCommand({ \"create\" : \"*\", \"dataSources\" : [{ \"storeName\" : \"egAtlasStore\", \"database\": \"sample_airbnb\", \"collectionRegex\" : \"^list\" }]})\n\n                     .. output::\n                        :language: json\n\n                        { \"ok\" : 1 }\n            \n                  The following commands show that the collection was \n                  successfully created:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        db.runCommand({storageGetConfig:1})\n\n                     .. output::\n                        :language: json\n\n                        {\n                          \"ok\" : 1,\n                          \"storage\" : {\n                            \"stores\" : [\n                              {\n                                \"name\" : \"egAtlasStore\",\n                                \"provider\" : \"atlas\",\n                                \"clusterName\" : \"myTestCluster\",\n                                \"projectId\" : \"<project-id>\"\n                              }\n                            ],\n                            \"databases\" : [\n                              {\n                                \"name\" : \"sbxDb\",\n                                \"collections\" : [\n                                  {\n                                    \"name\" : \"*\",\n                                    \"dataSources\" : [\n                                      {\n                                        \"storeName\" : \"egAtlasStore\",\n                                        \"database\" : \"sample_airbnb\",\n                                        \"collectionRegex\" : \"^list\"\n                                      }\n                                    ]\n                                  }\n                                ]\n                              }\n                            ]\n                          }\n                        }\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        show collections\n\n                     .. output::\n                        :language: javascript\n\n                        listingsAndReviews\n\n               .. tab:: Wildcard Databases Example \n                  :tabid: wildcarddb  \n\n                  The following example uses the ``create`` command to \n                  dynamically create collections for dynamically \n                  created databases.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript  \n    \n                        use * \n                        db.runCommand({ \"create\" : \"*\", \"dataSources\" : [{ \"storeName\" : \"egAtlasStore\" }]})\n\n                     .. output::\n                        :language: json \n\n                        { \"ok\" : 1 }\n            \n                  The following command shows that the collection was \n                  successfully created:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        db.runCommand({storageGetConfig:1})\n\n                     .. output::\n                        :language: json \n\n                        {\n                          \"ok\" : 1,\n                          \"storage\" : {\n                            \"stores\" : [\n                              {\n                                \"name\" : \"egAtlasStore\",\n                                \"provider\" : \"atlas\",\n                                \"clusterName\" : \"myTestCluster\",\n                                \"projectId\" : \"<project-id>\"\n                              }\n                            ],\n                            \"databases\" : [\n                              {\n                                \"name\" : \"*\",\n                                \"collections\" : [\n                                  {\n                                    \"name\" : \"*\",\n                                    \"dataSources\" : [\n                                      {\n                                        \"storeName\" : \"egAtlasStore\"\n                                      }\n                                    ]\n                                  }\n                                ]\n                              }\n                            ]\n                          }\n                        }\n\n         .. tab:: HTTP Example \n            :tabid: http\n\n            Wildcard ``\"*\"`` collections are not supported on this \n            data store.\n\n         .. tab:: Atlas Online Archive Example \n            :tabid: oa\n\n            The following example uses the ``create`` command to \n            dynamically create collections whose names match a \n            specified prefix name for the online archive.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  use sample \n                  db.runCommand({ \"create\" : \"*\", \"dataSources\" : [{ \"storeName\" : \"adlStore\", \"datasetPrefix\": \"v1$atlas$snapshot$testCluster$sample_airbnb$listingsAndReviews\", \"trimLevel\": 4 }]})\n\n               .. output::\n                  :language: json\n\n                  { ok: 1 }\n\n            The following command shows that the collection was \n            successfully created:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  show collections\n\n               .. output::\n                  :language: javascript\n\n                  sample_airbnb_listingsAndReviews_20220602T124437Z\n                  sample_airbnb_listingsAndReviews_20220603T124603Z\n                  sample_airbnb_listingsAndReviews_20220604T124420Z\n                  sample_airbnb_listingsAndReviews_20220605T124454Z\n                  sample_airbnb_listingsAndReviews_20220606T124419Z\n                  sample_airbnb_listingsAndReviews_20220607T124515Z\n\n      .. _dl-create-collection-cmd-multi-eg:\n\n      Multiple Data Sources Example \n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      The following command creates a collection named ``egCollection`` \n      in the ``sampleDB`` database in the storage configuration. The \n      ``egCollection`` collection maps to the following sample \n      datasets: \n\n      - ``airbnb`` dataset in the ``json`` folder in the |s3| store \n        named ``egS3Store``\n      - ``airbnb`` dataset in the ``sample_airbnb.listingsAndReviews`` \n        collection on the |service| cluster named ``myTestCluster``\n      - ``airbnb`` dataset in the |url| ``https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json``\n\n      .. warning:: \n\n         You can't create a {+fdi+} that maps to both |aws| |s3| buckets\n         and {+az-bs+} containers. {+adf+} doesn't support federated\n         queries across different cloud providers. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "         :copyable: true \n   \n         .. input::\n            :language: javascript\n\n            use sampleDB\n            db.runCommand({ \"create\" : \"egCollection\", \"dataSources\" : [{ \"storeName\" : \"egS3Store\", \"path\" : \"/json/airbnb\" },{ \"storeName\" : \"egAtlasStore\", \"database\": \"sample_airbnb\", \"collection\": \"listingsAndReviews\" },{\"storeName\" : \"egHttpStore\", \"urls\": [\"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json\"]}]})\n\n         .. output::\n            :language: json\n\n            { \"ok\" : 1 }\n\n      The following commands show that the collection was successfully \n      created: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "         :copyable: true \n   \n         .. input::\n            :language: javascript\n\n            show collections\n\n         .. output::\n            :language: javascript\n\n            egCollection\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "         :copyable: true \n\n         .. input::\n            :language: javascript\n\n            db.runCommand({\"storageGetConfig\":1})\n\n         .. output::\n            :language: json\n\n            {\n\t           \"ok\" : 1,\n\t           \"storage\" : {\n\t\t          \"stores\" : [\n\t\t\t         {\n\t\t\t\t        \"name\" : \"egS3Store\",\n\t\t\t\t        \"provider\" : \"s3\",\n\t\t\t\t        \"region\" : \"us-east-2\",\n\t\t\t\t        \"bucket\" : \"test-data-federation\",\n\t\t\t\t        \"delimiter\" : \"/\",\n\t\t\t\t        \"prefix\" : \"\"\n\t\t\t         },\n\t\t\t         {\n\t\t\t\t        \"name\" : \"egAtlasStore\",\n\t\t\t\t        \"provider\" : \"atlas\",\n\t\t\t\t        \"clusterName\" : \"myTestCluster\",\n\t\t\t\t        \"projectId\" : \"<project-id>\"\n\t\t\t         },\n\t\t\t         {\n\t\t\t\t        \"name\" : \"egHttpStore\",\n\t\t\t\t        \"provider\" : \"http\",\n\t\t\t\t        \"urls\" : [\"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json\"]                   \n\t\t\t         }\n\t\t          ],\n\t\t          \"databases\" : [\n\t\t\t         {\n\t\t\t           \"name\" : \"sampleDB\",\n\t\t\t           \"collections\" : [{\n\t\t\t   \t       \"name\" : \"egCollection\",\n\t\t\t\t          \"dataSources\" : [\n\t\t\t\t\t         {\n\t\t\t\t\t           \"storeName\" : \"egS3Store\",\n\t\t\t\t\t           \"path\" : \"json/airbnb\"\n\t\t\t\t\t         },\n\t\t\t\t\t         {\n\t\t\t\t\t           \"storeName\" : \"egAtlasStore\",\n\t\t\t\t\t           \"database\" : \"sample_airbnb\",\n\t\t\t\t\t           \"collection\" : \"listingsAndReviews\"\n\t\t\t\t\t         },\n\t\t\t\t\t         {\n\t\t\t\t\t           \"storeName\" : \"egHttpStore\",\n\t\t\t\t\t           \"urls\" : [\"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json\"]\n\t\t\t\t\t         }\n\t\t\t\t           ]\n\t\t\t           }]\n\t\t\t         }\n\t\t          ]\n\t           }\n            }\n\n   .. tab:: Create Views Example\n      :tabid: views\n\n      The following command creates a view named ``listings`` on the\n      ``airbnb`` collection in the ``sample`` database with the ``name``\n      and ``property_type`` fields: \n\n      .. tabs:: \n         :hidden: \n\n         .. tab:: Standard View \n            :tabid: source\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript \n\n                  use sampleDB\n                  db.runCommand({ \"create\" : \"listings\", \"viewOn\" : \"airbnb\", \"pipeline\" : [{$project: {\"property_type\":1, \"name\": 1}}] })\n\n               .. output::\n                  :language: json \n\n                  { \"ok\" : 1 }\n\n         .. tab:: SQL View \n            :tabid: sql\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "               :copyable: true \n   \n               .. input::\n                  :language: javascript\n                  \n                  use sampleDB\n                  db.runCommand({ \"create\" : \"listings\", \"pipeline\": [{$sql: {statement: \"SELECT property_type, name FROM airbnb\"} }] })\n\n               .. output::\n                  :language: json \n\n                  { \"ok\" : 1 }\n\n            The ``listCollections`` and ``storageGetConfig`` commands return \n            the following output: \n\n            .. tabs:: \n\n               .. tab:: listCollections\n                  :tabid: listCollections\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript\n\n                        db.runCommand({\"listCollections\":1})\n\n                     .. output::\n                        :language: json\n\n                        {\n      \t                 \"ok\" : 1,\n\t                       \"cursor\" : {\n\t\t                      \"firstBatch\" : [\n\t\t\t                     {\n\t\t\t\t                    \"name\" : \"airbnb\",\n      \t\t\t\t              \"type\" : \"collection\",\n\t\t      \t\t              \"info\" : {\n\t\t\t\t      \t             \"readOnly\" : true\n\t\t\t\t                    }\n\t\t\t                     },\n\t\t\t                     {\n      \t\t\t\t              \"name\" : \"listings\",\n\t\t      \t\t              \"type\" : \"view\",\n\t\t\t\t                    \"info\" : {\n\t\t\t\t\t                   \"readOnly\" : true\n\t\t\t\t                    }\n\t\t   \t                  }\n\t\t                      ],\n      \t\t                \"id\" : NumberLong(0),\n\t\t                      \"ns\" : \"egS3Store.$cmd.listCollections\"\n\t                       }\n                        }\n\n               .. tab:: storageGetConfig\n                  :tabid: storageGetConfig\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "                     :copyable: true \n   \n                     .. input::\n                        :language: javascript \n\n                        db.runCommand({\"storageGetConfig\":1})\n\n                     .. output::\n                        :language: json\n\n                        {\n\t                        \"ok\" : 1,\n      \t                  \"storage\" : {\n\t\t                       \"stores\" : [\n\t\t\t                      {\n\t\t\t\t                     \"name\" : \"egS3Store\",\n\t\t\t\t                     \"provider\" : \"s3\",\n      \t\t\t\t               \"region\" : \"us-east-2\",\n\t\t      \t\t               \"bucket\" : \"test-data-federation\",\n\t  \t\t\t                     \"delimiter\" : \"/\"\n\t\t\t                      }\n\t\t                        ],\n      \t\t                  \"databases\" : [\n\t\t      \t                 {\n\t\t\t\t                      \"name\" : \"sample\",\n\t\t\t\t                      \"collections\" : [\n\t\t\t\t\t                     {\n\t\t\t\t\t\t                    \"name\" : \"airbnb\",\n      \t\t\t\t\t   \t           \"dataSources\" : [\n\t\t      \t\t\t\t   \t          {\n\t\t\t\t      \t\t\t\t            \"storeName\" : \"egS3Store\",\n\t\t\t\t\t\t      \t\t            \"path\" : \"json/airbnb/*\"\n\t\t\t\t\t\t\t                   }\n\t\t\t\t\t\t                    ]\n\t\t\t\t\t                     },\n\t\t\t\t\t                     {\n      \t\t\t\t\t\t              \"name\" : \"*\",\n\t\t      \t\t\t\t              \"dataSources\" : [\n\t\t\t\t      \t\t\t             {\n\t\t\t\t\t\t      \t\t            \"storeName\" : \"egS3Store\",\n\t\t\t\t\t\t\t\t                  \"path\" : \"json/{collectionName()}\"\n\t\t\t\t   \t\t\t                }\n\t\t\t\t\t\t                    ]\n\t\t\t\t\t                     }\n\t\t\t\t                      ],\n      \t\t\t\t                \"views\" : [\n\t\t      \t\t\t               {\n\t\t\t\t      \t\t              \"name\" : \"listings\",\n\t  \t\t\t\t\t                    \"source\" : \"airbnb\",\n\t\t\t\t\t\t                    \"pipeline\" : \"[{\\\"$project\\\":{\\\"property_type\\\":{\\\"$numberInt\\\":\\\"1\\\"},\\\"name{\\\"$numberInt\\\":\\\"1\\\"}}}]\"\n\t\t\t\t\t                     }\n\t\t\t   \t                   ]\n\t\t\t                       }\n\t\t                        ]\n\t                        }\n                        }\n\n.. _dl-collections-views-create-cmd-verify:\n\nVerify Collection \n-----------------\n\nYou can verify that the command successfully created the \ncollection or view by running any of the following commands: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n\t         \"ok\" : 0,\n\t         \"errmsg\" : \"store name does not exist\",\n\t         \"code\" : 9,\n\t         \"codeName\" : \"FailedToParse\"\n         }\n\n      **Solution:** Ensure that the specified ``storeName`` matches the \n      name of a store in the ``stores`` array. You can run the \n      ``listStores`` command to retrieve the list of stores in your \n      {+fdi+} storage configuration.\n\n      **Collection Name Already Exists**\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n\t         \"ok\" : 0,\n\t         \"errmsg\" : \"collection name already exists in the database\",\n\t         \"code\" : 9,\n\t         \"codeName\" : \"FailedToParse\"\n         }\n\n      **Solution:** Ensure that the collection ``name`` is unique. You \n      can run the ``show collections`` command to retrieve the list of \n      existing collections.\n\n   .. tab:: Views \n      :tabid: views \n\n      If the command fails, it returns the following error:\n\n      **View Name Exists**\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n\t         \"ok\" : 0,\n\t         \"errmsg\" : \"a view '<database>.<view>' already exists, correlationID = <1603aaffdbc91ba93de6364a>\",\n\t         \"code\" : 48,\n\t         \"codeName\" : \"NamespaceExists\"\n         }\n\n      **Solution:** Ensure that the view name is unique. You can run \n      the ``listCollections`` command to retrieve the list of existing \n      views on a collection.\n      \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/create-collections-views.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1, \"ns\" : \"sample.airbnb\", \"nIndexesWas\" : 0 }\n\nWildcard Example \n################\n\nThe following example uses the ``drop`` command to remove the wildcard  \ncollection function (``collectionName()``) and all collections created \nby the wildcard collection function in a database named ``sample`` in \nthe storage configuration. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/drop-collections-views.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1, \"ns\" : \"sample.*\", \"nIndexesWas\" : 0 }\n\nDrop Views Example\n~~~~~~~~~~~~~~~~~~\n\nThe following command removes a :ref:`view named \"listings\" \n<adf-collections-views-create-cmd-egs>` on the `airbnb \n<https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews.json>`__ \ncollection in the ``sample`` database:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/drop-collections-views.txt"
  },
  {
    "code": "      :copyable: false \n\n      { \"ok\" : 1, \"ns\" : \"sample.listings\", \"nIndexesWas\" : 0 }\n\n.. _adf-drop-collection-views-cmd-errors:\n\nTroubleshoot Errors \n-------------------\n\nIf the command fails, it returns one of the following errors.\n\n**Reason:**  Namespace (database, collection, or view) does not exist.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/drop-collections-views.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n      ok: 0,\n      errmsg: \"ns not found\",\n      code: 26,\n      codeName: \"NamespaceNotFound\"\n   }\n\n**Solution:** Ensure that the namespace specified in the command is \nvalid and exists in the storage configuration. If necessary, use the \n``getStorageConfig`` command to retrieve the list of valid databases, \ncollections, and views in the storage configuration.\n\n**Reason:** Attempting to remove a collection created by the wildcard \ncollection function (``collectionName()``).\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/drop-collections-views.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n      ok: 0,\n      errmsg: \"cannot drop a collection created from a wildcard\",\n      code: 26,\n      codeName: \"NamespaceNotFound\"\n   }\n\n**Solution:** Ensure that the collection you are dropping is not an \nindividual collection dynamically generated by the wildcard collection \nfunction (``collectionName()``). {+df+} does not support \ndropping individual collections generated by the wildcard collection \nfunction. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/drop-collections-views.txt"
  },
  {
    "code": "   :copyable: false \n\n   { \"ok\" : 1 }\n\n.. _adf-rename-collection-cmd-examples:\n\nExamples \n--------\n\nThese examples use the following ``databases`` and ``collections`` \nin the storage configuration:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   \"databases\" : [\n     { \n       \"name\": \"multiCollDB\", \n       \"collections\": [ \n         { \n           \"name\": \"air_airlines\", \n           \"dataSources\": [{ \n             \"storeName\" : \"egS3Store\", \n             \"path\" : \"egData/air_airlines.json\" \n           }] \n         }, \n         { \n           \"name\": \"airbnb\", \n           \"dataSources\": [{ \n             \"storeName\" : \"sampleS3Store\", \n             \"path\" : \"json/airbnb/*\" \n           }] \n         }, \n         { \n           \"name\": \"weather\", \n           \"dataSources\": [{ \n             \"storeName\" : \"sampleS3Store\", \n             \"path\" : \"json/weather/*\" \n           }] \n         } \n       ] \n     }\n   ]\n\nBasic Example \n~~~~~~~~~~~~~\n\nThe following ``renameCollection`` command renames the ``air_airlines`` \ncollection in the database named ``multiCollDB`` to ``airlines``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   { \"ok\" : 1 }\n\n``dropTarget`` Example \n~~~~~~~~~~~~~~~~~~~~~~\n\nThe following ``renameCollection`` command: \n\n1. Renames the ``weather`` collection in the database named \n   ``multiCollDB`` to ``airbnb``, which is the name of an existing \n   collection in the same database. \n  \n2. Replaces ``airbnb`` collection data with the data in the ``weather`` \n   collection. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   { \"ok\" : 1 }\n\nThe following command shows that the collection was successfully \nrenamed:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   > show collections \n   airbnb\n   > db.runCommand({ \"storageGetConfig\" : 1 })\n   {\n\t  \"ok\" : 1,\n\t  \"storage\" : {\n\t\t \"stores\" : [\n\t\t\t{\n\t\t\t  \"name\" : \"egS3Store\",\n\t\t\t  \"provider\" : \"s3\",\n\t\t\t  \"region\" : \"us-east-2\",\n\t\t\t  \"bucket\" : \"sbx-data-federation\",\n\t\t\t  \"delimiter\" : \"/\",\n\t\t\t  \"prefix\" : \"\"\n\t\t\t}\n\t\t ],\n\t\t \"databases\" : [{\n\t\t\t\"name\" : \"multiCollDB\",\n\t\t\t\"collections\" : [{\n\t\t\t  \"name\": \"airbnb\",\n\t\t\t  \"dataSources\" : [\n\t\t\t\t {\n\t\t\t\t\t\"storeName\" : \"egS3Store\",\n\t\t\t\t\t\"path\" : \"/json/airbnb\"\n\t\t\t\t }\n\t\t\t  ]\n\t\t\t}]\n\t\t }]\n\t  }\n   }\n\n.. _adf-rename-collection-cmd-verify:\n\nVerify Collection \n-----------------\n\nYou can verify that the command succeeded by running any of the \nfollowing commands:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n    \"ok\": 0,\n    \"errmsg\": \"renameCollection can only be run against the admin database\",\n    \"code\": 13,\n    \"codeName\": \"Unauthorized\"\n   }\n\n**Solution:** Switch to the ``admin`` database and re-run the command. \nTo switch to the ``admin`` database, run the ``use admin`` command. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n    \"ok\": 0,\n    \"errmsg\": \"Invalid namespace specified '<ns>'\",\n    \"code\": 73,\n    \"codeName\": \"InvalidNamespace\"\n   }\n\n**Solution:** Check that the specified namespace (database or \ncollection) exists in the storage configuration.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n    \"ok\": 0,\n    \"errmsg\": \"Invalid target namespace: <namespace>\",\n    \"code\": 73,\n    \"codeName\": \"InvalidNamespace\"\n   }\n\n**Solution:** Ensure that the namespace (database or collection) \nspecified with the ``to`` field is valid. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n    \"ok\": 0,\n    \"errmsg\": \"target namespace exists\",\n    \"code\": 48,\n    \"codeName\": \"NamespaceExists\"\n   }\n\n**Solution:** Check that a collection with the specified name does not \nalready exist. Collection name must be unique if ``dropTarget`` is \nomitted or set to ``false``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n    \"ok\": 0,\n    \"errmsg\": \"source namespace does not exist\",\n    \"code\": 26,\n    \"codeName\": \"NamespaceNotFound\"\n   }\n\n**Solution:** Check the database name is valid and exists in the \nstorage configuration.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n    \"ok\": 0,\n    \"errmsg\": \"cannot rename a collection created from a wildcard\",\n    \"code\": 73,\n    \"codeName\": \"InvalidNamespace\"\n   }\n\n**Solution:** Collections created by the wildcard collection function \n(``collectionName()``) cannot be renamed.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/collections/rename-collection.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1 }\n\n.. _adf-drop-database-cmd-egs:\n\nExample \n~~~~~~~\n\nThe following example uses the ``dropDatabase`` command to drop a \ndatabase named ``egS3Store`` from the {+fdi+} storage \nconfiguration. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/database/drop-database.txt"
  },
  {
    "code": "   :copyable: false \n\n   { \"ok\" : 1 }\n\n.. _adf-drop-database-cmd-errors:\n\nTroubleshoot Errors \n~~~~~~~~~~~~~~~~~~~\n\nIf the command fails, it prints the following error: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/database/drop-database.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n      ok: 0,\n      errmsg: \"have to pass 1 as db parameter\",\n      code: 20,\n      codeName: \"IllegalOperation\"\n   }\n\n**Solution:** Specify ``1`` as the parameter to the command.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/database/drop-database.txt"
  },
  {
    "code": "         :copyable: true\n\n         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, region: <region-name>, bucket: <bucket-name>, additionalStorageClasses: [ <storage-classes> ], delimiter: <delimiter>, public: true|false })\n\n   .. tab:: Azure Configuration \n      :tabid: azure\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n\n         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, region: <region-name>, serviceURL: <service-account-URL>, containerName: <storage-container-name>, delimiter: <delimiter>, public: true|false })\n\n   .. tab:: Atlas Configuration \n      :tabid: atlas \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n\n         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, clusterName: <cluster-name>, projectId: <project-id>, readPreference: {mode: <read-preference-mode>, tagSets: [[{name: <name>, value: <value>},...],...], maxStalenessSeconds: <number-of-seconds>}, readConcern: {level: <level>} })\n\n   .. tab:: HTTP Configuration\n      :tabid: http \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n\n         db.runCommand({ createStore: <store-name>, provider: <storage-provider>, allowInsecure: true|false, urls: [ <url> ], defaultFormat: <file-extension> })\n\n   .. tab:: Atlas Online Archive Configuration\n      :tabid: oa \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n\n         db.runCommand({ createStore: <store-name>, provider: \"dls:aws\", region: <online-archive-region> })\n\n.. _adf-create-store-cmd-params:\n\nParameters \n----------\n\n.. tabs:: \n   :hidden:\n\n   .. tab:: S3 Configuration\n      :tabid: s3\n\n      .. include:: /includes/list-table-create-store-cli-common-params.rst\n\n      .. list-table::\n         :widths: 27 10 53 10 \n\n         * - ``region``\n           - string\n           - Region in which the ``bucket`` is hosted. For a list of \n             valid region names, see :atlas:`Amazon Web \n             Services (AWS) </reference/amazon-aws/#amazon-aws>`.\n           - yes\n\n         * - ``bucket`` \n           - string \n           - Name of the bucket in which data is stored. Must exactly \n             match the name of an |s3| bucket which {+df+} \n             can access given the configured |aws| |iam| credentials.\n           - yes\n\n         * - ``additionalStorageClasses`` \n           - array of strings \n           - Array of |aws| |s3| `storage classes \n             <https://aws.amazon.com/s3/storage-classes/>`__. {+adf+} \n             will include the files in these storage classes in the \n             query results. Valid values are: \n\n             - ``INTELLIGENT_TIERING`` to include files in the \n               `Intelligent Tiering <https://aws.amazon.com/s3/storage-classes/#Unknown_or_changing_access>`__ \n               storage class.\n             - ``STANDARD_IA`` to include files in the \n               `Standard-Infrequent Access \n               <https://aws.amazon.com/s3/storage-classes/#Infrequent_access>`__ \n               storage class.\n\n             Files in the `Standard \n             <https://aws.amazon.com/s3/storage-classes/#General_purpose>`__ \n             storage class are supported by default.\n\n           - no\n\n         * - ``delimiter`` \n           - string \n           - Character used to separate path segments in the \n             {+fdi+} store. If ommitted, defaults to ``\"/\"``.\n           - no\n\n         * - ``public`` \n           - boolean \n           - Flag that indicates whether or not the bucket is public. \n             Valid values are:\n\n             - ``true`` to not use the |aws| |iam| role to access the \n               bucket\n             - ``false`` to require the |aws| |iam| role to access the \n               bucket\n             \n             If omitted, defaults to ``false``.\n           - no\n\n   .. tab:: Azure Configuration\n      :tabid: azure\n\n      .. include:: /includes/list-table-create-store-cli-common-params.rst\n\n      .. list-table::\n         :widths: 27 10 53 10 \n\n         * - ``region``\n           - string\n           - Region in which the container is hosted. For a list of \n             valid region names, see :atlas:`Microsoft Azure\n             </reference/microsoft-azure/>`. \n           - yes\n\n         * - ``serviceURL`` \n           - string \n           - |url| of the {+az-bs+} account that contains your blob\n             containers. For example: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: false\n\n        {\n          \"ok\": 1,\n          \"store\": {\n            \"name\": \"<store-name>\",\n            \"region\": \"<region-name>\",\n            \"bucket\": \"<bucket-name>\",\n            \"additionalStorageClasses\": [\"<storage-classes>\"]\n            \"delimiter\": \"<delimiter>\",\n            \"provider\": \"<storage-provider>\"\n          }\n        }\n\n   .. tab:: Azure Configuration \n      :tabid: azure\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: false\n\n        {\n          \"ok\": 1,\n          \"store\": {\n            \"name\": \"<store-name>\",\n            \"region\": \"<region-name>\",\n            \"serviceURL\": \"<service-account-URL>\",\n            \"containerName\": \"<storage-container-name>\"\n            \"delimiter\": \"<delimiter>\",\n            \"provider\": \"<storage-provider>\"\n          }\n        }\n\n   .. tab:: Atlas Configuration \n      :tabid: atlas \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\n\t         \"ok\" : 1,\n\t         \"store\" : {\n\t\t         \"name\" : \"<store-name>\",\n\t\t         \"provider\" : \"<storage-provider>\",\n\t\t         \"clusterName\" : \"<cluster-name>\",\n\t\t         \"projectId\" : \"<project-id>\",\n\t\t         \"readPreference\" : {\n\t\t\t        \"mode\" : \"<read-preference-mode>\",\n\t\t\t        \"tagSets\" : [[{\"name\": \"<name>\", \"value\": \"<value>\"},...],...],\n\t\t\t        \"maxStalenessSeconds\" : <number-of-seconds>\n\t\t         }\n\t         }\n         }\n\n   .. tab:: HTTP Configuration \n      :tabid: http \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\n\t         \"ok\" : 1,\n\t         \"store\" : {\n\t\t         \"name\" : \"<store-name>\",\n\t\t         \"provider\" : \"<storage-provider>\",\n\t\t         \"allowInsecure\" : true|false,\n\t\t         \"urls\" : [\n\t\t\t         \"<url>\"\n\t\t         ],\n\t\t         \"defaultFormat: \"<file-extension>\"\n\t         }\n         }\n\n   .. tab:: Atlas Online Archive Configuration \n      :tabid: oa \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\n           ok: 1,\n           store: { \n             name: '<store-name>', \n             provider: 'dls:aws', \n             region: '<online-archive-region>' \n           }\n         }\n\n.. _adf-create-store-cmd-egs:\n\nExample\n-------\n\nThe following example uses the ``createStore`` command to create a new\n{+fdi+} store called ``myStore``.\n\n.. tabs:: \n   :hidden:\n\n   .. tab:: S3 Configuration \n      :tabid: s3\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: javascript \n\n            use sample\n            db.runCommand({ createStore: \"myStore\", provider: \"s3\", region: \"us-east-1\", bucket: \"my-bucket\", \"additionalStorageClasses\" : [\"STANDARD_IA\",\"INTELLIGENT_TIERING\"] })\n\n         .. output::\n            :language: json\n\n            {\n              \"ok\": 1,\n              \"store\": {\n                \"name\": \"myStore\",\n                \"region\": \"us-east-1\",\n                \"bucket\": \"my-bucket\",\n                \"additionalStorageClasses\" : [\n\t\t\t            \"STANDARD_IA\",\n\t\t\t            \"INTELLIGENT_TIERING\"\n\t\t            ],\n                \"delimiter\": \"/\",\n                \"provider\": \"s3\"\n              }\n            }\n\n   .. tab:: Azure Configuration \n      :tabid: azure\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: javascript \n\n            use sample\n            db.runCommand({ createStore: \"myStore\", provider: \"azure\", region: \"eastus2\", serviceURL: \"https://mystorage.blob.core.windows.net/\", \"containerName\" : \"my-data-container\" })\n\n         .. output::\n            :language: json\n\n            {\n              \"ok\": 1,\n              \"store\": {\n                \"name\": \"myStore\",\n                \"region\": \"eastus2\",\n                \"serviceURL\": \"https://mystorage.blob.core.windows.net/\",\n                \"containerName\" : \"my-data-container\",\n                \"delimiter\": \"/\",\n                \"provider\": \"azure\"\n              }\n            }\n\n   .. tab:: Atlas Configuration \n      :tabid: atlas \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n   \n         .. input::\n            :language: javascript \n\n            use sample\n            db.runCommand({ createStore: \"myStore\", provider: \"atlas\", clusterName: \"myTestCluster\", projectId: \"<project-id>\", \"readPreference\": {\"mode\": \"secondary\", \"tagSets\": [[{\"name\": \"provider\", \"value\": \"AWS\" }, {\"name\": \"region\", \"value\": \"US_EAST_1\"}]], \"maxStalenessSeconds\": 120} })\n\n         .. output::\n            :language: json\n\n            {\n\t            \"ok\" : 1,\n\t            \"store\" : {\n\t\t            \"name\" : \"myStore\",\n\t\t            \"provider\" : \"atlas\",\n\t\t            \"clusterName\" : \"myTestCluster\",\n\t\t            \"projectId\" : \"<project-id>\",\n\t\t            \"readPreference\" : {\n\t\t\t            \"mode\" : \"secondary\",\n\t\t\t            \"tagSets\": [[{\"name\": \"provider\", \"value\": \"AWS\" }, {\"name\": \"region\", \"value\": \"US_EAST_1\"}]],\n\t\t\t            \"maxStalenessSeconds\" : 120\n\t\t            }\n\t            }\n            }\n\n   .. tab:: HTTP Configuration \n      :tabid: http \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n   \n         .. input::\n            :language: javascript \n\n            use sample \n            db.runCommand({ createStore: \"myStore\", provider: \"http\", urls: [\"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews\",\"http://example.mongodb.com/sampleData\"], allowInsecure: true, defaultFormat: \".json\" })\n\n         .. output::\n            :language: json\n\n            {\n\t            \"ok\" : 1,\n\t            \"store\" : {\n\t\t            \"name\" : \"http-store\",\n\t\t            \"provider\" : \"http\",\n\t\t            \"urls\" : [\n\t\t\t            \"https://atlas-data-lake.s3.amazonaws.com/json/sample_airbnb/listingsAndReviews\",\n\t\t\t            \"http://example.mongodb.com/sampleData\"\n\t\t            ],\n\t\t            \"defaultFormat\" : \".json\"\n\t\t            \"allowInsecure\" : true\n\t            }\n            }\n\n   .. tab:: Atlas Online Archive Configuration \n      :tabid: oa \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: true\n   \n         .. input::\n            :language: javascript \n\n            use sample \n            db.runCommand({ createStore: \"myStore\", provider: \"dls:aws\", region: \"us-east-1\" })\n\n         .. output::\n            :language: json\n\n            {\n              ok: 1,\n              store: { \n                name: 'myStore', \n                provider: 'dls:aws', \n                region: 'us-east-1' \n              }\n            }\n\n.. _adf-create-store-cmd-errors:\n\nTroubleshoot Errors \n-------------------\n\nIf the command fails, it returns one of the following errors.\n\n**Reason:**  a {+fdi+} store with the name specified in\n``createStore`` already exists.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n     \"ok\": 0,\n     \"errmsg\": \"store <store-name> already exists\",\n     \"code\": 2,\n     \"codeName\": \"BadValue\"\n   }\n\n**Solution:** Specify a unique name for the {+fdi+} store.\n\n**Reason:** The specified ``provider`` isn't recognized.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n     \"ok\": 0,\n     \"errmsg\": \"unrecognized store provider <storage-provider>\",\n     \"code\": 2,\n     \"codeName\": \"BadValue\"\n   }\n\n**Solution:** Ensure that you specify a valid storage provider.\n\n.. tabs:: \n   :hidden:\n\n   .. tab:: S3 Configuration \n      :tabid: s3\n\n   .. tab:: Azure Configuration \n      :tabid: azure\n\n   .. tab:: Atlas Configuration \n      :tabid: atlas \n\n   .. tab:: HTTP Configuration \n      :tabid: http\n\n      **Reason:** One or more given |url|\\s contain insecure |http| scheme. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n\t         \"ok\" : 0,\n\t         \"errmsg\" : \"store 'httpStore': the insecure HTTP scheme is not supported by default - please add a 'allowInsecure: true' flag to the store or datasource to query from such URLs, correlationID = 16332c6eddf7b32776fde638\",\n\t         \"code\" : 72,\n\t         \"codeName\" : \"InvalidOptions\"\n         }\n\n      **Solution:** Specify |url|\\s with the secure |https| scheme. If the \n      specified |url|\\s have the insecure |http| scheme, set the ``allowInsecure`` flag to ``true``. Note that setting the \n      ``allowInsecure`` flag to ``true`` leaves your data vulnerable to \n      man-in-the-middle attacks.\n\n   .. tab:: Atlas Online Archive Configuration \n      :tabid: oa \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/create-store.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1 }\n\n.. _adf-drop-store-cmd-errors:\n\nTroubleshoot Errors \n-------------------\n\nIf the command fails, it returns one of the following errors.\n\n**Reason:**  The specified {+fdi+} store has dependent collections and \ncan't be removed. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/drop-store.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n     \"ok\" : 0,\n     \"errmsg\" : \"store has dependent collections: <database.collection>,<database.collection>,<...>\",\n     \"code\" : 2,\n     \"codeName\" : \"BadValue\"\n   }\n\n**Solution:** First :ref:`drop the dependent collections\n<adf-drop-collection-views-cmd>`, then re-run the ``dropStore`` command.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/drop-store.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"ok\": 1,\n     \"cursor\": {\n       \"firstBatch\": [\n         {\n           \"name\": \"s3store\",\n           \"provider\": \"s3\",\n           \"region\": \"us-east-1\",\n           \"bucket\": \"my-bucket\",\n           \"delimiter\": \"/\",\n           \"prefix\": \"\"\n         },\n         {\n           \"name\" : \"atlasStore\",\n           \"provider\" : \"atlas\",\n           \"clusterName\" : \"myTestCluster\",\n           \"projectId\" : \"<project-id>\"\n         }\n       ],\n       \"id\": NumberLong(0),\n       \"ns\": \"sample.$cmd.listStores\"\n     }\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/cli/stores/list-stores.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 37\n\n   {\n\t   \"type\" : \"op\",\n\t   \"opid\" : ObjectId(\"1635fa35bf73f4320c6f99d0\"),\n\t   \"client\" : \"73.231.201.205:62351\",\n\t   \"clientMetadata\" : {\n\t\t  \"application\" : {\n\t\t\t  \"name\" : \"MongoDB Shell\"\n\t\t  },\n\t\t  \"driver\" : {\n\t\t\t  \"name\" : \"MongoDB Internal Client\",\n\t\t\t  \"version\" : \"4.2.0\"\n\t\t  },\n\t\t  \"os\" : {\n\t\t\t  \"type\" : \"Darwin\",\n\t\t\t  \"name\" : \"Mac OS X\",\n\t\t\t  \"architecture\" : \"x86_64\",\n\t\t\t  \"version\" : \"18.7.0\"\n\t\t   }\n\t   },\n\t   \"active\" : true,\n\t   \"currentOpTime\" : ISODate(\"2020-03-26T12:51:43.291Z\"),\n\t   \"ns\" : \"sample.airbnb\",\n\t   \"command\" : {\n\t\t   \"find\" : \"airbnb\",\n\t\t   \"filter\" : {\n\t\t  \t \"address.market\" : \"Porto\",\n\t\t\t   \"review_scores.review_scores_rating\" : {\n\t\t\t\t   \"$gt\" : 79\n\t\t\t   }\n\t\t   },\n\t  \t \"comment\" : \"Find properties in Porto\",\n\t\t   \"lsid\" : {\n\t\t\t   \"id\" : UUID(\"2211f8ac-56b2-4ba4-bb0c-2e5dd5b7cc21\")\n\t\t   },\n\t\t   \"$db\" : \"sample\"\n\t   },\n\t   \"msg\" : \"work done: 770\",\n\t   \"progress\" : {\n\t     \"workDone\" : 770\n\t   }\n   }\n   {\n\t   \"type\" : \"op\",\n\t   \"client\" : \"73.231.201.205:62353\",\n\t   \"clientMetadata\" : {\n\t\t   \"application\" : {\n\t\t\t   \"name\" : \"MongoDB Shell\"\n\t\t   },\n\t\t   \"driver\" : {\n\t\t\t   \"name\" : \"MongoDB Internal Client\",\n\t\t     \"version\" : \"4.2.0\"\n\t  \t },\n\t\t   \"os\" : {\n\t\t\t   \"type\" : \"Darwin\",\n\t\t\t   \"name\" : \"Mac OS X\",\n\t\t\t   \"architecture\" : \"x86_64\",\n\t\t\t   \"version\" : \"18.7.0\"\n\t\t   }\n\t   },\n\t   \"active\" : true,\n\t   \"currentOpTime\" : ISODate(\"2020-03-26T12:51:47.380Z\"),\n\t   \"ns\" : \"admin.$cmd.aggregate\",\n\t   \"command\" : {\n\t\t   \"aggregate\" : 1,\n\t\t   \"pipeline\" : [\n\t\t\t   {\n\t\t\t   \t \"$currentOp\" : {\n\t\t\t\t\t\n\t\t\t\t   }\n\t\t\t   }\n\t\t   ],\n\t\t   \"cursor\" : {\n\t\t\t\n\t\t   },\n\t\t   \"lsid\" : {\n\t\t\t   \"id\" : UUID(\"045ea383-65d7-4e88-a989-37b7a8da23bc\")\n\t\t   },\n\t\t   \"$db\" : \"admin\"\n\t   },\n\t   \"msg\" : \"work done: 0\",\n\t   \"progress\" : {\n\t\t   \"workDone\" : 0\n\t   }\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/determine-query-status.txt"
  },
  {
    "code": "          :copyable: false \n\n          { \"background\" : true }\n     \n     - Optional\n\n   * - ``stores``\n     - array of strings\n     - Names of the stores for which to update the catalog. If omitted, \n       {+adf+} updates the catalog for all the stores in the storage \n       configuration. If specified, {+adf+} updates the catalog for the \n       specified stores only. {+adf+} returns an error if a specified \n       store does not use a catalog.\n     - Optional\n\n.. _update-catalog-cmd-usage: \n\nUsage \n~~~~~ \n\nTo update the catalog for all the stores in the storage configuration, \nrun the following command: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/namespace/updatecatalog.txt"
  },
  {
    "code": "   :copyable: false \n\n   { \"ok\" : 1 } \n\n.. _update-catalog-cmd-eg: \n\nExample \n~~~~~~~ \n\nThe following command updates the namespace metadata in the catalog: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/namespace/updatecatalog.txt"
  },
  {
    "code": "   :copyable: false \n\n   { \"ok\" : 1 } \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/namespace/updatecatalog.txt"
  },
  {
    "code": "      :copyable: false\n\n      metrics\n      |--software\n         |--computer\n            |--OS\n\n   {+adf+} uses the partitions for queries on the these fields:\n   \n   - the ``software`` field,\n   - the ``software`` field and the ``computer`` field,\n   - the ``software`` field and the ``computer`` field and the \n     ``OS`` field.\n\n   {+adf+} can use the partitions to support a query on the \n   ``software`` and ``OS`` fields. However, in this case, {+adf+} is \n   not as efficient for the query as it would be if the query was on \n   the ``software`` and ``computer`` fields only. Partitions are parsed \n   in order; if a query omits a particular partition, {+adf+} is less \n   efficient in making use of any partitions that follow the partition. \n   Because a query on ``software`` and ``OS`` omits ``computer``, \n   {+adf+} uses the ``software`` partition more efficiently than the \n   ``OS`` partition to support this query. \n   \n   {+adf+} can't use the partitions to support queries on fields not \n   specified in the :datalakeconf-aws:`databases.[n].collections.[n].dataSources.[n].path`. \n   Also, {+adf+} can't use the partitions to support queries that \n   include the following fields without the ``software`` field:\n   \n   - the ``computer`` field,\n   - the ``OS`` field, or\n   - the ``computer`` and ``OS`` fields.\n\nYou can use partitions to improve {+df+} performance by mapping \nthem to partition attributes in your :ref:`configuration \n<adf-configuration-file-aws>`. By mapping your *partition attributes* \n(the parts of your |s3| prefix that looks like a folder) to a query \nattribute, {+adf+} can selectively open the files that contain data \nrelated to your query. This reduces the amount of time a query takes \nand decreases cost, because {+df+} reads and downloads less files from \n|aws|.\n\n.. example::\n\n   Consider an |s3| bucket ``metrics`` with the following structure:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/optimize-query-performance.txt"
  },
  {
    "code": "      :copyable: false\n\n      metrics\n      |--hardware\n      |--software\n         |--computer\n         |--phone\n   \n   You can set a partition attribute for \"metric type\" by defining\n   ``/metrics/{metric_type string}/*`` in your configuration. If\n   you issue a query that contains ``{metric_type: software}``,\n   {+df+} only processes the files with the prefix\n   ``/software`` and ignores files with the prefix ``/hardware``. \n   \n   You can then set a partition attribute for \"software type\" by\n   defining ``/metrics/{metric_type string}/{software_type string}`` in\n   your configuration . If you issue a query that contains\n   ``{metric_type: software, software_type: computer}``,\n   {+df+} ignores files with the prefix ``/phone``.\n\nFor more information on mapping partition attributes to a collection\n:datalakeconf-aws:`databases.[n].collections.[n].dataSources.[n].path`, see\n:ref:`adf-path-syntax`.\n\nData File Size\n--------------\n\nEach file that {+adf+} handles requires a certain amount of compute \nresources. If your {+fdi+} store contains many small data\nfiles, the resources required compound and can reduce performance.\nAlternatively, many large data files are problematic as\n{+df+} then downloads and processes unnecessary data.\n\nFor most use cases, a performant file size is **100 to 200 MB**.\n\nData File Format\n----------------\n\n{+FDI+}\\s support several :ref:`data file formats \n<adf-data-formats>`. You can improve performance by compressing\ncertain file formats or by optimizing file contents for your queries.\n\nCompression\n~~~~~~~~~~~\n\nWhen you compress data files, they take less time to download. Reduced\ndownload time has a greater performance benefit than parsing\nuncompressed data.\n\nYou can compress the following file formats using `gzip\n<https://www.gnu.org/software/gzip/manual/gzip.html>`__:\n\n- |json|\n- |bson|\n- :ref:`CSV <adf-csv-tsv-data>` \n- :ref:`TSV <adf-csv-tsv-data>` \n\nFile Structure\n~~~~~~~~~~~~~~\n\n`Parquet <https://parquet.apache.org/docs/>`__, `Avro\n<https://avro.apache.org/docs/current/>`_, and `ORC\n<https://orc.apache.org/docs/>`_ files contain metadata about the file\nitself so that an application can traverse the file contents in \ndifferent ways. If you structure your data file to align with the\nqueries you want to run, {+adf+} can leverage this metadata to quickly \njump to the right data. \n\nOf these formats, `Parquet\n<https://parquet.apache.org/docs/>`__ files provide the\nbest performance and space efficiency for {+fdi+}, as it is\noptimized to parse row and column groups for `Parquet\n<https://parquet.apache.org/docs/>`__. \n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/optimize-query-performance.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"info\" : \"attempting to kill op\", \"ok\" : 1 }\n\nNote that the output is the same whether or not the operation being \nterminated is currently running. You can use :ref:`$currentOp \n<determine-query-status>` to verify that the operation was terminated.\n\n.. _adf-killop-egs:\n\nExamples \n--------\n\nFor the example below, suppose a query with ``opid`` value of \n``ObjectId(\"1635fad364c529820c6f9e76\")`` is running. The following \ncommand terminates this query.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/terminate-running-query.txt"
  },
  {
    "code": "   :copyable: false \n\n   { \"info\" : \"attempting to kill op\", \"ok\" : 1 }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/admin/terminate-running-query.txt"
  },
  {
    "code": "            :copyable: false \n            :emphasize-lines: 6\n\n            \"databases\" : [\n              {\n                \"name\" : \"<db-name>\",\n                \"collections\" : [\n                  {\n                    \"name\" : \"*\",\n                    \"dataSources\" : [\n                      {\n                        \"storeName\" : \"<atlas-store-name>\",\n                        \"database\" : \"<atlas-db-name>\",\n                        \"collectionRegex\" : \"<regex-pattern>\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]             \n\n      You can also use the :ref:`adf-create-collection-views-cmd` \n      administration command and the {+fdi+} User Interface to \n      configure the settings for generating wildcard collections. \n\n   .. tab:: Wildcard Databases \n      :tabid: wildcardDbs\n\n      To dynamically generate databases with one wildcard collection in \n      your {+fdi+} storage configuration, configure the following \n      settings in your {+fdi+} storage configuration:\n\n      - Specify ``*`` as the value for the \n        :datalakeconf-atlas:`databases.[n].name` field.\n\n      - Specify ``*`` as the value for the \n        :datalakeconf-atlas:`databases.[n].collections.[n].name` field.\n\n      - Omit the :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].database` \n        and :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].collection` fields. \n\n      - *Optional*. Use the\n        :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].collectionRegex` \n        field to generate wildcard collection names that match a regex\n        pattern. \n\n        .. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/atlas-gen-wildcard-collections.txt"
  },
  {
    "code": "              :copyable: false \n              :emphasize-lines: 3,6\n\n              \"databases\" : [\n                {\n                  \"name\" : \"*\",\n                  \"collections\" : [\n                    {\n                      \"name\" : \"*\",\n                      \"dataSources\" : [\n                        {\n                          \"storeName\" : \"<atlas-store-name>\",\n                          \"collectionRegex\" : \"<regex-pattern>\"\n                        }\n                      ]\n                    }\n                  ]\n                }\n              ]\n\n        You can use the :ref:`adf-create-collection-views-cmd` \n        administration command also to configure the settings for  \n        generating wildcard collection for wildcard databases. You \n        can't use the {+fdi+} User Interface to configure the settings \n        for generating wildcard collection for wildcard databases.\n\n        Dynamically generated databases:\n\n        - Can exist alongside explicitly defined databases. However, \n          {+adf+} won't include dynamically generated databases with \n          names that conflict with databases that are explicitly \n          defined in the storage configuration.\n        - Can only be from a single |service| cluster. {+adf+} won't \n          dynamically generate databases from multiple |service| \n          clusters or other data stores.\n          \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/atlas-gen-wildcard-collections.txt"
  },
  {
    "code": "      :copyable: false \n      :emphasize-lines: 6\n\n      \"databases\" : [\n        {\n          \"name\" : \"<db-name>\",\n          \"collections\" : [\n            {\n              \"name\" : \"*\",\n              \"dataSources\" : [\n                {\n                  \"storeName\" : \"<s3-store-name>\",\n                  \"path\" : \"{collectionName()}\"\n                }\n              ]\n            }\n          ], \n          \"maxWildcardCollections\" : <integer>,\n        }\n      ]  \n\nYou can also use the :ref:`adf-create-collection-views-cmd` \nadministration command and the {+fdi+} User Interface |json| Editor to \nconfigure the settings for generating wildcard collections. You can't \nuse the {+fdi+} User Interface Visual Editor to configure the settings \nfor generating wildcard collections.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/aws-gen-wildcard-collections.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n:ref:`adf-atlas-stores-reference`\n  The ``stores`` object defines each data store associated with the \n  {+fdi+}. The {+fdi+} store captures files in documents in |service| \n  cluster. {+fdi+} can only access data stores defined in the ``stores`` \n  object.\n\n:ref:`adf-atlas-databases-reference`\n  The ``databases`` object defines the mapping between each\n  {+fdi+} store defined in ``stores`` and MongoDB collections \n  in the databases. \n\n.. _adf-atlas-stores-reference:\n\n``stores``\n~~~~~~~~~~\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-atlas-cluster.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-atlas:: stores\n\n   Array of objects where each object represents a data store to \n   associate with the {+fdi+}. The {+fdi+} store captures files in an \n   |s3| bucket, documents in |service| cluster, or files stored at \n   publicly accessible |url|\\s. {+adf+} can only access data stores \n   defined in the ``stores`` object.\n\n.. datalakeconf-atlas:: stores.[n].name\n\n   Name of the {+fdi+} store. The :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].storeName`\n   field references this value as part of mapping configuration.\n\n.. datalakeconf-atlas:: stores.[n].provider\n\n   Defines where the data is stored. Value must be ``atlas`` for a \n   collection in an |service| cluster.\n\n.. datalakeconf-atlas:: stores.[n].clusterName \n\n   Name of the |service| cluster on which the store is based. The \n   cluster must exist in the same project as your {+fdi+}. The \n   ``source`` field on the data partition is the name of the |service| \n   cluster.\n\n.. datalakeconf-atlas:: stores.[n].projectId \n\n   Unique identifier of the project that contains the |service| \n   cluster on which the store is based.\n\n.. datalakeconf-atlas:: stores.[n].readPreference \n\n   *Optional.* Cluster :manual:`read preference \n   </core/read-preference/>`, which describes how to route read \n   requests to the cluster.\n\n   .. example:: \n\n      The following ``readPreference`` setting specifies ``secondary`` :manual:`mode \n      </core/read-preference/#std-label-read-pref-modes-summary>` and \n      ``ANALYTICS`` :ref:`nodeType <repl-set-node-types>`.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-atlas-cluster.txt"
  },
  {
    "code": "         :copyable: false \n         :emphasize-lines: 9-20\n\n         { \n           ... \n           \"stores\": [\n             {\n               \"provider\": \"atlas\",\n               \"clusterName\": <CLUSTER_NAME>,\n               \"name\": <STORE_NAME>,\n               \"projectId\": <PROJECT_ID>,\n               \"readPreference\": {\n                 \"mode\": \"secondary\",\n                 \"tagSets\": [\n                   [\n                     {\n                       \"name\": \"nodeType\",\n                       \"value\": \"ANALYTICS\"\n                     }\n                   ],\n                   ...\n                 ]\n               }\n             }\n           ]\n         }\n\n.. datalakeconf-atlas:: stores.[n].readPreference.mode \n\n   *Optional.* :manual:`Read preference mode \n   </core/read-preference/#read-preference-modes>` that specifies which \n   replica set member to route the read requests to. Value can be one \n   of the following: \n\n   .. include:: /includes/data-federation/fact-read-preference-modes.rst\n\n   If omitted, defaults to ``local``.\n         \n.. datalakeconf-atlas:: stores.[n].readPreference.tagSets\n\n   *Optional.* Arrays of :manual:`tag sets \n   </core/read-preference-tags/>` or tag specification documents that \n   contain name and value pairs for the replica set member. If \n   specified, {+adf+} routes read requests to replica set member or \n   members that are associated with the specified tags. To learn more, \n   :manual:`Read Preference Tag Sets </core/read-preference-tags/>`.\n\n   .. note:: \n\n      {+adf+} doesn't support ``tagSets`` for sharded clusters.\n         \n.. datalakeconf-atlas:: stores.[n].readPreference.maxStalenessSeconds\n\n   *Optional.* Maximum replication lag, or \"staleness\", for reads from \n   secondaries. To learn more about ``maxStalenessSeconds``, see \n   :manual:`Read Preference maxStalenessSeconds </core/read-preference-staleness/>`.\n\n.. datalakeconf-atlas:: stores.[n].readConcern\n\n   *Optional.* Consistency and isolation properties of the data read \n   from an |service| {+cluster+}. To learn more, see :manual:`Read Concern \n   </reference/read-concern/>`. The value for the level of consistency\n   and availability can be one of the following: \n\n   .. include:: /includes/data-federation/fact-read-concern-levels.rst\n\n.. _adf-atlas-databases-reference:\n\n``databases``\n~~~~~~~~~~~~~\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-atlas-cluster.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-atlas:: databases\n\n   Array of objects where each object represents a database, its \n   collections, and, optionally, any :manual:`views </core/views/>` on \n   the collections. Each database can have multiple ``collections`` and \n   ``views`` objects.\n\n.. datalakeconf-atlas:: databases.[n].name\n\n   Name of the database to which {+adf+} maps the data contained in the \n   data store. You can generate databases dynamically by specifying \n   ``*`` for the database name. Dynamically generated databases:\n\n   - Can exist alongside explicitly defined databases. However, {+adf+} \n     won't dynamically generate databases with names that conflict with \n     explicitly defined databases in the storage configuration.\n   - Can only be from a single |service| cluster. {+adf+} won't \n     dynamically generate databases from multiple |service| clusters or \n     other data stores.\n\n.. datalakeconf-atlas:: databases.[n].collections\n\n   Array of objects where each object represents a collection and data \n   sources that map to a :datalakeconf-atlas:`stores` {+fdi+} store. \n   For dynamically generated databases, you can define only one \n   wildcard (``*``) collection object in the storage configuration.\n\n.. datalakeconf-atlas:: databases.[n].collections.[n].name\n\n   Name of the collection to which {+adf+} maps the data contained in \n   each :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].storeName`. \n   Each object in the array represents the mapping between the \n   collection and an object in the :datalakeconf-atlas:`stores` array. \n\n   You can generate collection names dynamically by specifying ``*`` \n   for the collection name and omitting the\n   :datalakeconf-atlas:`~databases.[n].collections.[n].dataSources.[n].collection` \n   field. To dynamically generate wildcard (``*``) collections for \n   dynamically generated wilcard (``*``) databases, specify the \n   :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].storeName` \n   option and omit the :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].database` \n   option. Note that for dynamically generated databases, you can \n   define only one wildcard (``*``) collection object in the storage \n   configuration.\n         \n   For wildcard (``*``) collections, you can also define regex patterns \n   using :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].collectionRegex` \n   field to filter the collections only. \n\n.. datalakeconf-atlas:: databases.[n].collections.[n].dataSources \n\n   Array of objects where each object represents a \n   :datalakeconf-atlas:`stores` {+fdi+} store to map with the \n   collection.\n\n.. datalakeconf-atlas:: databases.[n].collections.[n].dataSources.[n].storeName\n\n   Name of a {+fdi+} store to map to the ``<collection>``. \n   Must match the :datalakeconf-atlas:`~stores.[n].name` of an object in the \n   :datalakeconf-atlas:`stores` array. \n\n.. datalakeconf-atlas:: databases.[n].collections.[n].dataSources.[n].database \n\n   Name of the database on the |service| cluster that contains the \n   collection. You must omit this setting to: \n   \n   - Create a wildcard (``*``) collection for a wilcard (``*``) database.\n   - Glob multiple databases.\n\n.. datalakeconf-atlas:: databases.[n].collections.[n].dataSources.[n].databaseRegex\n\n   *Optional*. Regex pattern to use for globbing databases to combine\n   multiple collections. If you specify this option, the {+fdi+}\n   instance contains a single database with collections from multiple\n   databases. For globbing databases, you must do the following:\n   \n   - Omit the\n     :datalakeconf-atlas:`~databases.[n].collections.[n].dataSources.[n].database` \n     field. \n   - Specify a valid name for the\n     :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].collection`\n     field. \n\n   .. example:: \n\n      Suppose you have 2 databases named ``foo`` and ``bar`` that each\n      have a collection named ``Sales``. You can combine the ``Sales``\n      collection from ``foo`` and ``bar`` using the ``databaseRegex``\n      option in your storage configuration:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-atlas-cluster.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n           \"databases\": [\n             {\n               \"name\": \"Transactions\",\n               \"collections\": [\n                 {\n                   \"name\": \"AllSales\",\n                   \"dataSources\": [\n                     {\n                       \"storeName\": \"atlasStore\",\n                       \"databaseRegex\": \".*\",\n                       \"collection\": \"Sales\"\n                     }\n                   ]\n                 } \n               ]\n             }\n           ]\n         }\n\n      For the preceding :datalakeconf-atlas:`databases` object, {+adf+}\n      generates the following in your {+fdi+}: \n\n      - A virtual database named ``Transactions``.\n      - A virtual collection named ``AllSales`` that contains data from\n        the collection named ``Sales`` in all the databases whose name\n        match the regex pattern specified in the ``databaseRegex`` \n        option.\n   \n   If you specify this option, you must specify the name of\n   the collection. You can't specify this option for wildcard collections.\n\n.. datalakeconf-atlas:: databases.[n].collections.[n].dataSources.[n].collection \n\n   Name of the collection in the |service| cluster on which the {+fdi+} \n   store is based. You must omit this setting for: \n         \n   - Creating a wildcard (``*``) collection.\n   - Creating wildcard collection names that match regex patterns.\n   - Combining multiple collections in a database using regex patterns.\n\n.. datalakeconf-atlas:: databases.[n].collections.[n].dataSources.[n].collectionRegex\n\n   *Conditional: Optional for wildcard collections, required for\n   combining collections in a database*. \n   \n   Regex pattern to use for creating the wildcard (``*``) \n   collection or for combining mulitple collections in a database. \n          \n   **To use regex patterns for wildcard (``*``) collection names**, you\n   must do the following:\n\n   - Specify wildcard (``*``) as the value for\n     :datalakeconf-atlas:`databases.[n].collections.[n].name`.\n   - Omit :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].collection`.\n\n   If you specify this field for generating wildcard collections, the\n   {+fdi+} instance only contains collections with names that match the\n   specified regular expression. The collections in the {+fdi+} storage\n   configuration use their original names in the |service| cluster.\n  \n   **To use regex patterns for combining multiple collections in a \n   database**, you must do the following:\n\n   - Specify a name that isn't the wildcard (``*``) as the value for \n     :datalakeconf-atlas:`databases.[n].collections.[n].name`.\n   - Omit :datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].collection`.\n\n   If you specify this field for combining multiple collections, the\n   collection in the {+fdi+} instance contains data from all the\n   |service| collections with names that match the specified regular\n   expression. The collection in the {+fdi+} storage configuration uses \n   the name that you specify as value for \n   :datalakeconf-atlas:`databases.[n].collections.[n].name`. \n \n   To learn more about the regex syntax, see `Go programming language \n   <https://golang.org/pkg/regexp/>`__.\n\n.. datalakeconf-atlas:: databases.[n].collections.[n].dataSources.[n].provenanceFieldName\n\n   Name for the field that includes the provenance of the documents in\n   the results. If you specify this setting in the storage\n   configuration, {+adf+} returns the following fields for each document\n   in the result: \n\n   .. list-table:: \n      :widths: 20 80\n      :header-rows: 1\n   \n      * - Field Name \n        - Description\n   \n      * - ``provider`` \n        - Provider (:datalakeconf-atlas:`stores.[n].provider`) in the\n          {+fdi+} storage configuration \n\n      * - ``clusterName``\n        - Name of the |service| cluster\n          (:datalakeconf-atlas:`stores.[n].clusterName`) \n   \n      * - ``databaseName`` \n        - Name of the database\n          (:datalakeconf-atlas:`databases.[n].collections.[n].dataSources.[n].database`)\n          in the |service| cluster \n   \n      * - ``collectionName`` \n        - Name of the collection\n          (:datalakeconf-atlas:`databases.[n].collections.[n].name`) \n\n   You can't configure this setting using the Visual Editor in the \n   |service| UI.\n\n.. datalakeconf-atlas:: databases.[n].views \n\n   Array of objects where each object represents an \n   :manual:`aggregation pipeline </core/aggregation-pipeline/#id1>` on \n   a collection. To learn more about views, see :manual:`Views \n   </core/views/>`.\n\n.. datalakeconf-atlas:: databases.[n].views.[n].name \n\n   Name of the view. \n\n.. datalakeconf-atlas:: databases.[n].views.[n].source \n\n   Name of the source collection for the view. If you want to create a\n   view with a :ref:`adf-sql-stage` stage, you must omit this field\n   as the SQL statement will specify the source collection.\n\n.. datalakeconf-atlas:: databases.[n].views.[n].pipeline \n \n   :manual:`Aggregation pipeline stage(s) \n   </core/aggregation-pipeline/#id1>` to apply to the \n   :datalakeconf-atlas:`~databases.[n].views.[n].source` collection. You \n   can also create views using the :ref:`adf-sql-stage` stage.\n\n.. seealso::\n\n   - :ref:`Configure Atlas Data Federation <adf-configuration-file-atlas>` \n   - `Tutorial: Federated Queries and $out to S3 \n     <https://www.mongodb.com/developer/products/atlas/atlas-data-lake-federated-queries-out-aws-s3/>`__\n\n.. toctree::\n   :titlesonly:\n   :hidden:\n\n   Deploy </data-federation/deployment/deploy-atlas>\n   Generate Collections </data-federation/config/atlas-gen-wildcard-collections>\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-atlas-cluster.txt"
  },
  {
    "code": "      :copyable: false\n\n      |--metrics\n      |--hardware\n\n   The ``/metrics/hardware`` path stores JSON files with metrics \n   derived from the datacenter hardware, where each filename is \n   the UNIX timestamp in milliseconds of the 24 hour period \n   covered by that file:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-aws-s3.txt"
  },
  {
    "code": "      :copyable: false\n\n      /hardware/1564671291998.json\n\n   The following configuration:\n\n   - Defines a {+fdi+} store on the ``datacenter-alpha`` S3 bucket in \n     the ``us-east-1`` AWS region. The {+fdi+} store is specifically \n     restricted to only datafiles in the ``metrics`` folder path.\n\n   - Maps files from the ``hardware`` folder to a MongoDB database \n     ``datacenter-alpha-metrics`` and collection ``hardware``. The \n     configuration mapping includes parsing logic for capturing the \n     timestamp implied in the filename.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-aws-s3.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n\n:ref:`adf-aws-stores-reference`\n  The ``stores`` object defines each data store associated with the \n  {+fdi+}. The {+fdi+} store captures files in an |s3| bucket, \n  documents in |service| cluster, or files stored at publicly \n  accessible |url|\\s. {+df+} can only access data stores defined in the \n  ``stores`` object.\n\n:ref:`adf-aws-databases-reference`\n  The ``databases`` object defines the mapping between each\n  {+fdi+} store defined in ``stores`` and MongoDB collections \n  in the databases. \n\n.. _adf-aws-stores-reference:\n\n``stores``\n~~~~~~~~~~\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-aws-s3.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-aws:: stores\n\n   Array of objects where each object represents a data store to \n   associate with the {+fdi+}. The {+fdi+} store captures files in an \n   |s3| bucket, documents in |service| cluster, or files stored at \n   publicly accessible |url|\\s. {+adf+} can only access data stores \n   defined in the ``stores`` object.\n\n.. datalakeconf-aws:: stores.[n].name\n\n   Name of the {+fdi+} store. The :datalakeconf-aws:`databases.[n].collections.[n].dataSources.[n].storeName`\n   field references this value as part of mapping configuration.\n\n.. datalakeconf-aws:: stores.[n].provider\n\n   Defines where the data is stored. Value must be ``s3`` for an |aws| \n   |s3| bucket.\n\n.. datalakeconf-aws:: stores.[n].region\n\n   Name of the |aws| region in which the S3 bucket is hosted. For a \n   list of valid region names, see :atlas:`Amazon Web Services (AWS) \n   </reference/amazon-aws/#amazon-aws>`. \n\n.. datalakeconf-aws:: stores.[n].bucket\n\n   Name of the |aws| S3 bucket. Must exactly match the name of an |s3| \n   bucket which {+adf+} can access with the configured |aws| IAM \n   credentials.\n\n.. datalakeconf-aws:: stores.[n].additionalStorageClasses\n\n   *Optional.* Array of |aws| |s3| `storage classes \n   <https://aws.amazon.com/s3/storage-classes/>`__. {+adf+} will \n   include the files in these storage classes in the query results. \n   Valid values are: \n\n   - ``INTELLIGENT_TIERING`` to include files in the `Intelligent \n     Tiering <https://aws.amazon.com/s3/storage-classes/#Unknown_or_changing_access>`__ \n     storage class\n   - ``STANDARD_IA`` to include files in the `Standard-Infrequent \n     Access <https://aws.amazon.com/s3/storage-classes/#Infrequent_access>`__ \n     storage class\n\n     .. note:: \n\n        Files in the `Standard <https://aws.amazon.com/s3/storage-classes/#General_purpose>`__ \n        storage class are supported by default.\n\n.. datalakeconf-aws:: stores.[n].prefix\n\n   *Optional.* Prefix {+adf+} applies when searching for files in the \n   |s3| bucket. \n\n   For example, consider an |s3| bucket ``metrics`` with the following \n   structure:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-aws-s3.txt"
  },
  {
    "code": "      :copyable: false\n\n      metrics\n        |--hardware\n        |--software\n          |--computed\n\n   The {+fdi+} store prepends the value of ``prefix`` to the\n   :datalakeconf-aws:`databases.[n].collections.[n].dataSources.[n].path` \n   to create the full path for files to ingest. Setting the ``prefix`` \n   to ``/software`` restricts any :datalakeconf-aws:`databases` objects \n   using the {+fdi+} store to only subpaths ``/software``.\n\n   If omitted, {+adf+} searches all files from the root of the |s3| \n   bucket.\n\n.. datalakeconf-aws:: stores.[n].delimiter\n   \n   *Optional.* The delimiter that separates \n   :datalakeconf-aws:`databases.[n].collections.[n].dataSources.[n].path` \n   segments in the {+fdi+} store. {+df+} uses the delimiter to \n   efficiently traverse |s3| buckets with a hierarchical directory \n   structure. You can specify any character supported by the |s3| \n   `object keys <https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html>`__ \n   as the delimiter. For example, you can specify an underscore (``_``) \n   or a plus sign (``+``) or multiple characters such as double \n   underscores (``__``) as the delimiter.\n\n   If omitted, defaults to ``\"/\"``.\n\n.. datalakeconf-aws:: stores.[n].includeTags\n\n   *Optional.* Determines whether or not to use |s3| tags on the files \n   in the given path as additional partition attributes. Valid values \n   are ``true`` and ``false``. \n\n   If omitted, defaults to ``false``.\n\n   If set to ``true``, {+adf+} does the following:\n\n   - Adds the |s3| tags as additional partition attributes. \n\n   - Adds new top level BSON elements that associate each tag to each \n     document for the tagged files.\n\n   .. warning::\n\n      If set to ``true``, {+adf+} processes the files for additional \n      partition attributes by making extra calls to |s3| to get the \n      tags. This behavior might impact performance.\n\n.. datalakeconf-aws:: stores.[n].public \n\n   *Optional.* Specifies whether the bucket is public. \n\n   If set to ``true``, {+adf+} doesn't use the configured |aws| |iam| \n   role to access the |s3| bucket. If set to ``false``, the configured \n   |aws| |iam| must include permissions to access the |s3| bucket, even \n   if that bucket is public.\n\n   If omitted, defaults to ``false``.\n\n.. _adf-aws-databases-reference:\n\n``databases``\n~~~~~~~~~~~~~\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-aws-s3.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-aws:: databases\n\n   Array of objects where each object represents a database, its \n   collections, and, optionally, any :manual:`views </core/views/>` on \n   the collections. Each database can have multiple ``collections`` and \n   ``views`` objects.\n\n.. datalakeconf-aws:: databases.[n].name\n\n   Name of the database to which {+adf+} maps the data contained in the \n   data store.\n\n.. datalakeconf-aws:: databases.[n].collections\n\n   Array of objects where each object represents a collection and data \n   sources that map to a :datalakeconf-aws:`stores` {+fdi+} store. \n\n.. datalakeconf-aws:: databases.[n].collections.[n].name\n\n   Name of the collection to which {+adf+} maps the data contained in \n   each :datalakeconf-aws:`databases.[n].collections.[n].dataSources.[n].storeName`. \n   Each object in the array represents the mapping between the \n   collection and an object in the :datalakeconf-aws:`stores` array. \n\n   You can generate collection names dynamically from file paths by \n   specifying ``*`` for the collection name and the \n   ``collectionName()`` function in the \n   :datalakeconf-aws:`~databases.[n].collections.[n].dataSources.[n].path`\n   field. See :ref:`adf-advanced-path-generate-collection` for \n   examples. \n\n.. datalakeconf-aws:: databases.[n].collections.[n].dataSources \n\n   Array of objects where each object represents a \n   :datalakeconf-aws:`stores` {+fdi+} store to map with the \n   collection.\n\n.. datalakeconf-aws:: databases.[n].collections.[n].dataSources.[n].storeName\n\n   Name of a {+fdi+} store to map to the ``<collection>``. \n   Must match the :datalakeconf-aws:`~stores.[n].name` of an object in \n   the :datalakeconf-aws:`stores` array. \n\n.. datalakeconf-aws:: databases.[n].collections.[n].dataSources.[n].path\n\n   Controls how {+adf+} searches for and parses files in the\n   :datalakeconf-aws:`~databases.[n].collections.[n].dataSources.[n].storeName` \n   before mapping them to the ``<collection>``. {+fdi+} prepends the \n   :datalakeconf-aws:`stores.[n].prefix` to the ``path`` to build the \n   full path to search within. Specify ``/`` to capture all files and \n   folders from the ``prefix`` path.\n\n   For example, consider an S3 bucket ``metrics`` with the following \n   structure:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-aws-s3.txt"
  },
  {
    "code": "      :copyable: false\n\n      metrics\n      |--hardware\n      |--software\n        |--computed\n\n   A ``path`` of ``/`` directs {+adf+} to search all files and folders \n   in the ``metrics`` bucket.\n\n   A ``path`` of ``/hardware`` directs {+adf+} to search only that path \n   for files to ingest.\n\n   If the :datalakeconf-aws:`~stores.[n].prefix` is ``software``, {+adf+} \n   searches for files only in the path ``/software/computed``.\n\n   Appending the ``*`` wildcard character to the path directs {+adf+} \n   to include all files and folders from that point in the path. For \n   example, ``/software/computed*`` would match files like \n   ``/software/computed-detailed``, ``/software/computedArchive``, and \n   ``/software/computed/errors``.\n\n   :datalakeconf-aws:`~databases.[n].collections.[n].dataSources.[n].path`\n   supports additional syntax for parsing filenames, including:\n\n   - Generating document fields from filenames.\n   - Using regular expressions to control field generation.\n   - Setting boundaries for bucketing filenames by timestamp.\n   \n   See :ref:`adf-path-syntax` for more information.\n\n   .. include:: /includes/data-federation/fact-path-delimiter.rst\n\n   .. datalakeconf-aws:: databases.[n].collections.[n].dataSources.[n].defaultFormat\n      \n   .. include:: /includes/extracts/param-default-format.rst\n\n   .. seealso:: \n\n      :ref:`adf-data-formats`\n\n.. datalakeconf-aws:: databases.[n].collections.[n].dataSources.[n].provenanceFieldName\n\n   Name for the field that includes the provenance of the documents in\n   the results. If you specify this setting in the storage\n   configuration, {+adf+} returns the following fields for each document\n   in the result:  \n\n   .. list-table:: \n      :widths: 20 80\n      :header-rows: 1\n\n      * - Field Name \n        - Description\n         \n      * - ``provider`` \n        - Provider (:datalakeconf-aws:`stores.[n].provider`) in the\n          {+fdi+} storage configuration \n\n      * - ``region``\n        - |aws| region (:datalakeconf-aws:`stores.[n].region`)\n         \n      * - ``bucket`` \n        - Name of the |aws| |s3| bucket (:datalakeconf-aws:`stores.[n].bucket`)\n         \n      * - ``key`` \n        - Path\n          (:datalakeconf-aws:`databases.[n].collections.[n].dataSources.[n].path`) \n          to the document\n\n      * - ``lastModified``\n        - Date and time the document was last modified. \n\n   You can't configure this setting using the Visual Editor in the \n   |service| UI.\n\n.. datalakeconf-aws:: databases.[n].collections.[n].dataSources.[n].omitAttributes\n\n   *Optional.* Flag that specifies whether to omit the attributes (key and value\n   pairs) that {+adf+} adds to documents in the collection. You can specify one of the\n   following values: \n\n   - ``false`` - to add the attributes \n   - ``true`` - to omit the attributes\n\n   If omitted, defaults to ``false`` and {+adf+} adds the attributes. \n\n   .. example:: \n\n      Consider a file named ``/employees/949-555-0195.json`` for which\n      you configure the :datalakeconf-aws:`~databases.[n].collections.[n].dataSources.[n].path`\n      ``/employees/{phone string}``. {+adf+} adds the attribute ``phone:\n      949-555-0195`` to documents in this file if ``omitAttributes`` is\n      ``false``, regardless of whether the key-value pair already exists in the document. If you set ``omitAttributes`` to ``true``, {+adf+}\n      doesn't add the attribute to the document in the virtual collection.\n\n.. datalakeconf-aws:: databases.[n].maxWildcardCollections \n\n   .. include:: /includes/extracts/param-max-wildcard-collections.rst \n\n.. datalakeconf-aws:: databases.[n].views \n\n   Array of objects where each object represents an \n   :manual:`aggregation pipeline </core/aggregation-pipeline/#id1>` on \n   a collection. To learn more about views, see :manual:`Views \n   </core/views/>`.\n\n.. datalakeconf-aws:: databases.[n].views.[n].name \n\n   Name of the view. \n\n.. datalakeconf-aws:: databases.[n].views.[n].source \n\n   Name of the source collection for the view. If you want to create a\n   view with a :ref:`adf-sql-stage` stage, you must omit this field\n   as the SQL statement will specify the source collection.\n\n.. datalakeconf-aws:: databases.[n].views.[n].pipeline \n \n   :manual:`Aggregation pipeline stage(s) \n   </core/aggregation-pipeline/#id1>` to apply to the \n   :datalakeconf-aws:`~databases.[n].views.[n].source` collection. You \n   can also create views using the :ref:`adf-sql-stage` stage.\n\n.. seealso::\n\n   - `Tutorial: Federated Queries and $out to S3 \n     <https://www.mongodb.com/developer/products/atlas/atlas-data-lake-federated-queries-out-aws-s3/>`__\n\n.. toctree::\n   :titlesonly:\n   :hidden:\n\n   Deploy </data-federation/deployment/deploy-s3>\n   Generate Collections </data-federation/config/aws-gen-wildcard-collections>\n   Define Path for S3 Data </data-federation/config/path-syntax-examples>\n   Use Partition Attributes </data-federation/supported-unsupported/supported-partition-attributes>\n   Optimize Queries </data-federation/admin/optimize-query-performance>\n   Configure S3 Encryption </data-federation/supported-unsupported/encryption>\n   Data Formats </data-federation/supported-unsupported/supported-data-formats>\n   Limitations </data-federation/supported-unsupported/aws-s3-limitations>\n   \n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-aws-s3.txt"
  },
  {
    "code": "      :copyable: false\n\n      |--metrics\n        |--hardware\n\n   The ``/metrics/hardware`` path stores JSON files with metrics \n   derived from the datacenter hardware, where each filename is \n   the UNIX timestamp in milliseconds of the 24 hour period \n   covered by that file:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "      :copyable: false\n\n      /hardware/1564671291998.json\n\n   The following configuration:\n\n   - Defines a {+fdi+} store on the ``datacenter-alpha`` {+az-bs+}\n     container in the ``eastus2`` |azure| region. The {+fdi+} store is\n     specifically restricted to include only data files in the\n     ``metrics`` directory path. \n\n   - Maps files from the ``hardware`` directory to a MongoDB database \n     ``datacenter-alpha-metrics`` and collection ``hardware``. The \n     configuration mapping includes parsing logic for capturing the \n     timestamp implied in the filename.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n\n:ref:`adf-azure-stores-reference`\n  The ``stores`` object defines each data store associated with the \n  {+fdi+}. The {+fdi+} store captures files in an |aws| |s3| bucket or   \n  {+az-bs+} container, documents in an |service| {+cluster+}, or files\n  stored at publicly accessible |url|\\s. {+df+} can only access data\n  stores defined in the ``stores`` object. \n\n:ref:`adf-azure-databases-reference`\n  The ``databases`` object defines the mapping between each\n  {+fdi+} store defined in ``stores`` and MongoDB collections \n  in the databases. \n\n.. _adf-azure-stores-reference:\n\n``stores``\n~~~~~~~~~~\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-azure:: stores\n\n   Array of objects where each object represents a data store to \n   associate with the {+fdi+}. The {+fdi+} store captures: \n   \n   - Files in an {+az-bs+} container\n   - Documents in an |service| cluster\n   - Files stored at publicly accessible |url|\\s. \n   \n   {+adf+} can only access data stores \n   defined in the ``stores`` object.\n\n.. datalakeconf-azure:: stores.[n].name\n\n   Name of the {+fdi+} store. The\n   :datalakeconf-azure:`databases.[n].collections.[n].dataSources.[n].storeName` \n   field references this value as part of mapping configuration.\n\n.. datalakeconf-azure:: stores.[n].provider\n\n   Defines where the data is stored. Value must be ``azure`` for an\n   {+az-bs+} container. \n\n.. datalakeconf-azure:: stores.[n].region\n\n   Name of the |azure| region in which the data is stored. \n\n.. datalakeconf-azure:: stores.[n].serviceURL\n\n   URL of the {+az-bs+} account that contains your blob containers. The\n   ``serviceURL`` must be in the following format:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "      :copyable: false \n\n      https://<storage-account-name>.blob.core.windows.net/\n\n   where ``storage-account-name`` is the name of your {+az-bs+} account. \n\n.. datalakeconf-azure:: stores.[n].containerName\n\n   Name of the {+az-bs+} container that contains the files. \n\n.. datalakeconf-azure:: stores.[n].prefix\n\n   *Optional.* Prefix {+adf+} applies when searching for files in the \n   {+az-bs+}. \n\n   For example, consider an an {+az-bs+} container ``metrics`` with\n   the following structure:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "      :copyable: false\n\n      metrics\n        |--hardware\n        |--software\n          |--computed\n\n   The {+fdi+} store prepends the value of ``prefix`` to the\n   :datalakeconf-azure:`databases.[n].collections.[n].dataSources.[n].path` \n   to create the full path for files to ingest. Setting the ``prefix`` \n   to ``/software`` restricts any :datalakeconf-azure:`databases` objects \n   using the {+fdi+} store to only subpaths ``/software``.\n\n   If omitted, {+adf+} searches all files from the root of the\n   {+az-bs+} container. \n\n.. datalakeconf-azure:: stores.[n].delimiter\n   \n   *Optional.* The delimiter that separates \n   :datalakeconf-azure:`databases.[n].collections.[n].dataSources.[n].path` \n   segments in the {+fdi+} store. {+df+} uses the delimiter to \n   efficiently traverse {+az-bs+} containers with a hierarchical \n   directory structure. \n   \n   If omitted, defaults to ``\"/\"``.\n\n.. datalakeconf-azure:: stores.[n].public \n\n   *Optional.* Specifies whether the {+az-bs+} container is public. \n\n   If set to ``true``, {+adf+} doesn't use the configured |azure|\n   Service Principal to access your {+az-bs+}. If set to ``false``, the\n   configured Service Principal must include permissions to access the\n   blob container, even if that blob container is public.\n\n   If omitted, defaults to ``false``.\n\n.. _adf-azure-databases-reference:\n\n``databases``\n~~~~~~~~~~~~~\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-azure:: databases\n\n   Array of objects where each object represents a database, its \n   collections, and, optionally, any :manual:`views </core/views/>` on \n   the collections. Each database can have multiple ``collections`` and \n   ``views`` objects.\n\n.. datalakeconf-azure:: databases.[n].name\n\n   Name of the database to which {+adf+} maps the data contained in the \n   data store.\n\n.. datalakeconf-azure:: databases.[n].collections\n\n   Array of objects where each object represents a collection and data \n   sources that map to a :datalakeconf-azure:`stores` {+fdi+} store. \n\n.. datalakeconf-azure:: databases.[n].collections.[n].name\n\n   Name of the collection to which {+adf+} maps the data contained in \n   each :datalakeconf-azure:`databases.[n].collections.[n].dataSources.[n].storeName`. \n   Each object in the array represents the mapping between the \n   collection and an object in the :datalakeconf-azure:`stores` array. \n\n   You can generate collection names dynamically from file paths by \n   specifying ``*`` for the collection name and the \n   ``collectionName()`` function in the \n   :datalakeconf-azure:`~databases.[n].collections.[n].dataSources.[n].path`\n   field.\n\n.. datalakeconf-azure:: databases.[n].collections.[n].dataSources \n\n   Array of objects where each object represents a \n   :datalakeconf-azure:`stores` {+fdi+} store to map with the \n   collection.\n\n.. datalakeconf-azure:: databases.[n].collections.[n].dataSources.[n].storeName\n\n   Name of a {+fdi+} store to map to the ``<collection>``. \n   Must match the :datalakeconf-azure:`~stores.[n].name` of an object in \n   the :datalakeconf-azure:`stores` array. \n\n.. datalakeconf-azure:: databases.[n].collections.[n].dataSources.[n].path\n\n\n   Controls how {+adf+} searches for and parses files in the\n   :datalakeconf-azure:`~databases.[n].collections.[n].dataSources.[n].storeName` \n   before mapping them to the ``<collection>``. {+adf+} prepends the \n   :datalakeconf-azure:`stores.[n].prefix` to the ``path`` to build the \n   full path to search within. Specify ``/`` to capture all files and \n   directories from the ``prefix`` path.\n\n   For example, consider an {+az-bs+} container ``metrics`` with the\n   following structure:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "      :copyable: false\n\n      metrics\n      |--hardware\n      |--software\n        |--computed\n\n   A ``path`` of ``/`` directs {+adf+} to search all files and directories\n   in the ``metrics`` bucket.\n\n   A ``path`` of ``/hardware`` directs {+adf+} to search only that path \n   for files to ingest.\n\n   If the :datalakeconf-azure:`~stores.[n].prefix` is ``software``, {+adf+} \n   searches for files only in the path ``/software/computed``.\n\n   Appending the ``*`` wildcard character to the path directs {+adf+} \n   to include all files and directories from that point in the path. For \n   example, ``/software/computed*`` would match files like \n   ``/software/computed-detailed``, ``/software/computedArchive``, and \n   ``/software/computed/errors``.\n\n   :datalakeconf-azure:`~databases.[n].collections.[n].dataSources.[n].path`\n   supports additional syntax for parsing filenames, including:\n\n   - Generating document fields from filenames.\n   - Using regular expressions to control field generation.\n   - Setting boundaries for bucketing filenames by timestamp.\n   \n   See :ref:`adf-path-syntax` for more information.\n\n   .. include:: /includes/data-federation/fact-path-delimiter.rst\n\n.. datalakeconf-azure:: databases.[n].collections.[n].dataSources.[n].defaultFormat\n      \n   .. include:: /includes/extracts/param-default-format.rst\n\n   .. seealso:: \n\n      :ref:`adf-data-formats`\n\n.. datalakeconf-azure:: databases.[n].collections.[n].dataSources.[n].provenanceFieldName\n\n   Name for the field that includes the provenance of the documents in\n   the results. If you specify this setting in the storage\n   configuration, {+adf+} returns the following fields for each document\n   in the result:  \n\n   .. list-table:: \n      :widths: 20 80\n      :header-rows: 1\n\n      * - Field Name \n        - Description\n         \n      * - ``provider`` \n        - Provider (:datalakeconf-azure:`stores.[n].provider`) in the\n          {+fdi+} storage configuration.\n\n      * - ``region``\n        - |azure| region (:datalakeconf-azure:`stores.[n].region`).\n\n      * - ``serviceURL``\n        - |url| of the {+az-bs+} account that contains your blob\n          containers (:datalakeconf-azure:`stores.[n].serviceURL`). \n         \n      * - ``containerName`` \n        - Name of the {+az-bs+} container (:datalakeconf-azure:`stores.[n].containerName`)\n         \n      * - ``key`` \n        - Path\n          (:datalakeconf-azure:`databases.[n].collections.[n].dataSources.[n].path`) \n          to the file.\n\n   You can't configure this setting using the Visual Editor in the \n   |service| UI.\n\n.. datalakeconf-azure:: databases.[n].collections.[n].dataSources.[n].omitAttributes\n\n   *Optional.* Flag that specifies whether to omit the attributes (key and value\n   pairs) that {+adf+} adds to the collection. You can specify one of the\n   following values: \n\n   - ``false`` - to add the attributes \n   - ``true`` - to omit the attributes\n\n   If omitted, defaults to ``false`` and {+adf+} adds the attributes. \n\n   .. example:: \n\n      Consider a file named ``/employees/949-555-0195.json`` for which\n      you configure the :datalakeconf-aws:`~databases.[n].collections.[n].dataSources.[n].path`\n      ``/employees/{phone string}``. {+adf+} adds the attribute ``phone:\n      949-555-0195`` to the document if you set ``omitAttributes`` to\n      ``false``. If you set ``omitAttributes`` to ``true``, {+adf+}\n      doesn't add the attribute to the document in the virtual collection.\n\n.. datalakeconf-azure:: databases.[n].maxWildcardCollections \n\n   .. include:: /includes/extracts/param-max-wildcard-collections.rst \n\n.. datalakeconf-azure:: databases.[n].views \n\n   Array of objects where each object represents an \n   :manual:`aggregation pipeline </core/aggregation-pipeline/#id1>` on \n   a collection. To learn more about views, see :manual:`Views \n   </core/views/>`.\n\n.. datalakeconf-azure:: databases.[n].views.[n].name \n\n   Label that identifies the view. \n\n.. datalakeconf-azure:: databases.[n].views.[n].source \n\n   Name of the source collection for the view. If you want to create a\n   view with a :ref:`adf-sql-stage` stage, you must omit this field\n   as the SQL statement will specify the source collection.\n\n.. datalakeconf-azure:: databases.[n].views.[n].pipeline \n \n   :manual:`Aggregation pipeline stage(s) \n   </core/aggregation-pipeline/#id1>` to apply to the \n   :datalakeconf-azure:`~databases.[n].views.[n].source` collection. You \n   can also create views using the :ref:`adf-sql-stage` stage.\n\n.. seealso::\n\n   - `Tutorial: Federated Queries and $out to S3 \n     <https://www.mongodb.com/developer/products/atlas/atlas-data-lake-federated-queries-out-aws-s3/>`__\n\n.. toctree::\n   :titlesonly:\n   :hidden:\n\n   Deploy </data-federation/deployment/deploy-azure>\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-azure-blob.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1 }\n\nThe command returns the list of errors in the ``errs`` field if your \n{+fdi+} storage configuration is invalid:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-data-stores.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n\t  \"ok\" : 1,\n\t  \"errs\" : [\n\t\t  \"<error>\",\n\t\t  \"<error>\",\n\t\t  ...\n\t  ]\n   }\n\n.. _adf-getstorageconfig:\n\nRetrieve {+FDI+} Configuration\n--------------------------------------------------------------\n\nOnce connected to the {+fdi+}, you can use the following database \ncommands to retrieve the {+fdi+} configuration:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-data-stores.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n:ref:`adf-http-stores-reference`\n  The ``stores`` object defines each data store associated with the \n  {+fdi+}. The {+fdi+} store captures files stored at publicly \n  accessible |url|\\s. {+df+} can only access data stores defined in \n  the ``stores`` object.\n\n:ref:`adf-http-databases-reference`\n  The ``databases`` object defines the mapping between each\n  {+fdi+} store defined in ``stores`` and MongoDB collections \n  in the databases. \n\n.. _adf-http-stores-reference:\n\n``stores``\n~~~~~~~~~~\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-http-endpoint.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-http:: stores\n\n   Array of objects where each object represents a data store to \n   associate with the {+fdi+}. The {+fdi+} store captures files in an \n   |s3| bucket, documents in |service| cluster, or files stored at \n   publicly accessible |url|\\s. {+adf+} can only access data stores \n   defined in the ``stores`` object.\n\n.. datalakeconf-http:: stores.[n].name\n\n   Name of the {+fdi+} store. The :datalakeconf-http:`databases.[n].collections.[n].dataSources.[n].storeName`\n   field references this value as part of mapping configuration.\n\n.. datalakeconf-http:: stores.[n].provider\n\n   Defines where the data is stored. Value can be one of the following: \n   \n   - ``s3`` for an |aws| |s3| bucket.\n   - ``atlas`` for a collection in an |service| cluster.\n   - ``http`` for data in files hosted at publicly accessible |url|\\s.\n\n.. datalakeconf-http:: stores.[n].allowInsecure \n\n   .. include:: /includes/extracts/param-allow-insecure.rst\n\n.. datalakeconf-http:: stores.[n].urls\n\n   *Optional.* Comma-separated list of publicly accessible |http| \n   |url|\\s where data is stored. You can't specify |url|\\s that require \n   authentication. \n\n.. datalakeconf-http:: stores.[n].defaultFormat\n      \n   .. include:: /includes/extracts/param-default-format.rst\n\n   The specified format only applies to the |url|\\s specified in the \n   :datalakeconf-http:`stores` object.\n\n   .. seealso:: \n\n      :ref:`adf-data-formats`\n\n.. _adf-http-databases-reference:\n\n``databases``\n~~~~~~~~~~~~~\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-http-endpoint.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-http:: databases\n\n   Array of objects where each object represents a database, its \n   collections, and, optionally, any :manual:`views </core/views/>` on \n   the collections. Each database can have multiple ``collections`` and \n   ``views`` objects.\n\n.. datalakeconf-http:: databases.[n].name\n\n   Name of the database to which {+adf+} maps the data contained in the \n   data store.  \n\n.. datalakeconf-http:: databases.[n].collections\n\n   Array of objects where each object represents a collection and data \n   sources that map to a :datalakeconf-http:`stores` {+fdi+} store. \n   For dynamically generated databases, you can define only one \n   wildcard (``*``) collection object in the storage configuration.\n\n.. datalakeconf-http:: databases.[n].collections.[n].name\n\n   Name of the collection to which {+adf+} maps the data contained in \n   each :datalakeconf-http:`databases.[n].collections.[n].dataSources.[n].storeName`. \n   Each object in the array represents the mapping between the \n   collection and an object in the :datalakeconf-http:`stores` array. \n\n   .. note::\n\n      You can't generate wildcard ``*`` collections.\n\n.. datalakeconf-http:: databases.[n].collections.[n].dataSources \n\n   Array of objects where each object represents a \n   :datalakeconf-http:`stores` {+fdi+} store to map with the \n   collection.\n\n.. datalakeconf-http:: databases.[n].collections.[n].dataSources.[n].storeName\n\n   Name of a {+fdi+} store to map to the ``<collection>``. \n   Must match the :datalakeconf-http:`~stores.[n].name` of an object in \n   the :datalakeconf-http:`stores` array. \n\n.. datalakeconf-http:: databases.[n].collections.[n].dataSources.[n].allowInsecure \n\n   .. include:: /includes/extracts/param-allow-insecure.rst\n\n.. datalakeconf-http:: databases.[n].collections.[n].dataSources.[n].urls \n\n   *Optional*. Comma-separated list of publicly accessible |url|\\s \n   where the data is stored. {+FDI+} creates a partition for each \n   |url|. You can specify |url|\\s that are not in the \n   :datalakeconf-http:`~stores.[n].urls`; however, the collection will \n   contain a union of data from |url|\\s in both the \n   :datalakeconf-http:`~stores.[n].urls` and \n   :datalakeconf-http:`~databases.[n].collections.[n].dataSources.[n].urls`. \n   If omitted, {+df+} uses the :datalakeconf-http:`~stores.[n].urls` in \n   the specified :datalakeconf-http:`~databases.[n].collections.[n].dataSources.[n].storeName`.\n\n.. datalakeconf-http:: databases.[n].collections.[n].dataSources.[n].defaultFormat\n      \n   .. include:: /includes/extracts/param-default-format.rst\n\n   The specified format only applies to the |url|\\s specified in the \n   :datalakeconf-http:`databases.[n].collections.[n].dataSources` object.\n\n   .. seealso:: \n\n      :ref:`adf-data-formats`\n\n.. datalakeconf-http:: databases.[n].collections.[n].dataSources.[n].provenanceFieldName\n\n   Name for the field that includes the provenance of the documents in\n   the results. If you specify this setting in the storage\n   configuration, {+adf+} returns the following fields for each document\n   in the result:  \n\n   .. list-table:: \n      :widths: 20 80\n      :header-rows: 1\n   \n      * - Field Name \n        - Description\n         \n      * - ``provider`` \n        - Provider (:datalakeconf-http:`stores.[n].provider`) in the\n          {+fdi+} storage configuration  \n          \n      * - ``uri`` \n        - |http| or |https| |url|\n          (:datalakeconf-http:`databases.[n].collections.[n].dataSources.[n].urls`)\n          of the document\n\n   You can't configure this setting using the Visual Editor in the \n   |service| UI.\n\n.. datalakeconf-http:: databases.[n].views \n\n   Array of objects where each object represents an \n   :manual:`aggregation pipeline </core/aggregation-pipeline/#id1>` on \n   a collection. To learn more about views, see :manual:`Views \n   </core/views/>`.\n\n.. datalakeconf-http:: databases.[n].views.[n].name \n\n   Name of the view. \n\n.. datalakeconf-http:: databases.[n].views.[n].source \n\n   Name of the source collection for the view. If you want to create a\n   view with a :ref:`adf-sql-stage` stage, you must omit this field\n   as the SQL statement will specify the source collection.\n\n.. datalakeconf-http:: databases.[n].views.[n].pipeline \n \n   :manual:`Aggregation pipeline stage(s) \n   </core/aggregation-pipeline/#id1>` to apply to the \n   :datalakeconf-http:`~databases.[n].views.[n].source` collection. You \n   can also create views using the :ref:`adf-sql-stage` stage.\n\n.. seealso::\n\n   - `Tutorial: Federated Queries and $out to S3 \n     <https://www.mongodb.com/developer/products/atlas/atlas-data-lake-federated-queries-out-aws-s3/>`__\n\n.. toctree::\n   :titlesonly:\n   :hidden:\n\n   Deploy </data-federation/deployment/deploy-http>\n\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-http-endpoint.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. _adf-oa-stores-reference:\n\n``stores``\n~~~~~~~~~~\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-oa.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-adl:: stores\n\n   Array of objects where each object represents a data store to \n   associate with the {+fdi+}. The {+fdi+} store references files in an \n   |s3| bucket, documents in an |service| cluster, files stored at \n   publicly accessible |url|\\s, or |service| online archives. {+adf+}\n   can only access data stores defined in the ``stores`` object.\n\n.. datalakeconf-adl:: stores.[n].name\n\n   Name of the {+fdi+} store. The :datalakeconf-adl:`databases.[n].collections.[n].dataSources.[n].storeName` \n   field references this value as part of mapping configuration.\n\n.. datalakeconf-adl:: stores.[n].provider\n\n   Cloud provider where the snapshot data is stored. Value must be \n   ``dls:<subtype>`` for a snapshot. {+adf+} supports the following\n   subtypes:\n   \n   - ``aws``, for which the value must be ``dls:aws``\n\n.. datalakeconf-adl:: stores.[n].region\n\n   Region name of your online archive. Each store is associated with a\n   single region, where the archived data is stored. If you have\n   multiple online archives in different regions, you must add a store\n   for each region to map data in that region to virtual databases and\n   collection in {+fdi+}.\n\n   To learn more about the supported regions for |aws|, see \n   :ref:`atlas-data-federation-regions`. \n\n.. _adf-oa-databases-reference:\n\n``databases``\n~~~~~~~~~~~~~\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-oa.txt"
  },
  {
    "code": "   :language: json\n   :linenos:\n\n.. datalakeconf-adl:: databases\n\n   Array of objects that define the mapping between each {+fdi+} \n   store defined in ``stores`` and online archives. Each object\n   represents a database, its collections, and, optionally, any\n   :manual:`views </core/views/>` on the collections. Each database \n   can have multiple ``collections`` and ``views`` objects.\n\n.. datalakeconf-adl:: databases.[n].name\n\n   Name of the database to which {+adf+} maps the data contained in the \n   data store. \n\n.. datalakeconf-adl:: databases.[n].collections\n\n   Array of objects where each object represents a collection and data \n   sources that map to a :datalakeconf-adl:`stores` {+fdi+} store. \n\n.. datalakeconf-adl:: databases.[n].collections.[n].name\n\n   Name of the collection to which {+adf+} maps the data contained in \n   each :datalakeconf-adl:`databases.[n].collections.[n].dataSources.[n].storeName`. \n   Each object in the array represents the mapping between the \n   collection and an object in the :datalakeconf-adl:`stores` array. \n\n   You can generate collection names dynamically by specifying ``*`` \n   for the collection name. To dynamically generate collection names, \n   you must also specify the following: \n\n   - :datalakeconf-adl:`databases.[n].collections.[n].dataSources.[n].datasetPrefix`\n   - :datalakeconf-adl:`databases.[n].collections.[n].dataSources.[n].trimLevel`\n\n   For wildcard collections, {+adf+} maps a dataset name to a \n   collection name first by splitting the :manual:`namespace \n   </reference/limits/#namespaces>` into a list of fields on the ``$`` \n   delimiter, then by trimming a number of fields from the left of the \n   list, and finally by combining the remaining fields using ``_``. \n\n.. datalakeconf-adl:: databases.[n].collections.[n].dataSources \n\n   Array of objects where each object represents a {+fdi+} store in the \n   :datalakeconf-adl:`stores` array to map with the collection. You can \n   specify multiple ``dataSources`` for a wildcard collection only if \n   all the ``dataSources`` for the collection map to the online archive \n   :datalakeconf-adl:`stores`.\n\n.. datalakeconf-adl:: databases.[n].collections.[n].dataSources.[n].storeName\n\n   Name of a {+fdi+} store to map to the ``<collection>``. Must match \n   the :datalakeconf-adl:`~stores.[n].name` of an object in the \n   :datalakeconf-adl:`stores` array. \n\n.. datalakeconf-adl:: databases.[n].collections.[n].dataSources.[n].datasetName \n\n   Name of the online archive dataset to map with the collection. The\n   ``datasetName`` is in the following format:  \n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-oa.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n           ...,\n           \"name\": \"myFederatedDbCollection\",\n           \"dataSources\": [\n             {\n               \"storeName\": \"aws-dl-store\",\n               \"datasetPrefix\": \"v1$atlas$archive$MyCluster$MyDB$MyArchiveId\"\n             }\n           ]\n         }\n\n.. datalakeconf-adl:: databases.[n].collections.[n].dataSources.[n].trimLevel\n\n   Unsigned integer that specifies how many fields of the dataset name \n   to trim from the left of the dataset name before mapping the \n   remaining fields to a wildcard collection name. Value must be \n   greater than ``0`` and less than ``7``. You can set this setting for\n   wildcard collections only. \n         \n   You can't configure this setting using the Visual Editor in the \n   |service| UI. Therefore, this setting defaults to trim level ``5`` \n   for configurations using the Visual Editor.\n\n.. datalakeconf-adl:: databases.[n].collections.[n].dataSources.[n].provenanceFieldName \n\n   Name for the field that includes the provenance of the documents in\n   the results. If you specify this setting in the storage\n   configuration, {+adf+} returns the following fields for each document\n   in the result: \n\n   .. list-table:: \n      :widths: 20 80\n      :header-rows: 1\n   \n      * - Field Name \n        - Description\n   \n      * - ``provider``\n        - Provider (:datalakeconf-adl:`stores.[n].provider`)\n          in the {+fdi+} storage configuration \n   \n      * - ``clusterName``\n        - Name of the |service| cluster\n   \n      * - ``databaseName``\n        - Name of the database on the |service| cluster\n   \n      * - ``collectionName``\n        - Name of the collection \n   \n      * - ``snapshotID``\n        - Unique 24-hexadecimal character string that identifies the\n          snapshot \n   \n      * - ``dataSetName``\n        - Name of the online archive dataset (:datalakeconf-adl:`databases.[n].collections.[n].dataSources.[n].datasetName`) \n\n   You can't configure this setting using the Visual Editor in the \n   |service| UI. \n\n.. datalakeconf-adl:: databases.[n].collections.[n].dataSources.[n].maxDatasets\n\n   Unsigned integer that specifies the maximum number of datasets from\n   which to dynamically generate collections for the data source. You must\n   provide a value greater than ``0``. You can set this setting for wildcard\n   collections only. {+adf+} returns datasets in reverse lexicographical\n   order. \n\n   .. note:: \n\n      You can't configure this setting using the Visual Editor in the \n      |service| UI. Therefore, {+adf+} configuration doesn't include a\n      limit on the number of datasets for configurations using the Visual\n      Editor. \n\n.. toctree::\n   :titlesonly:\n   :hidden:\n\n   Create from the UI </data-federation/deployment/deploy-oa>\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/config-oa.txt"
  },
  {
    "code": "      :copyable: false\n\n      /users/26/1234.json\n      /users/26/5678.json\n\n   The |json| document ``1234.json`` contains the following: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "      :copyable: false\n\n      {\n        \"name\": \"jane doe\",\n        \"age\": 26,\n        \"userID\": \"1234\"\n      }\n\n   your {+fdi+} configuration for the files in your |s3| bucket defines \n   the following ``path``:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "      :copyable: false \n\n      \"path\": \"/users/{age int}/{userID string}\"\n       \n   The following shows how {+df+} maps a query to the \n   partitions created from the ``path`` definition: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "      :copyable: false \n\n      db.users.findOne(                /users\n        {                                /40 \n          \"age\": 26 ----------------->   /26\n          \"userID\": \"1234\" ---------->     /1234.json\n        }                                  /5678.json\n      )\n\nIf the computed field for the partition attribute already exists \nin your document, {+df+} maps your query to the appropriate file. \nIf the computed field does not exist, {+df+} adds the computed \nfield to the document. For example, if the ``age`` field does not \nexist in ``1234.json``, {+df+} adds the ``age`` field and value to \n``1234.json``.\n\n.. _supported-parsing-funcs:\n\nSupported Parsing Functions \n---------------------------\n\n.. list-table:: \n   :widths: 30 70 \n\n   * - You can specify a single parsing function on the filename.\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false\n\n          /path/to/files/{<fieldA> <data-type>}\n\n   * - You can specify multiple parsing functions on the filename.\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false\n\n          /path/to/files/{<fieldA> <data-type>}-{<fieldB> <data-type>}\n\n   * - You can specify parsing functions alongside static strings in \n       the filename:\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false\n\n          /path/to/files/prefix-{<fieldA> <data-type>}-suffix\n\n   * - You can specify dot (i.e. ``.``) along the path to the filename.\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false \n\n          /path/to/files/{<fieldA>.<fieldB> <data-type>}\n\n   * - You can specify ``ObjectIds`` in the path to the files to create \n       partitions.\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false\n\n          /path/to/files/{objid objectid}\n\n   * - You can specify a range of ``ObjectIds`` in the path to the \n       files to create partitions.\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false\n\n          /path/to/files/{min(obj) objectid}-{max(obj) objectid}\n\n   * - You can specify parsing functions along the path to the filename.\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false \n\n          /path/{<fieldA> <data-type>}/{<fieldB> <data-type>}/{<fieldC> <data-type>}/*\n\n   * - You can specify regex for ``ISODate`` along the path to the \n       filename.\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "          :copyable: false \n\n          /path/to/files/{<field-name> isodate(\"<date-format>\"):\\\\<regex>}\n\n.. note::\n\n   .. include:: /includes/data-federation/fact-path-delimiter.rst \n\n.. _parse-null-values:\n\nParsing Null Values from Filenames \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n{+df+} automatically parses an empty string (``\"\"``) in the place of an\nattribute in the file path as the BSON null value for all the {+adf+} \nattribute types except ``string``. With a ``string``, empty string \ncould either represent a BSON null value or a BSON empty string value. \n{+adf+} does not parse any BSON value for ``string`` attribute type. \nThis avoids adding a BSON value with a conflicting type to documents \nread from |s3|.\n\n.. example:: \n\n   Consider the following |s3| {+fdi+} store:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   /records/january/1.json\n   /records/february/1.json\n   /records//1.json\n\n   For the path ``/records/{month string}/*``, {+df+} does not add any \n   computed fields for the ``month`` attribute to documents generated \n   from the third record in the above store. \n\n.. note:: \n\n   When writing files to |s3|, write |bson| null values as empty \n   strings in filenames for all {+adf+} attribute types.\n\n.. _parse-padded-numeric-values:\n\nParsing Padded Numbers from Filenames \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFile path can include numeric values that are padded with leading \nzeros. For {+df+} to correctly parse padded numeric values for \nattribute types like ``int``, ``epoch_millis``, and ``epoch_secs``, \nspecify the number of digits in the value using regular expressions. \n\n.. example::\n\n   Consider a |s3| store with the following files: \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "      :copyable: false \n\n      |--users\n         |--001.json\n         |--002.json\n         ...\n\n   The following ``path`` syntax uses a regular expression to specify \n   the number of digits in the filename. {+df+} identifies the portion \n   of the path that corresponds to the partition attribute and then \n   maps that partition attribute to a type ``int``:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "      :copyable: false\n\n      /users/{user_id int:\\\\d{3}}\n\n.. _unsupported-parsing-funcs:\n\nUnsupported Parsing Functions \n-----------------------------\n\nSpecifying consecutive parsing functions on the same filename with\nno way of differentiating them could lead to inconsistent results.\n\n.. example:: \n\n   Consider a |s3| store with the following files:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "      :copyable: false \n\n      |--food \n         |--icecream \n         |--peanutbutter\n   \n   Now consider the following path to the files in the ``food`` directory: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "      :copyable: false \n\n      /food/{first string}{second string}/\n\n   There is no way to determine which part of the filename substring\n   should match the ``first`` versus ``second`` string attributes. \n   Therefore, {+adf+} matches everything to ``first``.\n   \n   Consider using attributes with regex similar to the following\n   instead:\n   \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "        :copyable: false \n\n        /food/{first string:\\\\D{3}}{second string:\\\\D{5}}\n\n     The preceding path specifies that ``first`` matches 3 non-digit\n     characters and ``second`` matches the next 5 non-digit characters. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "        :copyable: false\n\n        /food/{first string:[A-Z]{3}}{second string:[a-z]{5}}\n\n     The preceding path matches ``first`` to 3 uppercase letters and\n     ``second`` to 5 lowercase letters.\n\n.. _adf-path-syntax-egs:\n\nExamples \n--------\n\nThe following examples demonstrate how to parse filenames into \ncomputed fields:\n\n- :ref:`adf-advanced-path-parse-single`\n- :ref:`adf-advanced-path-parse-multiple`\n- :ref:`adf-advanced-path-parse-regex`\n- :ref:`adf-advanced-path-parse-range`\n- :ref:`adf-advanced-parse-nested-fields`\n- :ref:`adf-advanced-path-objectids`\n- :ref:`adf-advanced-path-create-partition`\n- :ref:`adf-advanced-path-isodate`\n- :ref:`adf-advanced-path-generate-collection`\n\n.. _adf-advanced-path-parse-single:\n\nParse Single Field from Filename\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConsider a {+fdi+} store ``accountingArchive`` containing files\nwhere the filename describes an invoice date. For  example, the filename\n``/invoices/1564671291998.json`` contains the invoices for the UNIX\ntimestamp ``1564671291998``. \n\nThe following :ref:`adf-aws-databases-reference` object generates a \nfield ``invoiceDate`` by parsing the filename as a UNIX timestamp:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\" : \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{invoiceDate epoch_millis}\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\n{+df+} adds the computed field and value to each\ndocument generated from the filename. Documents generated from the\nexample filename includes a field \n``invoiceDate: ISODate(\"2019-08-01T14:54:51Z\")``. Queries on the\n``invoiceDate`` field can be targeted to only those files\nthat match the specified value.\n\n.. _adf-advanced-path-parse-multiple:\n\nParse Multiple Fields from Filename\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConsider a {+fdi+} store ``accountingArchive`` containing files\nwhere the filename describes an invoice number and invoice date. For\nexample, the filename ``/invoices/MONGO12345-1564671291998.json``\ncontains the invoice ``MONGODB12345`` for the UNIX timestamp\n``1564671291998``.\n\nThe following :ref:`adf-aws-databases-reference` object\ngenerates:\n\n- A field ``invoiceNumber`` by parsing the first segment of the filename\n  as a string.\n\n- A field ``invoiceDate`` by parsing the second segment of the filename\n  as a UNIX timestamp.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\": \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{invoiceNumber string}-{invoiceDate epoch_millis}\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\n{+df+} adds the computed fields and values to each\ndocument generated from the filename. Documents generated from the\nexample filename include the following fields:\n\n- ``invoiceNumber : \"MONGODB12345\"``\n- ``invoiceDate : ISODate(\"2019-08-01T14:54:51Z\")``\n\nQueries that include *both* the ``invoiceNumber`` and ``invoiceDate`` \nfields can be targeted to only those files that match the\nspecified values.\n\n.. _adf-advanced-path-parse-regex:\n\nUse Regular Expression to Parse Fields from Filename\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConsider a {+fdi+} store ``accountingArchive`` containing files\nwhere the filename describes an invoice number and invoice date. For \nexample, the filename ``/invoices/MONGODB12345-20190102.json`` contains\nthe invoice ``MONGODB12345`` for the date ``20190102``. \n\nThe following :ref:`adf-aws-databases-reference` object\ngenerates:\n\n- A field ``invoiceNumber`` by parsing the first segment of the filename\n  as a string\n\n- A field ``year`` by using a regular expression to parse only the\n  first 4 digits of the second segment of the filename as an int.\n\n- A field ``month`` by using a regular expression to parse only the\n  next 2 digits of the second segment of the filename as an int.\n\n- A field ``day`` by using a regular expression to parse only the\n  next 2 digits of the second segment of the filename as an int.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\" : \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{invoiceNumber string}-{year int:\\\\d{4}}{month int:\\\\d{2}}{day int:\\\\d{2}}\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\n{+df+} adds the computed fields and values to each\ndocument generated from the filename. Documents generated from the\nexample filename include the following fields:\n\n- ``invoiceNumber : \"MONGODB12345\"``\n- ``year : 2019``\n- ``month: 01``\n- ``day: 02``\n\n.. important::\n\n   You must escape the regex string specified in the ``path``. For\n   example, if the regex string includes double quotes, you must \n   escape those values. {+df+} supports the `Package Syntax \n   <https://golang.org/pkg/regexp/syntax/>`__ for regular expressions \n   in the storage configuration.\n\nQueries that include *all* generated fields can be targeted to only\nthose files that match the specified values.\n\n.. seealso:: \n        \n   :ref:`parse-padded-numeric-values`\n\n.. _adf-advanced-path-parse-range:\n\nIdentify Ranges of Queryable Data from Filename\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConsider a {+fdi+} store ``accountingArchive``  containing files\nwhere the filename describes the range of data contained in the file.\nFor example, the filename\n``/invoices/1546367712000-1549046112000.json`` contains invoices for\nthe time period between 2019-01-01 and 2019-01-02 with the date range \nrepresented as milliseconds elapsed since the UNIX epoch.\n\nThe following  :ref:`adf-aws-databases-reference` object identifies\nthe minimum time range as the first segment of the filename and the\nmaximum time range as the second segment of the filename:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name: \"accounting\",\n       \"collections\" : [\n         {\n           \"name: \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{min(invoiceDate) epoch_millis}-{max(invoiceDate) epoch_millis}\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\nWhen {+df+} receives a query on the ``\"invoiceDate\"`` field, it uses \nthe specified path to identify which files contain the data that \nmatches the query.\n\nQueries on the ``invoiceDate`` field can be targeted to only those\nfiles whose range captures the specified value, including the ``min`` \nand ``max`` date.\n\n.. important::\n\n   The field specified for the min and max ranges *must* exist in\n   every document contained in the file to avoid unexpected or\n   undesired behavior. {+df+} does *not* perform any\n   validation that the underlying data conforms to this constraint.\n\n.. seealso:: \n        \n   :ref:`parse-padded-numeric-values`\n\n.. _adf-advanced-parse-nested-fields:\n\nIdentify Nested Fields from Filename\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n{+df+} supports querying nested data when the nested data \nvalue is also the filename. You can use the dot operator (i.e. ``.``) \nin your \n:datalakeconf-aws:`~databases.[n].collections.[n].dataSources.[n].path` \nto map the partitions attributes in your storage configuration to \nnested fields in your documents. \n\nConsider a {+fdi+} store ``accountingArchive``. The {+fdi+} store \ncontains files with names that match values of nested fields in the \ndocuments. For example:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   accountingArchive \n   |--invoices\n      |--January.json\n      |--February.json\n      ...\n\nSuppose the ``January.json`` file contains a document with the \nfollowing fields: \n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n     \"invoice\": {\n        \"invoiceNumber\" : \"MONGODB12345\",\n        \"year\" : 2019, \n        \"month\": \"January\", //value matches filename\n        \"date\": 02\n     }, \n     \"vendor\": \"MONGODB\",\n     ...\n   }\n\nThe following :ref:`adf-aws-databases-reference` object identifies \n``month`` as a nested field inside a document. The \n:ref:`adf-aws-databases-reference` object also identifies the value of \n``month`` as the name of the file that contains the document.\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   \"databases\" : [\n     {\n       \"name\" : \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{invoice.month string}\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\nWhen {+adf+} receives a query on a specific month such as \n``January``, it uses the specified path to identify which file \ncontains the data that matches the query.\n\n.. _adf-advanced-path-objectids:\n\nCreate Partitions from ObjectIds\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can specify :manual:`ObjectIds </reference/bson-types/#objectid>` \nin the path to the files. For files that contain ``ObjectId`` in the \nfilename, {+adf+} creates partitions for each ``ObjectId``. \n\nConsider the following {+fdi+} store, ``accountingArchive``. This data  \nstore contains files that include ``ObjectId`` in the filename:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   accountingArchive \n   |--invoices\n      |--507f1f77bcf86cd799439011.json\n      |--507f1f77bcf86cd799439012.json\n      |--507f1f77bcf86cd799439013.json\n      |--507f1f77bcf86cd799439014.json\n      |--507f1f77bcf86cd799439015.json\n     \nThe following :ref:`adf-aws-databases-reference` object creates  \npartitions for the ``ObjectIds``.\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\" : \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{objid objectid}\"\n             }\n           ]\n         }\n       ]\n     }\n   ]                                            \n\nOr, suppose the {+fdi+} store ``accountingArchive`` contains \nfiles that include a range of ``ObjectIds`` in the filename. For \nexample:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   accountingArchive \n   |--invoices\n      |--507f1f77bcf86cd799439011-507f1f77bcf86cd799439020.json\n      |--507f1f77bcf86cd799439021-507f1f77bcf86cd799439030.json\n      |--507f1f77bcf86cd799439031-507f1f77bcf86cd799439040.json\n\nThe following :ref:`adf-aws-databases-reference` object creates \npartitions for the given range of ``ObjectIds``.\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\" : \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{min(obj) objectid}-{max(obj) objectid}\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\nWhen {+df+} receives a query on the ``ObjectId``, it uses the \nspecified path to identify which file contains the data that matches \nthe query.\n\n.. _adf-advanced-path-create-partition:\n\nCreate Partitions from File Path\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can specify parsing functions on any path leading up to the \nfilename. Each computed field is based on a parsing function along the \npath. When querying the data, {+adf+} converts each computed field to a \npartition. Partitions, which are synonymous with subdirectories, are \nthen used to filter files with increasing precision. \n\nConsider a {+fdi+} store ``accountingArchive`` with the following \ndirectory structure:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   invoices\n   |--MONGO12345\n      |--2019\n         |--01\n            |--02\n\nThe following :ref:`adf-aws-databases-reference` object creates the \n``invoiceNumber``, ``year``, ``month``, and ``day`` partitions with \na small set of filtered files:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   \"databases\" : [\n     {\n       \"name\" : \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{invoiceNumber string}/{year int}/{month int:\\\\d{2}}/{day int:\\\\d{2}}/*\"\n             }\n           ]\n         }\n       ]\n     }\n   }\n\n.. seealso:: \n        \n   :ref:`parse-padded-numeric-values`\n\n.. _adf-advanced-path-isodate:\n\nCreate Partitions from ISODate \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can specify :manual:`ISODate </reference/glossary/#term-isodate>` \nin the path to the files. For files that contain ``ISODate`` in the \nfilename, {+adf+} creates partitions for each ``ISODate``. \n\nConsider the following {+fdi+} store, ``accountingArchive``. This data  \nstore contains files that include ``ISODate`` in the filename:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   accountingArchive \n   |--invoices\n      |--01_02_2022_2301.json\n      |--02_02_2022_2301.json\n      |--03_02_2022_2301.json\n      |--04_02_2022_2301.json\n      |--05_02_2022_2301.json\n     \nThe following :ref:`adf-aws-databases-reference` object creates  \npartitions for the ``ISODate``. The ``path`` demonstrates how to use \nregex for the date format if the date is not in `RFC 3339 \n<https://tools.ietf.org/html/rfc3339>`_ format.\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\" : \"accounting\",\n       \"collections\" : [\n         {\n           \"name\" : \"invoices\",\n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/creationDate isodate('01_02_2006_1504'):\\\\d{2}_\\\\d{2}_\\\\d{4}_\\\\d{4}.json\"\n             }\n           ]\n         }\n       ]\n     }\n   ]    \n\nTo learn more about other supported formats, see \n:ref:`adf-s3-path-attribute-types`.\n\n.. _adf-advanced-path-generate-collection:\n\nGenerate Dynamic Collection Names from File Path\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nConsider a {+fdi+} store ``accountingArchive``  with the\nfollowing directory structure:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   invoices\n   |--SuperSoftware\n   |--UltraSoftware\n   |--MegaSoftware\n\nThe following :ref:`adf-aws-databases-reference` object \ngenerates a dynamic collection name from the file path:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\" : \"invoices\",\n       \"collections\" : [\n         {\n           \"name\" : \"*\", \n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/invoices/{collectionName()}/\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\nWhen applied to the example directory structure, the path \nresults in the following collections:\n\n- SuperSoftware\n- UltraSoftware\n- MegaSoftware\n\nOr, consider a {+fdi+} store ``accountingArchive``  with the\nfollowing files:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   /orders/MONGODB/invoices/January.json\n   /orders/MONGODB/purchaseOrders/January.json\n   /orders/MONGODB/invoices/February.json\n   ...\n\nThe following :ref:`adf-aws-databases-reference` object \ngenerates a dynamic collection name from the file path:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"databases\" : [\n     {\n       \"name\" : \"invoices\",\n       \"collections\" : [\n         {\n           \"name\" : \"*\", \n           \"dataSources\" : [\n             {\n               \"storeName\" : \"accountingArchive\",\n               \"path\" : \"/orders/MONGODB/{collectionName()}/{invoiceMonth string}.json/\"\n             }\n           ]\n         }\n       ]\n     }\n   ]\n\nWhen applied to the example filenames, the path \nresults in the following collections:\n\n- ``invoices``\n- ``purchaseOrders``\n\n.. include:: /includes/data-federation/fact-fdi-dynamic-collections.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/config/path-syntax-examples.txt"
  },
  {
    "code": "   :copyable: false \n\n   atlas-data-federation|myApp\n\nIf you query a collection in {+adf+} that is mapped to only one \n|service| collection, {+adf+} acts as a proxy and forwards your query \nto |service|. When acting as a proxy, {+adf+} doesn't scan data into \nits virtual collection to process the query thus improving performance \nand reducing cost. This optimization is not available for queries on \n{+adf+} collections that are mapped to multiple |service| collections. \n\n.. example:: \n\n   Consider the following {+fdi+} storage configuration: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/query-federated-database.txt"
  },
  {
    "code": "   :copyable: false \n\n   <SERVICE_NAME>-<CUSTOMER_DATA_LAKE_NAME>-<DATABASE_USER_NAME>\n\nFor example, for a database user configured in |service| as \n``\"user\" : \"CN=atlasDataLake-DataLake0-test_datalake0\"``, a log entry in \nthe |service| {+cluster+} audit log looks similar to the following:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/query-federated-database.txt"
  },
  {
    "code": "   :copyable: false \n   :emphasize-lines: 6, 8\n\n   { \n     \"atype\" : \"authenticate\", \n     \"ts\" : { \"$date\" : \"2022-04-29T13:17:54.020+00:00\" }, \n     \"local\" : { \"ip\" : \"XXXX\", \"port\" : 27017 }, \n     \"remote\" : { \"ip\" : \"XXXXX\", \"port\" : 10844 }, \n     \"users\" : [ { \"user\" : \"CN=atlasDataLake-DataLake0-test_datalake0\", \"db\" : \"$external\" } ], \n     \"roles\" : [ { \"role\" : \"backup\", \"db\" : \"admin\" }, { \"role\" : \"readWriteAnyDatabase\", \"db\" : \"admin\" }, { \"role\" : \"clusterMonitor\", \"db\" : \"admin\" }, { \"role\" : \"enableSharding\", \"db\" : \"admin\" }, { \"role\" : \"atlasAdmin\", \"db\" : \"admin\" }, { \"role\" : \"dbAdminAnyDatabase\", \"db\" : \"admin\" } ], \n     \"param\" : { \"user\" : \"CN=atlasDataLake-DataLake0-test_datalake0\", \"db\" : \"$external\", \"mechanism\" : \"MONGODB-X509\" }, \n     \"result\" : 0 \n   } \n\n.. note:: \n\n   The connection mechanism is always ``MONGODB-X509`` in the |service| \n   {+cluster+} audit logs.\n\n.. _query-oa:\n\nQuerying Data in Your {+Online-Archive+}s \n-----------------------------------------\n\nFor queries, {+adf+} uses the partitions that you created on fields\nduring the creation of the |service| {+Online-Archive+}. The order of\nfields in the partitions is important in the same way as it is for\n:manual:`Compound Indexes </core/index-compound/>`. Data is optimized\nfor queries by the first field, followed by the second field, and so on.\n{+adf+} parses the partitions in order; if a query omits a particular\npartition, {+adf+} is less efficient in making use of any partitions\nthat follow the omitted partition.  \n\n{+adf+} is less performant in supporting queries on fields that don't \nhave partitions. \n\n.. _query-http:\n\nQuerying Data at a |http| or |https| |url| \n------------------------------------------\n\n.. include:: /includes/extracts/fact-http-beta-message.rst \n\n{+df+} also creates one partition for each |url| in your collection. \nWhen you :doc:`connect </data-federation/tutorial/connect>` to your \n{+fdi+} and run queries, {+df+} processes your queries against the data \nand returns the query results.\n\n.. _federated-queries:\n\nRunning Federated Queries \n-------------------------\n\nYou can use {+adf+} to query and analyze a unified view of data in your \n|service| cluster, |s3| bucket or {+az-bs+} container, |http| URL, and\nonline archives. For federated queries, your {+fdi+} storage\n:ref:`configuration <config-adf>` must contain the settings that define: \n\n- Your |s3| or |azure|, |service|, {+Online-Archive+}, and |http| stores.\n\n  .. note:: \n\n     {+adf+} doesn't support federated queries across cloud providers.\n     Therefore, you can't run federated queries against data stored on\n     |aws| |s3| buckets and {+az-bs+} containers. Regardless of the\n     cloud provider backing your |service| {+cluster+}, you can run\n     federated queries against data on your |service| {+cluster+} and\n     |aws| |s3| bucket or {+az-bs+} container simultaneously. \n\n- {+FDI+}\\s with virtual collections that map to your |s3| bucket or\n  {+az-bs+}, |service| {+cluster+}, {+Online-Archive+}, and |http|\n  stores. \n\nYou can create or update your {+fdi+} :ref:`storage configuration \n<config-adf>` using the {+atlas-ui+} :guilabel:`Visual Editor` or \nthe :guilabel:`JSON Editor`, {+adf+} :ref:`CLI \n<adf-cli>` commands, and {+adf+} :oas-atlas-tag:`API </Data-Federation>`\nendpoints. To learn more about {+fdi+} storage configuration, see\n:ref:`config-adf`. \n\nWhen you :doc:`connect </data-federation/tutorial/connect>` to your \n{+fdi+} and run federated queries, {+df+} combines data from your \n|service| cluster, |s3| bucket or {+az-bs+} container, and |http|\n|url|\\s in virtual databases and collections and returns a union of data\nin the results.  \n\n.. _adf-query-limits:\n\nConfiguring Query Limits \n------------------------\n\nYou can limit the amount of data that {+adf+} processes for your queries\nto control costs. To limit the amount of data that {+adf+} processes for\nyour queries, you can configure query limits per {+fdi+} or for all\n{+fdi+}\\s in your project. When the amount of processed data reaches any\napplicable configured limit, {+adf+} won't execute any new queries and \nreturns an error to the client application that a limit has been reached. \nTo learn more, see :ref:`adf-manage-query-limits`. \n\n.. _query-troubleshooting:\n\nTroubleshooting \n---------------\n\n**Error:** We are currently experiencing increased query processing \nwait times for {+adf+}. Our Engineering team is investigating. Normal \nservice will resume shortly, please try again.\n\n{+adf+} returns this error only when {+adf+} can't execute queries \nbecause of resource contention. We recommend that you run your queries \nagain.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/query-federated-database.txt"
  },
  {
    "code": "            :copyable: true \n\n            .. input:: \n               :language: shell \n\n               gpg --keyserver {server_url} --recv-keys 91A2157730666110\n\n            .. output:: \n               :language: shell \n\n               gpg: key 91A2157730666110: public key \"Huan Li <huan.li@10gen.com>\" imported\n               gpg: Total number processed: 1\n               gpg:               imported: 1\n\n      #. Run the following command to verify the MongoDB JDBC Driver installation file.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/drivers/jdbc/download.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell \n\n            gpg --keyserver {server_url} --recv-keys 91A2157730666110\n\n         .. output:: \n            :language: shell \n\n            gpg: key 91A2157730666110: public key \"Huan Li <huan.li@10gen.com>\" imported\n            gpg: Total number processed: 1\n            gpg:               imported: 1\n\n   #. Run the following command to verify the MongoDB JDBC Driver installation file.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/drivers/jdbc/list-download.rst"
  },
  {
    "code": "                  :copyable: true \n     \n                  .. input:: \n                     :language: shell \n     \n                     curl -LO https://pgp.mongodb.com/atlas-sql-odbc.asc\n                     gpg --import atlas-sql-odbc.asc\n\n                  .. output:: \n                     :language: shell \n\n                     gpg: key 1CCF1A1263CDD699: public key \"Atlas SQL ODBC Release Signing Key <packaging@mongodb.com>\" imported\n                     gpg: Total number processed: 1\n                     gpg:               imported: 1\n  \n            #. Run the following command to verify the MongoDB installation file.\n     \n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/drivers/odbc/connect.txt"
  },
  {
    "code": "   :copyable: false\n\n   \\-- This is a standard SQL comment\n\nBlock comments begin with ``\\*`` and end at the matching occurrence of ``*/``.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/language-reference.txt"
  },
  {
    "code": "   :copyable: false\n\n   \\* This is a\n   multiline comment\n   */\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/language-reference.txt"
  },
  {
    "code": "   :copyable: true\n\n   SELECT * FROM sessions;\n\n{+asql+} returns all documents from the ``Sessions`` collection.\n\nLIMIT Statement\n~~~~~~~~~~~~~~~\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/query-with-asql-statements.txt"
  },
  {
    "code": "   :copyable: true\n      \n   SELECT * FROM users LIMIT 2;\n\n{+asql+} returns two documents from the ``Users`` collection.\n\nWHERE Statement\n~~~~~~~~~~~~~~~\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/query-with-asql-statements.txt"
  },
  {
    "code": "   :copyable: true\n      \n   SELECT * FROM users WHERE name = 'Jon Snow';\n\n{+asql+} returns documents from the ``Users`` collection where the user's ``name`` is ``Jon Snow``.\n\n.. _asql-flatten-and-unwind:\n\nFLATTEN and UNWIND\n------------------\n\nThis section covers two {+asql+} capabilities that make it easier to interact with document structures.\nThese are unique to {+asql+}.\n\nFLATTEN\n~~~~~~~\n\n``FLATTEN`` flattens semi-structured data (name-value pairs in \nJSON) into separate columns. Field names become column names that hold \nall of the values for that field in rows.\n\nThe syntax for flattening nested documents is a ``FLATTEN`` function \nthat can be used in the ``FROM`` clause in conjunction with a data \nsource and options.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/query-with-asql-statements.txt"
  },
  {
    "code": "   :copyable: false \n\n   \"set using sqlGenerateSchema with setSchemas = true\"\n\n.. _sqlgetschema-egs:\n\nExamples \n~~~~~~~~\n\n.. include:: /includes/data-federation/command-example-collection.rst\n\nThe examples below use the ``sqlGenerateSchema`` command to \ngenerate a schema for the above collection.\n\nBasic Example \n~~~~~~~~~~~~~\n\nThe following command generates a schema for the collection \nnamed ``sampleDB.egData`` in the storage configuration. The \ncommand uses two randomly selected documents from the \ncollection to create the schema because the ``sampleSize`` \nis ``2``. The command does not set the schema for the \ncollection because the ``setSchemas`` option is not specified \nwith the command and defaults to ``false``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/create.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n\t \"ok\" : 1,\n\t \"schemas\" : [\n\t   {\n\t\t \"databaseName\" : \"sampleDB\",\n\t\t \"namespaces\" : [\n\t\t   {\n\t\t\t \"name\" : \"egData\",\n\t\t\t \"schema\" : {\n\t\t\t   \"version\" : NumberLong(1),\n\t\t\t   \"jsonSchema\" : {\n\t\t\t\t \"bsonType\" : [\n\t\t\t\t   \"object\"\n\t\t\t\t ],\n\t\t\t\t \"properties\" : {\n\t\t\t\t   \"a\" : {\n\t\t\t\t\t \"bsonType\" : [\n\t\t\t\t\t   \"object\"\n\t\t\t\t\t ],\n\t\t\t\t\t \"properties\" : {\n\t\t\t\t\t   \"b\" : {\n\t\t\t\t\t\t \"bsonType\" : [\n\t\t\t\t\t\t   \"object\"\n\t\t\t\t\t\t ],\n\t\t\t\t\t\t \"properties\" : {\n\t\t\t\t\t\t   \"c\" : {\n\t\t\t\t\t\t\t \"bsonType\" : [\n\t\t\t\t\t\t\t   \"array\"\n\t\t\t\t\t\t\t ],\n\t\t\t\t\t\t\t \"items\" : {\n\t\t\t\t\t\t\t   \"bsonType\" : [\n\t\t\t\t\t\t\t\t \"int\"\n\t\t\t\t\t\t\t   ]\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t   }\n\t\t\t\t\t\t }\n\t\t\t\t\t   }\n\t\t\t\t\t }\n\t\t\t\t   },\n\t\t\t\t   \"s\" : {\n\t\t\t\t\t \"bsonType\" : [\n\t\t\t\t\t   \"int\"\n\t\t\t\t\t ]\n\t\t\t\t   }\n\t\t\t\t }\n\t\t\t   }\n\t\t\t }\n\t\t   }\n\t\t ]\n\t   }\n\t ]\n    }\n\nGenerate and Set Schema Example \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following command generates a schema for the collection \nnamed ``sampleDB.egData`` in the storage configuration. The command \nuses up to 1000 documents in the collection to create the schema \nbecause the ``sampleSize`` option is not specified with the command \nand defaults to ``1000``. The command sets the generated schema as \nthe schema to use for the collection because the ``setSchemas`` \noption is set to ``true``. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/create.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n\t \"ok\" : 1,\n\t \"schemas\" : [\n\t   {\n\t\t \"databaseName\" : \"sampleDB\",\n\t\t \"namespaces\" : [\n\t\t   {\n\t\t\t \"name\" : \"egData\",\n\t\t\t \"schema\" : {\n\t\t\t   \"version\" : NumberLong(1),\n\t\t\t   \"jsonSchema\" : {\n\t\t\t\t \"bsonType\" : [\n\t\t\t\t   \"object\"\n\t\t\t\t ],\n\t\t\t     \"properties\" : {\n\t\t\t\t   \"a\" : {\n\t\t\t\t     \"bsonType\" : [\n\t\t\t\t\t   \"object\"\n\t\t\t\t     ],\n\t\t\t\t     \"properties\" : {\n\t\t\t\t\t   \"b\" : {\n\t\t\t\t\t     \"bsonType\" : [\n\t\t\t\t\t\t   \"object\",\n\t\t\t\t\t\t   \"array\"\n\t\t\t\t\t     ],\n\t\t\t\t\t     \"properties\" : {\n\t\t\t\t\t\t   \"c\" : {\n\t\t\t\t\t\t     \"bsonType\" : [\n\t\t\t\t\t\t\t   \"array\",\n\t\t\t\t\t\t\t   \"string\",\n\t\t\t\t\t\t\t   \"object\",\n\t\t\t\t\t\t\t   \"null\"\n\t\t\t\t\t\t     ],\n\t\t\t\t\t\t     \"properties\" : {\n\t\t\t\t\t\t\t   \"d\" : {\n\t\t\t\t\t\t\t     \"bsonType\" : [\n\t\t\t\t\t\t\t\t   \"int\"\n\t\t\t\t\t\t\t     ]\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t     },\n\t\t\t\t\t\t       \"items\" : {\n\t\t\t\t\t\t\t       \"bsonType\" : [\n\t\t\t\t\t\t\t\t       \"int\"\n\t\t\t\t\t\t\t       ]\n\t\t\t\t\t\t       }\n\t\t\t\t\t       }\n\t\t\t\t\t     },\n\t\t\t\t\t     \"items\" : {\n\t\t\t\t\t\t     \"bsonType\" : [\n\t\t\t\t\t\t       \"int\"\n\t\t\t\t\t\t       ]\n\t\t\t\t\t       }\n\t\t\t\t       }\n\t\t\t\t     }\n\t\t\t       },\n\t\t\t       \"s\" : {\n\t\t\t\t     \"bsonType\" : [\n\t\t\t\t       \"int\",\n\t\t\t\t       \"object\"\n\t\t\t\t     ]\n\t\t\t       }\n\t\t\t     }\n\t\t       }\n\t       }\n\t     ]\n\t   }\n\t ]\n   }    \n\n.. _sqlgetschema-errors:\n\nErrors \n~~~~~~\n\nThe command returns the following error if the command fails: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/create.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"failedNamespaces\": [\n     { \n       \"namespace\" : \"<db.ns>\", \n       \"error\" : \"no documents found in sample namespace\" \n     }\n   ]\n\nThe above error is returned if the specified namespaces do not \nexist in the storage configuration or are empty. This error is \nalso returned if the schema could not be set for a given  \nnamespace.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/create.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1 }\n\nYou can verify that the command succeeded by running the\n``sqlGetSchema`` command. The \n``metadata.description`` field in the response contains the following value:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/set.txt"
  },
  {
    "code": "   :copyable: false\n\n   \"set using sqlSetSchema\"\n\n.. _sqlsetschema-egs:\n\nExamples\n--------\n\n.. include:: /includes/data-federation/command-example-collection.rst\n\nThe examples below use the ``sqlSetSchema`` command to set\nand remove schema for the above collection.\n\nSet Schema Example\n~~~~~~~~~~~~~~~~~~\n\nThe following ``sqlSetSchema`` command sets the schema for\nthe ``egData`` collection.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/set.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1 }\n\n.. _sqlsetschema-delete-example:\n\nDelete Schema Example\n~~~~~~~~~~~~~~~~~~~~~\n\nThe following ``sqlSetSchema`` command removes the schema\nfor the ``egData`` collection.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/set.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"ok\" : 1 }\n\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/set.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n     \"ok\": 1,\n     \"metadata\": {\n\t   \"description\": \"<description>\"\n     },\n     \"schema\": {\n\t   \"version\": NumberLong(1),\n\t   \"jsonSchema\": {}\n     }\n   }\n\n.. include:: /includes/data-federation/sql-cmd-output-metadata-field.rst \n\nThe ``schema`` document contains the following fields: \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 20 10 70\n\n   * - Parameter\n     - Type\n     - Description\n\n   * - ``schema.version``\n     - integer\n     - Format version of the schema. Value is always 1.\n\n   * - ``schema.jsonSchema``\n     - document\n     - |json| schema of the collection or view. The |json| schema can \n       contain the following :manual:`fields \n       </reference/operator/query/jsonSchema/#jsonschema-keywords>` : \n\n       - ``bsonType`` \n       - ``properties`` \n       - ``items``\n\n       To learn more about these fields, see :manual:`JSON Schema \n       Keywords </reference/operator/query/jsonSchema/#jsonschema-keywords>`.\n\n.. _sqlgetschema-egs:\n\nExample \n~~~~~~~\n\n.. include:: /includes/data-federation/command-example-collection.rst\n\nThe following command retrieves the schema stored for the ``egData`` \ncollection: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/view.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n\t \"ok\" : 1,\n\t \"metadata\" : {\n\t   \"description\" : \"set using sqlGenerateSchema with setSchemas = true\"\n\t },\n\t \"schema\" : {\n\t   \"version\" : NumberLong(1),\n\t   \"jsonSchema\" : {\n\t\t \"bsonType\" : [\n\t\t   \"object\"\n\t\t ],\n\t\t \"properties\" : {\n\t\t   \"a\" : {\n\t\t\t \"bsonType\" : [\n\t\t\t   \"object\"\n\t\t\t ],\n\t\t\t \"properties\" : {\n\t\t\t   \"b\" : {\n\t\t\t\t \"bsonType\" : [\n\t\t\t\t   \"object\",\n\t\t\t\t\t \"array\"\n\t\t\t\t   ],\n\t\t\t\t   \"properties\" : {\n\t\t\t\t\t \"c\" : {\n\t\t\t\t\t   \"bsonType\" : [\n\t\t\t\t\t\t \"array\",\n\t\t\t\t\t\t \"string\",\n\t\t\t\t\t\t \"object\",\n\t\t\t\t\t\t \"null\"\n\t\t\t\t\t   ],\n\t\t\t\t\t   \"properties\" : {\n\t\t\t\t\t\t \"d\" : {\n\t\t\t\t\t\t   \"bsonType\" : [\n\t\t\t\t\t\t\t \"int\"\n\t\t\t\t\t\t   ]\n\t\t\t\t\t\t }\n\t\t\t\t\t   },\n\t\t\t\t\t   \"items\" : {\n\t\t\t\t\t\t   \"bsonType\" : [\n\t\t\t\t\t\t     \"int\"\n\t\t\t\t\t\t   ]\n\t\t\t\t\t   }\n\t\t\t\t\t }\n\t\t\t\t   },\n\t\t\t\t   \"items\" : {\n\t\t\t\t\t   \"bsonType\" : [\n\t\t\t\t\t     \"int\"\n\t\t\t\t\t   ]\n\t\t\t\t   }\n\t\t\t\t }\n\t\t\t   }\n\t\t\t },\n\t\t\t \"s\" : {\n\t\t\t   \"bsonType\" : [\n\t\t\t\t \"int\",\n\t\t\t\t \"object\"\n\t\t\t   ]\n\t\t\t }\n\t\t   }\n\t\t }\n\t   }\n\t }\n   \n   \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/schema/view.txt"
  },
  {
    "code": "            :copyable: true\n\n            mongosh --version\n\n         If the installation was successful, ``mongosh`` \n         displays a version.\n\n      If you already have the MongoDB Shell installed:\n\n      a. Select :guilabel:`I have the MongoDB Shell installed` inside the connection modal.\n\n      #. Select ``mongosh`` from the modal dropdown menu.\n\n         .. note::\n\n            The MongoDB Shell, or ``mongosh``, is separate from \n            the ``mongo`` versions in the modal dropdown menu. \n\n         If you want to ensure that you have ``mongosh`` installed, \n         in your terminal, run:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/shell/connect.txt"
  },
  {
    "code": "            :copyable: true\n\n            mongosh --version\n\n         If ``mongosh`` is installed, it displays a version.\n\n   .. step:: Select your authentication method.\n\n      Your authentication method depends on how your \n      database access is configured. To learn more about \n      database access, see :ref:`mongodb-users`.\n\n      You can choose:\n     \n      - :guilabel:`Password (SCRAM)`, or\n      - :guilabel:`X.509`.\n\n      {+adf+} provides a connection string for your authentication \n      method.\n\n   .. step:: Copy and run your connection string.\n\n      If you selected the :guilabel:`Password (SCRAM)` authentication \n      method, you are prompted for a password for the connecting user.\n\n   .. step:: *(Optional)* Confirm the connection to your {+fdi+}.\n\n      To confirm that you are connected to your {+fdi+}, using \n      ``mongosh``, run:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/shell/connect.txt"
  },
  {
    "code": "         :copyable: true\n            \n         show dbs\n\n      If you successfully connected to your {+fdi+} that is \n      mapped to a data store, ``mongosh`` displays the names of your \n      virtual databases.\n\nAggregation Syntax and Short-form Syntax\n----------------------------------------\n\n{+asql+} supports an aggregation pipeline stage syntax and a short-form syntax for constructing the SQL queries.\nYou can use either of these syntaxes to write queries in the MongoDB Shell.\n\nAggregation Pipeline Stage Syntax\n``````````````````````````````````\n\nYou can use the ``$sql`` \n:manual:`aggregation </reference/command/aggregate>` pipeline stage to \nwrite {+asql+} queries. See :ref:`adf-sql-stage` for a list of \nproperties you must provide to ``$sql``.\n\nThe following example uses ``$sql`` syntax to execute the {+asql+} statement ``select * from Users limit 2``:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/shell/connect.txt"
  },
  {
    "code": "   :copyable: true\n\n   db.aggregate( [ {\n       $sql: {\n          statement: \"SELECT * \n                      FROM users \n                      LIMIT 2\", \n          format: \"jdbc\", \n          dialect: \"mongosql\"\n      } \n   } ] )\n\n.. note::\n\n   {+asql+} uses the dialect ``mongosql``.\n\n.. _short-sql-syntax:\n\nShort-form Syntax\n``````````````````\n\nYou can use a short-form syntax, ``db.sql``, to supply an \n{+asql+} statement directly.\n\n.. important::\n\n   Short-form syntax is not stable and may change in the future.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/shell/connect.txt"
  },
  {
    "code": "   :copyable: true\n   \n   db.sql(`\n     SELECT * \n     FROM users \n     LIMIT 2\n   `);\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/shell/connect.txt"
  },
  {
    "code": "   :copyable: true\n      \n   SELECT * \n   FROM Sessions\n\n{+asql+} returns all documents from the ``Sessions`` collection.\n\nLIMIT Statement\n~~~~~~~~~~~~~~~\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/tutorials/connect-tutorial.txt"
  },
  {
    "code": "   :copyable: true\n      \n   SELECT * \n   FROM Users \n   LIMIT 2\n\n{+asql+} returns two documents from the ``Users`` collection.\n\nWHERE Statement\n~~~~~~~~~~~~~~~\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/tutorials/connect-tutorial.txt"
  },
  {
    "code": "   :copyable: true\n      \n   SELECT * \n   FROM Users \n   WHERE name = 'Jon Snow'\n\n{+asql+} returns documents from the ``Users`` collection where the \nuser's ``name`` is ``Jon Snow``.\n\nFor an {+asql+} command reference, see :ref:`sql-reference`.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/sql/tutorials/connect-tutorial.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n\t   \"_id\" : ObjectId(\"613fa06cf9521f85777d5be8\"),\n\t   \"query\" : [\n\t\t   {\n\t\t\t   \"$match\" : {\n\t\t\t\t   \"bedrooms\" : 3,\n\t\t\t\t   \"review_scores.review_scores_rating\" : {\n\t\t\t\t\t   \"$gt\" : 79\n\t\t\t\t   }\n\t\t\t   }\n\t\t   },\n\t\t   {\n\t\t\t   \"$count\" : \"numProperties\"\n\t\t   }\n\t   ],\n\t   \"appName\" : \"MongoDB Shell\",\n\t   \"user\" : \"admin.user1\",\n\t   \"db\" : \"Database0\",\n\t   \"collection\" : \"Collection0\",\n\t   \"opid\" : ObjectId(\"16a476f40ac6d97f22e4aa1f\"),\n\t   \"startTime\" : ISODate(\"2021-09-13T19:02:35.589Z\"),\n\t   \"endTime\" : ISODate(\"2021-09-13T19:03:08.730Z\"),\n\t   \"ok\" : 1,\n\t   \"background\" : false\n   }\n   {\n\t   \"_id\" : ObjectId(\"613fa0d4f9521f85777d6bc0\"),\n\t   \"query\" : [\n\t\t   {\n\t\t\t   \"$match\" : {\n\t\t\t\t   \"bedrooms\" : 3\n\t\t\t   }\n\t\t   },\n\t\t   {\n\t\t\t   \"$sort\" : {\n\t\t\t\t   \"review_scores_rating\" : -1\n\t\t\t   }\n\t\t   },\n\t\t   {\n\t\t\t   \"$limit\" : NumberLong(5)\n\t\t   }\n\t   ],\n\t   \"appName\" : \"MongoDB Shell\",\n\t   \"user\" : \"admin.user1\",\n\t   \"db\" : \"Database0\",\n\t   \"collection\" : \"Collection0\",\n\t   \"opid\" : ObjectId(\"16a4770e387f300c22e4bdf2\"),\n\t   \"startTime\" : ISODate(\"2021-09-13T19:04:28.184Z\"),\n\t   \"endTime\" : ISODate(\"2021-09-13T19:04:52.898Z\"),\n\t   \"ok\" : 1,\n\t   \"background\" : false\n   }\n   {\n\t   \"_id\" : ObjectId(\"613fa0eef9521f85777d6f6f\"),\n\t   \"query\" : [\n\t\t   {\n\t\t\t   \"$match\" : {\n\t\t\t\t   \"limit\" : {\n\t\t\t\t\t   \"$eq\" : 10000\n\t\t\t\t   },\n\t\t\t\t   \"products\" : \"Commodity\"\n\t\t\t   }\n\t\t   },\n\t\t   {\n\t\t\t   \"$limit\" : NumberLong(5)\n\t\t   }\n\t   ],\n\t   \"appName\" : \"MongoDB Shell\",\n\t   \"user\" : \"admin.user1\",\n\t   \"db\" : \"Database0\",\n\t   \"collection\" : \"Collection0\",\n\t   \"opid\" : ObjectId(\"16a477163555e4aa22e4c53b\"),\n\t   \"startTime\" : ISODate(\"2021-09-13T19:05:02.342Z\"),\n\t   \"endTime\" : ISODate(\"2021-09-13T19:05:18.774Z\"),\n\t   \"ok\" : 1,\n\t   \"background\" : false\n   }\n   {\n\t   \"_id\" : ObjectId(\"613fa147f9521f85777d7b11\"),\n\t   \"query\" : [\n\t\t   {\n\t\t\t   \"$match\" : {\n\t\t\t\t   \"name\" : /Lannister/\n\t\t\t   }\n\t\t   },\n\t\t   {\n\t\t\t   \"$limit\" : NumberLong(10)\n\t\t   }\n\t   ],\n\t   \"appName\" : \"MongoDB Shell\",\n\t   \"user\" : \"admin.user1\",\n\t   \"db\" : \"Database0\",\n\t   \"collection\" : \"Collection0\",\n\t   \"opid\" : ObjectId(\"16a4771ba072c0a122e4c9bd\"),\n\t   \"startTime\" : ISODate(\"2021-09-13T19:05:25.736Z\"),\n\t   \"endTime\" : ISODate(\"2021-09-13T19:06:47.147Z\"),\n\t   \"ok\" : 1,\n\t   \"background\" : false\n   }\n   {\n\t   \"_id\" : ObjectId(\"613fb9eccaba4e6430c7dcb7\"),\n\t   \"query\" : [\n\t\t   {\n\t\t\t   \"$group\" : {\n\t\t\t\t   \"_id\" : \"$movies\",\n\t\t\t\t   \"Collection0\" : {\n\t\t\t\t\t   \"$push\" : \"$title\"\n\t\t\t\t   }\n\t\t\t   }\n\t\t   },\n\t\t   {\n\t\t\t   \"$out\" : {\n\t\t\t\t   \"atlas\" : {\n\t\t\t\t\t   \"projectId\" : \"{PROJECT_ID}\",\n\t\t\t\t\t   \"clusterName\" : \"mySbx\",\n\t\t\t\t\t   \"db\" : \"my_test\",\n\t\t\t\t\t   \"coll\" : \"sample\"\n\t\t\t\t   }\n\t\t\t   }\n\t\t   }\n\t   ],\n\t   \"appName\" : \"MongoDB Shell\",\n\t   \"user\" : \"admin.user1\",\n\t   \"db\" : \"admin\",\n\t   \"collection\" : \"Collection0\",\n\t   \"opid\" : ObjectId(\"16a47ceba943e9cc00c98c62\"),\n\t   \"startTime\" : ISODate(\"2021-09-13T20:51:56.617Z\"),\n\t   \"endTime\" : ISODate(\"2021-09-13T20:51:56.642Z\"),\n\t   \"ok\" : 1,\n\t   \"background\" : true\n   }\n\nFilter |qh| Output for Specific Queries\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor the example below, suppose a query similar to the following is  \nrun against the ``Database0.Collection0`` collection described in the \n:ref:`Getting Started tutorial <adf-tutorials>`. The query includes \nunique strings to help identify the query in the results returned by \nthe |qh| stage. You can attach a comment to a query using the \n:manual:`aggregate </reference/command/aggregate/>` command ``comment`` \noption or the :manual:`$comment </reference/operator/query/comment/>` \noperator. This example uses both ways to attach the unique strings with \nthe query.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/view-query-history.txt"
  },
  {
    "code": "   :copyable: false\n\n   [\n     {\n       \"_id\": ObjectId(\"61e1e4c29e62172566d8e9b6\"),\n       \"query\": [\n         { \"$match\": { \"account_id\": 557378, \"$comment\": \"test\" } },\n         { \"$sort\": { \"transactions.symbol\": -1 } }\n       ],\n       \"comment\": \"exampleQuery\",\n       \"appName\": \"mongosh 1.1.8\",\n       \"user\": \"admin.user1\",\n       \"db\": \"Database0\",\n       \"collection\": \"Collection0\",\n       \"opid\": ObjectId(\"16ca3ed2577016e68d60358c\"),\n       \"startTime\": ISODate(\"2022-01-14T21:01:27.346Z\"),\n       \"endTime\": ISODate(\"2022-01-14T21:01:54.627Z\"),\n       \"ok\": 1,\n       \"error\": \"\",\n       \"background\": false,\n       \"queryFilterComments\": [ \"test\" ]\n     }\n   ]\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/query/view-query-history.txt"
  },
  {
    "code": "      :copyable: false\n\n      company,location.state,location.city.name,location.city.street\n      \"MongoDB\", \"California\", \"Palo Alto\", \"Forest Ave\"\n\n   For the data fields in the above example CSV file, {+df+} \n   creates the following |json| document:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/data-formats/csv-tsv-data-files.txt"
  },
  {
    "code": "      :copyable: false\n\n      {\n         \"company\": \"MongoDB\",\n         \"location\": { \n            \"state\": \"California\",\n            \"city\": {\n               \"name\": \"Palo Alto\",\n               \"street\": \"Forest Ave\",\n         }\n      }\n\n{+df+} requires all field names at the same level of nesting \nto be unique. The following are examples of invalid field names \nin the header row:\n\n- One field duplicates another field at the same level of nesting. \n\n  .. example::\n\n     Consider the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/data-formats/csv-tsv-data-files.txt"
  },
  {
    "code": "        :copyable: false\n\n        company,location,company\n\n     In the header, ``company`` is included twice at the same level of \n     nesting. \n\n- One dot-delimited field duplicates another field at the same level \n  of nesting. \n\n  .. example:: \n   \n     Consider the following:\n\n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/data-formats/csv-tsv-data-files.txt"
  },
  {
    "code": "        :copyable: false\n\n        company,location,location.city\n\n     In the header, ``location`` is both a stand-alone field \n     and dot-delimited field at the same level of nesting. \n     \n",
    "language": "text",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/data-formats/csv-tsv-data-files.txt"
  },
  {
    "code": "          :copyable: false \n\n          <major-version-number>.<minor-version-number>.<patch-version-number>\n\n       For example, ``7.0.1``.\n\n   * - ``cacheMetadata``\n     - Information about how recently {+adf+} computed the statistics. \n\n   * - ``cacheMetadata.computeTime`` \n     - Time in :manual:`ISODate \n       </reference/glossary/#term-isodate>` format when the computation \n       for the stats started.\n\n   * - ``cacheMetadata.automaticRefreshInProgress``\n     - Flag that indicates whether a background job is running now to \n       refresh the cache.\n\n   * - ``truncated`` \n     - Flag that indicates whether {+adf+} enforced the maximum \n       document size limit of 16MiB. The flag value can be one of the \n       following: \n\n       - ``true`` - if the output document size exceeded the limit and \n         was therefore truncated to include only enough partitions that \n         allowed the document to comply with the size limit. If \n         ``true``, the ``partitionCount`` and ``avgPartitionSize`` \n         values that {+adf+} returns may be smaller than the actual \n         values.\n       - ``false`` - if {+adf+} returns the entire document.\n\n.. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/diagnostic-commands.txt"
  },
  {
    "code": "      :copyable: false \n\n      db.runCommand({ \"explain\": { \"aggregate\": \"user\", \"verbosity\":\n      \"queryPlannerExtended\", \"pipeline\": [ ], \"cursor\": {} }})\n      \n   The following example shows how to append a method to the\n   ``explain`` method, such as the :method:`~db.collection.find()`\n   method, to get query execution statistics on the query.\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/diagnostic-commands.txt"
  },
  {
    "code": "      :copyable: false \n\n      db.users.explain(\"executionStats\").find({\"type\": \"admin\"})\n\nOutput \n~~~~~~\n\nWhen you run ``explain``, {+adf+} returns the following additional\nfields for other partitions:  \n\n.. list-table:: \n   :header-rows: 1\n   :widths: 30 70 \n\n   * - Output Field Name\n     - Description \n\n   * - ``stats``\n     - Document that describes the number and total size of partitions \n       that {+adf+} might open for the query.\n\n   * - ``stats.size``\n     - Total size of partitions that {+adf+} might open for the query.\n\n   * - ``stats.numberOfPartitions``\n     - Number of partitions that {+adf+} might open for the query.\n\n   * - ``truncated``\n     - Boolean that indicates whether the ``explain`` output\n       is truncated. The ``explain`` total output document size is\n       limited to 16 MiB. \n\n   * - ``plan``\n     - Document that contains the query execution plan for the query.  \n       The document contains nested execution plan nodes, each of which \n       is a document describing the plan node. The nested plan node \n       documents contain internal description of {+adf+}'s query \n       execution, and include various node kinds that are subject to \n       change. Contact MongoDB support if you need more help with \n       understanding the query plan.\n\n.. tabs:: \n\n   .. tab:: queryPlanner (default)\n      :tabid: query-planner\n\n      In the ``queryPlanner`` mode, the results returned by ``explain``\n      provide detailed information on the partitions in the {+fdi+}. \n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/diagnostic-commands.txt"
  },
  {
    "code": "         :copyable: false\n         :caption: Example Output\n         :linenos: \n      \n         {\n           ok: 1,\n           stats: { size: '66 B', numberOfPartitions: 2 },\n           truncated: false,\n           plan: {\n             kind: 'region',\n             region: 'aws/us-east-1',\n             node: {\n               kind: 'data',\n               size: '66 B',\n               numberOfPartitions: 2,\n               partitionsTruncated: false,\n               partitions: [\n                 {\n                   source: 'projectID:cluster',\n                   provider: 'atlas',\n                   size: '4 B',\n                   database: 'locations',\n                   collection: 'nyc'\n                 },\n                 {\n                   source: 'dls:projectID',\n                   provider: 'dls:aws',\n                   size: '62 B',\n                   metadataLocation: { provider: 'aws', region: 'us-east-1' },\n                   dataSetName: 'v1$atlas$archive$etc',\n                   optimizationPlan: { kind: 'everything' }\n                 }\n               ]\n             }\n           }\n         }\n\n      The ``explain`` command returns the following additional fields\n      for |service| partitions: \n\n      .. list-table:: \n         :header-rows: 1\n         :widths: 30 70 \n\n         * - Output \n           - Description \n\n         * - ``database`` \n           - Database that that {+adf+} queried. \n\n         * - ``collection`` \n           - Collection that that {+adf+} queried. \n\n         * - ``pipeline`` \n           - Aggregation pipeline that {+adf+} executed. \n\n      The ``explain`` command returns the following additional field\n      for {+Online-Archive+} partitions:  \n\n      .. list-table:: \n         :header-rows: 1\n         :widths: 30 70 \n\n         * - Output Field Name\n           - Description \n\n         * - ``optimizationPlan``\n           - Details on {+Online-Archive+} optimizations. Queries will\n             likely be optimized when they contain fields that match the\n             configured partition keys for an {+Online-Archive+}. \n\n   .. tab:: queryPlannerExtended\n      :tabid: query-planner-extended\n\n      In the ``queryPlannerExtended`` mode, the results returned by\n      ``explain`` provide extended query planning information for\n      partition types. \n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/diagnostic-commands.txt"
  },
  {
    "code": "         :copyable: false\n         :caption: Example Output\n         :linenos: \n         :emphasize-lines: 27-28\n\n         {\n           ok: 1,\n           stats: { size: '66 B', numberOfPartitions: 2 },\n           truncated: false,\n           plan: {\n             kind: 'region',\n             region: 'aws/us-east-1',\n             node: {\n               kind: 'data',\n               size: '66 B',\n               numberOfPartitions: 2,\n               partitionsTruncated: false,\n               partitions: [\n                 {\n                   source:'projectID:cluster',\n                   provider: 'atlas',\n                   size: '4 B',\n                   database: 'locations',\n                   collection: 'nyc'\n                 },\n                 {\n                   source: 'dls:projectID',\n                   provider: 'dls:aws',\n                   size: '62 B',\n                   metadataLocation: { provider: 'aws', region: 'us-east-1' },\n                   dataSetName: 'v1$atlas$archive$etc',\n                   scannedDataSetPartitionsCount: 1,\n                   percentOfTotalPartitions: 100,\n                   optimizationPlan: { kind: 'everything' }\n                 },\n               ]\n             }\n           }\n         }\n\n      The ``explain`` command returns all the information from\n      ``queryPlanner`` and the following additional fields for\n      {+Online-Archive+} partitions: \n\n      .. list-table:: \n         :header-rows: 1\n         :widths: 30 70 \n\n         * - Output Field Name\n           - Description \n\n         * - ``scannedDataSetPartitionsCount``\n           -  Number of partitions scanned to complete the query.\n\n         * - ``percentOfTotalPartitions`` \n           - Percentage of partitions scanned over the total number of\n             partitions. \n\n   .. tab:: executionStats\n      :tabid: execution-stats\n\n      In the ``executionStats`` mode, the results returned by\n      ``explain`` provide information on query execution statistics and \n      performance for only |service| partitions. These are obtained by\n      executing an ``executionStats`` explain command on the |service|\n      partition's underlying |service| collection. For non-|service|\n      partitions, ``explain`` returns the ``queryPlanner`` information.\n      The ``partitions`` field in the results include an additional\n      ``explainResults`` field, which is a document that might contain\n      the following fields:\n\n      .. list-table:: \n         :header-rows: 1\n         :widths: 30 70 \n\n         * - Output Field Name\n           - Description \n\n         * - ``executionStats``\n           -  Provides information about the execution of the |service| cluster's winning query plan, including the number of documents and\n              keys examined. \n\n         * - ``queryPlanner``\n           -  Contains information about |service| cluster's query plan selection, including index selection.\n\n         * - ``stages``\n           -  Includes breakdown of pipeline stages and statistics on a\n              per stage basis.  \n\n      .. note:: \n\n         To learn more about these fields, see :ref:`executionStats`.\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/diagnostic-commands.txt"
  },
  {
    "code": "         :copyable: false\n         :caption: Example Output\n         :linenos:\n         :emphasize-lines: 20-34\n\n         {\n           ok: 1,\n           stats: { size: '66 B', numberOfPartitions: 2 },\n           truncated: false,\n           plan: {\n             kind: 'region',\n             region: 'aws/us-east-1',\n             node: {\n               kind: 'data',\n               size: '66 B',\n               numberOfPartitions: 2,\n               partitionsTruncated: false,\n               partitions: [\n                 {\n                   source: 'projectID:cluster',\n                   provider: 'atlas',\n                   size: '4 B',\n                   database: 'locations',\n                   collection: 'nyc',\n                   explainResults: {\n                     queryPlanner: {\n                       ...\n                       winningPlan: {\n                         ...\n                       },\n                       rejectedPlans: []\n                     },\n                     executionStats: {\n                       ...\n                     },\n                     stages: {\n                         ...\n                     }\n                   }\n                 },\n                 {\n                   source: 'dls:projectID',\n                   provider: 'dls:aws',\n                   size: '62 B',\n                   metadataLocation: { provider: 'aws', region: 'us-east-1' },\n                   dataSetName: 'v1$atlas$archive$etc'\n                 },\n               ]\n             }\n           }\n         }\n\n``getLog``\n----------\n\nFor :manual:`getLog </reference/command/getlog>` command, {+adf+}  \nreturns a successful response, but doesn't includes log data.\n\n``getMore`` \n-----------\n\nFor :manual:`getMore </reference/command/getMore>` command, {+adf+} \nreturns subsequent batches of documents currently pointed to by a cursor,\nwhen used in conjunction with commands that return a cursor, e.g.\n:manual:`find </reference/command/find>` and\n:manual:`aggregate </reference/command/aggregate>`.\n\n``hostInfo``\n------------\n\nFor :manual:`hostInfo </reference/command/hostinfo>` command, {+adf+} \nreturns only the following subset of fields from the standard MongoDB \nresponse:\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/diagnostic-commands.txt"
  },
  {
    "code": "          :copyable: false \n\n          <major-version-number>.<minor-version-number>.<patch-version-number>\n\n       For example, ``7.0.1``.\n\n.. _adf-collstats-egs:\n\nExamples \n--------\n\n.. tabs:: \n\n   .. tab:: Basic Example \n      :tabid: basic\n\n      The following example shows :manual:`$collStats  \n      </reference/operator/aggregation/collStats/>` syntax for  \n      retrieving the partitions from a ``s3Db.abc`` collection with 3 \n      files in an |s3| {+fdi+} store:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/collstats.txt"
  },
  {
    "code": "         :copyable: false \n\n         { \"ns\" : \"s3Db.abc\", \"partition\" : { \"format\" : \"JSON\", \"attributes\" : { \"year\" : NumberLong(2018) }, \"size\" : 139, \"source\" : \"s3://my-bucket/s3Db/abc/2018/1.json?delimiter=%2F&region=us-east-1\" } }\n         { \"ns\" : \"s3Db.abc\", \"partition\" : { \"format\" : \"JSON\", \"attributes\" : { \"year\" : NumberLong(2017) }, \"size\" : 124, \"source\" : \"s3://my-bucket/s3Db/abc/2017/1.json?delimiter=%2F&region=us-east-1\" } }\n         { \"ns\" : \"s3Db.abc\", \"partition\" : { \"format\" : \"JSON\", \"attributes\" : { \"year\" : NumberLong(2017) }, \"size\" : 130, \"source\" : \"s3://my-bucket/s3Db/abc/2017/2.json?delimiter=%2F&region=us-east-1\" } }\n\n      The following example shows :manual:`$collStats \n      </reference/operator/aggregation/collStats/>` syntax for \n      retrieving the partitions from the ``atlasDb.sampleColl`` \n      collection in the |service| cluster named ``mySandboxCluster``: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/collstats.txt"
  },
  {
    "code": "         :copyable: false \n\n         { \"ns\" : \"atlasDb.sampleColl\", \"partition\" : { \"format\" : \"MONGO\", \"attributes\" : {  }, \"size\" : 94362191, \"source\" : \"mySandboxCluster\" } }\n\n   .. tab:: Count Example \n      :tabid: count\n\n      The following example shows :manual:`$collStats  \n      </reference/operator/aggregation/collStats/>` syntax for \n      retrieving the total number of documents in the partitions.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/collstats.txt"
  },
  {
    "code": "         :copyable: false \n\n         { \"ns\" : \"atlasDb.sampleColl\", \"partition\" : { \"format\" : \"MONGO\", \"attributes\" : {  }, \"size\" : 94362191, \"source\" : \"mySandboxCluster\" }, \"count\" : 23530}\n\n.. _adf-collstats-errors:\n\nErrors \n------\n\nAn error similar to the following is returned if the :manual:`collStats \n</reference/operator/aggregation/collStats/>` argument document \ncontains any of the options allowed by the MongoDB server but not by \n{+adf+}.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/collstats.txt"
  },
  {
    "code": "   :copyable: false \n\n   {\n\t  \"ok\" : 0,\n\t  \"errmsg\" : \"$collStats param 'latencyStats' is not valid for Data Federation, correlationID = 1622929884a47d16f4888a1c\",\n\t  \"code\" : 9,\n\t  \"codeName\" : \"FailedToParse\"\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/collstats.txt"
  },
  {
    "code": "          :copyable: false \n\n          { \"background\" : true }\n       \n       Use this option if you want to submit other new queries without \n       waiting for currently running queries to complete or disconnect \n       your {+fdi+} connection while the queries continue to run in the \n       background. \n     \n     - Optional\n\n.. _adf-merge-considerations: \n\nResolving Duplicate Document IDs \n--------------------------------\n\nWhen writing documents from your archive or your data stores to your \n|service| cluster, your documents might have duplicate ``_id`` fields. \nThis section describes how {+adf+} resolves duplicates and includes \nrecommendations for resolving duplicates in your aggregation pipeline. \n\nResolving Duplicate IDs in {+adf+}\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo resolve duplicates, {+adf+}:\n\n1. Writes documents to an |service| collection ``X`` in the order it \n   receives the documents until it encounters a duplicate.\n#. Writes the document with the duplicate ``_id`` field and all \n   subsequent documents to a new |service| collection ``Y``.\n#. Runs the specified ``$merge`` stage to merge collection ``Y`` into \n   collection ``X``.\n#. Writes the resulting documents into the target collection on the \n   specified |service| cluster.\n\n.. note:: \n\n   {+adf+} only resolves duplicate values in the ``_id`` field. It \n   doesn't resolve duplicate values in other fields with unique indexes.\n\nRemediating Duplicate IDs\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo remediate duplicate ``_id`` fields, you can:\n\n1. Include a :pipeline:`$sort` stage in your pipeline to specify the \n   order in which {+adf+} must process the resulting documents. \n#. Based on the order of documents flowing into the :pipeline:`$merge` \n   stage, choose the value for the ``whenMatched`` and \n   ``whenNotMatched`` options of the :pipeline:`$merge` stage carefully.\n\n   .. example:: \n\n      The following examples show how {+adf+} resolves duplicates \n      during the ``$merge`` stage when ``whenMatched`` option is set to \n      ``keepExisting`` or ``replace``. These examples use the following \n      documents: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n           \"_id\" : 1,\n           \"state\" : \"FL\"\n         },\n         {\n           \"_id\" : 1,\n           \"state\" : \"NJ\"\n         },\n         {\n           \"_id\" : 2,\n           \"state\" : \"TX\"\n         }\n\n      .. tabs:: \n\n         .. tab:: keepExisting \n            :tabid: keepexisting \n\n            Suppose you run the following pipeline on the documents \n            listed above:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "               :copyable: false \n               :emphasize-lines: 18\n\n               db.s3coll.aggregate([\n                 {\n                   \"$sort\": {\n                     \"_id\": 1,\n                     \"state\": 1,\n                   } \n                 },\n                 { \n                   \"$merge\": {\n                     \"into\": {\n                       \"atlas\": {\n                         \"clusterName\": \"clustername\",\n                         \"db\": \"clusterdb\",\n                         \"coll\": \"clustercoll\"\n                       }\n                     },\n                     \"on\": \"_id\",\n                     \"whenMatched\": \"keepExisting\",\n                     \"whenNotMatched\": \"insert\"\n                   } \n                 }\n               ])\n\n            {+adf+} writes the following data to two collections named \n            ``X`` and ``Y``:\n\n            .. tabs:: \n\n               .. tab:: Collection X\n                  :tabid: X \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "                     :copyable: false \n\n                     {\n                       \"_id\" : 1,\n                       \"state\" : \"FL\"\n                     }\n\n               .. tab:: Collection Y\n                  :tabid: Y \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "                     :copyable: false \n\n                     {\n                       \"_id\" : 1,\n                       \"state\" : \"NJ\"\n                     },\n                     {\n                       \"_id\" : 2,\n                       \"state\" : \"TX\"\n                     }\n\n            {+adf+} then merges documents from collection ``Y`` into \n            collection ``X``. For ``whenMatched: keepExisting`` option \n            in the pipeline, {+adf+} keeps the existing document with \n            ``_id: 1`` in collection ``X``. Therefore, the result of \n            the pipeline with duplicates contains the following \n            documents:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "               :copyable: false \n\n               {\n                 \"_id\" : 1,\n                 \"state\" : \"FL\"\n               },\n               {\n                 \"_id\" : 2,\n                 \"state\" : \"TX\"\n               }\n\n            {+adf+} then merges these documents into the target \n            collection on the specified |service| cluster.\n\n         .. tab:: replace \n            :tabid: replace\n\n            Suppose you run the following pipeline on the documents \n            listed above:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "               :copyable: false\n               :emphasize-lines: 18\n\n               db.s3coll.aggregate([\n                 {\n                   \"$sort\": {\n                     \"_id\": 1,\n                     \"state\": 1,\n                   } \n                 },\n                 { \n                   \"$merge\": {\n                     \"into\": {\n                       \"atlas\": {\n                         \"clusterName\": \"clustername\",\n                         \"db\": \"clusterdb\",\n                         \"coll\": \"clustercoll\"\n                       }\n                     },\n                     \"on\": \"_id\",\n                     \"whenMatched\": \"replace\",\n                     \"whenNotMatched\": \"insert\"\n                   } \n                 }\n               ])\n\n            {+adf+} writes the following data to two collections named \n            ``X`` and ``Y``:\n\n            .. tabs:: \n\n               .. tab:: Collection X\n                  :tabid: X \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "                     :copyable: false \n\n                     {\n                       \"_id\" : 1,\n                       \"state\" : \"FL\"\n                     }\n\n               .. tab:: Collection Y\n                  :tabid: Y \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "                     :copyable: false \n\n                     {\n                       \"_id\" : 1,\n                       \"state\" : \"NJ\"\n                     },\n                     {\n                       \"_id\" : 2,\n                       \"state\" : \"TX\"\n                     }\n\n            {+adf+} merges documents from collection ``Y`` into \n            collection ``X``. For ``whenMatched: replace`` option in \n            the pipeline, {+adf+} replaces the document with ``_id: 1`` \n            in collection ``X`` with the document with ``_id: 1`` in \n            collection ``Y``. Therefore, the result of the pipeline \n            with duplicates contains the following documents:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "               :copyable: false \n\n               {\n                 \"_id\" : 1,\n                 \"state\" : \"NJ\"\n               },\n               {\n                 \"_id\" : 2,\n                 \"state\" : \"TX\"\n               }\n\n            {+adf+} then merges these documents into the target \n            collection on the specified |service| cluster.\n\n#. Avoid using the ``whenNotMatched: discard`` option. \n\n   .. example:: \n\n      This example shows how {+adf+} resolves duplicates when \n      ``whenNotMatched`` option is set to ``discard`` using the \n      following documents: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n           \"_id\" : 1,\n           \"state\" : \"AZ\"\n         },\n         {\n           \"_id\" : 1,\n           \"state\" : \"CA\"\n         },\n         {\n           \"_id\" : 2,\n           \"state\" : \"NJ\"\n         },\n         {\n           \"_id\" : 3,\n           \"state\" : \"NY\"\n         },\n         {\n           \"_id\" : 4,\n           \"state\" : \"TX\"\n         }\n         \n      Suppose you run the following pipeline on the documents listed \n      above:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "         :copyable: false   \n\n         db.archivecoll.aggregate([\n           {\n             \"$sort\": {\n               \"_id\": 1,\n               \"state\": 1,\n             } \n           },\n           { \n             \"$merge\": {\n               \"into\": {\n                 \"atlas\": {\n                   \"clusterName\": \"clustername\",\n                   \"db\": \"clusterdb\",\n                   \"coll\": \"clustercoll\"\n                 }\n               },\n               \"on\": \"_id\",\n               \"whenMatched\": \"replace\",\n               \"whenNotMatched\": \"discard\"\n             } \n           }\n         ])\n\n      {+adf+} writes the following data to two collections named ``X`` \n      and ``Y``:\n\n      .. tabs:: \n\n         .. tab:: Collection X\n            :tabid: X\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "               :copyable: false \n\n               {\n                 \"_id\" : 1,\n                 \"state\" : \"AZ\"\t// gets replaced\n               }\n\n         .. tab:: Collection Y\n            :tabid: Y\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "               :copyable: false \n\n               {\n                 \"_id\" : 1,\n                 \"state\" : \"CA\"\t\n               }\n               {\n                 \"_id\" : 2,\n                 \"state\" : \"NJ\"\t// gets discarded\n               }\n               {\n                 \"_id\" : 3,\n                 \"state\" : \"NY\"\t// gets discarded\n               }\n               {\n                 \"_id\" : 4,\n                 \"state\" : \"TX\"\t// gets discarded\n               }\n\n      {+adf+} merges documents from collection ``Y`` into collection \n      ``X``. For ``whenMatched: replace`` option in the pipeline, \n      {+adf+} replaces the document with ``_id: 1`` in collection ``X`` \n      with the document with ``_id: 1`` in collection ``Y``. For \n      ``whenNotMatched: discard`` option in the pipeline, {+adf+} \n      discards documents in collection ``Y`` that do not match a \n      document in collection ``X``. Therefore, the result of the \n      pipeline with duplicates contains only the following document: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "         :copyable: false \n\n         {\n           \"_id\" : 1,\n           \"state\" : \"CA\"\n         }\n\n      {+adf+} then merges this document into the target collection on \n      the specified |service| cluster.\n\n.. _adf-merge-egs: \n\nExample \n-------\n\nMerge Data Using ``$merge`` \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example :pipeline:`$merge` syntax writes the results to a \n``sampleDB.mySampleData`` collection on the |service| cluster named \n``myTestCluster``. The example doesn't specify a project ID; the \n:pipeline:`$merge` stage uses the ID of the project that contains your \n{+fdi+}.\n\n.. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "      :linenos:\n\n      db.mySampleData.aggregate(\n        [\n          {\n            \"$merge\": {\n              \"into\": {\n                \"atlas\": {\n                  \"clusterName\": \"myTestCluster\",\n                  \"db\": \"sampleDB\",\n                  \"coll\": \"mySampleData\"\n                }\n              },\n              ...\n            }\n          }\n        ]\n      )\n\nRun ``$merge`` in the background\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example :pipeline:`$merge` syntax writes the results to a \n``sampleDB.mySampleData`` collection on the |service| cluster named \n``myTestCluster`` in the background. The example doesn't specify a \nproject ID; the :pipeline:`$merge` stage uses the ID of the project \nthat contains your {+fdi+}.\n\n.. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "      :linenos:\n\n      db.mySampleData.aggregate(\n        [\n          {\n            \"$merge\": {\n              \"into\": {\n                \"atlas\": {\n                  \"clusterName\": \"myTestCluster\",\n                  \"db\": \"sampleDB\",\n                  \"coll\": \"mySampleData\"\n                }\n              },\n              ...\n            }\n          }\n        ], \n        { \"background\" : true }\n      )\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/merge.txt"
  },
  {
    "code": "         :linenos:\n\n         {\n           \"$out\": {\n             \"s3\": {\n               \"bucket\": \"<bucket-name>\",\n               \"region\": \"<aws-region>\",\n               \"filename\": \"<file-name>\",\n               \"format\": {\n                 \"name\": \"<file-format>\",\n                 \"maxFileSize\": \"<file-size>\",\n                 \"maxRowGroupSize\": \"<row-group-size>\",\n                 \"columnCompression\": \"<compression-type>\"\n               },\n               \"errorMode\": \"stop\"|\"continue\"\n             }\n           }\n         }\n\n   .. tab:: Azure\n      :tabid: azure\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "         :linenos:\n\n         {\n           \"$out\": {\n             \"azure\": {\n               \"serviceURL\": \"<storage-account-url>\", \n               \"containerName\": \"<container-name>\", \n               \"region\": \"<azure-region>\",\n               \"filename\": \"<file-name>\", \n               \"format\": {\n                 \"name\": \"<file-format>\",\n                 \"maxFileSize\": \"<file-size>\",\n                 \"maxRowGroupSize\": \"<row-group-size>\",\n                 \"columnCompression\": \"<compression-type>\"\n               },\n               \"errorMode\": \"stop\"|\"continue\"\n             }\n           }\n         }\n\n   .. tab:: Atlas Cluster\n      :tabid: atlas\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "         :linenos:\n\n         {\n           \"$out\": {\n             \"atlas\": {\n               \"projectId\": \"<atlas-project-ID>\",\n               \"clusterName\": \"<atlas-cluster-name>\",\n               \"db\": \"<atlas-database-name>\",\n               \"coll\": \"<atlas-collection-name>\"\n             }\n           }\n         }\n\n.. _adf-out-stage-fields:\n\nFields\n------\n\n.. tabs::\n\n   .. tab:: S3\n      :tabid: s3\n\n      .. list-table::\n         :header-rows: 1\n         :widths: 10 10 70 10\n\n         * - Field\n           - Type\n           - Description\n           - Necessity\n\n         * - ``s3``\n           - object\n           - Location to write the documents from the aggregation\n             pipeline.\n           - Required\n\n         * - ``s3.bucket``\n           - string\n           - Name of the |s3| bucket to write the documents from\n             the aggregation pipeline to.\n\n             .. important::\n\n                The generated call to |s3| inserts a ``/`` between\n                ``s3.bucket`` and ``s3.filename``. Don't append a ``/``\n                to your ``s3.bucket`` string. \n\n                For example, if you set ``s3.bucket`` to  ``myBucket``\n                and ``s3.filename`` to ``myPath/myData``, \n                {+adf+} writes the output location as follows:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "                   :copyable: false\n\n                   s3://myBucket/myPath/myData.[n].json\n                  \n\n           - Required\n\n         * - ``s3.region``\n           - string\n           - Name of the |aws| region in which the bucket is hosted. If \n             omitted, uses the {+fdi+} :ref:`configuration \n             <config-adf>` to determine the region where the specified \n             ``s3.bucket`` is hosted.\n           - Optional\n\n         * - ``s3.filename``\n           - string\n           - Name of the file to write the documents from the\n             aggregation pipeline to. Filename can be constant or\n             :ref:`created dynamically <adf-out-stage-egs>` from the\n             fields in the documents that reach the |out| stage. Any\n             filename expression you provide must evaluate to a\n             ``string`` data type. If there are any files on |s3| \n             with the same name and path as the newly generated files, \n             |out| overwrites the existing files with the newly \n             generated files.\n\n             .. important::\n\n                The generated call to |s3| inserts a ``/`` between\n                ``s3.bucket`` and ``s3.filename``. Don't prepend a ``/`` \n                to your ``s3.filename`` string. \n                \n                For example, if you set ``s3.filename`` to  ``myPath/myData``\n                and ``s3.bucket`` to ``myBucket``, \n                {+adf+} writes the output location as follows:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "                   :copyable: false\n\n                   s3://myBucket/myPath/myData.[n].json\n\n           - Required\n\n         * - ``s3.format``\n           - object\n           - Details of the file in |s3|.\n           - Required\n\n         * - | ``s3``\n             | ``.format``\n             | ``.name``\n           - enum\n           - Format of the file in |s3|. Value can be one of the\n             following:\n\n             - ``bson``\n             - ``bson.gz``\n             - ``csv``\n             - ``csv.gz``\n             - ``json`` :sup:`1`\n             - ``json.gz`` :sup:`1`\n             - ``parquet``\n             - ``tsv``\n             - ``tsv.gz``\n\n             :sup:`1` For this format, |out| writes data in \n             :manual:`MongoDB Extended JSON </reference/mongodb-extended-json/>` format.\n\n             To learn more, see :ref:`Limitations <adf-out-stage-limitations>`.\n\n           - Required\n\n         * - | ``s3``\n             | ``.format``\n             | ``.maxFileSize``\n           - bytes\n           - Maximum size of the file in |s3|. When the file size limit\n             for the current file is reached, a new file is created in\n             |s3|. The first file appends a ``1`` before the filename\n             extension. For each subsequent file, {+adf+} increments\n             the appended number by one.\n\n             For example, ``<filename>.1.<fileformat>``, and \n             ``<filename>.2.<fileformat>``.\n\n             If a document is larger than the ``maxFileSize``, {+adf+}\n             writes the document to its own file. The following\n             suffixes are supported:\n\n             .. list-table::\n                :widths: 30 70\n\n                * - Base 10: scaling in multiples of 1000\n                  - - ``B``\n                    - ``KB``\n                    - ``MB``\n                    - ``GB``\n                    - ``TB``\n                    - ``PB``\n                * - Base 2: scaling in multiples of 1024\n                  - - ``KiB``\n                    - ``MiB``\n                    - ``GiB``\n                    - ``TiB``\n                    - ``PiB``\n\n             If omitted, defaults to ``200MiB``.\n\n           - Optional\n\n         * - | ``s3``\n             | ``.format``\n             | ``.maxRowGroupSize``\n           - string \n           - Supported for Parquet file format only.\n\n             Maximum row group size to use when writing to Parquet \n             file. If omitted, defaults to ``128 MiB`` or the value of \n             the ``s3.format.maxFileSize``, whichever is smaller. The \n             maximum allowed value is ``1 GB``.\n           - Optional\n\n         * - | ``s3``\n             | ``.format``\n             | ``.columnCompression``\n           - string\n           - Supported for Parquet file format only.\n\n             Compression type to apply for compressing data inside a \n             Parquet file when formatting the Parquet file. Valid \n             values are: \n\n             - ``gzip``\n             - ``snappy``\n             - ``uncompressed``\n\n             If omitted, defaults to ``snappy``. \n             \n             To learn more, see :ref:`adf-data-formats`.\n\n           - Optional\n\n         * - ``errorMode``\n           - enum\n           - Specifies how {+adf+} should proceed if there are errors \n             when processing a document. For example, if {+adf+} \n             encounters an array in a document when {+adf+} is writing \n             to a CSV file, {+adf+} uses this value to determine \n             whether or not to skip the document and process other \n             documents. Valid values are: \n\n             - ``continue`` to skip the document and continue \n               processing the remaining documents. {+adf+} also writes \n               the document that caused the error to an error file. \n               \n               To learn more see, :ref:`Errors <adf-out-stage-errors>`.\n                \n             - ``stop`` to stop at that point and not process \n               the remaining documents.\n\n             If omitted, defaults to ``continue``.\n\n           - Optional\n\n   .. tab:: Azure\n      :tabid: azure\n\n      .. list-table::\n         :header-rows: 1\n         :widths: 10 10 70 10\n\n         * - Field\n           - Type\n           - Description\n           - Necessity\n\n         * - ``azure``\n           - object\n           - Location to write the documents from the aggregation\n             pipeline.\n           - Required\n\n         * - ``azure.serviceURL``\n           - string\n           - |url| of the |azure| storage account in which to\n             write documents from the aggregation pipeline.\n           - Required\n\n         * - ``azure.containerName``\n           - string\n           - Name of the |azure| Blob Storage container in which to\n             write documents from the aggregation pipeline.\n           - Required\n\n         * - ``azure.region``\n           - string\n           - Name of the |azure| region which hosts the Blob Storage container.\n           - Required\n\n         * - ``azure.filename``\n           - string\n           - Name of the file in which to\n             write documents from the aggregation pipeline.\n\n             Accepts constant value, or values that evaluate to ``string``\n             :ref:`created dynamically <adf-out-stage-egs>` from the\n             fields in the documents that reach the |out| stage. \n             If there are any files in |azure| Blob Storage\n             with the same name and path as the newly generated files, \n             |out| overwrites the existing files with the newly \n             generated files.\n           - Required\n\n         * - ``azure.format``\n           - object\n           - Details of the file in |azure| Blob Storage.\n           - Required\n\n         * - | ``azure``\n             | ``.format``\n             | ``.name``\n           - enum\n           - Format of the file in |azure| Blob Storage. Value can be one of the\n             following:\n\n             - ``bson``\n             - ``bson.gz``\n             - ``csv``\n             - ``csv.gz``\n             - ``json`` :sup:`1`\n             - ``json.gz`` :sup:`1`\n             - ``parquet``\n             - ``tsv``\n             - ``tsv.gz``\n\n             :sup:`1` For this format, |out| writes data in \n             :manual:`MongoDB Extended JSON </reference/mongodb-extended-json/>` format.\n\n             To learn more, see :ref:`Limitations <adf-out-stage-limitations>`.\n\n           - Required\n\n         * - | ``azure``\n             | ``.format``\n             | ``.maxFileSize``\n           - bytes\n           - Maximum size of the file in |azure| Blob Storage. \n           \n             When the file size limit\n             for the current file is reached, |out| automatically \n             creates a new file. The first file appends a ``1`` after its name. \n             For each subsequent file, {+adf+} increments the appended number by one.\n\n             For example, ``<filename>.1.<fileformat>``, and \n             ``<filename>.2.<fileformat>``.\n\n             If a document is larger than the ``maxFileSize``, {+adf+}\n             writes the document to its own file. The following\n             suffixes are supported:\n\n             .. list-table::\n                :widths: 30 70\n\n                * - Base 10: scaling in multiples of 1000\n                  - - ``B``\n                    - ``KB``\n                    - ``MB``\n                    - ``GB``\n                    - ``TB``\n                    - ``PB``\n                * - Base 2: scaling in multiples of 1024\n                  - - ``KiB``\n                    - ``MiB``\n                    - ``GiB``\n                    - ``TiB``\n                    - ``PiB``\n\n             If omitted, defaults to ``200MiB``.\n\n           - Optional\n\n         * - | ``azure``\n             | ``.format``\n             | ``.maxRowGroupSize``\n           - string \n           - Supported for Parquet file format only.\n\n             Maximum row group size to use when writing to Parquet \n             file. If omitted, defaults to ``128 MiB`` or the value of \n             the ``azure.format.maxFileSize``, whichever is smaller. The \n             maximum allowed value is ``1 GB``.\n           - Optional\n\n         * - | ``azure``\n             | ``.format``\n             | ``.columnCompression``\n           - string\n           - Supported for Parquet file format only.\n\n             Compression type to apply for compressing data inside a \n             Parquet file when formatting the Parquet file. Valid \n             values are: \n\n             - ``gzip``\n             - ``snappy``\n             - ``uncompressed``\n\n             If omitted, defaults to ``snappy``. \n             \n             To learn more, see :ref:`adf-data-formats`.\n\n           - Optional\n\n         * - ``errorMode``\n           - enum\n           - Specifies how {+adf+} should proceed when it encounters an error\n             while processing a document. Valid values are: \n\n             - ``continue`` to skip the document and continue \n               processing the remaining documents. {+adf+} records the error\n               in an error file.\n                \n             - ``stop`` to stop without processing\n               the remaining documents. {+adf+} records the error in an\n               error file.\n\n             If omitted, defaults to ``continue``.\n\n             To learn more, see :ref:`Errors <adf-out-stage-errors>`.\n\n           - Optional\n\n   .. tab:: Atlas Cluster\n      :tabid: atlas\n\n      .. list-table::\n         :header-rows: 1\n         :widths: 10 10 70 10\n\n         * - Field\n           - Type\n           - Description\n           - Necessity\n\n         * - ``atlas``\n           - object\n           - Location to write the documents from the aggregation\n             pipeline.\n           - Required\n\n         * - ``clusterName``\n           - string\n           - Name of the |service| cluster.\n           - Required\n\n         * - ``coll``\n           - string\n           - Name of the collection on the |service| cluster.\n           - Required\n\n         * - ``db``\n           - string\n           - Name of the database on the |service| cluster that contains\n             the collection.\n           - Required\n\n         * - ``projectId``\n           - string\n           - Unique identifier of the project that contains the\n             |service| cluster. The project ID must be the ID of the\n             project that contains your {+fdi+}. If omitted, defaults to\n             the ID of the project that contains your {+fdi+}.\n           - Optional\n\n.. _adf-out-stage-options:\n\nOptions \n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 60 10\n\n   * - Option\n     - Type\n     - Description \n     - Necessity\n\n   * - ``background``\n     - boolean\n     - Flag to run aggregation operations in the background. If \n       omitted, defaults to ``false``. When set to ``true``, {+adf+} \n       runs the queries in the background. \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "          :copyable: false \n\n          { \"background\" : true }\n       \n       Use this option if you want to submit other new queries without \n       waiting for currently running queries to complete or disconnect \n       your {+fdi+} connection while the queries continue to run in the \n       background. \n     \n     - Optional\n\n.. _adf-out-stage-egs:\n\nExamples\n--------\n\n.. tabs::\n\n   .. tab:: S3\n      :tabid: s3\n\n      **Create a Filename**\n\n      The following examples show |out| syntaxes for dynamically\n      creating a filename from a constant string or from the fields of\n      the same or different data types in the documents that reach the\n      |out| stage.\n\n      Simple String Example\n      ~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 1 GiB of data as compressed |bson| files to\n         an |s3| bucket named ``my-s3-bucket``. \n\n         Using the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"s3\": {\n                  \"bucket\": \"my-s3-bucket\",\n                  \"filename\": \"big_box_store/\",\n                  \"format\": {\n                    \"name\": \"bson.gz\"\n                  }\n                }\n              }\n            }\n\n         The ``s3.region`` is omitted and so, {+adf+} determines the \n         region where the bucket named ``my-s3-bucket`` is hosted from \n         the storage configuration. |out| writes five compressed |bson| \n         files:\n\n         1. The first 200 MiB of data to a file that |out| names\n            ``big_box_store/1.bson.gz``.\n\n            - The value of ``s3.filename`` serves as a constant in\n              each filename. This value doesn't depend upon any\n              document field or value.\n\n            - Your ``s3.filename`` ends with a delimiter, so {+adf+}\n              appends the counter after the constant.\n\n            - If it didn't end with a delimiter, {+adf+} would have\n              added a ``.`` between the constant and the counter,\n              like ``big_box_store.1.bson.gz``\n\n            - Because you didn't change the maximum file size using\n              ``s3.format.maxFileSize``, {+adf+} uses the default\n              value of 200 MiB.\n\n         2. The second 200 MiB of data to a new file that |out| names\n            ``big_box_store/2.bson.gz``.\n\n         3. Three more files that |out| names\n            ``big_box_store/3.bson.gz`` through\n            ``big_box_store/5.bson.gz``.\n\n      Single Field from Documents\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 90 MiB of data to |json| files to an |s3|\n         bucket named ``my-s3-bucket``.\n\n         Using the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"s3\": {\n                  \"bucket\": \"my-s3-bucket\",\n                  \"region\": \"us-east-1\",\n                  \"filename\": {\"$toString\": \"$saleDate\"},\n                  \"format\": {\n                    \"name\": \"json\",\n                    \"maxFileSize\": \"100MiB\"\n                  }\n                }\n              }\n            }\n\n         |out| writes 90 MiB of data to |json| files in the root of the\n         bucket. Each |json| file contains all of the documents with the\n         same ``saleDate`` value. |out| names each file using the\n         documents' ``saleDate`` value converted to a string.\n\n      Multiple Fields from Documents\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 176 MiB of data as |bson| files to an |s3|\n         bucket named ``my-s3-bucket``.\n\n         Using the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"s3\": {\n                  \"bucket\": \"my-s3-bucket\",\n                  \"region\": \"us-east-1\",\n                  \"filename\": {\n                    \"$concat\": [\n                      \"persons/\",\n                      \"$name\", \"/\",\n                      \"$uniqueId\", \"/\"\n                    ]\n                  },\n                  \"format\": {\n                    \"name\": \"bson\",\n                    \"maxFileSize\": \"200MiB\"\n                  }\n                }\n              }\n            }\n\n         |out| writes 176 MiB of data to |bson| files. To name each\n         file, |out| concatenates:\n\n         - A constant string ``persons/`` and, from the documents:\n\n           - The string value of the ``name`` field,\n           - A forward slash (``/``), \n           - The string value of the ``uniqueId`` field, and\n           - A forward slash (``/``).\n\n         Each |bson| file contains all of the documents with the same\n         ``name`` and ``uniqueId`` values. |out| names each file using\n         the documents' ``name`` and ``uniqueId`` values.\n\n\n      Multiple Types of Fields from Documents\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 154 MiB of data as compressed |json| files\n         to an |s3| bucket named ``my-s3-bucket``.\n\n         Consider the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"s3\": {\n                  \"bucket\": \"my-s3-bucket\",\n                  \"region\": \"us-east-1\",\n                  \"filename\": {\n                    \"$concat\": [\n                      \"big-box-store/\",\n                      {\n                        \"$toString\": \"$storeNumber\"\n                      }, \"/\",\n                      {\n                        \"$toString\": \"$saleDate\"\n                      }, \"/\",\n                      \"$partId\", \"/\"\n                    ]\n                  },\n                  \"format\": {\n                    \"name\": \"json.gz\",\n                    \"maxFileSize\": \"200MiB\"\n                  }\n                }\n              }\n            }\n\n         |out| writes 154 MiB of data to compressed |json| files, where\n         each file contains all documents with the same \n         ``storeNumber``, ``saleDate``, and ``partId`` values.  To \n         name each file, |out| concatenates:\n\n         - A constant string value of ``big-box-store/``,\n         - A string value of a unique store number in the\n           ``storeNumber`` field,\n         - A forward slash (``/``),\n         - A string value of the date from the ``saleDate`` field, \n         - A forward slash (``/``), \n         - A string value of part ID from the ``partId`` field, and \n         - A forward slash (``/``).\n\n   .. tab:: Azure\n      :tabid: azure\n\n      **Create a Filename**\n\n      The following examples show |out| syntaxes for dynamically\n      creating a filename from a constant string or from the fields of\n      the same or different data types in the documents that reach the\n      |out| stage.\n\n      Simple String Example\n      ~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 1 GiB of data as compressed |bson| files to\n         an |azure| storage account ``mystorageaccount`` and \n         container named ``my-container``. \n\n         Using the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"azure\": {\n                  \"serviceURL\": \"http://mystorageaccount.blob.core.windows.net/\",\n                  \"container\": \"my-container\",\n                  \"filename\": \"big_box_store/\",\n                  \"format\": {\n                    \"name\": \"bson.gz\"\n                  }\n                }\n              }\n            }\n\n         The ``azure.region`` is omitted and so {+adf+} determines the \n         region where the container named ``my-container`` is hosted from \n         the storage configuration. |out| writes five compressed |bson| \n         files:\n\n         1. The first 200 MiB of data to a file that |out| names\n            ``big_box_store/1.bson.gz``.\n\n            - The value of ``azure.filename`` serves as a constant in\n              each filename. This value doesn't depend upon any\n              document field or value.\n\n            - Your ``azure.filename`` ends with a delimiter, so {+adf+}\n              appends the counter after the constant.\n\n            - If it didn't end with a delimiter, {+adf+} would have\n              added a ``.`` between the constant and the counter,\n              like ``big_box_store.1.bson.gz``\n\n            - Because you didn't change the maximum file size using\n              ``azure.format.maxFileSize``, {+adf+} uses the default\n              value of 200 MiB.\n\n         2. The second 200 MiB of data to a new file that |out| names\n            ``big_box_store/2.bson.gz``.\n\n         3. Three more files that |out| names\n            ``big_box_store/3.bson.gz`` through\n            ``big_box_store/5.bson.gz``.\n\n      Single Field from Documents\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 90 MiB of data to |json| files to an |azure| Blob Storage\n         container named ``my-container``.\n\n         Using the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"azure\": {\n                  \"serviceURL\": \"http://mystorageaccount.blob.core.windows.net/\",\n                  \"container\": \"my-container\",\n                  \"region\": \"eastus2\",\n                  \"filename\": {\"$toString\": \"$saleDate\"},\n                  \"format\": {\n                    \"name\": \"json\",\n                    \"maxFileSize\": \"100MiB\"\n                  }\n                }\n              }\n            }\n\n         |out| writes 90 MiB of data to |json| files in the root of the\n         container. Each |json| file contains all of the documents with the\n         same ``saleDate`` value. |out| names each file using the\n         documents' ``saleDate`` value converted to a string.\n\n      Multiple Fields from Documents\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 176 MiB of data as |bson| files to an |azure| Blob Storage\n         container named ``my-container``.\n\n         Using the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"azure\": {\n                  \"serviceURL\": \"http://mystorageaccount.blob.core.windows.net/\",\n                  \"container\": \"my-container\",\n                  \"region\": \"eastus2\",\n                  \"filename\": {\n                    \"$concat\": [\n                      \"persons/\",\n                      \"$name\", \"/\",\n                      \"$uniqueId\", \"/\"\n                    ]\n                  },\n                  \"format\": {\n                    \"name\": \"bson\",\n                    \"maxFileSize\": \"200MiB\"\n                  }\n                }\n              }\n            }\n\n         |out| writes 176 MiB of data to |bson| files. To name each\n         file, |out| concatenates:\n\n         - A constant string ``persons/`` and, from the documents:\n\n           - The string value of the ``name`` field,\n           - A forward slash (``/``), \n           - The string value of the ``uniqueId`` field, and\n           - A forward slash (``/``).\n\n         Each |bson| file contains all of the documents with the same\n         ``name`` and ``uniqueId`` values. |out| names each file using\n         the documents' ``name`` and ``uniqueId`` values.\n\n\n      Multiple Types of Fields from Documents\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      .. example::\n\n         You want to write 154 MiB of data as compressed |json| files\n         to an |azure| Blob Storage container named ``my-container``.\n\n         Consider the following |out| syntax:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"azure\": {\n                  \"serviceURL\": \"http://mystorageaccount.blob.core.windows.net/\",\n                  \"container\": \"my-container\",\n                  \"region\": \"eastus2\",\n                  \"filename\": {\n                    \"$concat\": [\n                      \"big-box-store/\",\n                      {\n                        \"$toString\": \"$storeNumber\"\n                      }, \"/\",\n                      {\n                        \"$toString\": \"$saleDate\"\n                      }, \"/\",\n                      \"$partId\", \"/\"\n                    ]\n                  },\n                  \"format\": {\n                    \"name\": \"json.gz\",\n                    \"maxFileSize\": \"200MiB\"\n                  }\n                }\n              }\n            }\n\n         |out| writes 154 MiB of data to compressed |json| files, where\n         each file contains all documents with the same \n         ``storeNumber``, ``saleDate``, and ``partId`` values.  To \n         name each file, |out| concatenates:\n\n         - A constant string value of ``big-box-store/``,\n         - A string value of a unique store number in the\n           ``storeNumber`` field,\n         - A forward slash (``/``),\n         - A string value of the date from the ``saleDate`` field, \n         - A forward slash (``/``), \n         - A string value of part ID from the ``partId`` field, and \n         - A forward slash (``/``).\n\n   .. tab:: Atlas Cluster\n      :tabid: atlas\n\n      Write to Collection on Atlas Cluster\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      This |out| syntax sends the aggregated data to a \n      ``sampleDB.mySampleData`` collection in the |service| cluster \n      named ``myTestCluster``. The syntax doesn't specify a project ID; \n      |out| uses the ID of the project that contains your {+fdi+}.\n\n      .. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :linenos:\n\n            {\n              \"$out\": {\n                \"atlas\": {\n                  \"clusterName\": \"myTestCluster\",\n                  \"db\": \"sampleDB\",\n                  \"coll\": \"mySampleData\"\n                }\n              }\n            }\n\nRun a Query in the background\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe following example shows |out| syntax for running an aggregation \npipeline that ends with the |out| stage in the background.\n\n.. tabs::\n   :hidden:\n\n   .. tab:: S3\n      :tabid: s3\n\n      .. example::\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false\n            :linenos:\n\n            {\n              \"$out\": {\n                \"s3\": {\n                  \"bucket\": \"my-s3-bucket\",\n                  \"region\": \"us-east-1\",\n                  \"filename\": {\n                    \"$concat\": [\n                      \"big-box-store/\",\n                      {\n                        \"$convert\": {\n                          \"input\": \"$year\",\n                          \"to\": \"string\",\n                          \"onNull\": \"\"\n                        }\n                      }, \"/\"\n                    ]\n                  },\n                  \"format\": {\n                    \"name\": \"json.gz\",\n                    \"maxFileSize\": \"200MiB\"\n                  }\n                }\n              }\n            }\n\n      Number of Unique Fields\n      ~~~~~~~~~~~~~~~~~~~~~~~\n\n      When writing to :ref:`CSV <adf-csv-tsv-data>`,\n      :ref:`TSV <adf-csv-tsv-data>`, or :ref:`Parquet <adf-parquet-data>`\n      file format, {+adf+} doesn't support more than 32000 unique fields.\n      \n      CSV and TSV File Format\n      ~~~~~~~~~~~~~~~~~~~~~~~\n\n      When writing to CSV or TSV format, {+adf+} does not support the \n      following data types in the documents: \n\n      - Arrays \n      - DB pointer \n      - JavaScript \n      - JavaScript code with scope\n      - Minimum or maximum key data type\n\n      In a CSV file, {+adf+} represents nested documents using the dot \n      (``.``) notation. For example, {+adf+} writes \n      ``{ x: { a: 1, b: 2 } }`` as the following in the CSV file: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "         :copyable: false \n\n         x.a,x.b \n         1,2\n      \n      {+adf+} represents all other data types as strings. Therefore, \n      the data types in MongoDB read back from the CSV file may not be \n      the same as the data types in the original |bson| documents from \n      which the data types were written.\n\n      Parquet File Format\n      ~~~~~~~~~~~~~~~~~~~\n\n      For Parquet, {+adf+} reads back fields with null or undefined \n      values as missing because Parquet doesn't distinguish between \n      null or undefined values and missing values. Although {+adf+} \n      supports all data types, for |bson| data types that do not have \n      a direct equivalent in Parquet, such as JavaScript, regular \n      expression, etc., it:\n             \n      - Chooses a representation that allows \n        the resulting Parquet file to be read back using a non-MongoDB \n        tool.\n      - Stores a MongoDB schema in the Parquet file's key/value \n        metadata so that {+adf+} can reconstruct the original |bson| \n        document with the correct data types if the Parquet file is \n        read back by {+adf+}.\n\n      .. example:: \n\n         Consider the following |bson| documents:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false \n\n            {\n              \"clientId\": 102, \n              \"phoneNumbers\": [\"123-4567\", \"234-5678\"], \n              \"clientInfo\": {\n                \"name\": \"Taylor\",\n                \"occupation\": \"teacher\"\n              }\n            }\n            {\n              \"clientId\": \"237\", \n              \"phoneNumbers\" [\"345-6789\"]\n              \"clientInfo\": {\n                \"name\": \"Jordan\"\n              }\n            }\n\n         If you write the preceding |bson| documents to Parquet format using\n         :ref:`$out to S3 <adf-out-stage>`, the Parquet file schema for your\n         |bson| documents would look similar to the following: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false \n\n            message root {\n              optional group clientId {\n                optional int32 int;\n                optional binary string; (STRING)\n              }\n              optional group phoneNumbers (LIST) {\n                repeated group list {\n                  optional binary element (STRING);\n                }\n              }\n              optional group clientInfo {\n                optional binary name (STRING);\n                optional binary occupation (STRING);\n              }\n            }\n\n         Your Parquet data on |s3| would look similar to the following: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false \n            :linenos:\n\n            clientId:\n            .int = 102\n            phoneNumbers:\n            .list:\n            ..element = \"123-4567\"\n            .list:\n            ..element = \"234-5678\"\n            clientInfo:\n            .name = \"Taylor\"\n            .occupation = \"teacher\"\n\n            clientId:\n            .string = \"237\"\n            phoneNumbers:\n            .list:\n            ..element = \"345-6789\"\n            clientInfo:\n            .name = \"Jordan\"\n\n         The preceding example demonstrates how {+adf+} handles complex data\n         types: \n\n         - {+adf+} maps documents at all levels to a Parquet group.\n         - {+adf+} encodes arrays using the ``LIST`` logical type and the\n           mandatory three-level list or element structure. To learn more,\n           see `Lists\n           <https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#nested-types>`__. \n         - {+adf+} maps polymorphic |bson| fields to a group of multiple single-type\n           columns because Parquet doesn't support polymorphic columns. \n           {+adf+} names the group after the |bson| field. In the preceding\n           example, {+adf+} creates a Parquet group named ``clientId`` for\n           the polymorphic field named ``clientId`` with two children named\n           after its |bson| types, ``int`` and ``string``.\n\n   .. tab:: Azure\n      :tabid: azure\n\n      String Data Type\n      ~~~~~~~~~~~~~~~~\n\n      {+adf+} interprets empty strings (``\"\"``) as ``null`` values when\n      parsing filenames. If you want {+adf+} to generate parseable\n      filenames, wrap the field references that could have ``null``\n      values using |convert| with an empty string ``onNull`` value.\n\n      .. example::\n\n         This example shows how to handle null values in the ``year``\n         field when creating a filename from the field value.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false\n            :linenos:\n\n            {\n              \"$out\": {\n                \"azure\": {\n                  \"serviceURL\": \"http://mystorageaccount.blob.core.windows.net/\",\n                  \"container\": \"my-container\",\n                  \"region\": \"eastus2\",\n                  \"filename\": {\n                    \"$concat\": [\n                      \"big-box-store/\",\n                      {\n                        \"$convert\": {\n                          \"input\": \"$year\",\n                          \"to\": \"string\",\n                          \"onNull\": \"\"\n                        }\n                      }, \"/\"\n                    ]\n                  },\n                  \"format\": {\n                    \"name\": \"json.gz\",\n                    \"maxFileSize\": \"200MiB\"\n                  }\n                }\n              }\n            }\n\n      Number of Unique Fields\n      ~~~~~~~~~~~~~~~~~~~~~~~\n\n      When writing to :ref:`CSV <adf-csv-tsv-data>`,\n      :ref:`TSV <adf-csv-tsv-data>`, or :ref:`Parquet <adf-parquet-data>`\n      file format, {+adf+} doesn't support more than 32000 unique fields.\n      \n      CSV and TSV File Format\n      ~~~~~~~~~~~~~~~~~~~~~~~\n\n      When writing to CSV or TSV format, {+adf+} does not support the \n      following data types in the documents: \n\n      - Arrays \n      - DB pointer \n      - JavaScript \n      - JavaScript code with scope\n      - Minimum or maximum key data type\n\n      In a CSV file, {+adf+} represents nested documents using the dot \n      (``.``) notation. For example, {+adf+} writes \n      ``{ x: { a: 1, b: 2 } }`` as the following in the CSV file: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "         :copyable: false \n\n         x.a,x.b \n         1,2\n      \n      {+adf+} represents all other data types as strings. Therefore, \n      the data types in MongoDB read back from the CSV file may not be \n      the same as the data types in the original |bson| documents from \n      which the data types were written.\n\n      Parquet File Format\n      ~~~~~~~~~~~~~~~~~~~\n\n      For Parquet, {+adf+} reads back fields with null or undefined \n      values as missing because Parquet doesn't distinguish between \n      null or undefined values and missing values. Although {+adf+} \n      supports all data types, for |bson| data types that do not have \n      a direct equivalent in Parquet, such as JavaScript, regular \n      expression, etc., it:\n             \n      - Chooses a representation that allows \n        the resulting Parquet file to be read back using a non-MongoDB \n        tool.\n      - Stores a MongoDB schema in the Parquet file's key/value \n        metadata so that {+adf+} can reconstruct the original |bson| \n        document with the correct data types if the Parquet file is \n        read back by {+adf+}.\n\n      .. example:: \n\n         Consider the following |bson| documents:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false \n\n            {\n              \"clientId\": 102, \n              \"phoneNumbers\": [\"123-4567\", \"234-5678\"], \n              \"clientInfo\": {\n                \"name\": \"Taylor\",\n                \"occupation\": \"teacher\"\n              }\n            }\n            {\n              \"clientId\": \"237\", \n              \"phoneNumbers\" [\"345-6789\"]\n              \"clientInfo\": {\n                \"name\": \"Jordan\"\n              }\n            }\n\n         If you write the preceding |bson| documents to Parquet format using\n         :ref:`$out to Azure <adf-out-stage>`, the Parquet file schema for your\n         |bson| documents would look similar to the following: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false \n\n            message root {\n              optional group clientId {\n                optional int32 int;\n                optional binary string (STRING);\n              }\n              optional group phoneNumbers (LIST) {\n                repeated group list {\n                  optional binary element (STRING);\n                }\n              }\n              optional group clientInfo {\n                optional binary name (STRING);\n                optional binary occupation (STRING);\n              }\n            }\n\n         Your Parquet data in |azure| Blob Storage would look similar to the following: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: false \n            :linenos:\n\n            clientId:\n            .int = 102\n            phoneNumbers:\n            .list:\n            ..element = \"123-4567\"\n            .list:\n            ..element = \"234-5678\"\n            clientInfo:\n            .name = \"Taylor\"\n            .occupation = \"teacher\"\n\n            clientId:\n            .string = \"237\"\n            phoneNumbers:\n            .list:\n            ..element = \"345-6789\"\n            clientInfo:\n            .name = \"Jordan\"\n\n         The preceding example demonstrates how {+adf+} handles complex data\n         types: \n\n         - {+adf+} maps documents at all levels to a Parquet group.\n         - {+adf+} encodes arrays using the ``LIST`` logical type and the\n           mandatory three-level list or element structure. To learn more,\n           see `Lists\n           <https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#nested-types>`__. \n         - {+adf+} maps polymorphic |bson| fields to a group of multiple single-type\n           columns because Parquet doesn't support polymorphic columns. \n           {+adf+} names the group after the |bson| field. In the preceding\n           example, {+adf+} creates a Parquet group named ``clientId`` for\n           the polymorphic field named ``clientId`` with two children named\n           after its |bson| types, ``int`` and ``string``.\n\n   .. tab:: Atlas Cluster\n      :tabid: atlas\n\n      This section applies only to |s3| buckets and |azure| Blob Storage containers\n      with read and write permissions.\n\n.. _adf-out-stage-errors:\n\nError Output\n------------\n\n.. tabs::\n\n   .. tab:: S3\n      :tabid: s3\n\n      {+adf+} uses the error handling mechanism described below for documents\n      that enter the :pipeline:`$out` stage and cannot be written for one of the following reasons:\n      \n      - The ``s3.filename`` does not evaluate to a string value. \n      - The ``s3.filename`` evaluates to a file that cannot be written to.\n      - The ``s3.format.name`` is set to ``csv``, ``tsv``, ``csv.gz``, or ``tsv.gz`` and the document passed to :pipeline:`$out`\n        contains data types that are not supported by the specified file format. For a full list of unsupported data types, see :ref:`CSV and TSV File Format <csv_and_tsv_format>`. \n\n      \n      If :pipeline:`$out` encounters one of the above errors while processing a document, {+adf+} writes to the following three special error files in the path\n      ``s3://<bucket-name>/atlas-data-lake-<correlation-id>/``: \n\n      .. list-table:: Error Files\n         :widths: 10 30\n         :header-rows: 1\n\n         * - Error File Name\n           - Description\n         * - out-error-docs/<i>.json\n           - {+adf+} writes the document that encountered an error to this file. \n             ``i`` begins with ``1`` and increments whenever the file being written to reaches the ``maxFileSize``. \n             Then, any further documents are written to the new file ``out-error-docs/<i+1>.json``. \n         * - out-error-index/<i>.json\n           - {+adf+} writes an error message to this file.\n             Each error message contains a description of the error and an index value ``n`` that begins with ``0``\n             and increments with each additional error message written to the file.        \n             ``i`` begins with ``1`` and increments whenever the file being written to reaches the ``maxFileSize``.  \n             Then, any further error messages are written to the new file ``out-error-docs/<i+1>.json``. \n         * - out-error-summary.json\n           - {+adf+} writes a single summary document for each type of error encountered during an aggregation operation to this file.\n             Each summary document contains a description of the type of error and a count of the number of documents that encountered that type of error.\n\n      .. example::\n\n         This example shows how to generate error files using :pipeline:`$out` in a {+fdi+}. \n\n         The following aggregation pipeline sorts documents in the ``analytics.customers`` sample dataset collection \n         by descending customer birthdate and attempts to write the ``_id``, ``name`` and ``accounts`` fields of the \n         youngest three customers to the file named ``youngest-customers.csv`` in the |s3| bucket named ``customer-data``.   \n        \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: true\n\n            db.customers.aggregate([ \n               { $sort: { \"birthdate\"  :  -1 } }, \n               { $unset: [ \"username\", \"address\", \"email\", \"tier_and_details\", \"birthdate\" ] }, \n               { $limit: 3 }, \n               { $out: {\n                    \"s3\": {\n                       \"bucket\": \"customer-data\", \n                       \"filename\": \"youngest-customers\",\n                       \"region\":\"us-east-2\", \n                       \"format\": {\n                         \"name\": \"csv\"\n                       }\n                    }\n                } \n             ])\n\n         Because ``accounts`` is an array field, :pipeline:`$out` encounters an error when it tries to write\n         a document to ``s3.format.name`` ``csv``. To handle these errors, {+adf+} writes to the following three error files: \n        \n         - The following output shows the first of three documents written to the ``out-error-docs/1.json`` file: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "              :copyable: false\n              :caption: s3://customer-data/atlas-data-lake-1773b3d5e2a7f3858530daf5/out-error-docs/1.json\n\n              {\n                \"_id\" : {\"$oid\":\"5ca4bbcea2dd94ee58162ba7\"},\n                \"name\": \"Marc Cain\",\n                \"accounts\": [{\"$numberInt\":\"980440\"}, {\"$numberInt\":\"626807\"}, {\"$numberInt\":\"313907\"}, {\"$numberInt\":\"218101\"}, {\"$numberInt\":\"157495\"}, {\"$numberInt\":\"736396\"}],\n              }\n        \n         - The following output shows the first of three error messages written to the ``out-error-index/1.json`` file.  \n           The ``n`` field starts at 0 and increments for each error written to the file.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "              :copyable: false\n              :caption: s3://customer-data/atlas-data-lake-1773b3d5e2a7f3858530daf5/out-error-index/1.json\n\n              { \n                \"n\" : {\"$numberInt\": \"0\"},\n                \"error\" : \"field accounts is of unsupported type array\"\n              }  \n\n         - The following output shows the error summary document written to the ``out-error-summary`` file. \n           The ``count`` field represents the number of documents passed to :pipeline:`$out` that encountered \n           an error due to the ``accounts`` array field. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "              :copyable: false\n              :caption: s3://customer-data/atlas-data-lake-1773b3d5e2a7f3858530daf5/out-error-summary.json\n\n                {\n                 \"errorType\": \"field accounts is of unsupported type array\",\n                 \"count\": {\"$numberInt\":\"3\"}\n                } \n\n   .. tab:: Azure\n      :tabid: azure\n\n      {+adf+} uses the error handling mechanism described below for documents\n      that enter the :pipeline:`$out` stage and cannot be written for one of the following reasons:\n      \n      - The ``azure.filename`` does not evaluate to a string value. \n      - The ``azure.filename`` evaluates to a file that cannot be written to.\n      - The ``azure.format.name`` is set to ``csv``, ``tsv``, ``csv.gz``, or ``tsv.gz`` and the document passed to :pipeline:`$out`\n        contains data types that are not supported by the specified file format. For a full list of unsupported data types, \n        see :ref:`CSV and TSV File Format <csv_and_tsv_format>`. \n      \n      If :pipeline:`$out` encounters one of the above errors while processing a document, \n      {+adf+} writes to the following three special error files in the path\n      ``http://<storage-account>.blob.core.windows.net/<container-name>/atlas-data-lake-<correlation-id>/``:\n\n      .. list-table:: Error Files\n        :widths: 10 30\n        :header-rows: 1\n\n        * - Error File Name\n          - Description\n        * - out-error-docs/<i>.json\n          - {+adf+} writes the document that encountered an error to this file. \n\n            ``i`` begins with ``1`` and increments whenever the file being written to reaches the ``maxFileSize``. \n            Then, any further documents are written to the new file ``out-error-docs/<i+1>.json``. \n        * - out-error-index/<i>.json\n          - {+adf+} writes an error message to this file.\n            Each error message contains a description of the error and an index value ``n`` that begins with ``0``\n            and increments with each additional error message written to the file.\n            \n            ``i`` begins with ``1`` and increments whenever the file being written to reaches the ``maxFileSize``.  \n            Then, any further error messages are written to the new file ``out-error-docs/<i+1>.json``. \n        * - out-error-summary.json\n          - {+adf+} writes a single summary document for each type of error encountered during an aggregation operation to this file.\n            Each summary document contains a description of the type of error and a count of the number of documents that encountered that type of error.\n\n\n      .. example::\n\n         This example shows how to generate error files using :pipeline:`$out` in a {+fdi+}. \n\n         The following aggregation pipeline sorts documents in the ``analytics.customers`` sample dataset collection \n         by descending customer birthdate and attempts to write the ``_id``, ``name`` and ``accounts`` fields of the \n         youngest three customers to the file named ``youngest-customers.csv`` in the |azure| Blob Storage container \n         named ``customer-data``.\n        \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "            :copyable: true\n\n            db.customers.aggregate([ \n               { $sort: { \"birthdate\"  :  -1 } }, \n               { $unset: [ \"username\", \"address\", \"email\", \"tier_and_details\", \"birthdate\" ] }, \n               { $limit: 3 }, \n               { $out: {\n                    \"azure\": {\n                       \"serviceURL\": \"https://myserviceaccount.blob.core.windows.net\"\n                       \"container\": \"customer-data\", \n                       \"filename\": \"youngest-customers\",\n                       \"region\":\"eastus2\", \n                       \"format\": {\n                         \"name\": \"csv\"\n                       }\n                    }\n                } \n             ])\n\n         Because ``accounts`` is an array field, :pipeline:`$out` encounters an error when it tries to write\n         a document to ``azure.format.name`` ``csv``. To handle these errors, {+adf+} writes to the following three error files: \n        \n         - The following output shows the first of three documents written to the ``out-error-docs/1.json`` file: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "              :copyable: false\n              :caption: http://mystorageaccount.blob.core.windows.net/customer-data/atlas-data-lake-1773b3d5e2a7f3858530daf5/out-error-docs/1.json\n\n              {\n                \"_id\" : {\"$oid\":\"5ca4bbcea2dd94ee58162ba7\"},\n                \"name\": \"Marc Cain\",\n                \"accounts\": [{\"$numberInt\":\"980440\"}, {\"$numberInt\":\"626807\"}, {\"$numberInt\":\"313907\"}, {\"$numberInt\":\"218101\"}, {\"$numberInt\":\"157495\"}, {\"$numberInt\":\"736396\"}],\n              }\n        \n         - The following output shows the first of three error messages written to the ``out-error-index/1.json`` file.  \n           The ``n`` field starts at 0 and increments for each error written to the file.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "              :copyable: false\n              :caption: http://mystorageaccount.blob.core.windows.net/customer-data/atlas-data-lake-1773b3d5e2a7f3858530daf5/out-error-index/1.json\n\n              { \n                \"n\" : {\"$numberInt\": \"0\"},\n                \"error\" : \"field accounts is of unsupported type array\"\n              }  \n\n         - The following output shows the error summary document written to the ``out-error-summary`` file. \n           The ``count`` field represents the number of documents passed to :pipeline:`$out` that encountered \n           an error due to the ``accounts`` array field. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "              :copyable: false\n              :caption: http://mystorageaccount.blob.core.windows.net/customer-data/atlas-data-lake-1773b3d5e2a7f3858530daf5/out-error-summary.json\n\n                {\n                 \"errorType\": \"field accounts is of unsupported type array\",\n                 \"count\": {\"$numberInt\":\"3\"}\n                } \n\n   .. tab:: Atlas Cluster\n      :tabid: atlas\n\n      This section applies only to |s3| buckets and |azure| Blob Storage containers\n      with read and write permissions.\n\n.. seealso::\n\n   - :manual:`$out Aggregation Stage Reference \n     </reference/operator/aggregation/out>` \n   - `Tutorial: Federated Queries and $out to S3 \n     <https://www.mongodb.com/developer/products/atlas/atlas-data-lake-federated-queries-out-aws-s3/>`__\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/pipeline/out.txt"
  },
  {
    "code": "          :copyable: false \n          :emphasize-lines: 4\n\n          {\n            \"$group\" : {\n              \"_id\" : \"$representationType\",\n              \"\" : {\n                \"$sum\" : NumberInt(1)\n              }\n            }\n          }\n\n   * - :pipeline:`$lookup`\n     - Performs a left outer join to a collection in the same database. \n       {+adf+} provides syntax for joining collections from different \n       databases also. See :ref:`adf-lookup-stage` for more information.\n\n   * - :pipeline:`$match` \n     - Filters the documents to pass only the documents that match the \n       specified conditions to the next pipeline stage. {+adf+} \n       supports :pipeline:`$match`. Note that the :ref:`partition \n       attributes <adf-s3-path-attribute-types>` for selecting \n       specific files on |s3| are only optimized for the following \n       :manual:`aggregation pipeline operators \n       </reference/operator/aggregation/>`: :manual:`$eq \n       </reference/operator/aggregation/eq/>`, :manual:`$gt \n       </reference/operator/aggregation/gt/>`, :manual:`$lt \n       </reference/operator/aggregation/lt/>`, :manual:`$gte \n       </reference/operator/aggregation/gte/>`, :manual:`$lte \n       </reference/operator/aggregation/lte/>`, :manual:`$ne \n       </reference/operator/aggregation/ne/>`, :manual:`$and \n       </reference/operator/aggregation/and/>`, :manual:`$or \n       </reference/operator/aggregation/or/>`, :manual:`$in \n       </reference/operator/aggregation/in/>`.\n\n   * - :pipeline:`$merge` \n     - Writes the results of the :manual:`aggregation pipeline \n       </core/aggregation-pipeline/>` to a specified collection. \n       {+adf+} provides alternate syntax for the required ``into`` \n       field to allow writes to an |service| cluster. To learn more, \n       see :ref:`adf-merge-stage`.\n\n   * - :pipeline:`$out`\n     - Takes the documents returned by the aggregation pipeline and \n       writes them to a specified collection. {+adf+} provides \n       alternate syntax for writing to |s3| and |service| cluster. \n\n       .. include:: /includes/data-federation/fact-out-stage-limitation.rst\n       \n       See :ref:`adf-out-stage` for more information.\n\n   * - :pipeline:`$sample` \n     - Randomly selects the specified number of documents from its \n       input. {+adf+} supports ``$sample``, but does not provide a \n       truly random sample and returns the first set of documents that \n       it finds. \n\n   * - :pipeline:`$skip` \n     - Skips over the specified number of documents that pass into the \n       stage and passes the remaining documents to the next stage in \n       the pipeline. {+adf+} supports ``$skip``, but this does not \n       reduce data scan because {+df+} accesses all partitions that \n       correspond to your query. \n\n.. _supported-operators:\n\nSupported Aggregation Pipeline Operators\n----------------------------------------\n\n{+adf+} supports all the aggregation pipeline operators.\nHowever, some operators are only available in queries on collections that are mapped to an |service| cluster data store.\nThe :manual:`geospatial query operators </reference/operator/query-geospatial/>` are only available in such queries.\nThe following :manual:`evaluation query operators </reference/operator/query-evaluation/>` are also restriced to\nqueries on collections mapped to an |service| cluster data store:\n\n.. list-table:: \n   :header-rows: 1\n   :widths: 30 70\n\n   * - Pipeline Stage \n     - Description\n\n   * - :pipeline:`$geoNear` \n     - Outputs documents in order of nearest to farthest from a \n       specified point. {+adf+} supports :pipeline:`$geoNear` in \n       queries on virtual collections that are mapped to one or more \n       |service| collections. {+adf+} doesn't support \n       :pipeline:`$geoNear` for |s3| or |http| {+fdi+} stores.\n       \n       See :ref:`query-atlas` for more information. \n\n   * - :pipeline:`$graphLookup` \n     - Performs a recursive search on a collection. {+adf+} supports \n       :pipeline:`$graphLookup` in queries on virtual collections \n       that are mapped to one |service| collection only. {+adf+} \n       doesn't support :pipeline:`$graphLookup` for:\n\n       - |s3| or |http| stores.\n       - Queries on virtual collections that are mapped to multiple \n         |service| collections.\n       \n       See :ref:`query-atlas` for more information. \n\n   * - :pipeline:`$search`\n     - Performs a full-text search on the content of the fields covered\n       by an |fts| index.\n\n   * - :manual:`$text </reference/operator/query/text/>`\n     - Performs a text search on the content of the fields indexed with \n       a text index.\n\n   * - :manual:`$where </reference/operator/query/where/>`\n     - Passes either a string containing a JavaScript expression or a \n       full JavaScript function to the query system. \n\n.. note:: \n\n   {+adf+} doesn't include a server-side JavaScript engine. So, {+adf+} \n   doesn't support operators such as :manual:`$where \n   </reference/operator/query/where/>`, :manual:`$function \n   </reference/operator/aggregation/function/>`, and \n   :manual:`$accumulator \n   </reference/operator/aggregation/accumulator/>` that require \n   server-side scripting :manual:`enabled \n   </reference/operator/query/where/#javascript-enablement>`.\n\n.. toctree::\n   :titlesonly:\n   :hidden:\n\n   $collStats </data-federation/supported-unsupported/pipeline/collstats>\n   $lookup </data-federation/supported-unsupported/pipeline/lookup-stage>\n   $merge </data-federation/supported-unsupported/pipeline/merge>\n   $out </data-federation/supported-unsupported/pipeline/out>\n   $queryHistory </data-federation/query/view-query-history/>\n   $sql </data-federation/supported-unsupported/pipeline/sql>\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/supported-aggregation.txt"
  },
  {
    "code": "          :copyable: false\n          :linenos:\n          \n          \"2006-01-02T15:04:05Z07:00\"\n          \"2006-01-02T15:04:05.000000Z07:00\"\n          \"2006-01-02\"\n          \"2006-01-02T15:04:05.000000-0700\"\n          \"2006-01-02T15:04:05-0700\"\n          \"2006-01-02T15:04Z07:00\"\n          \"2006-01-02T15:04-0700\"\n          \"2006-01-02Z07:00\"\n          \"2006-01-02-0700\"\n          \"2006102T15:04:05.000000Z07:00\"\n          \"20060102T15:04:05.000000-0700\"\n          \"20060102T15:04:05Z07:00\"\n          \"20060102T15:04:05-0700\"\n          \"20060102T15:04Z07:00\"\n          \"20060102T15:04-0700\"\n          \"20060102Z07:00\"\n          \"20060102-0700\"\n          \"20060102\"\n\n       If you wish to specify a format, which improves performance, you \n       must use special values to indicate the exact position of the \n       attributes in the date such as day (``02``), month (``01``), \n       year (``2006``), etc. To learn more about the format and the \n       values used to specify date, see `Format a time or date <https://yourbasic.org/golang/format-parse-string-time-date-example/>`__. \n       If you specify a format that isn't in a `RFC 3339 \n       <https://tools.ietf.org/html/rfc3339>`_ format, you must use \n       regex with the special values to indicate the position of the \n       date attributes. For an example, see \n       :ref:`adf-advanced-path-isodate`.\n\n   * - ``epoch_secs``\n     - Parses the filename as a Unix timestamp in seconds.\n     - filename: ``/metrics/1549046112.json``\n\n       path: ``/metrics/{startTimestamp epoch_secs}``\n\n       In the preceding example, {+df+} interprets ``startTimestamp`` as a Unix \n       timestamp in seconds.\n\n       To learn more, see :ref:`parse-padded-numeric-values`.\n\n   * - ``epoch_millis``\n     - Parses the filename as a Unix timestamp in milliseconds.\n     - filename: ``/metrics/1549046112000.json``\n\n       path: ``/metrics/{startTimestamp epoch_millis}``\n\n       In the preceding example, {+df+} interprets ``startTimestamp`` as a Unix \n       timestamp in milliseconds.\n\n       To learn more, see  :ref:`parse-padded-numeric-values`.\n\n   * - ``objectid``\n     - Parses the filename as an \n       :manual:`ObjectId </reference/method/ObjectId/>`. \n     - filename: ``/metrics/507f1f77bcf86cd799439011.json``\n\n       path: ``/metrics/{objid objectid}``\n\n       In the preceding example, {+df+} interprets ``objid`` as an \n       :manual:`ObjectId </reference/method/ObjectId/>`.\n\n   * - ``uuid`` \n     - Parses the filename as a `UUID of binary subtype \n       4 <http://bsonspec.org/spec.html>`__.\n     - filename: ``/metrics/3b241101-e2bb-4255-8caf-4136c566a962.json``\n\n       path: ``/metrics/{myUuid uuid}``\n\n       In the preceding example, {+df+} interprets ``myUuid`` as a `UUID \n       <http://bsonspec.org/spec.html>`__ of binary subtype 4.\n\n.. note:: \n\n   {+adf+} supports the `Package Syntax \n   <https://golang.org/pkg/regexp/syntax/>`__ for regular expressions \n   in the path to the filename.\n\nSupported Conversions\n---------------------\n\n{+adf+} converts the partition attributes to `BSON types \n<http://bsonspec.org/spec.html>`_ when parsing the \n:datalakeconf-aws:`path <databases.[n].collections.[n].dataSources.[n].path>` \nto the filename. Later writes of data to |s3| must use the |bson| types \nafter converting them to string. The following table shows:\n\n- The partition attribute types and the |bson| types to which {+df+} converts \n  them.\n- The |bson| data type to convert to a string for later writes to |s3|.\n\n.. list-table:: \n   :header-rows: 1\n   :widths: 20 40 40\n\n   * - Partition Attribute Type\n     - Parsed |bson| Type\n     - Source |bson| Type\n\n   * - ``string``\n     - - UTF-8 string\n       - null*\n     - - UTF-8 string\n       - null\n\n   * - ``int``\n     - - 64-bit integer\n       - null\n     - - 32-bit integer\n       - 64-bit integer\n       - null (as strings with no padding)\n\n   * - ``isodate``\n     - - UTC datetime\n       - null\n     - - UTC datetime (as an `ISO-8601 <https://tools.ietf.org/html/rfc3339>`_ \n         format string)\n       - null\n\n   * - ``objectid``\n     - - :manual:`ObjectId </reference/method/ObjectId/>`\n       - null\n     - - :manual:`ObjectId </reference/method/ObjectId/>` (as a string \n         with hex encoding)\n       - null\n\n   * - ``uuid``\n     - - |bson| `Binary data subtype 4 (UUID) <http://bsonspec.org/spec.html>`_ \n       - null\n     - - |bson| `Binary data subtype 4 (UUID) <http://bsonspec.org/spec.html>`_\n       - null\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/supported-unsupported/supported-partition-attributes.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.zips.aggregate([{$group: { _id: \"$state\", totalPop: { $sum: \"$pop\" }}}, {$match: { totalPop: { $gte: 10*1000*1000 }}}])\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  { \"_id\" : \"NY\", \"totalPop\" : 17990455 }\n                  { \"_id\" : \"FL\", \"totalPop\" : 12937926 }\n                  { \"_id\" : \"PA\", \"totalPop\" : 11881643 }\n                  { \"_id\" : \"CA\", \"totalPop\" : 29760021 }\n                  { \"_id\" : \"TX\", \"totalPop\" : 16986510 }\n                  { \"_id\" : \"IL\", \"totalPop\" : 11430602 }\n                  { \"_id\" : \"OH\", \"totalPop\" : 10847115 }\n\n            Find all trips taken by customers that were less than 70 minutes.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n               \n                  db.trips.find({\"tripduration\": { \"$lte\" : 70 }, \"usertype\": { \"$eq\": \"Customer\" }})\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                  \"_id\" : ObjectId(\"572bb8232b288919b68af7cd\"),\n\t                  \"tripduration\" : 66,\n\t                  \"start station id\" : 460,\n\t                  \"start station name\" : \"S 4 St & Wythe Ave\",\n\t                  \"end station id\" : 460,\n\t                  \"end station name\" : \"S 4 St & Wythe Ave\",\n\t                  \"bikeid\" : 23779,\n\t                  \"usertype\" : \"Customer\",\n\t                  \"birth year\" : \"\",\n\t                  \"start station location\" : {\n\t\t                  \"type\" : \"Point\",\n\t\t                  \"coordinates\" : [\n\t\t\t                  -73.96590294,\n\t\t\t                  40.71285887\n\t\t                  ]\n\t                  },\n\t                  \"end station location\" : {\n\t\t                  \"type\" : \"Point\",\n\t\t                  \"coordinates\" : [\n\t\t\t                  -73.96590294,\n\t\t\t                  40.71285887\n\t\t                  ]\n\t                  },\n\t                  \"start time\" : ISODate(\"2016-01-02T11:49:11Z\"),\n\t                  \"stop time\" : ISODate(\"2016-01-02T11:50:18Z\")\n                  }\n\n   .. tab:: Sample Data \n      :tabid: sample\n\n      Click and run the queries in the appropriate tabs for the sample datasets included in your {+fdi+}.\n\n      .. tabs:: \n\n         .. tab:: AirBnb \n            :tabid: airbnb\n\n            Before running the queries, switch to the ``airbnb`` database: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.trips.find({\"fare_amount\": { \"$lte\" : \"50\" }, \"trip_distance\": {\"$gte\": \"5\" }}).count()\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  96215\n\n            Find how many trips included four or more passengers.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.trips.find({\"passenger_count\": { \"$gte\" : 4 }}).count()\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  92846\n\n   .. tab:: Across Clusters \n      :tabid: across\n\n      If you have not done so already, :ref:`load sample data <sample-data>` into the |service| {+clusters+} you're using as data sources for your {+fdi+} before running these queries.\n\n      .. tabs::\n\n         .. tab:: AirBnb \n            :tabid: airbnb\n\n            Before running the queries, switch to the ``VirtualDatabase`` database: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.VirtualCollection.aggregate([{$match: {\"bedrooms\" : 3, \"review_scores.review_scores_rating\": {$gt: 79}}}, {$count: \"numProperties\"}])\n               \n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  { \n                     \"numProperties\" : 295 \n                  }\n\n            Find properties with ``3`` bedrooms and include only the ``name`` and ``bedrooms`` fields in the results. Sort the returned \n            documents by customer review rating. Limit the number of \n            documents returned to ``5``:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n               \n                  db.VirtualCollection.find({\"bedrooms\": 3}, {\"name\": 1, \"bedrooms\": 1}).sort({review_scores_rating: -1}).limit(5)\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  [\n                   {\n                      _id: '20045679',\n                      name: 'House Near Espinho/Santa Maria Feira',\n                      bedrooms: Long(\"3\")\n                   },\n                   {\n                     _id: '19760228',\n                     name: 'Apartment Salva - 3 bedroom in Poble Sec',\n                     bedrooms: Long(\"3\")\n                   },\n                   {\n                     _id: '19768051',\n                     name: 'Ultra Modern Pool House Maroubra',\n                     bedrooms: Long(\"3\")\n                   },\n                   {\n                     _id: '19877706',\n                     name: 'Big 3 Bedroom Garden Level Apartment Near Subway',\n                     bedrooms: Long(\"3\")\n                   },\n                   {\n                     _id: '6291063',\n                     name: 'Beautiful Tropical Oasis near beach in Kailua',\n                     bedrooms: Long(\"3\")\n                   }\n                  ]\n\n         .. tab:: Analytics \n            :tabid: analytics\n\n            Before running the queries, switch to the ``VirtualDatabase`` database: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.VirtualCollection.find({\"limit\": {$eq: 10000}, \"products\": \"Commodity\"}).limit(3)\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                 \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623a3\"),\n\t                 \"account_id\" : 775273,\n\t                 \"limit\" : 10000,\n\t                 \"products\" : [\n\t\t                 \"Brokerage\",\n\t\t                 \"Commodity\",\n\t\t                 \"InvestmentStock\"\n\t                 ]\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623a9\"),\n\t                 \"account_id\" : 324287,\n\t                 \"limit\" : 10000,\n\t                 \"products\" : [\n\t\t                 \"Commodity\",\n\t\t                 \"CurrencyService\",\n\t\t                 \"Derivatives\",\n\t\t                 \"InvestmentStock\"\n\t                 ]\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623b2\"),\n\t                 \"account_id\" : 209363,\n\t                 \"limit\" : 10000,\n\t                 \"products\" : [\n\t\t                 \"Brokerage\",\n\t\t                 \"InvestmentStock\",\n\t\t                 \"Commodity\",\n\t\t                 \"Derivatives\"\n\t                 ]\n                  }\n\n            Find customers whose birthdate is before ``1990-01-01`` and limit the number of documents returned to ``3``: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.VirtualCollection.find({\"birthdate\": {$lt: ISODate (\"1990-01-01T22:15:34.000+00:00\")}}, {\"name\": 1, \"birthdate\": 1, \"email\": 1}).limit(3)\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                 \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a6a\"),\n\t                 \"name\" : \"Katherine David\",\n\t                 \"birthdate\" : ISODate(\"1988-06-20T22:15:34Z\"),\n\t                 \"email\" : \"timothy78@hotmail.com\"\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a6c\"),\n\t                 \"name\" : \"Brad Cardenas\",\n\t                 \"birthdate\" : ISODate(\"1977-05-06T21:57:35Z\"),\n\t                 \"email\" : \"dustin37@yahoo.com\"\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a75\"),\n\t                 \"name\" : \"John Vega\",\n\t                 \"birthdate\" : ISODate(\"1983-09-21T03:22:18Z\"),\n\t                 \"email\" : \"ryanpena@yahoo.com\"\n                  }\n \n            Find transaction details for user whose account ID is ``557378`` \n            and use the :pipeline:`$sort` stage to sort on the \n            ``transactions.symbol`` field:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.VirtualCollection.aggregate([{$match: {\"account_id\": 557378}}, {$sort: {\"transactions.symbol\": -1}}])\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                 \"_id\" : ObjectId(\"5ca4bbc1a2dd94ee58161cb3\"),\n\t                 \"account_id\" : 557378,\n\t                 \"transaction_count\" : 56,\n\t                 \"bucket_start_date\" : ISODate(\"1990-06-11T00:00:00Z\"),\n\t                 \"bucket_end_date\" : ISODate(\"2016-11-06T00:00:00Z\"),\n\t                 \"transactions\" : [\n\t\t            {\n\t\t\t              \"date\" : ISODate(\"2006-10-06T00:00:00Z\"),\n\t\t\t              \"amount\" : 2561,\n\t\t\t              \"transaction_code\" : \"sell\",\n\t\t\t              \"symbol\" : \"adbe\",\n\t\t\t              \"price\" : \"38.236619210617988073863671161234378814697265625\",\n\t\t\t              \"total\" : \"97923.98179839266745716486184\"\n\t\t            },\n\t\t            {\n\t\t\t              \"date\" : ISODate(\"2000-06-19T00:00:00Z\"),\n\t\t\t              \"amount\" : 9153,\n\t\t\t              \"transaction_code\" : \"sell\",\n\t\t\t              \"symbol\" : \"adbe\",\n\t\t\t              \"price\" : \"31.12236744839008650842515635304152965545654296875\",\n\t\t\t              \"total\" : \"284863.0292551144618116154561\"\n\t\t            },\n\t\t            {\n\t\t\t              \"date\" : ISODate(\"2013-11-06T00:00:00Z\"),\n\t\t\t              \"amount\" : 18,\n\t\t\t              \"transaction_code\" : \"buy\",\n\t\t\t              \"symbol\" : \"amzn\",\n\t\t\t              \"price\" : \"356.639066345529272439307533204555511474609375\",\n\t\t\t              \"total\" : \"6419.503194219526903907535598\"\n\t               },\n                  ...\n\n         .. tab:: Mflix \n            :tabid: mflix\n \n            Before running the queries, switch to the ``VirtualDatabase`` database: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos: \n\n                  db.VirtualCollection.find({\"type\": \"movie\", \"year\": {$gt: 2010, $lt: 2015}}, {\"title\": 1, \"year\": 1}).limit(5)\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                 \"_id\" : ObjectId(\"573a13b8f29313caabd4c8c5\"),\n\t                 \"year\" : 2011,\n\t                 \"title\" : \"Thor\"\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"573a13b0f29313caabd34a3e\"),\n\t                 \"year\" : 2011,\n\t                 \"title\" : \"Cowboys & Aliens\"\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"573a13b8f29313caabd4ca3f\"),\n\t                 \"title\" : \"Red Dog\",\n\t                 \"year\" : 2011\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"573a13b8f29313caabd4d58c\"),\n\t                 \"title\" : \"Jack and Jill\",\n\t                 \"year\" : 2011\n                  }\n                  {\n\t                 \"_id\" : ObjectId(\"573a13b8f29313caabd4d5b5\"),\n\t                 \"year\" : 2011,\n\t                 \"title\" : \"Take Me Home Tonight\"\n                  }\n\n            Find the sessions details for user specified by ID.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos: \n\n                  db.VirtualCollection.find({\"user_id\": \"t3qulfeem@kwiv5.6ur\"})\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  { \n                     \"_id\" : ObjectId(\"5a97f9c91c807bb9c6eb5fb4\"), \n                     \"user_id\" : \"t3qulfeem@kwiv5.6ur\", \n                     \"jwt\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NieyJpYXQiOjE1MTk5MDkzMjEsIm5iZiI6MTUxOTk           wOTMyMSwianRpIjoiNmJlZDAwMWYtNTFiYi00NzVhLTgAtMDcwNGE5Mjk0MWZlIiwiZXhwIjox           NTE5OTEwMjIxLCJpZGVudGl0eSI6eyJlbWFpbCI6InQzcXVsZmVlbd2l2NS42dXIiLCJuYW1lI           joiM2lveHJtZnF4IiwicGFzc3dvcmQiOm51bGx9LCJmcmVzaCI6ZmFsc2UsInRUiOiJhY2Nlc3           MiLCJ1c2VyX2NsYWltcyI6eyJ1c2VyIjp7ImVtYWlsIjoidDNxdWxmZWVtQGt3aXY1LjZ1cIm5           hbWUiOiIzaW94cm1mcXgiLCJwYXNzd29yZCI6bnVsbH19ejtr_NyZyBronWMKuE0RFTjWej--T           0zGrdc_iymGtVs\" \n                  }\n\n            Find the theater specified by its ``id`` and ``zipcode``.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n               \n                  db.VirtualCollection.findOne({$and: [{\"_id\": ObjectId(\"59a47286cfa9a3a73e51e763\")}, {\"location.address.zipcode\": \"93933\"}]})\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                \"_id\" : ObjectId(\"59a47286cfa9a3a73e51e763\"),\n\t                \"theaterId\" : 1061,\n\t                \"location\" : {\n\t\t                \"address\" : {\n\t\t\t                \"street1\" : \"101 General Stillwell Dr\",\n\t\t\t                \"city\" : \"Marina\",\n\t\t\t                \"state\" : \"CA\",\n\t\t\t                \"zipcode\" : \"93933\"\n\t\t                },\n\t\t                \"geo\" : {\n\t\t\t                \"type\" : \"Point\",\n\t\t\t                \"coordinates\" : [\n\t\t\t\t                -121.81196,\n\t\t\t\t                36.66708\n\t\t\t                ]\n\t\t              }\n\t                }\n                  }\n\n            Find all users whose last name is ``Lannister`` and limit the \n            number of documents returned to ``5``.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos: \n      \n                  db.VirtualCollection.find({name: /Lannister/ }).limit(5)\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                \"_id\" : ObjectId(\"59b99db5cfa9a34dcd7885b8\"),\n\t                \"name\" : \"Jaime Lannister\",\n\t                \"email\" : \"nikolaj_coster-waldau@gameofthron.es\",\n\t                \"password\" : \"$2b$12$6vz7wiwO.EI5Rilvq1zUc./9480gb1uPtXcahDxIadgyC3PS8XCUK\"\n                  }\n                  {\n\t                \"_id\" : ObjectId(\"59b99db6cfa9a34dcd7885ba\"),\n\t                \"name\" : \"Cersei Lannister\",\n\t                \"email\" : \"lena_headey@gameofthron.es\",\n\t                \"password\" : \"$2b$12$FExjgr7CLhNCa.oUsB9seub8mqcHzkJCFZ8heMc8CeIKOZfeTKP8m\"\n                  }\n                  {\n\t                \"_id\" : ObjectId(\"59b99dbdcfa9a34dcd7885c7\"),\n\t                \"name\" : \"Tyrion Lannister\",\n\t                \"email\" : \"peter_dinklage@gameofthron.es\",\n\t                \"password\" : \"$2b$12$xtHwQNXYlQzP2REobUDlzuQimjzBlXrTx1GnwP.xkfULeuuUpRxa2\"\n                  }\n                  {\n\t                \"_id\" : ObjectId(\"59b99dc2cfa9a34dcd7885d2\"),\n\t                \"name\" : \"Tywin Lannister\",\n\t                \"email\" : \"charles_dance@gameofthron.es\",\n\t                \"password\" : \"$2b$12$/i04T5yEJvmsBhF0Jd.kJOk3ZhRzezbTU7ASEM5o43Xxsa4o6IgEy\"\n                  }\n                  {\n\t                \"_id\" : ObjectId(\"59b99dcecfa9a34dcd7885ea\"),\n\t                \"name\" : \"Lancel Lannister\",\n\t                \"email\" : \"eugene_simon@gameofthron.es\",\n\t                \"password\" : \"$2b$12$mNWiHoOqOWQser3s6ezqZeTU5vhskTq.K7xkeTA2P.CIfoWsHvonO\"\n                  }\n\n         .. tab:: Training \n            :tabid: training\n\n            Before running the queries, switch to the ``VirtualDatabase`` database: \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.VirtualCollection.aggregate([{$group: { _id: \"$state\", totalPop: {$sum: \"$pop\" }}}, {$match: {totalPop: {$gte: 10*1000*1000 }}}])\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  { \"_id\" : \"NY\", \"totalPop\" : 17990455 }\n                  { \"_id\" : \"FL\", \"totalPop\" : 12937926 }\n                  { \"_id\" : \"PA\", \"totalPop\" : 11881643 }\n                  { \"_id\" : \"CA\", \"totalPop\" : 29760021 }\n                  { \"_id\" : \"TX\", \"totalPop\" : 16986510 }\n                  { \"_id\" : \"IL\", \"totalPop\" : 11430602 }\n                  { \"_id\" : \"OH\", \"totalPop\" : 10847115 }                  \n\n            Find all trips taken by customers that were less than 70 minutes.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language:  json\n                  :linenos:\n\n                  db.VirtualCollection.find({\"tripduration\": { \"$lte\" : 70 }, \"usertype\": { \"$eq\": \"Customer\" }})\n\n               .. output:: \n                  :language: json\n                  :linenos:\n\n                  {\n\t                  \"_id\" : ObjectId(\"572bb8232b288919b68af7cd\"),\n\t                  \"tripduration\" : 66,\n\t                  \"start station id\" : 460,\n\t                  \"start station name\" : \"S 4 St & Wythe Ave\",\n\t                  \"end station id\" : 460,\n\t                  \"end station name\" : \"S 4 St & Wythe Ave\",\n\t                  \"bikeid\" : 23779,\n\t                  \"usertype\" : \"Customer\",\n\t                  \"birth year\" : \"\",\n\t                  \"start station location\" : {\n\t\t                  \"type\" : \"Point\",\n\t\t                  \"coordinates\" : [\n\t\t\t                  -73.96590294,\n\t\t\t                  40.71285887\n\t\t                  ]\n\t                  },\n\t                  \"end station location\" : {\n\t\t                  \"type\" : \"Point\",\n\t\t                  \"coordinates\" : [\n\t\t\t                  -73.96590294,\n\t\t\t                  40.71285887\n\t\t                  ]\n\t                  },\n\t                  \"start time\" : ISODate(\"2016-01-02T11:49:11Z\"),\n\t                  \"stop time\" : ISODate(\"2016-01-02T11:50:18Z\")\n                  }\n\nSummary\n-------\n\nCongratulations! You just set up a {+fdi+}, created a database and \ncollections from data stored in an S3 bucket, and queried the data \nusing MQL commands. \n\nFor more information on {+fdi+}\\s, see :ref:`{+adf+} \n<atlas-data-federation>`.\n\n.. include:: /includes/data-federation/fact-fdi-dynamic-collections.rst\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/data-federation/tutorial/run-queries.txt"
  },
  {
    "code": "   :copyable: false\n\n   2021-08-09T16:35:50.227-0000  [#....................]  park.events  2179/34184    (6.4%)\n   2021-08-09T16:35:50.227-0000  [#############........]  zoo.animals  29000/49778  (58.3%)\n\nWhen tailing the oplog, |mongomirror| logs the lag time, in seconds,\nbetween the most recent oplog entry on the source {+cluster+} and the last\nprocessed oplog entry on the destination {+cluster+}. For example:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/import/mongomirror.txt"
  },
  {
    "code": "   :copyable: false\n\n   2016-12-12T16:22:17.027-0800 Current lag from source: 6s\n\nA lag time of 6 seconds means that the last oplog entry\n|mongomirror| processed occurred 6 seconds before the most\nrecent one available on the source {+cluster+}.\n\n.. note::\n\n   The amount of time it takes |mongomirror| to catch up may be\n   greater or less than 6 seconds, depending on the number of entries\n   that arrive per second.\n\nA lag time of 0 seconds indicates that |mongomirror| is processing\nentries that arrived less than one second before the latest oplog entry.\n\nIf the source {+cluster+} has indexes, |mongomirror| builds the same indexes\non the destination {+cluster+}. The progress log shows the start and end times of\nthe index building process. To view the progress of the index builds,\nyou can either:\n\n- Use the :manual:`currentOp </reference/method/db.currentOp/#db.currentOp>`\n  command on the primary node of the destination {+cluster+}. The ``command``\n  field shows information about the running operation. Index building entries\n  look similar to the following:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/import/mongomirror.txt"
  },
  {
    "code": "     :copyable: false\n\n\t \"command\" : {\n\t\t\"createIndexes\" : \"perfs\",\n\t\t\"indexes\" : [\n\t\t\t{\n\t\t\t\t\"key\" : {\n\t\t\t\t\t\"animal\" : \"text\"\n\t\t\t\t},\n\t\t\t\t\"name\" : \"animal_text\"\n\t\t\t}\n\t\t]...\n\n- Download the :ref:`mongodb logs <mongodb-logs>` for your destination {+cluster+}\n  and search for recent entries for index-related lines. Log messages related\n  to index building look similar to the following:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/import/mongomirror.txt"
  },
  {
    "code": "     :copyable: false\n\n     {\"t\":{\"$date\":\"2021-08-09T16:35:50.227+00:00\"},\"s\":\"I\",  \"c\":\"INDEX\",    \"id\":20447,   \"ctx\":\"conn1080\",\"msg\":\"Index build: completed\",\"attr\":{\"buildUUID\":{\"uuid\":{\"$uuid\":\"c4a62739-bf19-456d-bbd6-7baa29f1063b\"}}}}\n\nPerformance\n-----------\n\nTo avoid contention for network and CPU resources, run |mongomirror| on\nhosts other than your replica set's |mongod| instance hosts.\n\n- |mongomirror| affects your source replica set's performance similar to having\n  a secondary:\n\n  - For the initial sync stage, the load scales with the size of your\n    data set.\n\n  - Once an initial sync completes, the load scales with oplog gigabytes\n    used per hour.\n\nCommand Syntax, Options, and Examples\n-------------------------------------\n\nFor |mongomirror| syntax, options, and examples, see the\n:doc:`mongomirror reference page </reference/mongomirror/>`.\n\nTroubleshooting\n---------------\n\nFor |mongomirror| troubleshooting, see\n:ref:`Common Post-Validation Errors for Live Migration (Pull) <pull-live-migration-troubleshooting-post-validation-errors>`.\n\n.. toctree::\n   :titlesonly:\n\n   mongomirror </reference/mongomirror>\n   mongomirror Changelog </release-notes/mongomirror>\n   mongormirror Versions </reference/mongomirror-old-versions>\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/import/mongomirror.txt"
  },
  {
    "code": "            :copyable: true \n\n            .. input:: \n\n               What's the best practice to reduce network utilization with MongoDB?\n\n            .. output:: \n         \n               The best practice to reduce network utilization with MongoDB is \n               to issue updates only on fields that have changed rather than \n               retrieving the entire documents in your application, updating \n               fields, and then saving the document back to the database. [1]\n\n         .. tip::\n\n            Click the annotation in the agent's response \n            to view the text chunk that {+avs+} retrieved.\n\n   .. step:: Once you've finished, click :guilabel:`Save and exit`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/amazon-bedrock/bedrock-create-agent.rst"
  },
  {
    "code": "            :copyable: true \n            :linenos: \n\n            {\n                \"fields\": [\n                    {\n                        \"numDimensions\": 1536,\n                        \"path\": \"embedding\",\n                        \"similarity\": \"cosine\",\n                        \"type\": \"vector\"\n                    },\n                    {\n                        \"path\": \"metadata\",\n                        \"type\": \"filter\"\n                    },\n                    {\n                        \"path\": \"text_chunk\",\n                        \"type\": \"filter\"\n                    }\n                ]\n            }\n\n   .. step:: Review the index definition and then click :guilabel:`Create Search Index`.\n\n      A modal window displays to let you know that your index is building.\n\n   .. step::  Click :guilabel:`Close` to close the :guilabel:`You're All Set!` modal window and wait for the index to finish building. \n\n      The index should take about one minute to build. While it\n      builds, the :guilabel:`Status` column reads :guilabel:`Initial\n      Sync`. When it finishes building, the :guilabel:`Status` column\n      reads :guilabel:`Active`. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/amazon-bedrock/bedrock-create-index.rst"
  },
  {
    "code": "         :copyable: true\n\n         client = MongoClient(os.environ.get(\"MONGO_CONNECTION_STRING\"))\n\n   .. step:: Create the ``haystack_db.test`` collection. \n\n      Run the following code to create your ``haystack_db`` database and ``test`` collection.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/haystack/haystack-create-index.rst"
  },
  {
    "code": "         :copyable: true\n\n         # Create your database and collection\n         db_name = \"haystack_db\"\n         collection_name = \"test\"\n         database = client[db_name]\n         database.create_collection(collection_name)\n\n         # Define collection\n         collection = client[db_name][collection_name]\n   \n   .. step:: Define the Atlas Vector Search index.\n\n      Run the following code to create an index of the :ref:`vectorSearch\n      <avs-types-vector-search>` type. The ``embedding`` field\n      contains the embeddings that you'll create using OpenAI's\n      ``text-embedding-ada-002`` embedding model. The index\n      definition specifies ``1536`` vector dimensions and\n      measures similarity using ``cosine``.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/haystack/haystack-create-index.rst"
  },
  {
    "code": "         :copyable: true \n\n         # Create your index model, then create the search index\n         search_index_model = SearchIndexModel(\n            definition={\n               \"fields\": [\n                  {\n                     \"type\": \"vector\",\n                     \"path\": \"embedding\",\n                     \"numDimensions\": 1536,\n                     \"similarity\": \"cosine\"\n                  }\n               ]\n            },\n            name=\"vector_index\",\n            type=\"vectorSearch\"\n         )\n\n         collection.create_search_index(model=search_index_model)\n\n      .. include:: /includes/fact-index-build-initial-sync.rst\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/haystack/haystack-create-index.rst"
  },
  {
    "code": "    :copyable: true \n\n    .. input:: \n       :language: python\n\n       # Template for generating prompts for a movie recommendation engine.\n       prompt_template = \"\"\"\n           You are an assistant allowed to use the following context documents.\\nDocuments:\n           {% for doc in documents %}\n               {{ doc.content }}\n           {% endfor %}\n\n           \\nQuery: {{query}}\n           \\nAnswer:\n       \"\"\"\n\n       # Setting up a retrieval-augmented generation (RAG) pipeline for generating responses.\n       rag_pipeline = Pipeline()\n       rag_pipeline.add_component(\"text_embedder\", OpenAITextEmbedder())\n\n       # Adding a component for retrieving related documents from MongoDB based on the query embedding.\n       rag_pipeline.add_component(instance=MongoDBAtlasEmbeddingRetriever(document_store=document_store,top_k=15), name=\"retriever\")\n\n       # Building prompts based on retrieved documents to be used for generating responses.\n       rag_pipeline.add_component(instance=PromptBuilder(template=prompt_template), name=\"prompt_builder\")\n\n       # Adding a language model generator to produce the final text output.\n       rag_pipeline.add_component(instance=OpenAIGenerator(), name=\"llm\")\n\n       # Connecting the components of the RAG pipeline to ensure proper data flow.\n       rag_pipeline.connect(\"text_embedder.embedding\", \"retriever.query_embedding\")\n       rag_pipeline.connect(\"retriever\", \"prompt_builder.documents\")\n       rag_pipeline.connect(\"prompt_builder\", \"llm\")\n\n       # Run the pipeline\n       query = \"Where does Mark live?\"\n       result = rag_pipeline.run(\n         {\n             \"text_embedder\": {\"text\": query},\n             \"prompt_builder\": {\"query\": query},\n         });\n       print(result['llm']['replies'][0])\n\n    .. output:: \n\n       Mark lives in Berlin.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/haystack/haystack-perform-qa.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n         .. output:: \n            :language: JSON\n\n   .. tab:: Semantic Search with Filtering\n      :tabid: semantic-search-filter\n\n      You can also pre-filter your data by using a match expression\n      that compares the indexed field with boolean, number, or \n      string values. You must index any metadata fields that you want to \n      filter by as the ``filter`` type. To learn more, see \n      :ref:`avs-types-vector-search`.\n\n      .. note:: \n\n         You specified the ``metadata.page_label`` field as a filter \n         when you :ref:`created the index <llamaindex-create-index>`\n         for this tutorial.\n\n      This example performs a semantic search for the\n      string ``MongoDB Atlas security`` and returns a \n      list of documents ranked by :ref:`relevance score <scoring-ref>`. \n      It also specifies the following:\n\n      - {+avs+} as a `retriever \n        <https://docs.llamaindex.ai/en/stable/module_guides/querying/retriever/>`__\n        to perform semantic search.\n      - The  ``similarity_top_k`` parameter to return \n        only the three most relevant documents.\n      - A filter on the ``metadata.page_label`` field \n        so that {+avs+} searches for documents appearing on page 17 only.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/haystack/haystack-run-queries.rst"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: python\n\n         .. output:: \n            :language: JSON\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/haystack/haystack-run-queries.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n               \n            # Create some example documents\n            documents = [\n               Document(content=\"My name is Jean and I live in Paris.\"),\n               Document(content=\"My name is Mark and I live in Berlin.\"),\n               Document(content=\"My name is Giorgio and I live in Rome.\"),\n            ]\n\n            # Initializing a document embedder to convert text content into vectorized form.\n            doc_embedder = OpenAIDocumentEmbedder()\n\n            # Setting up a document writer to handle the insertion of documents into the MongoDB collection.\n            doc_writer = DocumentWriter(document_store=document_store, policy=DuplicatePolicy.SKIP)\n\n            # Creating a pipeline for indexing documents. The pipeline includes embedding and writing documents.\n            indexing_pipe = Pipeline()\n            indexing_pipe.add_component(instance=doc_embedder, name=\"doc_embedder\")\n            indexing_pipe.add_component(instance=doc_writer, name=\"doc_writer\")\n\n            # Connecting the components of the pipeline for document flow.\n            indexing_pipe.connect(\"doc_embedder.documents\", \"doc_writer.documents\")\n\n            # Running the pipeline with the list of documents to index them in MongoDB.\n            indexing_pipe.run({\"doc_embedder\": {\"documents\": documents}})\n\n         .. output::\n\n            Calculating embeddings: 100%|██████████| 1/1 [00:00<00:00,  4.16it/s]\n            {'doc_embedder': {'meta': {'model': 'text-embedding-ada-002',\n               'usage': {'prompt_tokens': 32, 'total_tokens': 32}}},\n             'doc_writer': {'documents_written': 3}}\n\n      .. tip:: \n\n         After running the sample code, you can\n         view your vector embeddings :ref:`in the {+atlas-ui+} <atlas-ui-view-collections>`\n         by navigating to the ``haystack_db.test`` collection in your {+cluster+}.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/haystack/haystack-store-custom-data.rst"
  },
  {
    "code": "   :copyable: true \n   :linenos: \n\n   // Ensure index does not already exist, then create your Atlas Vector Search index\n   const indexes = await collection.listSearchIndexes(\"vector_index\").toArray();\n   if(indexes.length === 0){\n\n      // Define your Atlas Vector Search Index\n      const index = {\n         name: \"vector_index\",\n         type: \"vectorSearch\",\n         definition: {\n            \"fields\": [\n               {\n                  \"type\": \"vector\",\n                  \"numDimensions\": 1536,\n                  \"path\": \"embedding\",\n                  \"similarity\": \"cosine\"\n               },\n               {\n                  \"type\": \"filter\",\n                  \"path\": \"loc.pageNumber\"\n               }\n            ]\n         }\n      }\n\n      // Run the helper method\n      const result = await collection.createSearchIndex(index);\n      console.log(result);\n\n      // Wait for Atlas to sync index\n      console.log(\"Waiting for initial sync...\");\n      await new Promise(resolve => setTimeout(() => {\n         resolve();\n      }, 10000));\n   }\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-create-index-node.rst"
  },
  {
    "code": "   :copyable: true \n   :linenos: \n\n   # Create your index model, then create the search index\n   search_index_model = SearchIndexModel(\n      definition={\n         \"fields\": [\n            {\n            \"type\": \"vector\",\n            \"path\": \"embedding\",\n            \"numDimensions\": 1536,\n            \"similarity\": \"cosine\"\n            },\n            {\n            \"type\": \"filter\",\n            \"path\": \"page\"\n            }\n         ]\n      },\n      name=\"vector_index\",\n      type=\"vectorSearch\"\n   )\n\n   atlas_collection.create_search_index(model=search_index_model)\n\n.. include:: /includes/fact-index-build-initial-sync.rst\n   \n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-create-index.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            # Load the PDF\n            loader = PyPDFLoader(\"https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP\")\n            data = loader.load()\n\n            # Split PDF into documents\n            text_splitter = RecursiveCharacterTextSplitter(chunk_size=200, chunk_overlap=20)\n            docs = text_splitter.split_documents(data)\n\n            # Print the first document\n            docs[0]\n\n         .. output:: \n            :language: json\n\n            Document(page_content='Mong oDB Atlas Best P racticesJanuary 20 19A MongoD B White P aper', metadata={'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 0})\n\n   .. step:: Instantiate the vector store.\n\n      Run the following code to create a vector store \n      named ``vector_store`` from the sample documents. \n      This snippet uses the ``MongoDBAtlasVectorSearch.from_documents``\n      method and specifies the following parameters:\n      \n      - The sample documents to store in the vector database.\n      - OpenAI's embedding model as the model used to convert text into \n        vector embeddings for the ``embedding`` field.\n      - ``langchain_db.test`` as the |service| collection to store the documents.\n      - ``vector_index`` as the index to use for querying the vector store.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-create-vector-store.rst"
  },
  {
    "code": "    :copyable: true \n\n    .. input::\n        :language: sh\n\n        node get-started.js\n\n    .. output:: \n        :language: json\n\n        ... \n        Question: How can I secure my MongoDB Atlas cluster?\n        Answer: To secure your MongoDB Atlas cluster, you can take the following measures:\n        1. Enable authentication and use strong, unique passwords for all users.\n        2. Utilize encryption in transit and at rest to protect data both while in motion and at rest.\n        3. Configure network security by whitelisting IP addresses that can access your cluster.\n        4. Enable role-based access control to limit what actions users can perform within the cluster.\n        5. Monitor and audit your cluster for suspicious activity using logging and alerting features.\n        6. Keep your cluster up to date with the latest patches and updates to prevent vulnerabilities.\n        7. Implement backups and disaster recovery plans to ensure you can recover your data in case of data loss.\n\n        Source documents:\n        [\n          {\n            \"pageContent\": \"BSON database dumps produced bymongodump.\\nIn the vast majority of cases, MongoDB Atlas backups\\ndelivers the simplest, safest, and most efficient backup\",\n            \"pageNumber\": 17\n          },\n          {\n            \"pageContent\": \"APM Integration\\nMany operations teams use Application Performance\\nMonitoring (APM) platforms to gain global oversight of\\n15\",\n            \"pageNumber\": 17\n          },\n          {\n            \"pageContent\": \"performance SLA.\\nIf in the course of a deployment it is determined that a new\\nshard key should be used, it will be necessary to reload the\\ndata with a new shard key because designation and values\",\n            \"pageNumber\": 17\n          },\n          {\n            \"pageContent\": \"to the database.\\nReplication Lag\\nReplication lag is the amount of time it takes a write\\noperation on the primary replica set member to replicate to\",\n            \"pageNumber\": 17\n          }\n        ]\n        \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-perform-qa-node-filtered-output.rst"
  },
  {
    "code": "    :copyable: true \n\n    .. input::\n        :language: sh\n\n        node get-started.js\n\n    .. output:: \n        :language: json\n\n        ... \n        Question: How can I secure my MongoDB Atlas cluster?\n        Answer: You can secure your MongoDB Atlas cluster by taking\n        advantage of extensive capabilities to defend, detect, and control \n        access to MongoDB. You can also enable encryption of data at rest \n        with encrypted storage volumes and configure an additional layer of \n        encryption on your data. Additionally, you can set up global clusters \n        on Amazon Web Services, Microsoft Azure, and Google Cloud Platform \n        with just a few clicks in the MongoDB Atlas UI.\n\n        Source documents:\n        [\n          {\n            \"pageContent\": \"MongoDB Atlas features extensive capabilities to defend,\\ndetect, and control access to MongoDB, offering among\\nthe most complete security controls of any modern\\ndatabase:\",\n            \"pageNumber\": 18\n          },\n          {\n            \"pageContent\": \"throughput is required, it is recommended to either\\nupgrade the Atlas cluster or take advantage of MongoDB's\\nauto-shardingto distribute read operations across multiple\\nprimary members.\",\n            \"pageNumber\": 14\n          },\n          {\n            \"pageContent\": \"Atlas provides encryption of data at rest with encrypted\\nstorage volumes.\\nOptionally, Atlas users can configure an additional layer of\\nencryption on their data at rest using the MongoDB\",\n            \"pageNumber\": 19\n          },\n          {\n            \"pageContent\": \"You can set up global clusters — available on Amazon Web\\nServices, Microsoft Azure, and Google Cloud Platform —\\nwith just a few clicks in the MongoDB Atlas UI. MongoDB\",\n            \"pageNumber\": 13\n          }\n        ]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-perform-qa-node-output.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            # Instantiate Atlas Vector Search as a retriever\n            retriever = vector_store.as_retriever(\n               search_type = \"similarity\",\n               search_kwargs = { \"k\": 10 }\n            )\n\n            # Define a prompt template\n            template = \"\"\"\n\n            Use the following pieces of context to answer the question at the end.\n            If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n            {context}\n\n            Question: {question}\n            \"\"\"\n            custom_rag_prompt = PromptTemplate.from_template(template)\n\n            llm = ChatOpenAI()\n            \n            def format_docs(docs):\n               return \"\\n\\n\".join(doc.page_content for doc in docs)\n\n            # Construct a chain to answer questions on your data\n            rag_chain = (\n               { \"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n               | custom_rag_prompt   \n               | llm\n               | StrOutputParser()\n            )\n\n            # Prompt the chain\n            question = \"How can I secure my MongoDB Atlas cluster?\"\n            answer = rag_chain.invoke(question)\n\n            print(\"Question: \" + question)\n            print(\"Answer: \" + answer)\n\n            # Return source documents\n            documents = retriever.invoke(question)\n            print(\"\\nSource documents:\")\n            pprint.pprint(documents)\n\n         .. output:: \n\n            Question: How can I secure my MongoDB Atlas cluster?\n            Answer: To secure your MongoDB Atlas cluster, you can enable \n            authentication and IP address whitelisting, review the security section \n            in the MongoDB Atlas dashboard, encrypt data at rest with encrypted storage \n            volumes, optionally configure an additional layer of encryption on your \n            data, set up global clusters on Amazon Web Services, Microsoft Azure, \n            and Google Cloud Platform, and ensure operational continuity by choosing \n            appropriate instance size, storage size, and storage speed options. \n            Additionally, consider setting up a larger number of replica nodes for \n            increased protection against database downtime.\n\n            Source documents:\n            [Document(page_content='To ensure a secure system right out of the b ox,\\nauthentication and I P Address whitelisting are\\nautomatically enabled.\\nReview the security section of the MongoD B Atlas', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0436'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='MongoD B Atlas team are also monitoring the underlying\\ninfrastructure, ensuring that it is always in a healthy state.\\nApplication L ogs And Database L ogs', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0401'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 15}),\n            Document(page_content='All the user needs to do in order for MongoD B Atlas to\\nautomatically deploy the cluster is to select a handful of\\noptions:\\n•Instance size\\n•Storage size (optional)\\n•Storage speed (optional)', metadata={'_id': ObjectId('65fb4f046979cf7cbbfe03ef'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 14}),\n            Document(page_content='MongoD B.\\nMongoD B Atlas incorporates best practices to help keep\\nmanaged databases healthy and optimized. T hey ensure\\noperational continuity by converting comple x manual tasks', metadata={'_id': ObjectId('65fb4f046979cf7cbbfe03e4'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 13}),\n            Document(page_content='You can set up global clusters — available on Amazon W eb\\nServices, Microsoft Azure, and Google Cloud Platform —\\nwith just a f ew clic ks in the MongoD B Atlas U I. MongoD B', metadata={'_id': ObjectId('65fb4f046979cf7cbbfe03bb'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 12}),\n            Document(page_content='Table of Contents\\n1 Introduction\\n2 Preparing for a MongoD B Deployment\\n9 Scaling a MongoD B Atlas Cluster\\n11 Continuous A vailability & Data Consistency\\n12 Managing MongoD B\\n16 Security', metadata={'_id': ObjectId('65fb4f026979cf7cbbfe02d6'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 1}),\n            Document(page_content='Atlas provides encryption of data at rest with encrypted\\nstorage volumes.\\nOptionally , Atlas users can configure an additional layer of\\nencryption on their data at rest using the MongoD B', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0444'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 18}),\n            Document(page_content='Disaster Recovery\\nCreated by the engineers who develop the database,\\nMongoD B Atlas is the simplest way to run MongoD B,\\nmaking it easy to deploy , monitor , backup, and scale\\nMongoD B.', metadata={'_id': ObjectId('65fb4f046979cf7cbbfe03e3'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 13}),\n            Document(page_content='Security\\nAs with all software, MongoD B administrators must\\nconsider security and risk e xposure for a MongoD B\\ndeployment. T here are no magic solutions for risk', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0431'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='A larger number of replica nodes provides increased\\nprotection against database downtime in case of multiple\\nmachine failures.\\nMongoD B Atlas replica sets have a minimum of 3 nodes', metadata={'_id': ObjectId('65fb4f046979cf7cbbfe03ca'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 12})]\n                  \n   .. tab:: RAG with Filtering\n      :tabid: langchain-rag-filtering\n\n      This example does the following:\n\n      - Instantiates {+avs+} as a `retriever \n        <https://python.langchain.com/docs/modules/data_connection/retrievers/>`__\n        to query for similar documents, including the following optional parameters:\n         \n        - ``k`` to search for only the ``10`` most relevant documents.\n        - ``score_threshold`` to use only documents with a relevance score above ``0.75``.\n\n          .. note::\n\n             This parameter refers to a relevance score that Langchain uses\n             to normalize your results, and not the :ref:`relevance score <scoring-ref>`\n             used in |fts| queries. To use |fts| scores in your |rag| implementation,\n             define a custom retriever that uses the ``similarity_search_with_score`` method \n             and filters by the |fts| score.\n           \n        - ``pre_filter`` to filter on the ``page`` field for documents that appear on page 17 only.\n\n      .. include:: /includes/ai-integrations/langchain/langchain-perform-qa-description.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-perform-qa.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            # Instantiate Atlas Vector Search as a retriever\n            retriever = vector_store.as_retriever(\n               search_type = \"similarity\",\n               search_kwargs = {\n                  \"k\": 10,\n                  \"score_threshold\": 0.75,\n                  \"pre_filter\": { \"page\": { \"$eq\": 17 } }\n               }\n            )\n\n            # Define a prompt template\n            template = \"\"\"\n\n            Use the following pieces of context to answer the question at the end.\n            If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n            {context}\n\n            Question: {question}\n            \"\"\"\n            custom_rag_prompt = PromptTemplate.from_template(template)\n\n            llm = ChatOpenAI()\n            \n            def format_docs(docs):\n               return \"\\n\\n\".join(doc.page_content for doc in docs)\n\n            # Construct a chain to answer questions on your data\n            rag_chain = (\n               { \"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n               | custom_rag_prompt   \n               | llm\n               | StrOutputParser()\n            )\n\n            # Prompt the chain\n            question = \"How can I secure my MongoDB Atlas cluster?\"\n            answer = rag_chain.invoke(question)\n\n            print(\"Question: \" + question)\n            print(\"Answer: \" + answer)\n\n            # Return source documents\n            documents = retriever.invoke(question)\n            print(\"\\nSource documents:\")\n            pprint.pprint(documents)\n\n         .. output:: \n\n            Question: How can I secure my MongoDB Atlas cluster?\n            Answer: To secure your MongoDB Atlas cluster, you can enable \n            authentication and IP Address whitelisting, define permissions\n            for users and applications, use VPC Peering for secure connectivity, \n            implement a Defense in Depth approach for securing deployments, and \n            consider using LDAP integration for centralized authorization\n            management. It is important to regularly review the security section \n            of MongoDB Atlas and continuously monitor and update security measures \n            to mitigate risk and maintain a secure deployment.\n\n            Source documents:\n            [Document(page_content='To ensure a secure system right out of the b ox,\\nauthentication and I P Address whitelisting are\\nautomatically enabled.\\nReview the security section of the MongoD B Atlas', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0436'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='Security\\nAs with all software, MongoD B administrators must\\nconsider security and risk e xposure for a MongoD B\\ndeployment. T here are no magic solutions for risk', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0431'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='number of diff erent methods for managing risk and\\nreducing risk e xposure.\\nMongoD B Atlas f eatures e xtensive capabilities to def end,\\ndetect, and control access to MongoD B, off ering among', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0433'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='permissions for a user or application, and what data it can\\naccess when querying MongoD B. MongoD B Atlas provides\\nthe ability to provision users with roles specific to a', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe043b'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='connectivity without using public I P addresses, and without\\nneeding to whitelist every client in your MongoD B Atlas\\ngroup.\\nAuthorization\\nMongoD B Atlas allows administrators to define', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe043a'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='mitigation, and maintaining a secure MongoD B deployment\\nis an ongoing process.\\nDefense in Depth\\nA Def ense in Depth approac h is recommended for\\nsecuring MongoD B deployments, and it addresses a', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0432'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='optimization.\\nIn addition, MongoD B Atlas provides pac kaged integration\\nwith the New Relic platform. K ey metrics from MongoD B\\nAtlas are accessible to the AP M for visualization, enabling', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe042e'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='their I P address (or a C IDR covering their I P address) has\\nbeen added to the IP whitelist for your MongoD B Atlas\\ngroup.\\nVPC P eering\\nVirtual P rivate Cloud (VPC) P eering allows users to create', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe0438'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='dedicated A tlas clusters using credentials that are verified\\nby a centralized L DAP server . Authorization management is\\nsimplified by allowing control at the L DAP group level.', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe043d'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n            Document(page_content='database, making it possible to realize a separation of\\nduties between diff erent entities accessing and managing\\nthe data.\\nAtlas supports L DAP integration, allowing users to login to', metadata={'_id': ObjectId('65fb4f056979cf7cbbfe043c'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17})]\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-perform-qa.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input::\n                  :language: sh\n\n                  node get-started.js\n                  \n               .. output:: \n                  :language: json\n\n                  ...\n\n                  Semantic Search Results:\n                  [\n                     {\n                        pageContent: 'MongoDB Atlas features extensive capabilities to defend,\\n' +\n                           'detect, and control access to MongoDB, offering among\\n' +\n                           'the most complete security controls of any modern\\n' +\n                           'database:',\n                        pageNumber: 18\n                     },\n                     {\n                        pageContent: 'Atlas provides encryption of data at rest with encrypted\\n' +\n                           'storage volumes.\\n' +\n                           'Optionally, Atlas users can configure an additional layer of\\n' +\n                           'encryption on their data at rest using the MongoDB',\n                        pageNumber: 19\n                     },\n                     {\n                        pageContent: 'automatically enabled.\\n' +\n                           'Review thesecurity section of the MongoDB Atlas\\n' +\n                           'documentationto learn more about each of the security\\n' +\n                           'features discussed below.\\n' +\n                           'IP Whitelisting',\n                        pageNumber: 18\n                     },\n                     {\n                        pageContent: '16Security\\n' +\n                           '17Business Intelligence with MongoDB Atlas\\n' +\n                           '18Considerations for Proofs of Concept\\n' +\n                           '18MongoDB Stitch: Serverless Platform from MongoDB\\n' +\n                           '19We Can Help\\n' +\n                           '19Resources',\n                        pageNumber: 2\n                     }\n                  ]\n\n   .. tab:: Semantic Search with Filtering\n      :tabid: semantic-search-filter\n\n      You can pre-filter your data by using an\n      :abbr:`MQL (MongoDB Query Language)` match expression\n      that compares the indexed field with boolean, number, or \n      string values. You must index any metadata fields that you want to \n      filter by as the ``filter`` type. To learn more, see \n      :ref:`avs-types-vector-search`.\n\n      .. note:: \n            \n         You specified the ``loc.pageNumber`` field as a filter \n         when you :ref:`created the index <langchain-create-index>`\n         for this tutorial.\n\n      .. procedure::\n         :style: normal\n\n         .. step:: Add the following code to your asynchronous function and save the file. \n\n            The following code uses the ``similaritySearch`` method \n            to perform a semantic search for the string ``MongoDB Atlas security``.\n            It specifies the following parameters:\n\n            - The number of documents to return as ``3``.\n            - A pre-filter on the ``loc.pageNumber`` field that uses the :query:`$eq` operator\n              to match documents appearing on page 17 only.\n\n            It returns a list of documents ranked by relevance with only the \n            ``pageContent`` and ``pageNumber`` fields.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-query-examples-node.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input::\n                  :language: sh\n\n                  node get-started.js\n                  \n               .. output:: \n                  :language: json\n\n                  ...\n\n                  Semantic Search with Filter Results:\n                  [\n                     {\n                        pageContent: 'BSON database dumps produced bymongodump.\\n' +\n                           'In the vast majority of cases, MongoDB Atlas backups\\n' +\n                           'delivers the simplest, safest, and most efficient backup',\n                        pageNumber: 17\n                     },\n                     {\n                        pageContent: 'Monitoring Solutions\\n' +\n                           'The MongoDB Atlas API provides integration with external\\n' +\n                           'management frameworks through programmatic access to\\n' +\n                           'automation features and alerts.\\n' +\n                           'APM Integration',\n                        pageNumber: 17\n                     },\n                     {\n                        pageContent: 'MongoDB Atlas backups are maintained continuously, just\\n' +\n                           'a few seconds behind the operational system. If the\\n' +\n                           'MongoDB cluster experiences a failure, the most recent',\n                        pageNumber: 17\n                     }\n                  ]\n\n   .. tab:: MMR Search\n      :tabid: mmr-search\n\n      You can also perform semantic search based on Max Marginal Relevance (MMR),\n      a measure of semantic relevance optimized for diversity.\n\n      .. procedure::\n         :style: normal\n\n         .. step:: Add the following code to your asynchronous function and save the file. \n\n            The following code uses the ``maxMarginalRelevanceSearch`` method \n            to search for the string ``MongoDB Atlas security``.\n            It also specifies an object that defines the following \n            optional parameters:\n\n            - ``k`` to limit the number of returned documents to ``3``.\n            - ``fetchK`` to fetch only ``10`` documents before passing \n              the documents to the :abbr:`MMR (Max Marginal Relevance)` algorithm.\n\n            It returns a list of documents ranked by relevance\n            with only the ``pageContent`` and ``pageNumber`` fields. \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-query-examples-node.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input::\n                  :language: sh\n\n                  node get-started.js\n                  \n               .. output:: \n                  :language: json\n\n                  ...\n\n                  Max Marginal Relevance Search Results:\n\n                  [\n                     {\n                        pageContent: 'MongoDB Atlas features extensive capabilities to defend,\\n' +\n                           'detect, and control access to MongoDB, offering among\\n' +\n                           'the most complete security controls of any modern\\n' +\n                           'database:',\n                        pageNumber: 18\n                     },\n                     {\n                        pageContent: 'automatically enabled.\\n' +\n                           'Review thesecurity section of the MongoDB Atlas\\n' +\n                           'documentationto learn more about each of the security\\n' +\n                           'features discussed below.\\n' +\n                           'IP Whitelisting',\n                        pageNumber: 18\n                     },\n                     {\n                        pageContent: '16Security\\n' +\n                           '17Business Intelligence with MongoDB Atlas\\n' +\n                           '18Considerations for Proofs of Concept\\n' +\n                           '18MongoDB Stitch: Serverless Platform from MongoDB\\n' +\n                           '19We Can Help\\n' +\n                           '19Resources',\n                        pageNumber: 2\n                     }\n                  ]\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-query-examples-node.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            query = \"MongoDB Atlas security\"\n            results = vector_store.similarity_search(query)\n\n            pprint.pprint(results)\n         \n         .. output:: \n            :language: JSON\n\n            [Document(page_content='To ensure a secure system right out of the b ox,\\nauthentication and I P Address whitelisting are\\nautomatically enabled.\\nReview the security section of the MongoD B Atlas', metadata={'_id': ObjectId('65c2e8f480f26794dedad8d5'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n             Document(page_content='MongoD B Atlas team are also monitoring the underlying\\ninfrastructure, ensuring that it is always in a healthy state.\\nApplication L ogs And Database L ogs', metadata={'_id': ObjectId('65c2e8f480f26794dedad8a0'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 15}),\n             Document(page_content='MongoD B.\\nMongoD B Atlas incorporates best practices to help keep\\nmanaged databases healthy and optimized. T hey ensure\\noperational continuity by converting comple x manual tasks', metadata={'_id': ObjectId('65c2e8f380f26794dedad883'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 13}),\n             Document(page_content='Atlas provides encryption of data at rest with encrypted\\nstorage volumes.\\nOptionally , Atlas users can configure an additional layer of\\nencryption on their data at rest using the MongoD B', metadata={'_id': ObjectId('65c2e8f480f26794dedad8e3'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 18})]\n\n   .. tab:: Semantic Search with Score\n      :tabid: semantic-search-score\n\n      The following query uses the ``similarity_search_with_score`` \n      method to perform a semantic search for \n      the string ``MongoDB Atlas security`` and specifies the\n      ``k`` parameter to limit the number of documents to return\n      to ``3``.\n\n      .. note:: \n\n         The ``k`` parameter in this example refers to the \n         ``similarity_search_with_score`` method option, not the \n         :ref:`knn-beta-ref` operator option of the same name.\n         \n      It returns the three most relevant documents \n      and a :ref:`relevance score <scoring-ref>` between \n      ``0`` and ``1``.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-query-examples.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            query = \"MongoDB Atlas security\"\n            results = vector_store.similarity_search_with_score(\n               query = query, k = 3\n            )\n\n            pprint.pprint(results)\n         \n         .. output:: \n            :language: JSON\n\n            [(Document(page_content='To ensure a secure system right out of the b ox,\\nauthentication and I P Address whitelisting are\\nautomatically enabled.\\nReview the security section of the MongoD B Atlas', metadata={'_id': ObjectId('65c2e8f480f26794dedad8d5'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n              0.935082197189331),\n             (Document(page_content='MongoD B Atlas team are also monitoring the underlying\\ninfrastructure, ensuring that it is always in a healthy state.\\nApplication L ogs And Database L ogs', metadata={'_id': ObjectId('65c2e8f480f26794dedad8a0'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 15}),\n              0.9335962533950806),\n             (Document(page_content='MongoD B.\\nMongoD B Atlas incorporates best practices to help keep\\nmanaged databases healthy and optimized. T hey ensure\\noperational continuity by converting comple x manual tasks', metadata={'_id': ObjectId('65c2e8f380f26794dedad883'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 13}),\n              0.9317940473556519)]\n\n   .. tab:: Semantic Search with Filtering\n      :tabid: semantic-search-filter\n\n      You can pre-filter your data by using an\n      :abbr:`MQL (MongoDB Query Language)` match expression\n      that compares the indexed field with boolean, number, or \n      string values. You must index any metadata fields that you want to \n      filter by as the ``filter`` type. To learn more, see \n      :ref:`avs-types-vector-search`.\n      \n      .. note:: \n\n         You specified the ``page`` field as a filter \n         when you :ref:`created the index <langchain-create-index>`\n         for this tutorial.\n\n      The following query uses the ``similarity_search_with_score`` method \n      to perform a semantic search for \n      the string ``MongoDB Atlas security``. It also specifies the following:\n\n      - The ``k`` parameter to limit the number of documents to return\n        to ``3``.\n      - A pre-filter on the ``page`` field that uses the :query:`$eq` operator\n        to match documents appearing on page 17 only.\n         \n      It returns the three most relevant documents from page 17\n      and a :ref:`relevance score <scoring-ref>` between \n      ``0`` and ``1``.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-query-examples.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            query = \"MongoDB Atlas security\"\n\n            results = vector_store.similarity_search_with_score(\n               query = query, \n               k = 3, \n               pre_filter = { \"page\": { \"$eq\": 17 } }\n            )\n\n            pprint.pprint(results)\n         \n         .. output:: \n            :language: JSON\n\n            [(Document(page_content='To ensure a secure system right out of the b ox,\\nauthentication and I P Address whitelisting are\\nautomatically enabled.\\nReview the security section of the MongoD B Atlas', metadata={'_id': ObjectId('65c2e8f480f26794dedad8d5'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n              0.935082197189331),\n             (Document(page_content='Security\\nAs with all software, MongoD B administrators must\\nconsider security and risk e xposure for a MongoD B\\ndeployment. T here are no magic solutions for risk', metadata={'_id': ObjectId('65c2e8f480f26794dedad8d0'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n              0.920635461807251),\n             (Document(page_content='number of diff erent methods for managing risk and\\nreducing risk e xposure.\\nMongoD B Atlas f eatures e xtensive capabilities to def end,\\ndetect, and control access to MongoD B, off ering among', metadata={'_id': ObjectId('65c2e8f480f26794dedad8d2'), 'source': 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP', 'page': 17}),\n              0.9206267595291138)]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/langchain-query-examples.rst"
  },
  {
    "code": "         :copyable: true \n\n         {\n           \"database\": \"sample_airbnb\",\n           \"collectionName\": \"listingsAndReviews\",\n           \"type\": \"vectorSearch\",\n           \"name\": \"vector_index\",\n             \"fields\": [\n               {\n                 \"type\": \"vector\",\n                 \"path\": \"embeddings\",\n                 \"numDimensions\": 1024,\n                 \"similarity\": \"cosine\"\n               }\n            ]\n         }\n\n   .. step:: Create the {+avs+} index.\n\n      a. Save the file, and then run the following command\n         in your terminal, replacing ``<path-to-file>`` with the path to the \n         ``vector-index.json`` file that you created.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/local-rag-create-index-cli.rst"
  },
  {
    "code": "            :copyable: true \n\n            atlas deployments search indexes create --file <path-to-file>\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/local-rag-create-index-cli.rst"
  },
  {
    "code": "            :copyable: true \n\n            {\n               \"fields\":[\n                  {\n                     \"type\": \"vector\",\n                     \"path\": \"embeddings\",\n                     \"numDimensions\": 1024,\n                     \"similarity\": \"cosine\"\n                  }\n               ]\n            }\n\n   .. step:: Review the index definition and then click :guilabel:`Create Search Index`.\n\n      A modal window displays to let you know that your index is building.\n\n   .. step::  Click :guilabel:`Close` to close the :guilabel:`You're All Set!` modal window and wait for the index to finish building. \n\n      The index should take about one minute to build. While it\n      builds, the :guilabel:`Status` column reads :guilabel:`Initial\n      Sync`. When it finishes building, the :guilabel:`Status` column\n      reads :guilabel:`Active`. \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/local-rag-create-index-ui.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            import pprint\n\n            query = \"beach house\"\n            results = vector_store.similarity_search(query)\n            pprint.pprint(results)\n         \n         .. output:: \n            :language: JSON\n\n            [Document(page_content='Beach house with contemporary interior', metadata={'_id': '22123688', 'listing_url': 'https://www.airbnb.com/rooms/22123688', 'name': 'Bungan Beach House', ... }),\n            Document(page_content=\"Well done !!! you won't find a better location in Manly. The “Beach House” Apartments overlook Cabbage Tree Bay Aquatic Reserve between Manly and Shelly Beach, in one of Manly's premier locations  Swim, dive, snorkel, surf, paddle board, coastal walkways, ocean pool, restaurants, all literally at your doorstep, or simply chill and unwind. Manly is amazing, I look forward to welcoming you\", metadata={'_id': '18917022', 'listing_url': 'https://www.airbnb.com/rooms/18917022', 'name': 'Beach House Manly Apartment 4', ... }]}),\n            Document(page_content='Beautiful spacious two story beach house that has an amazing private gated grass area fronting Makaha beach. Perfect for family BBQ,s while watching the sun set into the ocean. Room for 10 people. Four night minimum stay required', metadata={'_id': '7099038', 'listing_url': 'https://www.airbnb.com/rooms/7099038', 'name': 'Ocean front Beach House in Makaha', ... }]}),\n            Document(page_content='Beautifully finished, newly renovated house with pool. The ultimate in indoor/outdoor living. Excellent finishes and a short stroll to the beach.', metadata={'_id': '19768051', 'listing_url': 'https://www.airbnb.com/rooms/19768051', 'name': 'Ultra Modern Pool House Maroubra', ... }]})]\n      \n      .. seealso::\n\n         - :ref:`langchain-run-queries`\n\n   .. step:: Download and configure the local |llm|.\n\n      a. Click the following button to download the Mistral 7B model\n         from GPT4All. To explore other models, refer to the \n         `GPT4All website <https://gpt4all.io/index.html>`__.\n\n         .. button:: Download\n            :uri: https://gpt4all.io/models/gguf/mistral-7b-openorca.gguf2.Q4_0.gguf\n\n      #. Paste the following code in your notebook to configure the |llm|.\n         Before running, replace ``<path-to-model>`` with \n         the path where you saved the |llm| locally.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/local-rag-perform-qa.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            from langchain_core.prompts import PromptTemplate\n            from langchain_core.output_parsers import StrOutputParser\n            from langchain_core.runnables import RunnablePassthrough\n\n            # Instantiate Atlas Vector Search as a retriever\n            retriever = vector_store.as_retriever()\n\n            # Define prompt template\n            template = \"\"\"\n            Use the following pieces of context to answer the question at the end.\n            {context}\n            Question: {question}\n            \"\"\"\n            custom_rag_prompt = PromptTemplate.from_template(template)\n\n            def format_docs(docs):\n               return \"\\n\\n\".join(doc.page_content for doc in docs)\n\n            # Create chain   \n            rag_chain = (\n               {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n               | custom_rag_prompt\n               | llm\n               | StrOutputParser()\n            )\n\n            # Prompt the chain\n            question = \"Can you recommend me a few AirBnBs that are beach houses? Include a link to the listings.\"\n            answer = rag_chain.invoke(question)\n\n            # Return source documents\n            documents = retriever.invoke(question)\n            print(\"\\nSource documents:\")\n            pprint.pprint(documents)\n\n         .. output:: \n\n            Answer: Yes, I can recommend a few AirBnBs that are beach houses. Here are some links to their respective listings:\n            1. Oceanfront home on private, gated property - https://www.airbnb.com/rooms/15073739\n            2. Ground Floor, Oceanfront condo with complete remodeling - https://www.airbnb.com/rooms/14687148\n            3. 4 bedroom house in a great location with ocean views and free salt water pool - https://www.airbnb.ca/s?host_id=740644\n\n            Source documents:\n            [Document(page_content='Please look for Airbnb numb (Phone number hidden by Airbnb) to book with us.  We do not take bookings through this one.  It is live for others to read reviews.  Oceanfront home on private, gated property.  This unique property offers year-round swimming, private beach access and astounding ocean and mountain views.  Traveling with a large group? Another 3 bedroom home is available for rent on this spacious property. Visit https://www.airbnb.com/rooms/15073739 or contact us for more information.', metadata={'_id': '14827972', 'listing_url': 'https://www.airbnb.com/rooms/14827972', 'name': 'Oceanfront Beach House Makai', ... }]}),\n            Document(page_content='This GROUND FLOOR, OCEANFRONT condo is just feet from ocean access. Completely remodeled kitchen, bathroom and living room, with queen size bed in the bedroom, and queen size convertible sofa bed in the living room. Relax with the 55\" SMART blue ray DVD, cable, and free WiFi. With ceiling fans in each room and trade winds, this condo rarely need the air conditioning unit in the living room. Airbnb charges a reservation fee to all guests at the time of booking. Please see \"Other Things to Note\"', metadata={'_id': '18173803', 'listing_url': 'https://www.airbnb.com/rooms/18173803', 'name': 'Papakea A108', ... }]}),\n            Document(page_content='2 minutes to bus stop, beach - Cafes, Sun, Surf & Sand. 4 Secure rooms in older style, 4 bedroom house. Can squeeze in up to 15 guests (9 beds, 2 sofa beds in lounge & a single sofa mattress) BUT is best suited to 10-12 people Wireless Internet, under cover parking, unlimited street parking.', metadata={'_id': '2161945', 'listing_url': 'https://www.airbnb.com/rooms/2161945', 'name': 'Sand Sun Surf w Parking. City 9km', ... }]}),\n            Document(page_content='High Quality for a third of the price! Great Location & Ocean Views! FREE Salt Water Roof-Deck Pool, Activities & Rental Car Desk! Hassle-Free Self Check-In via Lockbox. Located In Famous Waikiki: Easily walk to Beaches, Shops/all Restaurants! Hawaiian Convention Center is only 2 Blocks Away!  On-Site Garage $. See my similar listings if your dates are not available. https://www.airbnb.ca/s?host_id=740644', metadata={'_id': '13146333', 'listing_url': 'https://www.airbnb.com/rooms/13146333', 'name': '~TROPICAL DREAM VACATION~ Ocean View', ... }]})]\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/langchain/local-rag-perform-qa.rst"
  },
  {
    "code": "   :copyable: true \n\n   # Specify the collection for which to create the index\n   collection = mongo_client[\"llamaindex_db\"][\"test\"]\n\n   # Create your index model, then create the search index\n   search_index_model = SearchIndexModel(\n     definition={\n       \"fields\": [\n         {\n           \"type\": \"vector\",\n           \"path\": \"embedding\",\n           \"numDimensions\": 1536,\n           \"similarity\": \"cosine\"\n         },\n         {\n           \"type\": \"filter\",\n           \"path\": \"metadata.page_label\"\n         }\n       ]\n     },\n     name=\"vector_index\",\n     type=\"vectorSearch\",\n   )\n\n   collection.create_search_index(model=search_index_model)\n\n.. include:: /includes/fact-index-build-initial-sync.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/llamaindex/llamaindex-create-index.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            # Load the sample data\n            !mkdir -p 'data/'\n            !wget 'https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4HkJP' -O 'data/atlas_best_practices.pdf'\n            sample_data = SimpleDirectoryReader(input_files=[\"./data/atlas_best_practices.pdf\"]).load_data()\n            \n            # Print the first document\n            sample_data[0]\n\n         .. output:: \n            :language: json\n\n            Document(id_='e9893be3-e1a3-4249-9355-e4f42539f508', embedding=None, metadata={'page_label': '1', 'file_name': 'atlas_best_practices.pdf', \n            'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-20', \n            'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-20'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', \n            'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', \n            'last_modified_date', 'last_accessed_date'], relationships={}, text='Mong oDB Atlas Best P racticesJanuary 20 19A MongoD B White P aper\\n', \n            start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n')\n         \n   .. step:: Instantiate the vector store.\n\n      Run the following code to create a vector store \n      named ``atlas_vector_store`` by using the \n      ``MongoDBAtlasVectorSearch`` method, which\n      specifies the following:\n      \n      - A connection to your |service| {+cluster+}.\n      - ``llamaindex_db.test`` as the |service| database and collection \n        used to store the documents.\n      - ``vector_index`` as the index to use for querying the vector store.\n\n      Then, you save the vector store to a `storage context\n      <https://docs.llamaindex.ai/en/stable/api_reference/storage/storage_context/>`__,\n      which is a LlamaIndex container object used to prepare your data for storage.\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/llamaindex/llamaindex-create-vector-store.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python     \n            \n            # Instantiate Atlas Vector Search as a retriever\n            vector_store_retriever = VectorIndexRetriever(index=vector_store_index, similarity_top_k=5)\n\n            # Pass the retriever into the query engine\n            query_engine = RetrieverQueryEngine(retriever=vector_store_retriever)\n\n            # Prompt the LLM\n            response = query_engine.query('How can I secure my MongoDB Atlas cluster?')\n\n            print(response)\n            print(\"\\nSource documents: \")\n            pprint.pprint(response.source_nodes)\n\n         .. output:: \n            \n            You can secure your MongoDB Atlas cluster by utilizing security features \n            such as authentication, IP address whitelisting, encryption for data in \n            motion and at rest, user rights management, and encryption. Additionally,\n            you can set up global clusters on various cloud platforms with just a \n            few clicks in the MongoDB Atlas UI to ensure data is written to and \n            read from different regions.\n\n            Source documents: \n            [NodeWithScore(node=TextNode(id_='56884a56-6bcb-4890-9bdc-7d8eb9980b42', embedding=None, metadata={'page_label': '3', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='79ee3a70-7d3d-4dda-b2b4-8da9299ac639', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '3', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='4acc6a58693d749a7f3ddd92063755de00ab9bc8c11be03fd05814bc9c3d2e47'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='9c4f4242-e8c0-493d-b32d-21b900138210', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '3', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='6d12532c110420f9131f63bc1f676796103ea2b8078dfdab3809eaff9c4bde21'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='6554d774-108c-4602-8ce8-5aca08802b5a', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='ce37b9f7382f86f97316d5dd346f645175e4a392afabb11d6a13c2dce81395e5')}, text='MongoD B\\nAtlas provides:\\n•Security f eatures to protect access to your data\\n•Built in replication for always-on availability , tolerating\\ncomplete data center failure\\n•Backups and point in time recovery to protect against\\ndata corruption\\n•Fine-grained monitoring to let you know when to scale.', start_char_idx=386, end_char_idx=679, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9282928109169006),\n             NodeWithScore(node=TextNode(id_='5ac63468-529e-4f74-a263-2dc15183f793', embedding=None, metadata={'page_label': '13', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='ae95f83a-15f8-46bd-9603-ed14792b2f18', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '13', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='07a7475af2413b7ad4a3010191462eca9d1691e29d8194389de7a7333ed2d67b'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='6d77733c-8532-43a9-a38d-c1da51a5a51b', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '13', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='19ac3815d50ad3ba71f5119f9ebacc1c84742b7a215e014be2dbf46cf6f38cb6'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='99d8cf63-fecf-452b-aa2a-a5f6eec2933d', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='86b4419256e9d788383ea6a8cd30d4f37461f9f23e41c1e33ca9cd268dc12884')}, text='You can set up global clusters — available on Amazon W eb\\nServices, Microsoft Azure, and Google Cloud Platform —\\nwith just a f ew clic ks in the MongoD B Atlas U I. MongoD B\\nAtlas takes care of the deployment and management of\\ninfrastructure and database resources required to ensure\\nthat data is written to and read from diff erent regions.', start_char_idx=498, end_char_idx=839, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9278459548950195),\n             NodeWithScore(node=TextNode(id_='71589aef-f5e3-43de-b711-9b9e6e1c9f42', embedding=None, metadata={'page_label': '18', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='fdfddc80-aa07-4411-8b5d-f8e02c53551e', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '18', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8289ead3efad9fc0ffb10c1051f14a8a6357692c1ab8cc34841116591a3f4f01'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='ce3ad309-f8b0-4211-b4eb-db82afb18b8e', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '18', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8ddc31be6d74789b9a6fd9451bccb1d258bfc27cb60d443527eaad9de0d742ec'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='053bee76-40c8-42c7-b19c-3ec97a2eefab', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='5393211ed6e59c3ee8e1b2fc9e2529f403ee7241ee477da7c20242440a203976')}, text='Protect data in motion over the network\\nand at rest in persistent storage\\nTo ensure a secure system right out of the b ox,\\nauthentication and I P Address whitelisting are\\nautomatically enabled.\\nReview the security section of the MongoD B Atlas\\ndocumentation to learn more ab out eac h of the security\\nfeatures discussed below .', start_char_idx=1852, end_char_idx=2179, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9274715781211853),\n             NodeWithScore(node=TextNode(id_='c2f91ce0-f310-43a4-b473-e8feb8b2dcca', embedding=None, metadata={'page_label': '11', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='8be9cdd6-0d45-4e03-994c-d103aac018a4', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '11', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='7dcc304caa6d650f0d8a1709dfbdeb8bd5e96bd62ea37e09d44c61eff1ec3a82'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='b2952038-2966-4eb8-a590-38a47bf2d2ff', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '11', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='73dd5fb0c39eff5917f7ef8ebf2baed63463d720c147133bd1a030c71c0cfd22'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='3d175c9d-f332-44fd-ace6-17c676683e8e', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='2b982087b4e8a9600ae02c1dc31be7e4ab9b10d27d923654bd3de8e3fd134fae')}, text='Eac h node must be configured\\nwith sufficient storage for the full data set, or for the subset\\nto be stored in a single shard. T he storage speed and size\\ncan be set when pic king the MongoD B Atlas instance\\nduring cluster creation or reconfiguration.\\nData volumes for customers deploying on A WS, Azure, and\\nGCP are always encrypted.', start_char_idx=299, end_char_idx=633, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9221477508544922),\n             NodeWithScore(node=TextNode(id_='ce3ad309-f8b0-4211-b4eb-db82afb18b8e', embedding=None, metadata={'page_label': '18', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='fdfddc80-aa07-4411-8b5d-f8e02c53551e', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '18', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8289ead3efad9fc0ffb10c1051f14a8a6357692c1ab8cc34841116591a3f4f01'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='d84004f0-4170-48c4-b9f7-69b76db64652', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '18', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='13f060ab7a04314bd0b814dd83f9334e1014c43be94f4913bd7387d0f0521a66'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='71589aef-f5e3-43de-b711-9b9e6e1c9f42', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='23826d53a8be4492a2e267e08e3481b309ef43c249148758610e5cc17354467f')}, text='MongoD B Atlas f eatures e xtensive capabilities to def end,\\ndetect, and control access to MongoD B, off ering among\\nthe most complete security controls of any modern\\ndatabase:\\n•User Rights Management.User Rights Management. Control access to sensitive\\ndata using industry standard mec hanisms for\\nauthentication and authorization at the database level•Encryption.Encryption.', start_char_idx=1476, end_char_idx=1851, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9206620454788208)]\n\n\n   .. tab:: RAG with Filtering\n      :tabid: llamaindex-rag-filtering\n      \n      This example does the following:\n\n      - Defines a metadata filter on the ``metadata.page_label`` field \n        so that {+avs+} searches for documents appearing on page 17 only.\n\n      - Instantiates {+avs+} as a `vector index retriever \n        <https://docs.llamaindex.ai/en/stable/api_reference/retrievers/vector/>`__, \n        a specific type of retriever for vector stores.\n        It includes the metadata filters that you defined\n        and the ``similarity_top_k`` parameter so that {+avs+} retrieves \n        only the 5 most relevant documents from page 17.\n\n      .. include:: /includes/ai-integrations/llamaindex/llamaindex-rag-example-description.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/llamaindex/llamaindex-perform-qa.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python     \n            \n            # Specify metadata filters\n            metadata_filters = MetadataFilters(\n               filters=[ExactMatchFilter(key=\"metadata.page_label\", value=\"17\")]\n            )\n\n            # Instantiate Atlas Vector Search as a retriever\n            vector_store_retriever = VectorIndexRetriever(index=vector_store_index, filters=metadata_filters, similarity_top_k=5)\n\n            # Pass the retriever into the query engine\n            query_engine = RetrieverQueryEngine(retriever=vector_store_retriever)\n\n            # Prompt the LLM\n            response = query_engine.query('How can I secure my MongoDB Atlas cluster?')\n\n            print(response)\n            print(\"\\nSource documents: \")\n            pprint.pprint(response.source_nodes)\n\n         .. output:: \n\n            Regular backups are essential for securing your MongoDB Atlas cluster. \n            By ensuring that backups are maintained continuously and are just a few \n            seconds behind the operational system, you can minimize exposure to data \n            loss in case of a failure. Additionally, utilizing queryable backups allows \n            you to easily restore data at the document/object level. Integrating external \n            monitoring solutions through the MongoDB Atlas API can also enhance security \n            by providing access to automation features and alerts.\n\n            Source documents: \n            [NodeWithScore(node=TextNode(id_='72afbd12-441c-4390-843d-cc11609a7855', embedding=None, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='45d87295-3d74-41bb-812f-789b72b4f8ba', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8e56ef0d706096509e6793e2406c4f5fd0bd020c077a0e7713dd5f3b595f7915'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='552250ae-a55b-4d6d-b326-6d736e5423c8', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='19f3143232ce10c30ee4d9f44012bf3b672ecba3240742d00c921149d9c73016'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='936e940e-2063-4649-8a9a-20090a87aa0a', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='4751bacb2f79e8e61b00828e28cee72a221c5b33bbbec942d431220b2446e507')}, text='If the\\nMongoD B cluster e xperiences a failure, the most recentbackup is only moments behind, minimizing e xposure to\\ndata loss.\\nIn additional, MongoD B Atlas includes queryable bac kups,\\nwhich allows you to perform queries against e xisting\\nsnapshots to more easily restore data at the document/\\nobject level. Queryable bac kups allow you to accomplish\\nthe following with less', start_char_idx=1987, end_char_idx=2364, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.913266658782959),\n             NodeWithScore(node=TextNode(id_='552250ae-a55b-4d6d-b326-6d736e5423c8', embedding=None, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='45d87295-3d74-41bb-812f-789b72b4f8ba', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8e56ef0d706096509e6793e2406c4f5fd0bd020c077a0e7713dd5f3b595f7915'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='a72f111d-1bb9-4173-a713-8bfce8cd2ad5', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='5da4ac9abb19e20a0b14481751a7d4a80f46f8968f804f1d3f4f04fb351886a3'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='72afbd12-441c-4390-843d-cc11609a7855', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='5c99659b2505c1de0600c65fc65cc19c97321a3b9607107d0cac342c5ec9887a')}, text='T aking regular bac kups off ers\\nother advantages, as well. T he bac kups can be used to\\nseed new environments for development, staging, or QA\\nwithout impacting production systems.\\nMongoD B Atlas bac kups are maintained continuously , just\\na few seconds behind the operational system.', start_char_idx=1702, end_char_idx=1986, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9097342491149902),\n             NodeWithScore(node=TextNode(id_='70fc2c34-1338-4f29-8fc6-7b8551ea2c39', embedding=None, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='45d87295-3d74-41bb-812f-789b72b4f8ba', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8e56ef0d706096509e6793e2406c4f5fd0bd020c077a0e7713dd5f3b595f7915'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='834d6586-9bee-4dd8-bf94-2306f1c21f8a', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='86fda9a7b7edce18f333bcbe91c28a9bdb0469957545b6e8cc7fc8e22228c820'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='be001832-41ee-46d2-bd29-4c8650129598', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='e0b09755cc3fad7edc84d2ad9e4b44c098e137c3efea14dd680e55b72c80ffe4')}, text='In the vast majority of cases, MongoD B Atlas bac kups\\ndelivers the simplest, saf est, and most efficient bac kup\\nsolution. mongodump is useful when data needs to be\\nexported to another system, when a local bac kup is\\nneeded, or when just a subset of the data needs to be\\nbacked up.', start_char_idx=3104, end_char_idx=3386, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9047020673751831),\n             NodeWithScore(node=TextNode(id_='be001832-41ee-46d2-bd29-4c8650129598', embedding=None, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='45d87295-3d74-41bb-812f-789b72b4f8ba', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8e56ef0d706096509e6793e2406c4f5fd0bd020c077a0e7713dd5f3b595f7915'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='70fc2c34-1338-4f29-8fc6-7b8551ea2c39', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='53fad6c5333cc41a5246f204a317696c4cb97420363910170f3ae25ef253c1da'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='e3ed474b-1ada-4e15-9f48-db37535bbdd6', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='4eb5d83c88741d63c76679251b2402ff084d33ffd9619f3dd74e5fc0dffc87e2')}, text='Integrating MongoD B with External\\nMonitoring S olutions\\nThe MongoD B Atlas AP I provides integration with e xternal\\nmanagement frameworks through programmatic access to\\nautomation f eatures and alerts.\\nAPM Integration\\nMany operations teams use Application P erformance\\nMonitoring (AP M) platforms to gain global oversight of\\n15', start_char_idx=3387, end_char_idx=3715, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9037604331970215),\n             NodeWithScore(node=TextNode(id_='fd4d3ed9-a0d2-4663-9e0b-aee2faea2b4f', embedding=None, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, excluded_embed_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['file_name', 'file_type', 'file_size', 'creation_date', 'last_modified_date', 'last_accessed_date'], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='45d87295-3d74-41bb-812f-789b72b4f8ba', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'page_label': '17', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='8e56ef0d706096509e6793e2406c4f5fd0bd020c077a0e7713dd5f3b595f7915'), <NodeRelationship.PREVIOUS: '2'>: RelatedNodeInfo(node_id='a53c9dbc-25ec-49cf-bd3c-04c2758dd681', node_type=<ObjectType.TEXT: '1'>, metadata={'page_label': '16', 'file_name': 'atlas_best_practices.pdf', 'file_path': 'data/atlas_best_practices.pdf', 'file_type': 'application/pdf', 'file_size': 512653, 'creation_date': '2024-02-21', 'last_modified_date': '2020-10-27', 'last_accessed_date': '2024-02-21'}, hash='ce8e610852c742743e0674dd6fc05126cc18138fa224e28fc0cc72c0319d087a'), <NodeRelationship.NEXT: '3'>: RelatedNodeInfo(node_id='a07617d5-8090-47b4-92f8-f3bbe38cff54', node_type=<ObjectType.TEXT: '1'>, metadata={}, hash='9ad371a88420c2c0ace630858035b13b82f589042b0de31afc364bbe89d0d9ce')}, text='example, a poorly selected shard key can result in uneven\\ndata distribution. In this case, most if not all of the queries\\nwill be directed to the single mongodthat is managing the\\ndata. F urthermore, MongoD B may be attempting to\\nredistribute the documents to ac hieve a more ideal balance\\nacross the servers.', start_char_idx=0, end_char_idx=309, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n'), score=0.9037080407142639)]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/llamaindex/llamaindex-perform-qa.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            retriever = vector_store_index.as_retriever(similarity_top_k=3)\n            nodes = retriever.retrieve(\"MongoDB Atlas security\")  \n\n            for node in nodes:\n                print(node)\n         \n         .. output:: \n            :language: JSON\n\n            Node ID: 8a743e7c-4d28-4f7c-9c64-1033523a767d\n            Text: MongoD B Atlas provides: •Security f eatures to protect access\n            to your data •Built in replication for always-on availability ,\n            tolerating complete data center failure •Backups and point in time\n            recovery to protect against data corruption •Fine-grained monitoring\n            to let you know when to scale.\n            Score:  0.935\n\n            Node ID: 5904c51b-ac96-4a2f-818e-35c85af4b624\n            Text: MongoD B Atlas f eatures e xtensive capabilities to def end,\n            detect, and control access to MongoD B, off ering among the most\n            complete security controls of any modern database: •User Rights\n            Management.User Rights Management. Control access to sensitive data\n            using industry standard mec hanisms for authentication and\n            authorization at the database ...\n            Score:  0.932\n\n            Node ID: cb71a615-2f69-47b3-87e7-3373ff476fd6\n            Text: Protect data in motion over the network and at rest in\n            persistent storage To ensure a secure system right out of the b ox,\n            authentication and I P Address whitelisting are automatically enabled.\n            Review the security section of the MongoD B Atlas documentation to\n            learn more ab out eac h of the security features discussed below .\n            Score:  0.930\n\n   .. tab:: Semantic Search with Filtering\n      :tabid: semantic-search-filter\n\n      You can also pre-filter your data by using a match expression\n      that compares the indexed field with boolean, number, or \n      string values. You must index any metadata fields that you want to \n      filter by as the ``filter`` type. To learn more, see \n      :ref:`avs-types-vector-search`.\n\n      .. note:: \n\n         You specified the ``metadata.page_label`` field as a filter \n         when you :ref:`created the index <llamaindex-create-index>`\n         for this tutorial.\n\n      This example performs a semantic search for the\n      string ``MongoDB Atlas security`` and returns a \n      list of documents ranked by :ref:`relevance score <scoring-ref>`. \n      It also specifies the following:\n\n      - {+avs+} as a `retriever \n        <https://docs.llamaindex.ai/en/stable/module_guides/querying/retriever/>`__\n        to perform semantic search.\n      - The  ``similarity_top_k`` parameter to return \n        only the three most relevant documents.\n      - A filter on the ``metadata.page_label`` field \n        so that {+avs+} searches for documents appearing on page 17 only.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/llamaindex/llamaindex-query-examples.rst"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: python\n\n            # Specify metadata filters\n            metadata_filters = MetadataFilters(\n               filters=[ExactMatchFilter(key=\"metadata.page_label\", value=\"17\")]\n            )\n            retriever = vector_store_index.as_retriever(similarity_top_k=3, filters=metadata_filters)\n            nodes = retriever.retrieve(\"MongoDB Atlas security\")\n\n            for node in nodes:\n                print(node)\n\n         .. output:: \n            :language: JSON\n\n            Node ID: bd82d311-e70b-4d00-aab9-56b84ad16e3d\n            Text: Integrating MongoD B with External Monitoring S olutions The\n            MongoD B Atlas AP I provides integration with e xternal management\n            frameworks through programmatic access to automation f eatures and\n            alerts. APM Integration Many operations teams use Application P\n            erformance Monitoring (AP M) platforms to gain global oversight of 15\n            Score:  0.911\n\n            Node ID: c24f0bdd-d84e-4214-aceb-aa2cbd362819\n            Text: If the MongoD B cluster e xperiences a failure, the most\n            recentbackup is only moments behind, minimizing e xposure to data\n            loss. In additional, MongoD B Atlas includes queryable bac kups, which\n            allows you to perform queries against e xisting snapshots to more\n            easily restore data at the document/ object level. Queryable bac kups\n            allow you to acco...\n            Score:  0.911\n\n            Node ID: 642f08a3-f9b7-427b-81ce-00c1574eea01\n            Text: In the vast majority of cases, MongoD B Atlas bac kups delivers\n            the simplest, saf est, and most efficient bac kup solution. mongodump\n            is useful when data needs to be exported to another system, when a\n            local bac kup is needed, or when just a subset of the data needs to be\n            backed up.\n            Score:  0.909\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/llamaindex/llamaindex-query-examples.rst"
  },
  {
    "code": "   :copyable: true \n\n   # Connect to your Atlas cluster and specify the collection\n   client = MongoClient(ATLAS_CONNECTION_STRING)\n   collection = client[\"semantic_kernel_db\"][\"test\"]\n\n   # Create your index model, then create the search index\n   search_index_model = SearchIndexModel(\n      definition={\n         \"fields\": [\n            {\n            \"type\": \"vector\",\n            \"path\": \"embedding\",\n            \"numDimensions\": 1536,\n            \"similarity\": \"cosine\"\n            }\n         ]\n      },\n      name=\"vector_index\",\n      type=\"vectorSearch\"\n   )\n\n   collection.create_search_index(model=search_index_model)\n   \n.. include:: /includes/fact-index-build-initial-sync.rst\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-create-index.rst"
  },
  {
    "code": "   :copyable: true \n   :linenos: \n   \n    kernel.ImportPluginFromObject(new TextMemoryPlugin(textMemory));\n    const string promptTemplate = @\"\n    Answer the following question based on the given context.\n    Question: {{$input}}\n    Context: {{recall 'When did I start using MongoDB?'}}\n    \";\n\n    // Create and Invoke function from the prompt template\n    var settings = kernel.CreateFunctionFromPrompt(promptTemplate, new OpenAIPromptExecutionSettings());\n    var ragResults = await kernel.InvokeAsync(settings, new()\n    {\n        [TextMemoryPlugin.InputParam] = \"When did I start using MongoDB?\",\n        [TextMemoryPlugin.CollectionParam] = \"test\"\n    });\n\n    // Print RAG Search Results\n    Console.WriteLine(\"Question: When did I start using MongoDB?\");\n    Console.WriteLine($\"Answer: {ragResults.GetValue<string>()}\");\n\nSave the file, then run the following command to generate a response:\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-perform-qa-csharp.rst"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language:  shell\n\n      dotnet run\n\n   .. output:: \n\n      Question: When did I start using MongoDB?\n      Answer: You started using MongoDB two years ago.\n\n.. tip:: \n\n      You can add your own data and replace the following parts of the code \n      to generate responses on a different question:\n\n      - ``{{recall '<question>'}}`` ,\n      - ``[TextMemory.InputParam] = \"<question>\"`` ,\n      - ``Console.WriteLine(\"Question: <question>\")`` .\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-perform-qa-csharp.rst"
  },
  {
    "code": "    :copyable: true \n\n    .. input:: \n       :language: python\n\n       service_id = \"chat\"\n       settings = kernel.get_service(service_id).instantiate_prompt_execution_settings(\n          service_id=service_id\n       )\n\n       prompt_template = \"\"\"\n          Answer the following question based on the given context.\n\n          Question: {{$input}}\n          Context: {{$context}}\n       \"\"\"\n\n       chat_prompt_template_config = PromptTemplateConfig(\n          execution_settings=settings,\n          input_variables=[\n              InputVariable(name=\"input\"),\n              InputVariable(name=\"context\")\n          ],\n          template=prompt_template\n       )\n\n       prompt = kernel.add_function(\n          function_name=\"RAG\",\n          plugin_name=\"TextMemoryPlugin\",\n          prompt_template_config=chat_prompt_template_config,\n       )\n\n       question = \"When did I start using MongoDB?\"\n       results = await memory.search(\"test\", question)\n       retrieved_document = results[0].text\n       answer = await prompt.invoke(\n          kernel=kernel, input=question, context=retrieved_document\n       )\n       print(answer)\n\n    .. output:: \n\n       You started using MongoDB two years ago.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-perform-qa.rst"
  },
  {
    "code": "   :copyable: true \n   :linenos: \n\n   var results = textMemory.SearchAsync(collection: \"test\", query: \"What is my job title?\");\n\n   await foreach (var result in results) {\n      Console.WriteLine($\"Answer: {result?.Metadata.Text}, {result?.Relevance}\");\n   }\n   Console.WriteLine(\"Search completed.\");\n\nSave the file, then run the following command to see the results of the semantic search:\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-query-examples-csharp.rst"
  },
  {
    "code": "   :copyable: true\n\n   .. input:: \n      :language:  shell\n\n      dotnet run\n\n   .. output:: \n\n      Answer: I am a developer, 0.8913083076477051\n      Search completed.\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-query-examples-csharp.rst"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: python\n\n      result = await memory.search(\"test\", \"What is my job title?\")\n      print(f\"Retrieved document: {result[0].text}, {result[0].relevance}\")\n\n   .. output::\n\n      Retrieved document: I am a developer, 0.8991971015930176\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-query-examples.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n               \n             async def populate_memory(kernel: sk.Kernel) -> None:\n                await memory.save_information(\n                   collection=\"test\", id=\"1\", text=\"I am a developer\"\n                )\n                await memory.save_information(\n                   collection=\"test\", id=\"2\", text=\"I started using MongoDB two years ago\"\n                )\n                await memory.save_information(\n                   collection=\"test\", id=\"3\", text=\"I'm using MongoDB Vector Search with Semantic Kernel to implement RAG\"\n                )\n                await memory.save_information(\n                   collection=\"test\", id=\"4\", text=\"I like coffee\"\n                )\n\n             print(\"Populating memory...\")\n             await populate_memory(kernel)\n             print(kernel)\n\n         .. output::\n\n            Populating memory...\n            plugins=KernelPluginCollection(plugins={'TextMemoryPlugin': KernelPlugin(name='TextMemoryPlugin', description=None, functions={'recall': KernelFunctionFromMethod(metadata=KernelFunctionMetadata(name='recall', plugin_name='TextMemoryPlugin', description='Recall a fact from the long term memory', parameters=[KernelParameterMetadata(name='ask', description='The information to retrieve', default_value=None, type_='str', is_required=True, type_object=<class 'str'>), KernelParameterMetadata(name='collection', description='The collection to search for information.', default_value='generic', type_='str', is_required=False, type_object=<class 'str'>), KernelParameterMetadata(name='relevance', description='The relevance score, from 0.0 to 1.0; 1.0 means perfect match', default_value=0.75, type_='float', is_required=False, type_object=<class 'float'>), KernelParameterMetadata(name='limit', description='The maximum number of relevant memories to recall.', default_value=1, type_='int', is_required=False, type_object=<class 'int'>)], is_prompt=False, is_asynchronous=True, return_parameter=KernelParameterMetadata(name='return', description='', default_value=None, type_='str', is_required=True, type_object=None)), method=<bound method TextMemoryPlugin.recall of TextMemoryPlugin(memory=SemanticTextMemory())>, stream_method=None), 'save': KernelFunctionFromMethod(metadata=KernelFunctionMetadata(name='save', plugin_name='TextMemoryPlugin', description='Save information to semantic memory', parameters=[KernelParameterMetadata(name='text', description='The information to save.', default_value=None, type_='str', is_required=True, type_object=<class 'str'>), KernelParameterMetadata(name='key', description='The unique key to associate with the information.', default_value=None, type_='str', is_required=True, type_object=<class 'str'>), KernelParameterMetadata(name='collection', description='The collection to save the information.', default_value='generic', type_='str', is_required=False, type_object=<class 'str'>)], is_prompt=False, is_asynchronous=True, return_parameter=KernelParameterMetadata(name='return', description='', default_value=None, type_='', is_required=True, type_object=None)), method=<bound method TextMemoryPlugin.save of TextMemoryPlugin(memory=SemanticTextMemory())>, stream_method=None)})}) services={'chat': OpenAIChatCompletion(ai_model_id='gpt-3.5-turbo', service_id='chat', client=<openai.AsyncOpenAI object at 0x7999971c8fa0>, ai_model_type=<OpenAIModelTypes.CHAT: 'chat'>, prompt_tokens=0, completion_tokens=0, total_tokens=0), 'text-embedding-ada-002': OpenAITextEmbedding(ai_model_id='text-embedding-ada-002', service_id='text-embedding-ada-002', client=<openai.AsyncOpenAI object at 0x7999971c8fd0>, ai_model_type=<OpenAIModelTypes.EMBEDDING: 'embedding'>, prompt_tokens=32, completion_tokens=0, total_tokens=32)} ai_service_selector=<semantic_kernel.services.ai_service_selector.AIServiceSelector object at 0x7999971cad70> retry_mechanism=PassThroughWithoutRetry() function_invoking_handlers={} function_invoked_handlers={}\n\n      .. tip:: \n\n         After running the sample code, you can\n         view your vector embeddings :ref:`in the {+atlas-ui+} <atlas-ui-view-collections>`\n         by navigating to the ``semantic_kernel_db.test`` collection in your {+cluster+}.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/semantic-kernel/sk-store-custom-data.rst"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: bash\n\n            curl -X GET http://localhost:8080/tutorial/add\n\n         .. output:: \n            :language: none\n            :visible: false\n\n            Documents added successfully!\n\n      .. tip:: \n\n         After accessing the endpoint, you can\n         view your vector embeddings :ref:`in the {+atlas-ui+} <atlas-ui-view-collections>`\n         by navigating to the ``springai_test.vector_store`` collection in your {+cluster+}.\n\n      Then, run the following\n      command in your terminal to access the ``search`` endpoint to\n      perform the semantic search:\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/spring-ai/spring-access-endpoints.rst"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: bash\n\n            curl -X GET http://localhost:8080/tutorial/search\n\n         .. output:: \n            :language: none\n            :visible: false\n\n            [{\"content\":\"For a natural lawn, selection of the right grass type\n            suitable for your climate is crucial. Balanced watering, generally 1 to\n            1.5 inches per week, is important; overwatering invites disease. Opt for\n            organic fertilizers over synthetic versions to provide necessary\n            nutrients and improve soil structure. Regular lawn aeration helps root\n            growth and prevents soil compaction. Practice natural pest control and\n            consider overseeding to maintain a dense sward, which naturally combats\n            weeds and\n            pest.\",\"metadata\":{\"type\":\"post\",\"author\":\"B\"}},{\"content\":\"Proper tuber\n            planting involves site selection, proper timing, and exceptional care.\n            Choose spots with well-drained soil and adequate sun exposure. Tubers\n            are generally planted in spring, but depending on the plant, timing\n            varies. Always plant with the eyes facing upward at a depth two to three\n            times the tuber's height. Ensure 4 inch spacing between small tubers,\n            expand to 12 inches for large ones. Adequate moisture is needed, yet do\n            not overwater. Mulching can help preserve moisture and prevent weed\n            growth.\",\"metadata\":{\"type\":\"post\",\"author\":\"A\"}}]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/spring-ai/spring-access-endpoints.rst"
  },
  {
    "code": "         :linenos:\n\n         @GetMapping(\"/search\")\n         public List<Map<String, Object>> searchDocuments() {\n     \n             List<Document> results = vectorStore.similaritySearch(\n                     SearchRequest\n                             .query(\"learn how to grow things\")\n                             .withTopK(2)\n             );\n     \n             return results.stream().map(doc -> Map.of(\n                     \"content\", doc.getContent(),\n                     \"metadata\", doc.getMetadata()\n             )).collect(Collectors.toList());\n         }\n\n   .. step:: (Optional) Perform a semantic search with metadata filtering.\n\n      To perform a search with metadata filtering, you can use the\n      ``Filter.Expression`` builder class from the Java Sync driver.\n      \n      You can use an :abbr:`MQL (MongoDB Query Language)`\n      match expression to pre-filter for documents. This example filters\n      for documents in which the value of the ``author`` field is\n      ``\"A\"``. Then, it performs a semantic search query for the phrase\n      ``\"learn how to grow things\"``.\n\n      In the body of the ``searchDocuments()`` method defined in the\n      preceding step, replace the code that calls the\n      ``similaritySearch()`` method (lines 4-8\n      in the preceding block) with the following code:\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/spring-ai/spring-endpoints.rst"
  },
  {
    "code": "         :emphasize-lines: 2, 5\n\n         spring.application.name=springai-mongodb\n         spring.ai.openai.api-key=<OpenAI API Key>\n         spring.ai.openai.embedding.options.model=text-embedding-ada-002\n         \n         spring.data.mongodb.uri=<connection string>\n         spring.data.mongodb.database=springai_test\n         spring.ai.vectorstore.mongodb.indexName=vector_index\n         spring.ai.vectorstore.mongodb.collection-name=vector_store\n\n      .. note:: \n\n         Your connection string should use the following format:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/ai-integrations/spring-ai/spring-set-up-environment.rst"
  },
  {
    "code": "   :copyable: false\n   \n   HTTP/1.1 202 Accepted\n   Vary: Accept-Encoding\n   Content-Type: application/json\n   Strict-Transport-Security: max-age=300\n   Date: {dateInUnixFormat}\n   Connection: keep-alive\n   Content-Length: {requestLengthInBytes}\n   \n",
    "language": "http",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/api/api-headers/202.rst"
  },
  {
    "code": "   :copyable: false\n\n   HTTP/1.1 204 No Content\n   Vary: Accept-Encoding\n   Content-Type: application/json\n   Strict-Transport-Security: max-age=300\n   Date: {dateInUnixFormat}\n   Connection: keep-alive\n   Content-Length: {requestLengthInBytes}\n\n",
    "language": "http",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/api/api-headers/204.rst"
  },
  {
    "code": "          :copyable: false \n\n          /exported_snapshots/{ORG-NAME}/{PROJECT-NAME}/{CLUSTER-NAME}/{SNAPSHOT-INITIATION-DATE}/{TIMESTAMP}\n\n   * - ``snapshotId`` \n     - string \n     - Unique identifier of the snapshot.\n\n   * - ``state`` \n     - string \n     - Status of the export job. Value can be one of the following: \n\n       - ``Queued`` - indicates that the export job is queued \n       - ``InProgress`` - indicates that the snapshot is being exported \n       - ``Successful`` - indicates that the export job has completed \n         successfully \n       - ``Failed`` - indicates that the export job has failed\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/api/list-tables/cloud-backup-snapshot-export/response.rst"
  },
  {
    "code": "      :copyable: false\n\n      Another object with the same value for property servicePrincipalNames already exists.\n\n#. Copy the following example ``peering-role.json`` file and save it\n   to your current working directory:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/api/vpc-create-peering-azure-api-prereqs.rst"
  },
  {
    "code": "      :linenos:\n\n      {\n        \"Name\":\"AtlasPeering/<azureSubscriptionId>/<resourceGroupName>/<vnetName>\",\n        \"IsCustom\":true,\n        \"Description\":\"Grants MongoDB access to manage peering connections on network /subscriptions/<azureSubscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>\",\n        \"Actions\":[\n            \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/read\",\n            \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/write\",\n            \"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/delete\",\n            \"Microsoft.Network/virtualNetworks/peer/action\"\n        ],\n        \"AssignableScopes\":[\n            \"/subscriptions/<azureSubscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>\"\n        ]\n      }\n\n#. Replace the variables in the ``peering-role.json`` with details\n   about the Azure VNet to which you want to create a peering\n   connection:\n\n   .. list-table::\n      :header-rows: 1\n      :widths: 30 70\n\n      * - Variable\n        - Description\n\n      * - ``azureSubscriptionId``\n        - Unique identifer of the Azure subscription in which the\n          VNet resides.\n\n      * - ``resourceGroupName``\n        - Name of your Azure resource group.\n\n      * - ``vnetName``\n        - Name of your Azure VNet.\n\n#. Run the following Azure CLI command to create the role definition\n   using the ``peering-role.json`` file:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/api/vpc-create-peering-azure-api-prereqs.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp interfaces create <endpointGroupId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - endpointGroupId\n     - string\n     - true\n     - Unique identifier for the endpoint group.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpoint\n     - strings\n     - false\n     - List of GCP endpoints in the group separated by commas, such as: endpointName1@ipAddress1,...,endpointNameN@ipAddressN\n   * - --endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - --gcpProjectId\n     - string\n     - true\n     - Unique identifier of the GCP project in which the network peer resides.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/atlas-privateEndpoints-gcp-interfaces-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoints gcp interfaces create endpoint-1 \\\n   --endpointServiceId 61eaca605af86411903de1dd \\\n   --gcpProjectId mcli-private-endpoints \\\n   --endpoint endpoint-0@10.142.0.2,endpoint-1@10.142.0.3,endpoint-2@10.142.0.4,endpoint-3@10.142.0.5,endpoint-4@10.142.0.6,endpoint-5@10.142.0.7\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/atlas-privateEndpoints-gcp-interfaces-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp interfaces describe <id> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - id\n     - string\n     - true\n     - Unique identifier of the private endpoint you want to retrieve.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/atlas-privateEndpoints-gcp-interfaces-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoints gcp interfaces describe endpoint-1 \\\n   --endpointServiceId 61eaca605af86411903de1dd\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/atlas-privateEndpoints-gcp-interfaces-describe.rst"
  },
  {
    "code": "         :language: javascript\n         :copyable:\n         :caption: create-embeddings.js\n\n   .. step:: Specify the connection string.\n\n      Replace ``<connectionString>`` with your |service| {+cluster+}'s |srv| \n      :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n\n      .. note::\n         \n         .. include:: /includes/fact-connection-string-format-drivers.rst\n\n   .. step:: Save and run the file.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-embeddings-existing-node.rst"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n\n            node create-embeddings.js\n\n         .. output:: \n            :language: sh\n\n            Generating embeddings for documents...\n            Count of documents updated: 50\n\n      You can view your vector embeddings as they generate by \n      navigating to the ``sample_airbnb.listingsAndReviews`` collection \n      :ref:`in the {+atlas-ui+} <atlas-ui-view-collections>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-embeddings-existing-node.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input::\n            :language: python\n\n            import pymongo\n\n            # Connect to your Atlas cluster\n            mongo_client = pymongo.MongoClient(\"<connection-string>\")\n            db = mongo_client[\"sample_airbnb\"]\n            collection = db[\"listingsAndReviews\"]\n\n            # Filter to exclude null or empty summary fields\n            filter = { \"summary\": {\"$nin\": [ None, \"\" ]} }\n\n            # Get a subset of documents in the collection\n            documents = collection.find(filter).limit(50)\n\n            # Update each document with a new embedding field\n            updated_doc_count = 0\n            for doc in documents:\n                embedding = get_embedding(doc[\"summary\"])\n                collection.update_one( { \"_id\": doc[\"_id\"] }, { \"$set\": { \"embedding\": embedding } } )\n                updated_doc_count += 1\n\n            print(f\"Updated {updated_doc_count} documents.\")\n               \n         .. output:: \n\n            Updated 50 documents. \n            \n   .. step:: Specify the connection string.\n\n      Replace ``<connection-string>`` with your |service| {+cluster+}'s |srv| \n      :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n\n      .. note::\n         \n         .. include:: /includes/fact-connection-string-format-drivers.rst\n\n   .. step:: Run the code.\n\n      You can view your vector embeddings as they generate by \n      navigating to the ``sample_airbnb.listingsAndReviews`` collection \n      :ref:`in the {+atlas-ui+} <atlas-ui-view-collections>`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-embeddings-existing-python.rst"
  },
  {
    "code": "         :language: javascript\n         :copyable:\n         :caption: create-embeddings.js\n          \n   .. step:: Specify the connection string.\n\n      Replace ``<connectionString>`` with your |service| {+cluster+}'s |srv| \n      :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n\n      .. note::\n         \n         .. include:: /includes/fact-connection-string-format-drivers.rst\n\n   .. step:: Save and run the file.\n\n      .. tabs::\n         :hidden:\n         \n         .. tab:: Open-Source\n            :tabid: open-source\n                  \n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-embeddings-new-node.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input::\n\n                  node create-embeddings.js\n\n               .. output:: \n                  :language: sh\n\n                  [ -0.04323853924870491, -0.008460805751383305, 0.012494648806750774, -0.013014335185289383, ... ]\n                  [ -0.017400473356246948, 0.04922063276171684, -0.002836339408531785, -0.030395228415727615, ... ]\n                  [ -0.016950927674770355, 0.013881809078156948, -0.022074559703469276, -0.02838018536567688, ... ]\n\n         .. tab:: OpenAI\n            :tabid: openai\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-embeddings-new-node.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input::\n\n                  node create-embeddings.js\n\n               .. output:: \n                  :language: sh\n\n                  [ 0.031927742, -0.014192767, -0.021851597, 0.045498233, -0.0077904654, ... ]\n                  [ -0.01664538, 0.013198251, 0.048684783, 0.014485021, -0.018121032, ... ]\n                  [ 0.030449908, 0.046782598, 0.02126599, 0.025799986, -0.015830345, ... ]\n\n      .. note::\n\n         The number of dimensions in the output have been truncated for\n         readability.\n       \n      You can also view your vector embeddings :ref:`in the {+atlas-ui+}\n      <atlas-ui-view-collections>` by navigating to the ``sample_db.embeddings`` \n      collection in your {+cluster+}.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-embeddings-new-node.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input::\n            :language: python\n\n            import pymongo\n\n            # Connect to your Atlas cluster\n            mongo_client = pymongo.MongoClient(\"<connection-string>\")\n            db = mongo_client[\"sample_db\"]\n            collection = db[\"embeddings\"]\n\n            # Sample data\n            data = [\n               \"Titanic: The story of the 1912 sinking of the largest luxury liner ever built\",\n               \"The Lion King: Lion cub and future king Simba searches for his identity\",\n               \"Avatar: A marine is dispatched to the moon Pandora on a unique mission\"\n            ]\n\n            # Ingest data into Atlas\n            inserted_doc_count = 0\n            for text in data:\n               embedding = get_embedding(text)\n               collection.insert_one({ \"text\": text, \"embedding\": embedding })\n               inserted_doc_count += 1\n\n            print(f\"Inserted {inserted_doc_count} documents.\")\n\n         .. output:: \n\n            Inserted 3 documents. \n\n   .. step:: Specify the connection string.\n\n      Replace ``<connection-string>`` with your |service| {+cluster+}'s |srv| \n      :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n\n      .. note::\n         \n         .. include:: /includes/fact-connection-string-format-drivers.rst\n\n   .. step:: Run the code.\n\n      You can verify your vector embeddings by viewing them \n      :ref:`in the {+atlas-ui+} <atlas-ui-view-collections>`\n      by navigating to the ``sample_db.embeddings`` collection in your {+cluster+}.\n      \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-embeddings-new-python.rst"
  },
  {
    "code": "      :copyable: true \n\n      from pymongo.operations import SearchIndexModel\n\n      # Create your index model, then create the search index\n      search_index_model = SearchIndexModel(\n        definition = {\n          \"fields\": [\n            {\n              \"type\": \"vector\",\n              \"path\": \"embedding\",\n              \"similarity\": \"euclidean\",\n              \"numDimensions\": 768\n            }\n          ]\n        },\n        name=\"vector_index\",\n        type=\"vectorSearch\",\n      )\n      collection.create_search_index(model=search_index_model)\n\n#. Run the code.\n \n   .. include:: /includes/fact-index-build-initial-sync.rst\n            \nTo learn more, see :ref:`avs-create-index`.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-index-open-source.rst"
  },
  {
    "code": "      :copyable: true \n\n      from pymongo.operations import SearchIndexModel\n\n      # Create your index model, then create the search index\n      search_index_model = SearchIndexModel(\n        definition = {\n          \"fields\": [\n            {\n              \"type\": \"vector\",\n              \"path\": \"embedding\",\n              \"similarity\": \"euclidean\",\n               \"numDimensions\": 1536\n            }\n          ]\n        },\n        name=\"vector_index\",\n        type=\"vectorSearch\",\n      )\n      collection.create_search_index(model=search_index_model)\n\n#. Run the code.\n \n   .. include:: /includes/fact-index-build-initial-sync.rst\n            \nTo learn more, see :ref:`avs-create-index`.\n  \n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-create-index-openai.rst"
  },
  {
    "code": "         :language: js\n         :copyable:\n         :caption: get-embeddings.js\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-embedding-function-node-open-source.rst"
  },
  {
    "code": "            :language: js\n            :copyable:\n            :caption: get-embeddings.js\n\n      #. Replace ``<apiKey>`` with your OpenAI API key, then save the file.\n      \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-embedding-function-node-openai.rst"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: python\n\n            from sentence_transformers import SentenceTransformer\n\n            # Load the embedding model (https://huggingface.co/nomic-ai/nomic-embed-text-v1\")\n            model = SentenceTransformer(\"nomic-ai/nomic-embed-text-v1\", trust_remote_code=True)\n\n            # Define a function to generate embeddings\n            def get_embedding(data):\n               \"\"\"Generates vector embeddings for the given data.\"\"\"\n\n               embedding = model.encode(data)\n               return embedding.tolist()\n               \n            # Generate an embedding\n            get_embedding(\"foo\")\n\n         .. output:: \n            :language: sh\n\n            [-0.029808253049850464, 0.03841473162174225, -0.02561120130121708, -0.06707508116960526, 0.03867151960730553, ... ]\n            \n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-embedding-function-python-open-source.rst"
  },
  {
    "code": "         :copyable: true \n         \n         .. input:: \n            :language: python\n\n            import os\n            from openai import OpenAI\n\n            # Specify your OpenAI API key and embedding model\n            os.environ[\"OPENAI_API_KEY\"] = \"<api-key>\"\n            model = \"text-embedding-3-small\"\n            openai_client = OpenAI()\n\n            # Define a function to generate embeddings\n            def get_embedding(text):\n               \"\"\"Generates vector embeddings for the given text.\"\"\"\n\n               embedding = openai_client.embeddings.create(input = [text], model=model).data[0].embedding\n               return embedding\n\n            # Generate an embedding\n            get_embedding(\"foo\")\n\n         .. output:: \n            :language: sh\n\n            [-0.005843308754265308, -0.013111298903822899, -0.014585349708795547, 0.03580040484666824, 0.02671629749238491, ... ]\n            \n      .. seealso::\n\n         For |api| details and a list of available models, refer to\n         the `OpenAI documentation <https://platform.openai.com/docs/guides/embeddings>`__.\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-embedding-function-python-openai.rst"
  },
  {
    "code": "            :language: js\n            :copyable:\n            :caption: create-index.js\n\n      #. Replace the following placeholder values:\n      \n         - ``<connectionString>`` with your |service| {+cluster+}'s |srv| \n           :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n         - ``<dimensions>`` with ``768`` if you used the open-source model\n           and ``1536`` if you used the model from OpenAI.\n    \n      #. Save the file, then run the following command:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-existing-node.rst"
  },
  {
    "code": "            :language: js\n            :copyable:\n            :caption: vector-query.js\n\n      #. Replace ``<connectionString>`` with your |service| {+cluster+}'s |srv| \n         :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n\n      #. Save the file, then run the following command:\n         \n         .. tabs:: \n            :hidden:\n\n            .. tab:: Open-Source\n               :tabid: open-source\n       \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-existing-node.rst"
  },
  {
    "code": "                  :copyable: true \n                  \n                  .. input:: \n\n                     node vector-query.js\n\n                  .. output:: /includes/avs-examples/tutorial/output-existing-open-source-node.json\n                     :language: json\n\n\n            .. tab:: OpenAI\n               :tabid: openai\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-existing-node.rst"
  },
  {
    "code": "                  :copyable: true \n                  \n                  .. input:: \n\n                     node vector-query.js\n\n                  .. output:: /includes/avs-examples/tutorial/output-existing-openai.json\n                     :language: json\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-existing-node.rst"
  },
  {
    "code": "               :copyable: true \n               \n               .. input:: /includes/avs-examples/tutorial/vector-search-query-embeddings-existing.py\n                  :language: python\n               \n               .. output:: /includes/avs-examples/tutorial/output-existing-open-source-python.json\n                  :language: json\n\n         .. tab:: OpenAI\n            :tabid: openai\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-existing-python.rst"
  },
  {
    "code": "               :copyable: true \n               \n               .. input:: /includes/avs-examples/tutorial/vector-search-query-embeddings-existing.py\n                  :language: python\n\n               .. output:: /includes/avs-examples/tutorial/output-existing-openai.json\n                  :language: json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-existing-python.rst"
  },
  {
    "code": "            :language: js\n            :copyable:\n            :caption: create-index.js\n\n      #. Replace the following placeholder values:\n      \n         - ``<connectionString>`` with your |service| {+cluster+}'s |srv| \n           :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n         - ``<dimensions>`` with ``768`` if you used the open-source model\n           and ``1536`` if you used the model from OpenAI.\n    \n      #. Save the file, then run the following command:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-new-node.rst"
  },
  {
    "code": "            :language: js\n            :copyable:\n            :caption: vector-query.js\n\n      #. Replace ``<connectionString>`` with your |service| {+cluster+}'s |srv| \n         :manual:`connection string </reference/connection-string/#find-your-mongodb-atlas-connection-string>`.\n\n      #. Save the file, then run the following command:\n         \n         .. tabs:: \n            :hidden:\n\n            .. tab:: Open-Source\n               :tabid: open-source\n       \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-new-node.rst"
  },
  {
    "code": "                  :copyable: true \n                  \n                  .. input:: \n\n                     node vector-query.js\n\n                  .. output:: /includes/avs-examples/tutorial/output-new-open-source-node.json\n                     :language: json\n\n            .. tab:: OpenAI\n               :tabid: openai\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-new-node.rst"
  },
  {
    "code": "                  :copyable: true \n                  \n                  .. input:: \n\n                     node vector-query.js\n\n                  .. output:: /includes/avs-examples/tutorial/output-new-openai.json\n                     :language: json\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-new-node.rst"
  },
  {
    "code": "               :copyable: true \n               \n               .. input:: /includes/avs-examples/tutorial/vector-search-query-embeddings-new.py\n                  :language: python\n\n               .. output:: /includes/avs-examples/tutorial/output-new-open-source-python.json\n                  :language: json\n\n         .. tab:: OpenAI\n            :tabid: openai\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-new-python.rst"
  },
  {
    "code": "               :copyable: true \n               \n               .. input:: /includes/avs-examples/tutorial/vector-search-query-embeddings-new.py\n                  :language: python\n\n               .. output:: /includes/avs-examples/tutorial/output-new-openai.json\n                  :language: json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/create-embeddings/steps-avs-query-embedding-new-python.rst"
  },
  {
    "code": "         :language: javascript\n\n      This index definition specifies indexing the ``embeddings`` field\n      in an index of the :ref:`vectorSearch <avs-types-vector-search>` type\n      for the ``sample_airbnb.listingsAndReviews`` collection.\n      This field contains the embeddings created using the\n      embedding model. The index definition specifies ``1024`` vector\n      dimensions and measures similarity using ``cosine``.\n\n   .. step:: Create the {+avs+} index.\n\n      a. Save the file, and then run the following command in your terminal\n         to execute the code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/local-rag/create-index-programmatically-javascript.rst"
  },
  {
    "code": "            :copyable: true \n\n            node --env-file=.env vector-index.js\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/local-rag/create-index-programmatically-javascript.rst"
  },
  {
    "code": "   :language: python\n\nThis index definition specifies indexing the ``embeddings`` field\nin an index of the :ref:`vectorSearch <avs-types-vector-search>` type\nfor the ``sample_airbnb.listingsAndReviews`` collection.\nThis field contains the embeddings created using the\nembedding model. The index definition specifies ``1024`` vector\ndimensions and measures similarity using ``cosine``.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/local-rag/create-index-programmatically-python.rst"
  },
  {
    "code": "         :language: javascript\n\n      This code performs a vector query on your local |service|\n      {+deployment+} or your |service| {+cluster+}.\n\n      Run a test query to confirm you're getting the expected results. Create\n      a new file called ``test-query.js``, and paste the following code into it:\n\n      .. literalinclude: /includes/avs-examples/local-rag/test-query.js\n         :language: javascript\n\n      Run the following code to execute the query:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/local-rag/perform-qa-javascript.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: console\n\n            node --env-file=.env test-query.js\n\n         .. output:: /includes/avs-examples/local-rag/test-query-output.sh\n\n   .. step:: Download the local |llm| and model information mapping.\n\n      a. Click the following button to download the Mistral 7B model\n         from GPT4All. To explore other models, refer to the \n         `GPT4All website <https://gpt4all.io/index.html>`__.\n\n         .. button:: Download\n            :uri: https://gpt4all.io/models/gguf/mistral-7b-openorca.gguf2.Q4_0.gguf\n\n      #. Move this model into your ``local-rag-mongodb`` project directory.\n\n      #. In your project directory, download the file that contains the model\n         information.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/local-rag/perform-qa-javascript.rst"
  },
  {
    "code": "         :language: javascript\n    \n      This code does the following:\n\n      - Creates an embedding for your query string.\n\n      - Queries for relevant documents.\n\n      - Prompts the |llm| and returns the response. The generated response\n        might vary.\n\n      Run the following code to complete your |rag| implementation:\n   \n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/local-rag/perform-qa-javascript.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: console\n\n            node --env-file=.env local-llm.js\n\n         .. output:: /includes/avs-examples/local-rag/llm-output.sh\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-examples/local-rag/perform-qa-javascript.rst"
  },
  {
    "code": "      :emphasize-lines: 3\n\n      {\n         \"name\": \"hybrid-search-mongodb\",\n         \"type\": \"module\",\n         ...\n\n#. Create an ``.env`` file.\n\n   In your project, create a ``.env`` file to store your Atlas connection\n   string.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-hybrid-search-set-up-environment-javascript.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            cd mxbai-embed-large-v1/onnx\n            ls\n\n         .. output::\n            :language: console\n\n            model.onnx      model_fp16.onnx     model_quantized.onnx\n\n   .. step:: Generate embeddings.\n\n      a. Navigate back to the ``local-rag-mongodb`` parent directory.\n\n      #. Create a file called ``get-embeddings.js``, and paste the following code\n         into it:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-local-rag-generate-embeddings-with-local-model-javascript.rst"
  },
  {
    "code": "            :language: javascript\n\n         Replace the ``'/Users/<username>/local-rag-mongodb/'`` with the local\n         path from the prior step.\n\n      #. Create another file called ``generate-embeddings.js`` and paste the\n         following code into it:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-local-rag-generate-embeddings-with-local-model-javascript.rst"
  },
  {
    "code": "            :language: javascript\n            :linenos:\n\n         This code includes a few lines to test that you have correctly\n         downloaded the model and are using the correct path. Run the following\n         command to execute the code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-local-rag-generate-embeddings-with-local-model-javascript.rst"
  },
  {
    "code": "            :copyable: true\n\n            .. input::\n               :language: shell\n\n               node --env-file=.env generate-embeddings.js\n\n            .. output::\n               :language: console\n\n               Tensor {\n                  dims: [ 1, 1024 ],\n                  type: 'float32',\n                  data: Float32Array(1024) [\n                     -0.01897735893726349,  -0.001120976754464209,  -0.021224822849035263,\n                     -0.023649735376238823,   -0.03350808471441269, -0.0014186901971697807,\n                     -0.009617107920348644,    0.03344292938709259,    0.05424851179122925,\n                     -0.025904450565576553,   0.029770011082291603, -0.0006215018220245838,\n                     0.011056603863835335,  -0.018984895199537277,    0.03985185548663139,\n                     -0.015273082070052624,   -0.03193040192127228,   0.018376577645540237,\n                     -0.02236943319439888,    0.01433168537914753,    0.02085157483816147,\n                     -0.005689046811312437,   -0.05541415512561798,  -0.055907104164361954,\n                     -0.019112611189484596,    0.02196515165269375,   0.027313007041811943,\n                     -0.008618313819169998,   0.045496534556150436,    0.06271681934595108,\n                     -0.0028660669922828674,   -0.02433634363114834,    0.02016191929578781,\n                     -0.013882477767765522,  -0.025465600192546844,  0.0000950733374338597,\n                     0.018200192600488663,  -0.010413561016321182,  -0.002004098379984498,\n                     -0.058351870626211166,    0.01749623566865921,  -0.013926318846642971,\n                     -0.00278360559605062,  -0.010333008132874966,   0.004406726453453302,\n                     0.04118744656443596,    0.02210155501961708,  -0.016340743750333786,\n                     0.004163357429206371,  -0.018561601638793945,  0.0021984230261296034,\n                     -0.012378614395856857,   0.026662321761250496,  -0.006476820446550846,\n                     0.001278138137422502,  -0.010084952227771282,  -0.055993322283029556,\n                     -0.015850437805056572,   0.015145729295909405,    0.07512971013784409,\n                     -0.004111358895897865,  -0.028162647038698196,   0.023396577686071396,\n                     -0.01159974467009306,   0.021751703694462776,   0.006198467221111059,\n                     0.014084039255976677, -0.0003913900291081518,   0.006310020107775927,\n                     -0.04500332102179527,   0.017774192616343498,  -0.018170733004808426,\n                     0.026185045018792152,   -0.04488714039325714,  -0.048510149121284485,\n                     0.015152698382735252,   0.012136898003518581,     0.0405895821750164,\n                     -0.024783289059996605,   -0.05514788627624512,    0.03484730422496796,\n                     -0.013530988246202469,     0.0319477915763855,    0.04537525027990341,\n                     -0.04497901350259781,   0.009621822275221348,  -0.013845544308423996,\n                     0.0046155862510204315,    0.03047163411974907,  0.0058857654221355915,\n                     0.005858785007148981,    0.01180865429341793,    0.02734190598130226,\n                     0.012322399765253067,    0.03992653638124466,   0.015777742490172386,\n                     0.017797520384192467,    0.02265017107129097,  -0.018233606591820717,\n                     0.02064627595245838,\n                     ... 924 more items\n                  ],\n                  size: 1024\n                  }\n\n      #. After you have confirmed you are successfully generating embeddings\n         with the local model, uncomment the code in lines 35-52 to generate\n         embeddings for all the documents in the collection. Save the file.\n\n         Then, run the command to execute the code:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-local-rag-generate-embeddings-with-local-model-javascript.rst"
  },
  {
    "code": "            :copyable: true\n\n            .. input::\n               :language: shell\n\n               node --env-file=.env generate-embeddings.js\n\n            .. output:: /includes/avs-examples/local-rag/generate-embeddings-javascript-output.sh\n               :visible: false\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-local-rag-generate-embeddings-with-local-model-javascript.rst"
  },
  {
    "code": "         :emphasize-lines: 3\n\n         {\n            \"name\": \"local-rag-mongodb\",\n            \"type\": \"module\",\n            ...\n         }\n\n   .. step:: Create a ``.env`` file.\n\n      In your project, create a ``.env`` file to store your connection string.\n      \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-local-rag-set-up-environment-javascript.rst"
  },
  {
    "code": "      :emphasize-lines: 3\n\n      {\n         \"name\": \"rag-mongodb\",\n         \"type\": \"module\",\n         ...\n\n#. Create a ``.env`` file.\n\n   In your project, create a ``.env`` file to store your Atlas connection\n   string and Hugging Face access token.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-rag-set-up-environment-node.rst"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: shell\n              \n         use sample_mflix \n\n      .. output:: \n         :language: shell \n\n         switched to db sample_mflix\n\n#. Run the :method:`db.collection.createSearchIndex()` method.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-rrf-tutorial-create-fts-index-mongosh.rst"
  },
  {
    "code": "      :language: shell\n      :copyable: true \n      :linenos:\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-rrf-tutorial-create-fts-index-mongosh.rst"
  },
  {
    "code": "      :copyable: true \n\n      .. input:: \n         :language: shell\n              \n         use sample_mflix \n\n      .. output:: \n         :language: shell \n\n         switched to db sample_mflix\n\n#. Run the :method:`db.collection.createSearchIndex()` method.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-rrf-tutorial-create-vector-index-mongosh.rst"
  },
  {
    "code": "      :language: shell\n      :copyable: true \n      :linenos:\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/avs-rrf-tutorial-create-vector-index-mongosh.rst"
  },
  {
    "code": "           :copyable: false\n\n           mongodb+srv://cluster0-pl-0-k45tj.mongodb.net\n\n      - Standard connection string\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/aws-pl-connection-strings.rst"
  },
  {
    "code": "           :copyable: false\n\n           mongodb://pl-0-us-east-1-k45tj.mongodb.net:1024,pl-0-us-east-1-k45tj.mongodb.net:1025,pl-0-us-east-1-k45tj.mongodb.net:1026/?ssl=true&authSource=admin&replicaSet=Cluster0-shard-0-shard-0\n\n      .. include:: /includes/fact-pl-connection-strings.rst\n\n      **SRV Record for DNS Seedlist Private Endpoint-Aware Connection \n      Strings**\n\n      The following example shows the SRV record for an {+aws-pl+}\n      -enabled single-region {+cluster+}, showing three unique ports \n      defined for ``pl-0-us-east-1-k45tj.mongodb.net``:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/aws-pl-connection-strings.rst"
  },
  {
    "code": "         :copyable: false\n         \n         $ nslookup -type=SRV _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net\n\n         Server: 127.0.0.53\n         Address: 127.0.0.53#53\n\n         Non-authoritative answer:\n         _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 1026 pl-0-us-east-1-k45tj.mongodb.net.\n         _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 1024 pl-0-us-east-1-k45tj.mongodb.net.\n         _mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net service = 0 0 1025 pl-0-us-east-1-k45tj.mongodb.net.\n\n      In the preceding example:\n\n      - ``_mongodb._tcp.cluster0-pl-0-k45tj.mongodb.net`` is the SRV\n        record that the\n        ``mongodb+srv://cluster0-pl-0-k45tj.mongodb.net``\n        connection string references.\n\n      - ``pl-0-us-east-1-k45tj.mongodb.net`` is the hostname for each\n        node in one |service| {+cluster+} in one region for which \n        you have configured {+aws-pl+}.\n\n      - ``1024``, ``1025``, and ``1026`` are unique ports that \n        |service| assigns on the load balancer for each |service| \n        replica set node in the region for which you enabled \n        {+aws-pl+}. All nodes in an |service| replica set are \n        accessible via the same hostname, with the load balancer \n        resolving individual nodes by their unique port.\n\n      **Hostname DNS Resolution in Private Endpoint-Aware Connection \n      Strings and SRV Records**\n\n      The hostname in the SRV record and the standard connection string \n      is a |dns| Canonical Name (``CNAME``) record that resolves to the\n      endpoint-specific regional |dns| name that |aws| generates for the\n      interface endpoint. A |dns| ``ALIAS`` record exists for each \n      subnet in your |vpc| that you deployed the interface endpoint to. \n      Each ``ALIAS`` record contains the private IP address of the \n      :term:`interface endpoint` for that subnet.\n\n      The following example shows the |dns| lookup for the hostname in \n      the SRV record and in the standard connection string, including \n      the endpoint-specific regional |dns| name for the interface \n      endpoint and its |dns| ``ALIAS`` records:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/aws-pl-connection-strings.rst"
  },
  {
    "code": "         :copyable: false\n\n         $ nslookup pl-0-us-east-1-k45tj.mongodb.net\n         Server: 127.0.0.53\n         Address: 127.0.0.53#53\n\n         Non-authoritative answer:\n         pl-0-us-east-1-k45tj.mongodb.net\n         canonical name = vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com.\n    \n         Name: vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com\n         Address: 10.0.30.194\n         Name: vpce-024f5b57108c8d3ed-ypwbxwll.vpce-svc-02863655456245e5c.us-east-1.vpce.amazonaws.com\n         Address: 10.0.20.54\n\n   .. tab:: {+Serverless-Instances+}\n      :tabid: serverless-instances\n\n      When you configure a private endpoint, |service| generates DNS\n      seedlist connection strings:\n\n      DNS seedlist connection\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/aws-pl-connection-strings.rst"
  },
  {
    "code": "         :copyable: false\n\n         mongodb+srv://serverlessinstance0-pl-0-k45tj.mongodb.net\n\n      .. include:: /includes/fact-pl-connection-strings.rst\n\n      .. include:: /includes/fact-pl-serverless-srv-record-aws.rst\n\n      **Hostname DNS Resolution in Private Endpoint-Aware Connection \n      Strings and SRV Records**\n\n      The hostname in the SRV record and the standard connection string \n      is a |dns| Canonical Name (``CNAME``) record that resolves to the\n      endpoint-specific regional |dns| name that |aws| generates for the\n      interface endpoint. A |dns| ``ALIAS`` record exists for each \n      subnet in your |vpc| that you deployed the interface endpoint to. \n      Each ``ALIAS`` record contains the private IP address of the \n      :term:`interface endpoint` for that subnet.\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/aws-pl-connection-strings.rst"
  },
  {
    "code": "           :copyable: false\n\n           mongodb+srv://cluster0-pl-0.uzgh6.mongodb.net\n\n      - Standard connection string\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/az-pl-connection-strings.rst"
  },
  {
    "code": "           :copyable: false\n\n           mongodb://pl-0-eastus2.uzgh6.mongodb.net:1024,pl-0-eastus2.uzgh6.mongodb.net:1025,pl-0-eastus2.uzgh6.mongodb.net:1026/?ssl=truereplicaSet=atlas-18bndf-shard-0\n\n      When a client in your VNet connects to an |service| cluster using\n      one of these private endpoint-aware connection strings, the\n      client attempts to establish a connection to the Private Link\n      Service in the |service| VNet through the private endpoint's\n      network interface. The Private Link service sends traffic through\n      an |azure| Standard Load Balancer to the |service| cluster nodes\n      that you deployed in that region. Your client's |dns| resolution\n      mechanism handles resolving the hostname to the network\n      interface's private IP address. The driver is only aware of the\n      hostname in the connection string, listening on one port for each \n      node in the cluster's replica set.\n\n      **SRV Record for DNS Seedlist Private Endpoint-Aware Connection Strings**\n\n      The following example shows the SRV record for an \n      {+az-pl+}-enabled single-region cluster, showing three unique\n      ports defined for ``pl-0-eastus2.uzgh6.mongodb.net``:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/az-pl-connection-strings.rst"
  },
  {
    "code": "         :copyable: false\n\n         $ nslookup -type=SRV _mongodb._tcp.cluster0-pl-0.uzgh6.mongodb.net\n\n         Server:  127.0.0.53\n         Address:  127.0.0.53#53\n\n         Non-authoritative answer:\n         _mongodb._tcp.cluster0-pl-0.uzgh6.mongodb.net service = 0 0 1024 pl-0-eastus2.uzgh6.mongodb.net.\n         _mongodb._tcp.cluster0-pl-0.uzgh6.mongodb.net service = 0 0 1025 pl-0-eastus2.uzgh6.mongodb.net.\n         _mongodb._tcp.cluster0-pl-0.uzgh6.mongodb.net service = 0 0 1026 pl-0-eastus2.uzgh6.mongodb.net.\n\n      In the preceding example:\n\n      - ``_mongodb._tcp.cluster0-pl-0.uzgh6.mongodb.net`` is\n         the SRV record that the connection string references.\n\n      - ``pl-0-eastus2.uzgh6.mongodb.net`` is the hostname for\n         each node in one |service| cluster in one region for which\n         you have configured {+az-pl+}.\n\n      - ``1024``, ``1025``, and ``1026`` are unique ports that \n         |service| assigns on the load balancer for each |service|\n         replica set node in the region for which you enabled \n         {+az-pl+}. All nodes in an |service| replica set are\n         accessible via the same hostname, with the load balancer\n         resolving individual nodes by their unique port.\n\n      **Hostname DNS Resolution in Private Endpoint-Aware Connection Strings and SRV Records**\n\n      The hostname in the SRV record and the standard connection string\n      is an |dns| ``A`` record that resolves to the private IP address\n      of the private endpoint's network interface. \n\n      The following example shows the |dns| lookup for the hostname in\n      the SRV record and in the standard connection string:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/az-pl-connection-strings.rst"
  },
  {
    "code": "         :copyable: false\n\n         $ nslookup pl-0-eastus2.uzgh6.mongodb.net\n         Server:  127.0.0.53\n         Address:  127.0.0.53#53\n\n         Non-authoritative answer:\n         Name:\tpl-0-eastus2.uzgh6.mongodb.net\n         Address: 10.0.0.4\n\n   .. tab:: {+Serverless-Instances+}\n      :tabid: serverless-instances\n\n      When you configure a private endpoint, |service| generates a DNS\n      seedlist connection string:\n\n      - DNS seedlist connection\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/az-pl-connection-strings.rst"
  },
  {
    "code": "           :copyable: false\n\n           mongodb+srv://cluster0-pl-0.uzgh6.mongodb.net\n\n      When a client in your VNet connects to an |service| \n      {+database-deployment+} using the private-endpoint-aware\n      connection string, the client attempts to establish a connection\n      to the Private Link Service in the |service| VNet through the\n      private endpoint's network interface. The Private Link service\n      sends traffic through an |azure| Standard Load Balancer to the \n      |service| {+database-deployment+} that you deployed in that\n      region. Your client's |dns| resolution mechanism handles\n      resolving the hostname to the network interface's private IP\n      address. The driver is only aware of the hostname in the\n      connection string.\n\n      .. include:: /includes/fact-pl-serverless-srv-record-azure.rst\n\n      **Hostname DNS Resolution in Private Endpoint-Aware Connection Strings and SRV Records**\n\n      The hostname in the SRV record and the standard connection string\n      is an |dns| ``A`` record that resolves to the private IP address\n      of the private endpoint's network interface. \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/az-pl-connection-strings.rst"
  },
  {
    "code": "   :emphasize-lines: 9, 13\n\n   use admin\n   db.getUser(\"admin\")\n   {\n       \"_id\" : \"admin.admin\",\n       \"user\" : \"admin\",\n       \"db\" : \"admin\",\n       \"roles\" : [\n     {\n       \"role\" : \"backup\",\n       \"db\" : \"admin\"\n     },\n     {\n       \"role\" : \"readAnyDatabase\",\n       \"db\" : \"admin\"\n     }\n    ]\n   } ...\n\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/c2c-required-roles.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas accessLists create [entry] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - entry\n     - string\n     - false\n     - IP address, CIDR address, or AWS security group ID that you want to add to the access list.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --comment\n     - string\n     - false\n     - Optional description or comment for the entry.\n   * - --currentIp\n     - \n     - false\n     - Flag that adds the IP address from the host that is currently executing the command to the access list. Only applicable for type ipAddress entries. You don't need the entry argument when you use the currentIp option.\n   * - --deleteAfter\n     - string\n     - false\n     - ISO-8601-formatted UTC date after which Atlas removes the entry from the access list.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of access list entry. Valid values are cidrBlock, ipAddress, or awsSecurityGroup. This value defaults to \"ipAddress\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an IP access list entry using the current IP address:\n   atlas accessList create --currentIp\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an access list entry for the IP address 192.0.2.15 in the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas accessList create 192.0.2.15 --type ipAddress --projectId 5e2211c17a3e5a48f5497de3 --comment \"IP address for app server 2\" --output json\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an access list entry in CIDR notation for 73.231.201.205/24 in the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas accessList create 73.231.201.205/24 --type cidrBlock --projectId 5e2211c17a3e5a48f5497de3 --output json --comment \"CIDR block for servers C - F\"\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an access list entry for the AWS security group sg-903004f8 in the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas accessList create sg-903004f8 --type awsSecurityGroup\n   --projectId 5e2211c17a3e5a48f5497de3 --output json --comment \"AWS Security Group\"\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas accessLists delete <entry> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - entry\n     - string\n     - true\n     - The IP address, CIDR address, or AWS security group ID that you want to remove from the access list.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the IP address 192.0.2.0 from the access list for the project with the ID 5e2211c17a3e5a48f5497de3 after prompting for a confirmation:\n   atlas accessLists delete 192.0.2.0 --projectId 5e2211c17a3e5a48f5497de3\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the IP address 192.0.2.0 from the access list for the project with the ID 5e2211c17a3e5a48f5497de3 without requiring confirmation:\n   atlas accessLists delete 192.0.2.0 --projectId 5e2211c17a3e5a48f5497de3 --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas accessLists describe <entry> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - entry\n     - string\n     - true\n     - The IP address, CIDR address, or AWS security group ID of the access list entry to return.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the access list entry 192.0.2.0/24 in the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas accessLists describe 192.0.2.0/24 --output json --projectId 5e1234c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas accessLists list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all access list entries for the project with ID 5e1234c17a3e5a48f5497de3:\t\t\n   atlas accessLists list --output json --projectId 5e1234c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLists-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas accessLogs list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --authResult\n     - string\n     - false\n     - Authentication attempts that Atlas should return. When set to success, Atlas filters the log to return only successful authentication attempts. When set to fail, Atlas filters the log to return only failed authentication attempts.\n   * - --clusterName\n     - string\n     - false\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n\n       Mutually exclusive with --hostname.\n   * - --end\n     - string\n     - false\n     - Timestamp in the number of milliseconds that have elapsed, since the UNIX Epoch, for the last entry that Atlas returns from the database access logs.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --hostname\n     - string\n     - false\n     - The fully qualified domain name (FQDN) of the target node that should receive the authentication attempt.\n\n       Mutually exclusive with --clusterName.\n   * - --ip\n     - string\n     - false\n     - IP address that attempted to authenticate with the database. Atlas filters the returned logs to include documents with only this IP address.\n   * - --nLog\n     - int\n     - false\n     - Maximum number of log lines to return.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - string\n     - false\n     - Timestamp in the number of milliseconds that have elapsed, since the UNIX Epoch, for the first entry that Atlas returns from the database access logs.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLogs-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all authentication requests made against the cluster named Cluster0 for the project with ID 618d48e05277a606ed2496fe:\t\t\n   atlas accesslogs list --output json --projectId 618d48e05277a606ed2496fe --clusterName Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-accessLogs-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts acknowledge <alertId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertId\n     - string\n     - true\n     - ID of the alert you want to acknowledge or unacknowledge.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --comment\n     - string\n     - false\n     - Optional description or comment for the entry.\n   * - -F, --forever\n     - \n     - false\n     - Option that acknowledges an alert 'forever'. You can't set both the forever option and the until option in the same command.\n   * - -h, --help\n     - \n     - false\n     - help for acknowledge\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --until\n     - string\n     - false\n     - ISO 8601-formatted time until which the alert is acknowledged. This command returns this value if a MongoDB user previously acknowledged the alert. After this date, the alert becomes unacknowledged.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-acknowledge.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Acknowledge an alert with the ID 5d1113b25a115342acc2d1aa in the project with the ID 5e2211c17a3e5a48f5497de3 until January 1 2028:\n   atlas alerts acknowledge 5d1113b25a115342acc2d1aa --until 2028-01-01T20:24:26Z --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-acknowledge.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts describe <alertId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertId\n     - string\n     - true\n     - Unique identifier of the alert you want to describe.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the alert with the ID 5d1113b25a115342acc2d1aa in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas alerts describe 5d1113b25a115342acc2d1aa --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --status\n     - string\n     - false\n     - State of the alert. Valid values include TRACKING, OPEN, CLOSED, and CANCELLED.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all alerts for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas alerts list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKey\n     - string\n     - false\n     - Datadog API Key, Opsgenie API Key, or VictorOps API key. Required if the notificationType is DATADOG, OPS_GENIE, or VICTOR_OPS, respectively.\n   * - --enabled\n     - \n     - false\n     - Flag that indicates whether to enable the alert configuration.\n   * - --event\n     - string\n     - false\n     - Type of event that triggered the alert. To learn which values the CLI accepts, see the Enum for eventTypeName in the Atlas Admin API spec: https://dochub.mongodb.org/core/atlas-event-names.\n   * - -f, --file\n     - string\n     - false\n     - Path to the JSON configuration file that defines alert configuration settings. To learn more about alert configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/alert-config-atlas-cli.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --matcherFieldName\n     - string\n     - false\n     - Name of the field in the target object to match on. To learn the valid values, run atlas alerts settings fields type.\n   * - --matcherOperator\n     - string\n     - false\n     - Comparison operator to apply when checking the current metric against matcherValue. Valid values are CONTAINS, ENDS_WITH, EQUALS, NOT_CONTAINS, NOT_EQUALS, REGEX, STARTS_WITH.\n   * - --matcherValue\n     - string\n     - false\n     - Value to test with the specified operator. If matcherFieldName is set to TYPE_NAME, you can match on the following values: CONFIG, MONGOS, PRIMARY, SECONDARY, STANDALONE.\n   * - --metricMode\n     - string\n     - false\n     - Option that indicates whether Atlas computes the current metric value as an average. Valid value is AVERAGE.\n   * - --metricName\n     - string\n     - false\n     - Name of the metric against which this command checks the configured alert. To learn the valid values, see https://dochub.mongodb.org/core/alert-host-metrics-atlas. This option applies only if the event is set to OUTSIDE_METRIC_THRESHOLD.\n   * - --metricOperator\n     - string\n     - false\n     - Comparison operator to apply when checking the current metric value. Valid values are LESS_THAN and GREATER_THAN.\n   * - --metricThreshold\n     - float\n     - false\n     - Threshold value outside of which an alert will be triggered.\n   * - --metricUnits\n     - string\n     - false\n     - Units for the threshold value. Valid values are BITS, BYTES, DAYS, GIGABITS, GIGABYTES, HOURS, KILOBITS, KILOBYTES, MEGABITS, MEGABYTES, MILLISECONDS, MINUTES, PETABYTES, RAW, SECONDS, TERABYTES.\n   * - --notificationChannelName\n     - string\n     - false\n     - Slack channel name. Required for the SLACK notifications type.\n   * - --notificationDelayMin\n     - int\n     - false\n     - Number of minutes to wait after an alert condition is detected before sending out the first notification.\n   * - --notificationEmailAddress\n     - string\n     - false\n     - Email address to which alert notifications are sent.\n   * - --notificationEmailEnabled\n     - \n     - false\n     - Flag that enables email notifications. Configurable for GROUP and USER notification types.\n   * - --notificationIntervalMin\n     - int\n     - false\n     - Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved.\n   * - --notificationMobileNumber\n     - string\n     - false\n     - Mobile number to which alert notifications are sent.\n   * - --notificationRegion\n     - string\n     - false\n     - Region that indicates which API URL to use.\n   * - --notificationRole\n     - strings\n     - false\n     - List that contains the one or more organization or project roles that receive the configured alert.\n   * - --notificationServiceKey\n     - string\n     - false\n     - PagerDuty service key.\n   * - --notificationSmsEnabled\n     - \n     - false\n     - Flag that enables text message notifications.\n   * - --notificationTeamId\n     - string\n     - false\n     - Unique identifier of a team.\n   * - --notificationToken\n     - string\n     - false\n     - Slack API token, or Bot token.\n   * - --notificationType\n     - string\n     - false\n     - Type of alert notification. Valid values are DATADOG, EMAIL, GROUP (Project), MICROSOFT_TEAMS, ORG, OPS_GENIE, PAGER_DUTY, SLACK, SMS, TEAM, USER, VICTOR_OPS, or WEBHOOK.\n   * - --notificationUsername\n     - string\n     - false\n     - Name of the Atlas user to which to send notifications.\n   * - --notificationVictorOpsRoutingKey\n     - string\n     - false\n     - Routing key associated with your Splunk On-Call account.\n   * - --notificationWebhookSecret\n     - string\n     - false\n     - Authentication secret for a webhook-based alert.\n   * - --notificationWebhookUrl\n     - string\n     - false\n     - Target URL for a webhook-based alert or Microsoft Teams alert.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an alert configuration that notifies a user when they join a group for the project with the ID 5df90590f10fab5e33de2305:\n   atlas alerts settings create --event JOINED_GROUP --enabled \\\n   --notificationType USER --notificationEmailEnabled \\\n   --notificationIntervalMin 60 --notificationUsername john@example.com \\\n   --output json --projectId 5df90590f10fab5e33de2305\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create alert using json file containing alert configuration\n   atlas alerts settings create 5d1113b25a115342acc2d1aa --file alerts.json\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an alert that shows possible connection storms based on the number of connections\n   atlas alerts settings create --event OUTSIDE_METRIC_THRESHOLD --metricName CONNECTIONS --metricOperator LESS_THAN --metricThreshold 1 --metricUnits RAW --projectId 5df90590f10fab5e33de2305 --notificationType GROUP --notificationEmailEnabled --notificationIntervalMin 5 --enabled\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings delete <alertConfigId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertConfigId\n     - string\n     - true\n     - Unique identifier of the alert configuration to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the alert configuration with the ID 5d1113b25a115342acc2d1aa in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas alerts settings delete 5d1113b25a115342acc2d1aa --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings describe <alertConfigId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertConfigId\n     - string\n     - true\n     - Unique identifier of the alert settings you want to describe.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the alert settings with the ID 5d1113b25a115342acc2d1aa in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas alerts settings describe 5d1113b25a115342acc2d1aa --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings disable <alertConfigId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertConfigId\n     - string\n     - true\n     - ID of the alert configuration you want to disable.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for disable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-disable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings enable <alertConfigId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertConfigId\n     - string\n     - true\n     - ID of the alert you want to enable.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-enable.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Enable the alert configuration with the ID 5d1113b25a115342acc2d1aa in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas alerts settings enable 5d1113b25a115342acc2d1aa --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings fields type [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for type\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-fields-type.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of accepted field types for the matchersFieldName option:\n   atlas alerts settings fields type --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-fields-type.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all alert configurations for the project with the ID 5df90590f10fab5e33de2305:\n   atlas alerts settings list --projectId 5df90590f10fab5e33de2305 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts settings update <alertConfigId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertConfigId\n     - string\n     - true\n     - Unique identifier of the alert configuration you want to update.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKey\n     - string\n     - false\n     - Datadog API Key, Opsgenie API Key, or VictorOps API key. Required if the notificationType is DATADOG, OPS_GENIE, or VICTOR_OPS, respectively.\n   * - --enabled\n     - \n     - false\n     - Flag that indicates whether to enable the alert configuration.\n   * - --event\n     - string\n     - false\n     - Type of event that triggered the alert. To learn which values the CLI accepts, see the Enum for eventTypeName in the Atlas Admin API spec: https://dochub.mongodb.org/core/atlas-event-names.\n   * - -f, --file\n     - string\n     - false\n     - Path to the JSON configuration file that defines alert configuration settings. To learn more about alert configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/alert-config-atlas-cli.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --matcherFieldName\n     - string\n     - false\n     - Name of the field in the target object to match on. To learn the valid values, run atlas alerts settings fields type.\n   * - --matcherOperator\n     - string\n     - false\n     - Comparison operator to apply when checking the current metric against matcherValue. Valid values are CONTAINS, ENDS_WITH, EQUALS, NOT_CONTAINS, NOT_EQUALS, REGEX, STARTS_WITH.\n   * - --matcherValue\n     - string\n     - false\n     - Value to test with the specified operator. If matcherFieldName is set to TYPE_NAME, you can match on the following values: CONFIG, MONGOS, PRIMARY, SECONDARY, STANDALONE.\n   * - --metricMode\n     - string\n     - false\n     - Option that indicates whether Atlas computes the current metric value as an average. Valid value is AVERAGE.\n   * - --metricName\n     - string\n     - false\n     - Name of the metric against which this command checks the configured alert. To learn the valid values, see https://dochub.mongodb.org/core/alert-host-metrics-atlas. This option applies only if the event is set to OUTSIDE_METRIC_THRESHOLD.\n   * - --metricOperator\n     - string\n     - false\n     - Comparison operator to apply when checking the current metric value. Valid values are LESS_THAN and GREATER_THAN.\n   * - --metricThreshold\n     - float\n     - false\n     - Threshold value outside of which an alert will be triggered.\n   * - --metricUnits\n     - string\n     - false\n     - Units for the threshold value. Valid values are BITS, BYTES, DAYS, GIGABITS, GIGABYTES, HOURS, KILOBITS, KILOBYTES, MEGABITS, MEGABYTES, MILLISECONDS, MINUTES, PETABYTES, RAW, SECONDS, TERABYTES.\n   * - --notificationChannelName\n     - string\n     - false\n     - Slack channel name. Required for the SLACK notifications type.\n   * - --notificationDelayMin\n     - int\n     - false\n     - Number of minutes to wait after an alert condition is detected before sending out the first notification.\n   * - --notificationEmailAddress\n     - string\n     - false\n     - Email address to which alert notifications are sent.\n   * - --notificationEmailEnabled\n     - \n     - false\n     - Flag that enables email notifications. Configurable for GROUP and USER notification types.\n   * - --notificationIntervalMin\n     - int\n     - false\n     - Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved.\n   * - --notificationMobileNumber\n     - string\n     - false\n     - Mobile number to which alert notifications are sent.\n   * - --notificationRegion\n     - string\n     - false\n     - Region that indicates which API URL to use.\n   * - --notificationRole\n     - strings\n     - false\n     - List that contains the one or more organization or project roles that receive the configured alert.\n   * - --notificationServiceKey\n     - string\n     - false\n     - PagerDuty service key.\n   * - --notificationSmsEnabled\n     - \n     - false\n     - Flag that enables text message notifications.\n   * - --notificationTeamId\n     - string\n     - false\n     - Unique identifier of a team.\n   * - --notificationToken\n     - string\n     - false\n     - Slack API token, or Bot token.\n   * - --notificationType\n     - string\n     - false\n     - Type of alert notification. Valid values are DATADOG, EMAIL, GROUP (Project), MICROSOFT_TEAMS, ORG, OPS_GENIE, PAGER_DUTY, SLACK, SMS, TEAM, USER, VICTOR_OPS, or WEBHOOK.\n   * - --notificationUsername\n     - string\n     - false\n     - Name of the Atlas user to which to send notifications.\n   * - --notificationVictorOpsRoutingKey\n     - string\n     - false\n     - Routing key associated with your Splunk On-Call account.\n   * - --notificationWebhookSecret\n     - string\n     - false\n     - Authentication secret for a webhook-based alert.\n   * - --notificationWebhookUrl\n     - string\n     - false\n     - Target URL for a webhook-based alert or Microsoft Teams alert.\n   * - --notifierId\n     - string\n     - false\n     - System-generated unique identifier assigned to each notification method. This identifier is needed when updating third-party notifications without requiring explicit authentication credentials.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Modify the alert configuration with the ID 5d1113b25a115342acc2d1aa so that it notifies a user when they join a group for the project with the ID 5df90590f10fab5e33de2305:\n   atlas alerts settings update 5d1113b25a115342acc2d1aa --event JOINED_GROUP --enabled \\\n \t\t--notificationType USER --notificationEmailEnabled \\\n \t\t--notificationIntervalMin 60 --notificationUsername john@example.com \\\n \t\t--output json --projectId 5df90590f10fab5e33de2305\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update alert using json file input containing alert configuration\n   atlas alerts settings update 5d1113b25a115342acc2d1aa --file alerts.json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-settings-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas alerts unacknowledge <alertId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - alertId\n     - string\n     - true\n     - Unique ID of the alert you want to unacknowledge.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --comment\n     - string\n     - false\n     - Optional description or comment for the entry.\n   * - -h, --help\n     - \n     - false\n     - help for unacknowledge\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-unacknowledge.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Unacknowledge the alert with the ID 5d1113b25a115342acc2d1aa in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas alerts unacknowledge 5d1113b25a115342acc2d1aa --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-alerts-unacknowledge.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas auditing describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auditing-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the default project:\n   atlas auditing describe --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auditing-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas auditing update [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --auditAuthorizationSuccess\n     - \n     - false\n     - Flag that indicates whether someone set auditing to track successful authentications. This only applies to the \"atype\" : \"authCheck\" audit filter. Setting this parameter to true degrades cluster performance.\n   * - --auditFilter\n     - string\n     - false\n     - JSON document that specifies which events to record. Escape any characters that may prevent parsing, such as single or double quotes, using a backslash (\\).\n\n       Mutually exclusive with --file.\n   * - --enabled\n     - \n     - false\n     - Flag that indicates whether someone enabled database auditing for the specified project.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines auditing filters. To learn more about auditing configuration files for the Atlas CLI, see https://www.mongodb.com/docs/atlas/database-auditing/#example-auditing-filters\n\n       Mutually exclusive with --auditFilter.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auditing-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Audit all authentication events for known users:\n   atlas auditing update --auditFilter '{\"atype\": \"authenticate\"}'\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auditing-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Audit all authentication events for known user via a configuration file:\n   atlas auditing update -f filter.json\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auditing-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas auth login [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --gov\n     - \n     - false\n     - Log in to Atlas for Government.\n   * - -h, --help\n     - \n     - false\n     - help for login\n   * - --noBrowser\n     - \n     - false\n     - Don't try to open a browser session.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-login.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Log in to your MongoDB Atlas account in interactive mode:\n   atlas auth login\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-login.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas auth logout [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for logout\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-logout.rst"
  },
  {
    "code": "   :copyable: false\n\n   # To log out from the CLI:\n   atlas auth logout\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-logout.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas auth register [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for register\n   * - --noBrowser\n     - \n     - false\n     - Don't try to open a browser session.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-register.rst"
  },
  {
    "code": "   :copyable: false\n\n   # To start the interactive setup:\n   atlas auth register\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-register.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas auth whoami [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for whoami\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-whoami.rst"
  },
  {
    "code": "   :copyable: false\n\n   # See the logged account:\n   atlas auth whoami\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-auth-whoami.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy copyProtection disable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for disable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-copyProtection-disable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy copyProtection enable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-copyProtection-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy enable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --authorizedEmail\n     - string\n     - true\n     - Email address of a security or legal representative.\n   * - --authorizedUserFirstName\n     - string\n     - true\n     - First name of the user who is authorized to update the Backup Compliance Policy settings.\n   * - --authorizedUserLastName\n     - string\n     - true\n     - Last name of the user who is authorized to update the Backup Compliance Policy settings.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy encryptionAtRest disable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for disable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-encryptionAtRest-disable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy encryptionAtRest enable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-encryptionAtRest-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy pointInTimeRestores enable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --restoreWindowDays\n     - int\n     - true\n     - Number of days back in time you can restore to with Continuous Cloud Backup accuracy. Must be a positive, non-zero integer. Applies to continuous cloud backups only.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-pointInTimeRestores-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy policies describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy policies ondemand create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --retentionUnit\n     - string\n     - true\n     - Unit of time in which Atlas measures snapshot retention: 'days' 'weeks' 'months'. \n   * - --retentionValue\n     - int\n     - true\n     - Duration in days, weeks, or months that Atlas retains the snapshot. For less frequent policy items, Atlas requires that you specify a value greater than or equal to the value specified for more frequent policy items.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-ondemand-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a backup compliance on-demand policy with a retention of two weeks:\n   atlas backups compliancepolicy policies ondemand create --retentionUnit weeks --retentionValue 2\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-ondemand-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy policies ondemand describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-ondemand-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy policies ondemand update [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --retentionUnit\n     - string\n     - true\n     - Unit of time in which Atlas measures snapshot retention: 'days' 'weeks' 'months'. \n   * - --retentionValue\n     - int\n     - true\n     - Duration in days, weeks, or months that Atlas retains the snapshot. For less frequent policy items, Atlas requires that you specify a value greater than or equal to the value specified for more frequent policy items.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-ondemand-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update a backup compliance on-demand policy and set it's retention to one week:\n   atlas backups compliancepolicy policies ondemand update --retentionUnit weeks --retentionValue 1\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-ondemand-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy policies scheduled create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --frequencyInterval\n     - int\n     - true\n     - Number that indicates the frequency interval for a set of snapshots. A value of 1 specifies the first instance of the corresponding frequencyType. In a monthly policy item, 1 indicates that the monthly snapshot occurs on the first day of the month and 40 indicates the last day of the month. In a weekly policy item, 1 indicates that the weekly snapshot occurs on Monday and 7 indicates Sunday. In an hourly policy item, you can set the frequency interval to 1, 2, 4, 6, 8, or 12. For hourly policy items for NVMe clusters, Atlas accepts only 12 as the frequency interval value.\n   * - --frequencyType\n     - string\n     - true\n     - Frequency type associated with the backup policy: 'daily', 'hourly', 'monthly', 'weekly'.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --retentionUnit\n     - string\n     - true\n     - Unit of time in which Atlas measures snapshot retention: 'days' 'weeks' 'months'. \n   * - --retentionValue\n     - int\n     - true\n     - Duration in days, weeks, or months that Atlas retains the snapshot. For less frequent policy items, Atlas requires that you specify a value greater than or equal to the value specified for more frequent policy items.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-scheduled-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a backup compliance schedule policy with a weekly frequency, where the snapshot occurs on Monday and has a retention of two months:\n   atlas backups compliancepolicy policies scheduled create --frequencyType weekly --frequencyInterval 1 --retentionUnit months --retentionValue 2\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-scheduled-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy policies scheduled describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-policies-scheduled-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups compliancePolicy setup [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -f, --file\n     - string\n     - true\n     - Path to a JSON configuration file that defines backup compliance policy settings.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for setup\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-compliancePolicy-setup.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports buckets create <bucketName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - bucketName\n     - string\n     - true\n     - Name of the existing S3 bucket that the provided role ID is authorized to access.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --cloudProvider\n     - string\n     - true\n     - Name of the provider of the cloud service where Atlas can access the S3 bucket. Atlas supports only AWS.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --iamRoleId\n     - string\n     - true\n     - Unique identifier that Atlas assigns to the cloud provider access role for the bucket. To learn more about setting up and retrieving a cloud provider access role, see: https://dochub.mongodb.org/core/set-up-unified-aws-access.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # The following command creates an export destination for Atlas backups using the existing AWS S3 bucket named test-bucket:\n   atlas backup export buckets create test-bucket --cloudProvider AWS --iamRoleId 12345678f901a234dbdb00ca\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports buckets delete [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --bucketId\n     - string\n     - true\n     - Unique identifier that Atlas assigns to the bucket.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # The following deletes the continuous backup export bucket specified by ID:\n   atlas backup exports buckets delete --bucketId dbdb00ca12345678f901a234\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports buckets describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --bucketId\n     - string\n     - true\n     - Unique identifier that Atlas assigns to the bucket.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the continuous backup export bucket with the ID dbdb00ca12345678f901a234:\n   atlas backup exports buckets describe dbdb00ca12345678f901a234\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports buckets list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return all continuous backup export buckets for your project:\n   atlas backup exports buckets list\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-buckets-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports jobs create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --bucketId\n     - string\n     - true\n     - Unique identifier that Atlas assigns to the bucket.\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --customData\n     - key=value\n     - false\n     - Custom data to include in the metadata file named .complete that Atlas uploads to the bucket when the export job finishes. Custom data can be specified as key and value pairs.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --snapshotId\n     - string\n     - true\n     - Unique identifier of the snapshot.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # The following command exports one backup snapshot of the ExampleCluster cluster to an existing AWS S3 bucket:\n   atlas backup export jobs create --clusterName ExampleCluster --bucketId 62c569f85b7a381c093cc539 --snapshotId 62c808ceeb4e021d850dfe1b --customData name=test,info=test\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports jobs describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --exportId\n     - string\n     - false\n     - Unique string that identifies the AWS S3 bucket to which you export your snapshots.\n\n       Mutually exclusive with --bucketId.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the continuous backup export job with the ID 5df90590f10fab5e33de2305 for the cluster named Cluster0:\n   atlas backup exports jobs describe --clusterName Cluster0 --exportID 5df90590f10fab5e33de2305\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports jobs list <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the Atlas cluster for which you want to retrieve restore jobs.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return all continuous backup export jobs for the cluster named Cluster0:\n   atlas backup exports jobs list Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups exports jobs watch <exportJobId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - exportJobId\n     - string\n     - true\n     - Unique string that identifies the export job.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch the continuous backup restore job with the ID 507f1f77bcf86cd799439011 for the cluster named Cluster0 until it becomes available:\n   atlas backup restore watch 507f1f77bcf86cd799439011 --clusterName Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-exports-jobs-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups restores describe <restoreJobId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - restoreJobId\n     - string\n     - true\n     - ID of the restore job.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the continuous backup restore job with the ID 507f1f77bcf86cd799439011 for the cluster named Cluster0:\n   atlas backup restore describe 507f1f77bcf86cd799439011 --clusterName Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups restores list <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the Atlas cluster for which you want to retrieve restore jobs.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return all continuous backup restore jobs for the cluster Cluster0:\n   atlas backup restore list Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups restores start <automated|download|pointInTime> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - automated|download|pointInTime\n     - string\n     - true\n     - Type of restore job to create. Valid values include: automated, download, pointInTime. To learn more about types of restore jobs, see https://www.mongodb.com/docs/atlas/backup-restore-cluster/.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for start\n   * - --oplogInc\n     - int\n     - false\n     - 32-bit incrementing ordinal that represents operations within a given second. When paired with oplogTs, they represent the point in time to which your data will be restored.\n   * - --oplogTs\n     - int\n     - false\n     - Oplog timestamp given as a timestamp in the number of seconds that have elapsed since the UNIX Epoch. When paired with oplogInc, they represent the point in time to which your data will be restored.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --pointInTimeUTCSeconds\n     - int\n     - false\n     - Timestamp in the number of seconds that have elapsed since the UNIX epoch that represents the point in time to which your data will be restored. This timestamp must be within the last 24 hours of the current time.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --snapshotId\n     - string\n     - false\n     - Unique identifier of the snapshot to restore. You must specify a snapshotId for automated restores.\n   * - --targetClusterName\n     - string\n     - false\n     - Name of the target cluster. For use only with automated restore jobs. You must specify a targetClusterName for automated restores.\n   * - --targetProjectId\n     - string\n     - false\n     - Unique identifier of the project that contains the destination cluster for the restore job. You must specify a targetProjectId for automated restores.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-start.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an automated restore:\n   atlas backup restore start automated \\\n          --clusterName myDemo \\\n          --snapshotId 5e7e00128f8ce03996a47179 \\\n          --targetClusterName myDemo2 \\\n          --targetProjectId 1a2345b67c8e9a12f3456de7\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-start.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a point-in-time restore:\n   atlas backup restore start pointInTime \\\n          --clusterName myDemo \\\n          --pointInTimeUTCSeconds 1588523147 \\\n          --targetClusterName myDemo2 \\\n          --targetProjectId 1a2345b67c8e9a12f3456de7\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-start.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a download restore:\n   atlas backup restore start download \\\n          --clusterName myDemo \\\n          --snapshotId 5e7e00128f8ce03996a47179\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-start.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups restores watch <restoreJobId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - restoreJobId\n     - string\n     - true\n     - ID of the restore job.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch the continuous backup restore job with the ID 507f1f77bcf86cd799439011 for the restore source cluster named Cluster0 until it becomes available:\n   atlas backup restore watch 507f1f77bcf86cd799439011 --clusterName Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-restores-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups schedule delete <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-schedule-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove all backup schedules for the cluster named Cluster0:\n   atlas backup schedule delete Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-schedule-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups schedule describe <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Human-readable label for the cluster.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-schedule-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the cloud backup schedule for the cluster named Cluster0:\n   atlas backup schedule describe Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-schedule-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups schedule update [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --autoExport\n     - \n     - false\n     - Flag that enables automatic export of cloud backup snapshots to the AWS bucket.\n\n       Mutually exclusive with --noAutoExport, --file.\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --exportBucketId\n     - string\n     - false\n     - Unique identifier that Atlas assigns to the bucket.\n\n       Mutually exclusive with --file.\n   * - --exportFrequencyType\n     - string\n     - false\n     - Frequency associated with the export policy. Value can be daily, weekly, or monthly.\n\n       Mutually exclusive with --file.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines backup schedule settings. To learn about the cloud backup configuration file for the Atlas CLI, see https://dochub.mongodb.org/core/cloud-backup-config-file.\n\n       Mutually exclusive with --exportBucketId, --exportFrequencyType, --referenceHourOfDay, --referenceMinuteOfHour, --restoreWindowDays, --autoExport, --noAutoExport, --updateSnapshots, --noUpdateSnapshots, --useOrgAndGroupNamesInExportPrefix, --noUseOrgAndGroupNamesInExportPrefix, --policy.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --noAutoExport\n     - \n     - false\n     - Flag that disables automatic export of cloud backup snapshots to the AWS bucket.\n\n       Mutually exclusive with --autoExport, --file.\n   * - --noUpdateSnapshots\n     - \n     - false\n     - Flag that disables applying the retention changes in the updated backup policy to snapshots that Atlas took previously.\n\n       Mutually exclusive with --updateSnapshots, --file.\n   * - --noUseOrgAndGroupNamesInExportPrefix\n     - \n     - false\n     - Flag that disables usage of organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots.\n\n       Mutually exclusive with --useOrgAndGroupNamesInExportPrefix, --file.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --policy\n     - stringArray\n     - false\n     - Array containing a document for each backup policy item in the desired updated backup policy. You must specify it in a format: '--policy policyID,policyItemID,frequencyType,frequencyIntervalNumber,retentionUnit,retentionValue'.\n\n       Mutually exclusive with --file.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --referenceHourOfDay\n     - int\n     - false\n     - Hour of the day to schedule snapshots using a 24-hour clock. Accepted values are between 0 and 23 inclusive.\n\n       Mutually exclusive with --file.\n   * - --referenceMinuteOfHour\n     - int\n     - false\n     - Minute of the hour to schedule snapshots. Accepted values are between 0 and 59 inclusive.\n\n       Mutually exclusive with --file.\n   * - --restoreWindowDays\n     - int\n     - false\n     - Number of days back in time you can restore to with Continuous Cloud Backup accuracy. Must be a positive, non-zero integer. Applies to continuous cloud backups only.\n\n       Mutually exclusive with --file.\n   * - --updateSnapshots\n     - \n     - false\n     - Flag that enables applying the retention changes in the updated backup policy to snapshots that Atlas took previously.\n\n       Mutually exclusive with --noUpdateSnapshots, --file.\n   * - --useOrgAndGroupNamesInExportPrefix\n     - \n     - false\n     - Flag that enables usage of organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots.\n\n       Mutually exclusive with --noUseOrgAndGroupNamesInExportPrefix, --file.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-schedule-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update a snapshot backup policy for a cluster named Cluster0 to back up snapshots every 6 hours and, retain for 7 days, and update retention of previously-taken snapshots:\n   atlas backup schedule update --clusterName Cluster0 --updateSnapshots --policy 62da8faac84a2721e448d767,62da8faac84a2721e448d768,hourly,6,days,7\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-schedule-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update a snapshot backup policy for a cluster named Cluster0 to export snapshots monthly to an S3 bucket:\n   atlas backup schedule update --clusterName Cluster0 --exportBucketId 62c569f85b7a381c093cc539 --exportFrequencyType monthly\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-schedule-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups snapshots create <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the Atlas cluster whose snapshot you want to restore.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --desc\n     - string\n     - true\n     - Description of the on-demand snapshot.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --retention\n     - int\n     - false\n     - Number of days that Atlas should retain the on-demand snapshot. Must be at least 1. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a backup snapshot for the cluster named myDemo that Atlas retains for 30 days:\n   atlas backups snapshots create myDemo --desc \"test\" --retention 30\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups snapshots delete <snapshotId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - snapshotId\n     - string\n     - true\n     - Unique identifier of the snapshot you want to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the backup snapshot with the ID 5f4007f327a3bd7b6f4103c5 for the cluster named myDemo:\n   atlas backups snapshots delete 5f4007f327a3bd7b6f4103c5 --clusterName myDemo\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups snapshots describe <snapshotId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - snapshotId\n     - string\n     - true\n     - Unique identifier of the snapshot you want to retrieve.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the backup snapshot with the ID 5f4007f327a3bd7b6f4103c5 for the cluster named myDemo:\n   atlas backups snapshots describe 5f4007f327a3bd7b6f4103c5 --clusterName myDemo\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups snapshots list <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the Atlas cluster that contains the snapshots you want to retrieve.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of snapshots for the cluster named myDemo \n   atlas backups snapshots list myDemo --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas backups snapshots watch <snapshotId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - snapshotId\n     - string\n     - true\n     - Unique identifier of the snapshot you want to watch.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch the backup snapshot with the ID 5f4007f327a3bd7b6f4103c5 in the cluster named myDemo until it becomes available:\n   atlas backups snapshots watch 5f4007f327a3bd7b6f4103c5 --clusterName myDemo\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-backups-snapshots-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas cloudProviders accessRoles aws authorize <roleId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - roleId\n     - string\n     - true\n     - Unique ID of the role to authorize.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for authorize\n   * - --iamAssumedRoleArn\n     - string\n     - false\n     - Role ARN that Atlas assumes to access your AWS account.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-cloudProviders-accessRoles-aws-authorize.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas cloudProviders accessRoles aws create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-cloudProviders-accessRoles-aws-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas cloudProviders accessRoles aws deauthorize <roleId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - roleId\n     - string\n     - true\n     - Unique ID of the role to authorize.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for deauthorize\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-cloudProviders-accessRoles-aws-deauthorize.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas cloudProviders accessRoles list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-cloudProviders-accessRoles-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters advancedSettings describe <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the Atlas cluster for which you want to retrieve configuration settings.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-advancedSettings-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas clusters advancedSettings describe Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-advancedSettings-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters advancedSettings update <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster to update.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --disableFailIndexKeyTooLong\n     - \n     - false\n     - Flag that disables writing documents that exceed 1024 bytes without indexing.\n\n       Mutually exclusive with --enableFailIndexKeyTooLong.\n   * - --disableJavascript\n     - \n     - false\n     - Flag that disables the execution of operations that perform server-side executions of JavaScript.\n\n       Mutually exclusive with --enableJavascript.\n   * - --disableTableScan\n     - \n     - false\n     - Flag that disables executing any query that requires a collection scan to return results.\n\n       Mutually exclusive with --enableTableScan.\n   * - --enableFailIndexKeyTooLong\n     - \n     - false\n     - Flag that enables writing documents that exceed 1024 bytes without indexing.\n\n       Mutually exclusive with --disableFailIndexKeyTooLong.\n   * - --enableJavascript\n     - \n     - false\n     - Flag that enables the execution of operations that perform server-side executions of JavaScript.\n\n       Mutually exclusive with --disableJavascript.\n   * - --enableTableScan\n     - \n     - false\n     - Flag that enables executing any query that requires a collection scan to return results.\n\n       Mutually exclusive with --disableTableScan.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --oplogMinRetentionHours\n     - float\n     - false\n     - Minimum retention window for cluster's oplog expressed in hours.\n   * - --oplogSizeMB\n     - int\n     - false\n     - Storage limit of cluster's oplog expressed in megabytes.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --readConcern\n     - string\n     - false\n     - Default level of acknowledgment requested from MongoDB for read operations set for this cluster.\n   * - --sampleRefreshIntervalBIConnector\n     - int\n     - false\n     - Interval in seconds at which the mongosqld process re-samples data to create its relational schema. This value defaults to -1.\n   * - --sampleSizeBIConnector\n     - int\n     - false\n     - Number of documents per database to sample when gathering schema information. This value defaults to -1.\n   * - --tlsProtocol\n     - string\n     - false\n     - Minimum Transport Layer Security (TLS) version that the cluster accepts for incoming connections.\n   * - --writeConcern\n     - string\n     - false\n     - Default level of acknowledgment requested from MongoDB for write operations set for this cluster.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-advancedSettings-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the minimum oplog size for a cluster:\n   atlas cluster advancedSettings update <clusterName> --projectId <projectId> --oplogSizeMB 1000\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-advancedSettings-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the minimum TLS protocol version for a cluster:\n   atlas cluster advancedSettings update <clusterName> --projectId <projectId> --minimumEnabledTLSProtocol \"TLS1_2\"\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-advancedSettings-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters availableRegions list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - false\n     - Name of your cloud service provider. Valid values are AWS, AZURE, or GCP.\n   * - --tier\n     - string\n     - false\n     - Tier for each data-bearing server in the cluster. To learn more about cluster tiers, see https://dochub.mongodb.org/core/cluster-tier-atlas.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-availableRegions-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # List available regions for a given cloud provider and tier:\n   atlas cluster availableRegions list --provider AWS --tier M50\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-availableRegions-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # List available regions by tier for a given provider:\n   atlas cluster availableRegions list --provider GCP\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-availableRegions-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters connectionStrings describe <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the Atlas cluster for which you want to retrieve connection strings.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of connection string. If you specify 'private', this option retrieves the connection string for the network peering endpoint. If you specify 'privateEndpoint', this option retrieves the shard optimized connection strings for the private endpoints. This value defaults to \"standard\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-connectionStrings-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted connection strings for the cluster named myCluster:\n   atlas clusters connectionStrings describe myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-connectionStrings-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters create [name] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - false\n     - Name of the cluster. The cluster name cannot be changed after the cluster is created. Cluster name can contain ASCII letters, numbers, and hyphens. You must specify the cluster name argument if you don't use the --file option.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --backup\n     - \n     - false\n     - Flag that enables Continuous Cloud Backup for your deployment. This option is unavailable for clusters smaller than M10.\n   * - --biConnector\n     - \n     - false\n     - Flag that enables BI Connector for Atlas on the deployment.\n\n       Mutually exclusive with --file.\n   * - --diskSizeGB\n     - float\n     - false\n     - Capacity, in gigabytes, of the host's root volume.\n\n       Mutually exclusive with --file. This value defaults to 2.\n   * - --enableTerminationProtection\n     - \n     - false\n     - Enables termination protection for your cluster. You can't delete a cluster with termination protection enabled.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines cluster settings. To learn more about cluster configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/cluster-config-file-atlascli.\n\n       Mutually exclusive with --tier, --provider, --members, --region, --diskSizeGB, --mdbVersion, --biConnector, --type, --shards, --tag.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --mdbVersion\n     - string\n     - false\n     - Major MongoDB version of the cluster.\n\n       Mutually exclusive with --file. This value defaults to \"7.0\".\n   * - -m, --members\n     - int\n     - false\n     - Number of members in the replica set.\n\n       Mutually exclusive with --file. This value defaults to 3.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - false\n     - Name of your cloud service provider. Valid values are AWS, AZURE, or GCP. You must specify the provider option if you don't use the --file option.\n\n       Mutually exclusive with --file.\n   * - -r, --region\n     - string\n     - false\n     - Physical location of your MongoDB cluster. You must specify the region option if you don't use the --file option. For a complete list of supported AWS regions, see: https://dochub.mongodb.org/core/aws-atlas. For a complete list of supported Azure regions, see: https://dochub.mongodb.org/core/azure-atlas. For a complete list of supported GCP regions, see: https://dochub.mongodb.org/core/gcp-atlas.\n\n       Mutually exclusive with --file.\n   * - -s, --shards\n     - int\n     - false\n     - Number of shards in the cluster.\n\n       Mutually exclusive with --file. This value defaults to 1.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster.\n\n       Mutually exclusive with --file.\n   * - --tier\n     - string\n     - false\n     - Tier for each data-bearing server in the cluster. To learn more about cluster tiers, see https://dochub.mongodb.org/core/cluster-tier-atlas.\n\n       Mutually exclusive with --file. This value defaults to \"M2\".\n   * - --type\n     - string\n     - false\n     - Type of the cluster that you want to create. Valid values are REPLICASET or SHARDED.\n\n       Mutually exclusive with --file. This value defaults to \"REPLICASET\".\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out. To set the time that the watch times out, use the --watchTimeout option.\n   * - --watchTimeout\n     - int\n     - false\n     - Time in seconds until a watch times out. After a watch times out, the CLI no longer watches the command.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy a free cluster named myCluster for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster create myCluster --projectId 5e2211c17a3e5a48f5497de3 --provider AWS --region US_EAST_1 --tier M0\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy a free cluster named myCluster for the project with the ID 5e2211c17a3e5a48f5497de3 and tag \"env=dev\":\n   atlas cluster create myCluster --projectId 5e2211c17a3e5a48f5497de3 --provider AWS --region US_EAST_1 --tier M0 --tag env=dev\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy a three-member replica set named myRS in AWS for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster create myRS --projectId 5e2211c17a3e5a48f5497de3 --provider AWS --region US_EAST_1 --members 3 --tier M10 --mdbVersion 5.0 --diskSizeGB 10\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy a three-member replica set named myRS in AZURE for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster create myRS --projectId 5e2211c17a3e5a48f5497de3 --provider AZURE --region US_EAST_2 --members 3 --tier M10  --mdbVersion 5.0 --diskSizeGB 10\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy a three-member replica set named myRS in GCP for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster create myRS --projectId 5e2211c17a3e5a48f5497de3 --provider GCP --region EASTERN_US --members 3 --tier M10  --mdbVersion 5.0 --diskSizeGB 10\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy a cluster or a multi-cloud cluster from a JSON configuration file named myfile.json for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster create --projectId <projectId> --file myfile.json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters delete <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out. To set the time that the watch times out, use the --watchTimeout option.\n   * - --watchTimeout\n     - int\n     - false\n     - Time in seconds until a watch times out. After a watch times out, the CLI no longer watches the command.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove a cluster named myCluster after prompting for a confirmation:\n   atlas clusters delete myCluster\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove a cluster named myCluster without requiring confirmation:\n   atlas clusters delete myCluster --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters describe <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster to retrieve.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the cluster named myCluster:\n   atlas clusters describe myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters failover <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Human-readable label that identifies the cluster to start a failover test for.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for failover\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-failover.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Test failover for a cluster named myCluster:\n   atlas clusters failover myCluster\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-failover.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters indexes create [indexName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexName\n     - string\n     - false\n     - Name of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --collection\n     - string\n     - false\n     - Name of the collection.\n\n       Mutually exclusive with --file.\n   * - --db\n     - string\n     - false\n     - Name of the database.\n\n       Mutually exclusive with --file.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines index settings.\n\n       Mutually exclusive with --db, --collection, --key.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --key\n     - strings\n     - false\n     - Field to be indexed and the type of index in the following format: field:type.\n\n       Mutually exclusive with --file.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --sparse\n     - \n     - false\n     - Flag that creates a sparse index. To learn more, see https://dochub.mongodb.org/core/index-sparse-manual.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-indexes-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an index named bedrooms_1 on the listings collection of the realestate database:\n   atlas clusters indexes create bedrooms_1 --clusterName Cluster0 --collection listings --db realestate --key bedrooms:1\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-indexes-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a compound index named property_room_bedrooms on the\n   listings collection of the realestate database:\n   atlas clusters indexes create property_room_bedrooms --clusterName Cluster0 --collection listings --db realestate --key property_type:1 --key room_type:1 --key bedrooms:1\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-indexes-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an index named my_index from a JSON configuration file named myfile.json:\n   atlas clusters indexes create my_index --clusterName Cluster0 --file file.json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-indexes-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all clusters for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas clusters list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --archiveAfter\n     - int\n     - false\n     - Number of days after which to archive cluster data.\n\n       Mutually exclusive with --file.\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --collection\n     - string\n     - false\n     - Name of the collection.\n\n       Mutually exclusive with --file.\n   * - --dateField\n     - string\n     - false\n     - Name of an already indexed date field from the documents.\n\n       Mutually exclusive with --file.\n   * - --dateFormat\n     - string\n     - false\n     - Date format for the date field. Valid values are \"ISODATE\", \"EPOCH_SECONDS\", \"EPOCH_MILLIS\", or \"EPOCH_NANOSECONDS\".\n\n       Mutually exclusive with --file. This value defaults to \"ISODATE\".\n   * - --db\n     - string\n     - false\n     - Name of the database.\n\n       Mutually exclusive with --file.\n   * - --expireAfterDays\n     - int\n     - false\n     - Number of days used in the date criteria for nominating documents for deletion.\n\n       Mutually exclusive with --file.\n   * - --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines online archive settings. To learn more about online archive configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-json-online-archive-config.\n\n       Mutually exclusive with --db, --collection, --dateField, --dateFormat, --archiveAfter, --expireAfterDays, --partition.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --partition\n     - strings\n     - false\n     - Fields to use to partition data. You can specify up to two frequently queried fields separated by a comma.\n\n       Mutually exclusive with --file.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an online archive for the sample_mflix.movies collection in a cluster named myTestCluster when the current date is greater than the value of released date plus 2 days:\n   atlas clusters onlineArchive create --clusterName myTestCluster --db sample_mflix --collection movies --dateField released --archiveAfter 2 --output json\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an online archive for the sample_mflix.movies collection in a cluster named myTestCluster using a profile named egAtlasProfile when the current date is greater than the value of the released date plus 2 days. Data is partitioned based on the title field, year field, and released field from the documents in the collection:\n   atlas clusters onlineArchive create --clusterName myTestCluster --db sample_mflix --collection movies --dateField released --archiveAfter 2 --partition title,year --output json -P egAtlasProfile \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives delete <archiveId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - archiveId\n     - string\n     - true\n     - Unique identifier of the online archive to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove an online archive with the ID 5f189832e26ec075e10c32d3 for the cluster named myCluster:\n   atlas clusters onlineArchives delete 5f189832e26ec075e10c32d3 --clusterName myCluster\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives describe <archiveId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - archiveId\n     - string\n     - true\n     - Unique identifier of the online archive to retrieve.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the online archive with the ID 5f189832e26ec075e10c32d3 for the cluster named myCluster:\n   atlas clusters onlineArchives describe 5f189832e26ec075e10c32d3 --clusterName myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of online archives for the cluster named myCluster:\n   atlas clusters onlineArchives list --clusterName myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives pause <archiveId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - archiveId\n     - string\n     - true\n     - Unique identifier of the online archive to pause.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for pause\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-pause.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Pause the online archive with the ID 5f189832e26ec075e10c32d3 for the cluster named myCluster:\n   atlas clusters onlineArchives pause 5f189832e26ec075e10c32d3 --clusterName myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-pause.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives start <archiveId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - archiveId\n     - string\n     - true\n     - Unique identifier of the online archive to start.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for start\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-start.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives update <archiveId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - archiveId\n     - string\n     - true\n     - Unique identifier of the online archive to update.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --archiveAfter\n     - int\n     - false\n     - Number of days after which to archive cluster data.\n\n       Mutually exclusive with --file.\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --expireAfterDays\n     - int\n     - false\n     - Number of days used in the date criteria for nominating documents for deletion.\n\n       Mutually exclusive with --file.\n   * - --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines online archive settings. To learn more about online archive configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-json-online-archive-config.\n\n       Mutually exclusive with --archiveAfter, --expireAfterDays.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the archiving rule to archive after 5 days for the online archive with the ID 5f189832e26ec075e10c32d3 for the cluster named myCluster:\n   atlas clusters onlineArchives update 5f189832e26ec075e10c32d3 --clusterName --archiveAfter 5 myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters onlineArchives watch <archiveId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - archiveId\n     - string\n     - true\n     - Unique identifier of the online archive to watch.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - false\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas cluster onlineArchive watch archiveIdSample --clusterName clusterNameSample\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-onlineArchives-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters pause <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster to pause.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for pause\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-pause.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Pause the cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas clusters pause myCluster --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-pause.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters sampleData describe <id> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - id\n     - string\n     - true\n     - Unique identifier of the sample data job.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-sampleData-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the sample data load job:\n   atlas clusters sampleData describe 5e98249d937cfc52efdc2a9f --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-sampleData-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters sampleData load <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster for which you want to load sample data.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for load\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-sampleData-load.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Load sample data into the cluster named myCluster:\n   atlas clusters sampleData load myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-sampleData-load.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters sampleData watch <id> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - id\n     - string\n     - true\n     - Unique identifier of the sample data job.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-sampleData-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch for the sample data job with ID 5e2211c17a3e5a48f5497de3 to complete:\n   atlas clusters sampledata watch 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-sampleData-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search indexes create [indexName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexName\n     - string\n     - false\n     - Name of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -f, --file\n     - string\n     - false\n     - Name of the JSON index configuration file to use. To learn about the Atlas Search and Atlas Vector Search index configuration file, see https://dochub.mongodb.org/core/search-index-config-file-atlascli. To learn about the Atlas Search index syntax and options that you can define in your configuration file, see https://dochub.mongodb.org/core/index-definitions-fts. To learn about the Atlas Vector Search index syntax and options that you can define in your configuration file, see https://dochub.mongodb.org/core/index-definition-avs.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a search index for the cluster named myCluster using a JSON index configuration file named search-config.json:\n   atlas clusters search indexes create --clusterName myCluster --file search-config.json --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search indexes delete <indexId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexId\n     - string\n     - true\n     - ID of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete the search index with the ID 5f2099cd683fc55fbb30bef6 for the cluster named myCluster without requiring confirmation:\n   atlas clusters search indexes delete 5f2099cd683fc55fbb30bef6 --clusterName myCluster --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search indexes describe <indexId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexId\n     - string\n     - true\n     - ID of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the search index with the ID 5f1f40842f2ac35f49190c20 for the cluster named myCluster:\n   atlas clusters search indexes describe 5f1f40842f2ac35f49190c20 --clusterName myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search indexes list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --collection\n     - string\n     - true\n     - Name of the collection.\n   * - --db\n     - string\n     - true\n     - Name of the database.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted list of Atlas search indexes on the sample_mflix.movies database in the cluster named myCluster:\n   atlas clusters search indexes list --clusterName myCluster --db sample_mflix --collection movies --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search indexes update <indexId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexId\n     - string\n     - true\n     - ID of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -f, --file\n     - string\n     - false\n     - Name of the JSON index configuration file to use. To learn about the Atlas Search and Atlas Vector Search index configuration file, see https://dochub.mongodb.org/core/search-index-config-file-atlascli. To learn about the Atlas Search index syntax and options that you can define in your configuration file, see https://dochub.mongodb.org/core/index-definitions-fts. To learn about the Atlas Vector Search index syntax and options that you can define in your configuration file, see https://dochub.mongodb.org/core/index-definition-avs.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Modify the search index with the ID 5f2099cd683fc55fbb30bef6 for the cluster named myCluster:\n   atlas clusters search indexes update 5f2099cd683fc55fbb30bef6 --clusterName myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-indexes-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search nodes create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -f, --file\n     - string\n     - true\n     - Name of the JSON index configuration file to use. To learn about the Atlas Search Nodes configuration file, see https://dochub.mongodb.org/core/search-nodes-config-file-atlascli.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n   * - --watchTimeout\n     - int\n     - false\n     - Time in seconds until a watch times out. After a watch times out, the CLI no longer watches the command.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a search node for the cluster named myCluster using a JSON node spec configuration file named spec.json:\n   atlas clusters search nodes create --clusterName myCluster --file spec.json --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search nodes delete [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n   * - --watchTimeout\n     - int\n     - false\n     - Time in seconds until a watch times out. After a watch times out, the CLI no longer watches the command.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete a search node for the cluster named myCluster:\n   atlas clusters search nodes delete --clusterName myCluster\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search nodes list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted list of Atlas search nodes in the cluster named myCluster:\n   atlas clusters search nodes list --clusterName myCluster --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters search nodes update [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -f, --file\n     - string\n     - true\n     - Name of the JSON index configuration file to use. To learn about the Atlas Search Nodes configuration file, see https://dochub.mongodb.org/core/search-nodes-config-file-atlascli.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out.\n   * - --watchTimeout\n     - int\n     - false\n     - Time in seconds until a watch times out. After a watch times out, the CLI no longer watches the command.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update a search node for the cluster named myCluster using a JSON node spec configuration file named spec.json:\n   atlas clusters search nodes update --clusterName myCluster --file spec.json --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-search-nodes-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters start <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster to start.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for start\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-start.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Start a cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas clusters start myCluster --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-start.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters update [clusterName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - false\n     - Name of the cluster to update.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --disableTerminationProtection\n     - \n     - false\n     - Disables termination protection for your cluster. You can delete a cluster with termination protection disabled.\n\n       Mutually exclusive with --enableTerminationProtection, --file.\n   * - --diskSizeGB\n     - float\n     - false\n     - Capacity, in gigabytes, of the host's root volume.\n\n       Mutually exclusive with --file.\n   * - --enableTerminationProtection\n     - \n     - false\n     - Enables termination protection for your cluster. You can't delete a cluster with termination protection enabled.\n\n       Mutually exclusive with --disableTerminationProtection, --file.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines cluster settings. To learn more about cluster configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/cluster-config-file-atlascli.\n\n       Mutually exclusive with --tier, --diskSizeGB, --enableTerminationProtection, --disableTerminationProtection, --tag.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --mdbVersion\n     - string\n     - false\n     - Major MongoDB version of the cluster.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. Passing this flag replaces preexisting data.\n\n       Mutually exclusive with --file.\n   * - --tier\n     - string\n     - false\n     - Tier for each data-bearing server in the cluster. To learn more about cluster tiers, see https://dochub.mongodb.org/core/cluster-tier-atlas.\n\n       Mutually exclusive with --file.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the tier for a cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster update myCluster --projectId 5e2211c17a3e5a48f5497de3 --tier M50\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Replace tags cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster update myCluster --projectId 5e2211c17a3e5a48f5497de3 --tag key1=value1\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove all tags from cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster update myCluster --projectId 5e2211c17a3e5a48f5497de3 --tag =\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the disk size for a cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster update myCluster --projectId 5e2211c17a3e5a48f5497de3 --diskSizeGB 20\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the MongoDB version for a cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster update myCluster --projectId 5e2211c17a3e5a48f5497de3 --mdbVersion 5.0\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Use a configuration file named cluster-config.json to update a cluster named myCluster for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster update myCluster --projectId 5e2211c17a3e5a48f5497de3 --file cluster-config.json --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters upgrade [clusterName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - false\n     - Name of the cluster to upgrade.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --disableTerminationProtection\n     - \n     - false\n     - Disables termination protection for your cluster. You can delete a cluster with termination protection disabled.\n\n       Mutually exclusive with --enableTerminationProtection, --file.\n   * - --diskSizeGB\n     - float\n     - false\n     - Capacity, in gigabytes, of the host's root volume.\n\n       Mutually exclusive with --file.\n   * - --enableTerminationProtection\n     - \n     - false\n     - Enables termination protection for your cluster. You can't delete a cluster with termination protection enabled.\n\n       Mutually exclusive with --disableTerminationProtection, --file.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines cluster settings. To learn more about cluster configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/cluster-config-file-atlascli.\n\n       Mutually exclusive with --tier, --diskSizeGB, --mdbVersion, --enableTerminationProtection, --disableTerminationProtection, --tag.\n   * - -h, --help\n     - \n     - false\n     - help for upgrade\n   * - --mdbVersion\n     - string\n     - false\n     - Major MongoDB version of the cluster.\n\n       Mutually exclusive with --file.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster. Passing this flag replaces preexisting data.\n\n       Mutually exclusive with --file.\n   * - --tier\n     - string\n     - false\n     - Tier for each data-bearing server in the cluster. To learn more about cluster tiers, see https://dochub.mongodb.org/core/cluster-tier-atlas.\n\n       Mutually exclusive with --file.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-upgrade.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Upgrade the tier, disk size, and MongoDB version for the shared cluster named myCluster in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas cluster upgrade myCluster --projectId 5e2211c17a3e5a48f5497de3 --tier M50 --diskSizeGB 20 --mdbVersion 7.0 --tag env=dev\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-upgrade.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas clusters watch <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Name of the cluster to watch.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch for the cluster named myCluster to become available for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas clusters watch myCluster --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-clusters-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas config delete <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the profile.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete the default profile configuration:\n   atlas config delete default\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Skip the confirmation question and delete the default profile configuration:\n   atlas config delete default --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas config describe <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Label that identifies the profile.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas config edit [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for edit\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-edit.rst"
  },
  {
    "code": "   :copyable: false\n\n   # To open the config\n   atlas config edit\n\n\n.. toctree::\n   :titlesonly:\n\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-edit.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas config init [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --gov\n     - \n     - false\n     - Create a default profile for atlas for gov\n   * - -h, --help\n     - \n     - false\n     - help for init\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-init.rst"
  },
  {
    "code": "   :copyable: false\n\n   # To configure the tool to work with Atlas:\n   atlas config init\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-init.rst"
  },
  {
    "code": "   :copyable: false\n\n   # To configure the tool to work with Atlas for Government:\n   atlas config init --gov\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-init.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas config list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas config ls\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas config rename <oldProfileName> <newProfileName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - oldProfileName\n     - string\n     - true\n     - Name of the profile to rename.\n   * - newProfileName\n     - string\n     - true\n     - New name of the profile.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for rename\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-rename.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Rename a profile called myProfile to testProfile:\n   atlas config rename myProfile testProfile\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-rename.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas config set <propertyName> <value> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - propertyName\n     - string\n     - true\n     - Property to set in the profile. Valid values for Atlas CLI are project_id, org_id, service, public_api_key, private_api_key, output, mongosh_path, skip_update_check, telemetry_enabled, access_token, and refresh_token.\n   * - value\n     - string\n     - true\n     - Value for the property to set in the profile.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for set\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-set.rst"
  },
  {
    "code": "   :copyable: false\n\n  \n   Set the organization ID in the default profile to 5dd5aaef7a3e5a6c5bd12de4:\n   atlas config set org_id 5dd5aaef7a3e5a6c5bd12de4\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-config-set.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDbRoles create <roleName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - roleName\n     - string\n     - true\n     - Name of the custom role to create.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --inheritedRole\n     - strings\n     - false\n     - List of inherited roles and the database on which the role is granted.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --privilege\n     - strings\n     - false\n     - List of actions per database and collection. If no database or collections are provided, cluster scope is assumed. For details on actions specific to clusters, databases, or collections, see https://dochub.mongodb.org/core/privilege-actions.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a custom database role\n   atlas customDbRoles create customRole --privilege FIND@databaseName,UPDATE@databaseName.collectionName\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a custom database role on multiple collections\n   atlas customDbRoles create customRole --privilege FIND@databaseName,UPDATE@databaseName.firstCollectionName,UPDATE@databaseName.secondCollectionName\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a customer database role with granted action on the cluster resource\n   atlas customDbRoles create customRole --privilege GET_CMD_LINE_OPTS\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Use an inherited role\n   atlas customDbRoles create customRole --inheritedRole read@databaseName\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDbRoles delete <roleName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - roleName\n     - string\n     - true\n     - Name of the custom role to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDbRoles describe <roleName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - roleName\n     - string\n     - true\n     - Name of the custom role to retrieve.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDbRoles list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDbRoles update <roleName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - roleName\n     - string\n     - true\n     - Name of the custom role to update.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --append\n     - \n     - false\n     - Input action and inheritedRoles to append to the existing role.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --inheritedRole\n     - strings\n     - false\n     - List of inherited roles and the database on which the role is granted. Passing this flag replaces preexisting data.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --privilege\n     - strings\n     - false\n     - List of actions per database and collection. If no database or collections are provided, cluster scope is assumed. For details on actions specific to clusters, databases, or collections, see https://dochub.mongodb.org/core/privilege-actions. Passing this flag replaces preexisting data.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDbRoles-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDns aws describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDns-aws-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the custom DNS configuration deployed to AWS in the project with ID 618d48e05277a606ed2496fe:\t\t\n   atlas customDns aws describe --projectId 618d48e05277a606ed2496fe \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDns-aws-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDns aws disable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for disable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDns-aws-disable.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Disable the custom DNS configuration deployed to AWS in the project with ID 618d48e05277a606ed2496fe:\t\t\n   atlas customDns aws disable --projectId 618d48e05277a606ed2496fe \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDns-aws-disable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas customDns aws enable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDns-aws-enable.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Enable the custom DNS configuration deployed to AWS in the project with ID 618d48e05277a606ed2496fe:\t\t\n   atlas customDns aws enable --projectId 618d48e05277a606ed2496fe \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-customDns-aws-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation create <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the data federation database.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --awsRoleId\n     - string\n     - false\n     - Amazon Resource Name (ARN) of the role which Atlas Data Federation uses for accessing the data stores.\n\n       Mutually exclusive with --file.\n   * - --awsTestS3Bucket\n     - string\n     - false\n     - Name of an Amazon S3 data bucket that Atlas Data Federation uses to validate the provided role.\n\n       Mutually exclusive with --file.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines data federation settings. To learn more about data federation configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-json-data-federation-config.\n\n       Mutually exclusive with --region, --awsRoleId, --awsTestS3Bucket.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - false\n     - Name of the region to which Atlas Data Federation routes client connections for data processing.\n\n       Mutually exclusive with --file.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # create data federation database:\n   atlas dataFederation create DataFederation1 --region us_east_1 --awsRoleId role --awsTestS3Bucket bucket\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation delete <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the data federation database.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # deletes data federation 'DataFederation1':\n   atlas dataFederation delete DataFederation1\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation describe <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the data federation database.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # retrieves data federation 'DataFederation1':\n   atlas dataFederation describe DataFederation1\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of Federated Database Instances to return.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # list all data federation databases:\n   atlas dataFederation list\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation logs <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the data federation database.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --end\n     - int\n     - false\n     - Timestamp in UNIX epoch format when the logs end.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to overwrite the destination file.\n   * - -h, --help\n     - \n     - false\n     - help for logs\n   * - --out\n     - string\n     - true\n     - Output file name. This value defaults to the log name.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - int\n     - false\n     - Timestamp in UNIX epoch format when the logs start.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-logs.rst"
  },
  {
    "code": "   :copyable: false\n\n   # download logs of data federation database 'DataFederation1':\n   atlas dataFederation logs DataFederation1\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-logs.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation privateEndpoints create <endpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - endpointId\n     - string\n     - true\n     - Endpoint identifier of the data federation private endpoint.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --comment\n     - string\n     - false\n     - Optional description or comment for the entry.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # create data federation private endpoint:\n   atlas dataFederation privateEndpoints create 507f1f77bcf86cd799439011 --comment \"comment\"\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation privateEndpoints delete <endpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - endpointId\n     - string\n     - true\n     - Endpoint identifier of the data federation private endpoint.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # deletes data federation private endpoint '507f1f77bcf86cd799439011':\n   atlas dataFederation privateEndpoints delete 507f1f77bcf86cd799439011\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation privateEndpoints describe <endpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - endpointId\n     - string\n     - true\n     - Endpoint identifier of the data federation private endpoint.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # retrieves data federation private endpoint '507f1f77bcf86cd799439011':\n   atlas dataFederation privateEndpoints describe 507f1f77bcf86cd799439011\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation privateEndpoints list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # list all data federation private endpoints:\n   atlas dataFederation privateEndpoints list\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-privateEndpoints-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation queryLimits create <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Identifier of the data federation query limit.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --dataFederation\n     - string\n     - true\n     - Identifier of the Federated Database Instance.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --overrunPolicy\n     - string\n     - false\n     - Action to take when the usage limit is exceeded.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --value\n     - int\n     - true\n     - Value given to the query limit.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # create data federation query limit:\n   atlas dataFederation queryLimit create bytesProcessed.query --value 1000 --dataFederation DataFederation1\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation queryLimits delete <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Identifier of the data federation query limit.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --dataFederation\n     - string\n     - true\n     - Identifier of the Federated Database Instance.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # deletes data federation query limits \"bytesProcessed.query\" for 'DataFederation1':\n   atlas dataFederation queryLimits delete bytesProcessed.query --tenantName DataFederation1\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation queryLimits describe <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Identifier of the data federation query limit.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --dataFederation\n     - string\n     - true\n     - Identifier of the Federated Database Instance.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # retrieves data federation query limits \"bytesProcessed.query\" for 'DataFederation1':\n   atlas dataFederation queryLimits describe bytesProcessed.query --tenantName DataFederation1\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation queryLimits list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --dataFederation\n     - string\n     - true\n     - Identifier of the Federated Database Instance.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # list all data federation query limits:\n   atlas dataFederation queryLimits list\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-queryLimits-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dataFederation update <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the data federation database.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --awsRoleId\n     - string\n     - false\n     - Amazon Resource Name (ARN) of the role which Atlas Data Federation uses for accessing the data stores.\n\n       Mutually exclusive with --file.\n   * - --awsTestS3Bucket\n     - string\n     - false\n     - Name of an Amazon S3 data bucket that Atlas Data Federation uses to validate the provided role.\n\n       Mutually exclusive with --file.\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines data federation settings. To learn more about data federation configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-json-data-federation-config.\n\n       Mutually exclusive with --region, --awsRoleId, --awsTestS3Bucket.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - false\n     - Name of the region to which Atlas Data Federation routes client connections for data processing.\n\n       Mutually exclusive with --file.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # update data lake pipeline:\n   atlas dataFederation update DataFederation1\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dataFederation-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dbusers certs create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --monthsUntilExpiration\n     - int\n     - false\n     - Number of months until the X.509 certificate expires. This value defaults to 3.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --username\n     - string\n     - true\n     - Username of a database user.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-certs-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an Atlas-managed X.509 certificate that expires in 5 months for a MongoDB user named dbuser for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers certs create --username dbuser --monthsUntilExpiration 5 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-certs-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dbusers certs list <username> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - username\n     - string\n     - true\n     - Username of the database user for whom you want to list Atlas-managed certificates.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-certs-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all Atlas-managed X.509 certificates for a MongoDB user named dbuser for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers certs list dbuser --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-certs-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dbusers create [builtInRole]... [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - builtInRole\n     - string\n     - false\n     - Atlas built-in role that you want to assign to the user.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --awsIAMType\n     - string\n     - false\n     - AWS IAM method by which the provided username is authenticated. Valid values are NONE, USER, or ROLE. If you set this to USER or ROLE, the user authenticates with IAM credentials and doesn't need a password.\n\n       Mutually exclusive with --ldapType, --x509Type, --oidcType. This value defaults to \"NONE\".\n   * - --deleteAfter\n     - string\n     - false\n     - Timestamp in ISO 8601 in UTC after which Atlas deletes the user.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --ldapType\n     - string\n     - false\n     - LDAP method by which the provided username is authenticated. Valid values are NONE, USER, or GROUP. If you set this to USER or GROUP, the user authenticates with LDAP.\n\n       Mutually exclusive with --awsIAMType, --x509Type, --oidcType. This value defaults to \"NONE\".\n   * - --oidcType\n     - string\n     - false\n     - OIDC method by which the provided database user is authenticated. Valid values are NONE, USER, or IDP_GROUP. If you set this to USER or GROUP_ID, the user authenticates with OIDC.\n\n       Mutually exclusive with --awsIAMType, --ldapType, --x509Type, --password. This value defaults to \"NONE\".\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - -p, --password\n     - string\n     - false\n     - Password for the database user.\n\n       Mutually exclusive with --oidcType.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --role\n     - strings\n     - false\n     - Comma-separated list that specifies the user's roles and the databases or collections on which the roles apply.\n       The roles format is roleName[@dbName[.collection]].\n       roleName can either be a built-in role or a custom role.\n       dbName and collection are required only for built-in roles.\n   * - --scope\n     - strings\n     - false\n     - Array of clusters that this user has access to.\n   * - -u, --username\n     - string\n     - true\n     - Username for authenticating to MongoDB.\n   * - --x509Type\n     - string\n     - false\n     - X.509 method for authenticating the specified username. Valid values include NONE, MANAGED, and CUSTOMER. If you set this to MANAGED the user authenticates with an Atlas-managed X.509 certificate. If you set this to CUSTOMER, the user authenticates with a self-managed X.509 certificate.\n\n       Mutually exclusive with --awsIAMType, --ldapType, --oidcType. This value defaults to \"NONE\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an Atlas database admin user named myAdmin for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers create atlasAdmin --username myAdmin  --projectId 5e2211c17a3e5a48f5497de3\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a database user named myUser with read/write access to any database for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers create readWriteAnyDatabase --username myUser --projectId 5e2211c17a3e5a48f5497de3\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a database user named myUser with multiple roles for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers create --username myUser --role clusterMonitor,backup --projectId 5e2211c17a3e5a48f5497de3\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a database user named myUser with multiple scopes for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers create --username myUser --role clusterMonitor --scope <REPLICA-SET ID>,<storeName> --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dbusers delete <username> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - username\n     - string\n     - true\n     - Username to delete from the MongoDB database. The format of the username depends on the user's method of authentication.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --authDB\n     - string\n     - false\n     - Authentication database name. If the user authenticates with AWS IAM, x.509, or LDAP, this value should be $external. If the user authenticates with SCRAM-SHA, this value should be admin. This value defaults to \"admin\".\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete the SCRAM SHA-authenticating database user named dylan for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers delete dylan --projectId 5e2211c17a3e5a48f5497de3\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete the AWS IAM-authenticating database user with the ARN arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs for the project with ID 5e2211c17a3e5a48f5497de3. Prepend $external with \\ to escape the special-use character:\n   atlas dbusers delete arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs --authDB \\$external --projectId 5e2211c17a3e5a48f5497de3\n \t\t\t\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete the xLDAP-authenticating database user with the RFC 2253 Distinguished Name CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM for the project with ID 5e2211c17a3e5a48f5497de3. Prepend $external with \\ to escape the special-use character:\n   atlas dbusers delete CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM --authDB \\$external --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dbusers describe <username> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - username\n     - string\n     - true\n     - Username to retrieve from the MongoDB database. The format of the username depends on the user's method of authentication.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --authDB\n     - string\n     - false\n     - Authentication database name. If the user authenticates with AWS IAM, x.509, or LDAP, this value should be $external. If the user authenticates with SCRAM-SHA, this value should be admin. This value defaults to \"admin\".\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the SCRAM SHA-authenticating database user named myDbUser:\n   atlas dbuser describe myDbUser --authDB admin --output json\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the AWS IAM-authenticating database user with the ARN arn:aws:iam::772401394250:user/my-test-user. Prepend $external with \\ to escape the special-use character:\n   atlas dbuser describe arn:aws:iam::772401394250:user/my-test-user --authDB \\$external --output json\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the X.509-authenticating database user with the RFC 2253 Distinguished Name CN=ellen@example.com,OU=users,DC=example,DC=com. Prepend $external with \\ to escape the special-use character:\n   atlas dbuser describe CN=ellen@example.com,OU=users,DC=example,DC=com --authDB \\$external --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dbusers list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all database users for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas dbusers list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas dbusers update <username> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - username\n     - string\n     - true\n     - Username to update in the MongoDB database.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --authDB\n     - string\n     - false\n     - Authentication database name. If the user authenticates with AWS IAM, x.509, or LDAP, this value should be $external. If the user authenticates with SCRAM-SHA, this value should be admin.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - -p, --password\n     - string\n     - false\n     - Password for the database user.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --role\n     - strings\n     - false\n     - User's roles and the databases or collections on which the roles apply. Passing this flag replaces preexisting data.\n   * - --scope\n     - strings\n     - false\n     - Array of clusters that this user has access to. Passing this flag replaces preexisting data.\n   * - -u, --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n   * - --x509Type\n     - string\n     - false\n     - X.509 method for authenticating the specified username. Valid values include NONE, MANAGED, and CUSTOMER. If you set this to MANAGED the user authenticates with an Atlas-managed X.509 certificate. If you set this to CUSTOMER, the user authenticates with a self-managed X.509 certificate. This value defaults to \"NONE\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update roles for a database user named myUser for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas dbuser update myUser --role readWriteAnyDatabase --projectId 5e2211c17a3e5a48f5497de3\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update scopes for a database user named myUser for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas dbuser update myUser --scope resourceName:resourceType --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-dbusers-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments connect [deploymentName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - deploymentName\n     - string\n     - false\n     - Name of the deployment that you want to connect to.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --connectWith\n     - string\n     - false\n     - Method for connecting to the deployment. Valid values are compass, connectionString and mongosh.\n   * - --connectionStringType\n     - string\n     - false\n     - Type of connection string. If you specify 'private', this option retrieves the connection string for the network peering endpoint. If you specify 'privateEndpoint', this option retrieves the shard optimized connection strings for the private endpoints. This value defaults to \"standard\".\n   * - -h, --help\n     - \n     - false\n     - help for connect\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n   * - --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-connect.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments delete [deploymentName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - deploymentName\n     - string\n     - false\n     - Name of the deployment that you want to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out. To set the time that the watch times out, use the --watchTimeout option.\n   * - --watchTimeout\n     - int\n     - false\n     - Time in seconds until a watch times out. After a watch times out, the CLI no longer watches the command.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove an Atlas deployment named myDeployment after prompting for a confirmation:\n   atlas deployments delete myDeployment --type ATLAS\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove an Atlas deployment named myDeployment without requiring confirmation:\n   atlas deployments delete myDeployment --type ATLAS --force\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove an Local deployment named myDeployment without requiring confirmation:\n   atlas deployments delete myDeployment --type LOCAL --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments logs [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --deploymentName\n     - string\n     - false\n     - Name of the deployment.\n   * - --end\n     - int\n     - false\n     - Ending date and time for the range of log messages to retrieve, given in UNIX time. Defaults to the start date plus 24 hours, if the start date is set. If start date is not provided, ending time defaults to the current time.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to overwrite the destination file.\n   * - -h, --help\n     - \n     - false\n     - help for logs\n   * - --hostname\n     - string\n     - false\n     - Name of the host that stores the log files that you want to download.\n   * - --name\n     - string\n     - false\n     - Name of the log file (e.g. mongodb.gz|mongos.gz|mongosqld.gz|mongodb-audit-log.gz|mongos-audit-log.gz).\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - int\n     - false\n     - UNIX Epoch-formatted starting date and time for the range of log messages to retrieve. This value defaults to 24 hours prior to the current timestamp.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-logs.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments pause <deploymentName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - deploymentName\n     - string\n     - true\n     - Name of the deployment.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for pause\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-pause.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments search indexes create [indexName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexName\n     - string\n     - false\n     - Name of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --collection\n     - string\n     - false\n     - Name of the collection.\n\n       Mutually exclusive with --file.\n   * - --db\n     - string\n     - false\n     - Name of the database.\n\n       Mutually exclusive with --file.\n   * - --deploymentName\n     - string\n     - false\n     - Name of the deployment.\n   * - -f, --file\n     - string\n     - false\n     - Name of the JSON index configuration file to use. To learn about the Atlas Search and Atlas Vector Search index configuration file, see https://dochub.mongodb.org/core/search-index-config-file-atlascli. To learn about the Atlas Search index syntax and options that you can define in your configuration file, see https://dochub.mongodb.org/core/index-definitions-fts. To learn about the Atlas Vector Search index syntax and options that you can define in your configuration file, see https://dochub.mongodb.org/core/index-definition-avs.\n\n       Mutually exclusive with --db, --collection.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n   * - --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n   * - -w, --watch\n     - \n     - false\n     - Flag that indicates whether to watch the command until it completes its execution or the watch times out. To set the time that the watch times out, use the --watchTimeout option.\n   * - --watchTimeout\n     - int\n     - false\n     - Time in seconds until a watch times out. After a watch times out, the CLI no longer watches the command.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-search-indexes-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments search indexes delete <indexId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexId\n     - string\n     - true\n     - ID of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --deploymentName\n     - string\n     - false\n     - Name of the deployment.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n   * - --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-search-indexes-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments search indexes describe [indexId] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - indexId\n     - string\n     - false\n     - ID of the index.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --deploymentName\n     - string\n     - false\n     - Name of the deployment.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n   * - --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-search-indexes-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments search indexes list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --collection\n     - string\n     - false\n     - Name of the collection.\n   * - --db\n     - string\n     - false\n     - Name of the database.\n   * - --deploymentName\n     - string\n     - false\n     - Name of the deployment.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n   * - --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-search-indexes-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments setup [deploymentName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - deploymentName\n     - string\n     - false\n     - Name of the deployment that you want to set up.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --accessListIp\n     - strings\n     - false\n     - IP address to grant access to the deployment.\n\n       Mutually exclusive with --currentIp.\n   * - --bindIpAll\n     - \n     - false\n     - Flag that indicates whether the LOCAL deployment port binding should happen for all IPs or only for the localhost interface 127.0.0.1.\n   * - --connectWith\n     - string\n     - false\n     - Method for connecting to the deployment. Valid values are compass, mongosh and skip.\n   * - --currentIp\n     - \n     - false\n     - Flag that adds the IP address from the host that is currently executing the command to the access list.\n\n       Mutually exclusive with --accessListIp.\n   * - --enableTerminationProtection\n     - \n     - false\n     - Enables termination protection for your deployment. You can't delete a deployment with termination protection enabled.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the request for input and create a deployment with the default settings for any unspecified options.\n   * - -h, --help\n     - \n     - false\n     - help for setup\n   * - --mdbVersion\n     - string\n     - false\n     - Major MongoDB version of the deployment.\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --port\n     - int\n     - false\n     - Port that the MongoDB server listens to for client connections.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - false\n     - Name of your cloud service provider. Valid values are AWS, AZURE, or GCP.\n   * - -r, --region\n     - string\n     - false\n     - Physical location of your MongoDB deployment. For a complete list of supported AWS regions, see: https://dochub.mongodb.org/core/aws-atlas. For a complete list of supported Azure regions, see: https://dochub.mongodb.org/core/azure-atlas. For a complete list of supported GCP regions, see: https://dochub.mongodb.org/core/gcp-atlas.\n   * - --skipMongosh\n     - \n     - false\n     - Flag that indicates whether to skip accessing your deployment with MongoDB Shell.\n   * - --skipSampleData\n     - \n     - false\n     - Flag that indicates whether to skip loading sample data into your MongoDB deployment.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the deployment.\n   * - --tier\n     - string\n     - false\n     - Tier for each data-bearing server in the deployment. To learn more about cluster tiers, see https://dochub.mongodb.org/core/cluster-tier-atlas. This value defaults to \"M0\".\n   * - --type\n     - string\n     - false\n     - Type of deployment that you want to create. Valid values are ATLAS or LOCAL.\n   * - --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-setup.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas deployments start <deploymentName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - deploymentName\n     - string\n     - true\n     - Name of the deployment.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for start\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - string\n     - false\n     - Type of deployment. Valid values are ATLAS or LOCAL.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-deployments-start.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas events organizations list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --maxDate\n     - string\n     - false\n     - Maximum created date. This option returns events whose created date is less than or equal to the specified value. This parameter uses the ISO 8601 timestamp format in UTC.\n   * - --minDate\n     - string\n     - false\n     - Minimum created date. This option returns events whose created date is greater than or equal to the specified value. This parameter uses the ISO 8601 timestamp format in UTC.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --type\n     - strings\n     - false\n     - Type of event that triggered the alert. To learn which values the CLI accepts, see the Enum for eventTypeName in the Atlas Admin API spec: https://dochub.mongodb.org/core/atlas-event-names.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-events-organizations-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of events for the organization with the ID 5dd5a6b6f10fab1d71a58495:\n   atlas events organizations list --orgId 5dd5a6b6f10fab1d71a58495 --output json\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-events-organizations-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of events between 2024-03-18T14:40:03-0000 and 2024-03-18T15:00:03-0000 and for the project with the ID 5e2211c17a3e5a48f5497de3\n   atlas events projects list --output json --projectId 5e2211c17a3e5a48f5497de3  --minDate 2024-03-18T14:40:03-0000 --maxDate 2024-03-18T15:00:03-0000\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-events-organizations-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas events projects list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --maxDate\n     - string\n     - false\n     - Maximum created date. This option returns events whose created date is less than or equal to the specified value. This parameter uses the ISO 8601 timestamp format in UTC.\n   * - --minDate\n     - string\n     - false\n     - Minimum created date. This option returns events whose created date is greater than or equal to the specified value. This parameter uses the ISO 8601 timestamp format in UTC.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --type\n     - strings\n     - false\n     - Type of event that triggered the alert. To learn which values the CLI accepts, see the Enum for eventTypeName in the Atlas Admin API spec: https://dochub.mongodb.org/core/atlas-event-names.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-events-projects-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of events for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas events projects list --Id 5e2211c17a3e5a48f5497de3 --output json\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-events-projects-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of events between 2024-03-18T14:40:03-0000 and 2024-03-18T15:00:03-0000 and for the project with the ID 5e2211c17a3e5a48f5497de3\n   atlas events projects list --output json --projectId 5e2211c17a3e5a48f5497de3  --minDate 2024-03-18T14:40:03-0000 --maxDate 2024-03-18T15:00:03-0000\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-events-projects-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings connectedOrgConfigs connect [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for connect\n   * - --identityProviderId\n     - string\n     - true\n     - Unique identifier of the identity provider.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --protocol\n     - string\n     - false\n     - Protocol used to authenticate the user. Valid value is OIDC or SAML. This value defaults to \"OIDC\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-connect.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Connect the current profile org to identity provider with ID 7d1113b25a115342acc2d1aa and federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs connect --identityProviderId 7d1113b25a115342acc2d1aa --federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\t\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-connect.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Connect the org with ID 7d1113b25a115342acc2d1aa to identity provider with ID 7d1113b25a115342acc2d1aa and federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs connect --orgId 7d1113b25a115342acc2d1aa --identityProviderId 7d1113b25a115342acc2d1aa --federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-connect.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings connectedOrgConfigs delete [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete a connected org config from the current profile org and federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs delete --federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\t\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Delete a connected org config from the org with ID 7d1113b25a115342acc2d1aa and federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs delete --orgId 7d1113b25a115342acc2d1aa --federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings connectedOrgConfigs describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Describe a connected org config from the current profile org and federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigsConfig describe --federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\t\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Describe a connected org config from the org with ID 7d1113b25a115342acc2d1aa and federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs describe --orgId 7d1113b25a115342acc2d1aa --federationSettingsId 5d1113b25a115342acc2d1aa \n \t\t\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings connectedOrgConfigs disconnect [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for disconnect\n   * - --identityProviderId\n     - string\n     - true\n     - Unique identifier of the identity provider.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --protocol\n     - string\n     - false\n     - Protocol used to authenticate the user. Valid value is OIDC or SAML. This value defaults to \"OIDC\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-disconnect.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Disconnect the current profile org from identity provider with ID 5d1113b25a115342acc2d1aa and federationSettingsId 7d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs disconnect --identityProviderId 5d1113b25a115342acc2d1aa --federationSettingsId 7d1113b25a115342acc2d1aa \n \t\t\t\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-disconnect.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Disconnect the org with ID 7d1113b25a115342acc2d1aa to identity provider with ID 5d1113b25a115342acc2d1aa and federationSettingsId 7d1113b25a115342acc2d1aa \n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs disconnect --orgId 7d1113b25a115342acc2d1aa --identityProviderId 5d1113b25a115342acc2d1aa --federationSettingsId 7d1113b25a115342acc2d1aa \n \t\t\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-disconnect.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings connectedOrgConfigs list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # List all connected org config with federationSettingsId 5d1113b25a115342acc2d1aa \n   atlas federatedAuthentication federationSettings connectedOrgsConfig list --federationSettingsId 5d1113b25a115342acc2d1aa \n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings connectedOrgConfigs update [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - --file\n     - string\n     - true\n     - Path to a JSON configuration file that defines connected orgs configurations. To learn more about connected org configuration file format, see the request body in https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Federated-Authentication/operation/updateConnectedOrgConfig.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the connected orgs config with the current profile org and federationSettingsId 5d1113b25a115342acc2d1aa using the JSON configuration file config.json\n \t\t\tatlas federatedAuthentication federationSettings connectedOrgConfigs update --federationSettingsId 5d1113b25a115342acc2d1aa --file config.json\n \t\t\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-connectedOrgConfigs-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted Federation Settings details:\n   atlas federatedAuthentication federationSettings describe --orgId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings identityProvider create oidc [displayName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - displayName\n     - string\n     - false\n     - The Identity Provider display name.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --associatedDomain\n     - strings\n     - false\n     - List of domains associated with the Identity Provider.\n   * - --audience\n     - string\n     - true\n     - Identifier of the intended recipient of the token.\n   * - --authorizationType\n     - string\n     - true\n     - Type of authorization. Valid values are NONE, JWT, or SAML.\n   * - --clientId\n     - string\n     - false\n     - Client identifier that is assigned to an application by the Identity Provider.\t\n   * - --desc\n     - string\n     - true\n     - Description of the Identity Provider.\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - --groupsClaim\n     - string\n     - true\n     - Identifier of the claim which contains IdP Group IDs in the token.\n   * - -h, --help\n     - \n     - false\n     - help for oidc\n   * - --idpType\n     - string\n     - true\n     - Type of Identity Provider. Valid values are WORKFORCE or WORKLOAD.\n   * - --issuerUri\n     - string\n     - true\n     - Unique string that identifies the issuer of the OIDC metadata/discovery document URL.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --requestedScope\n     - strings\n     - false\n     - Scopes that MongoDB applications will request from the authorization endpoint.\t\n   * - --userClaim\n     - string\n     - true\n     - Identifier of the claim which contains the user ID in the token.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-create-oidc.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an identity provider with name IDPName and from your federation settings with federationSettingsId 5d1113b25a115342acc2d1aa.\n \t\tatlas federatedAuthentication federationSettings identityProvider create oidc IDPName --audience \"audience\" --authorizationType \"GROUP\" --clientId clientId --desc \"IDPName test\" --federationSettingsId \"5d1113b25a115342acc2d1aa\" --groupsClaim \"groups\" --idpType \"WORKLOAD\" --issuerUri uri\" --userClaim \"user\"  --associatedDomain \"domain\"\n \t\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-create-oidc.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings identityProvider delete <identityProviderId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - identityProviderId\n     - string\n     - true\n     - ID of the identityProvider.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # elete the identity provider with ID aa2223b25a115342acc1f108 from your federation settings with federationSettingsId 5d1113b25a115342acc2d1aa.\n \tatlas federatedAuthentication federationSettings identityProvider delete aa2223b25a115342acc1f108 --federationSettingsId 5d1113b25a115342acc2d1aa\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings identityProvider describe <identityProviderId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - identityProviderId\n     - string\n     - true\n     - ID of the identityProvider.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Describe the identity provider with ID aa2223b25a115342acc1f108 with federationSettingsId 5d1113b25a115342acc2d1aa.\n \tatlas federatedAuthentication federationSettings identityProvider describe aa2223b25a115342acc1f108 --federationSettingsId 5d1113b25a115342acc2d1aa\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings identityProvider list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --idpType\n     - string\n     - false\n     - Type of Identity Provider. Valid values are WORKFORCE or WORKLOAD. This value defaults to \"WORKFORCE\".\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --protocol\n     - string\n     - false\n     - Protocol used to authenticate the user. Valid value is OIDC or SAML. This value defaults to \"OIDC\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # List the identity providers from your federation settings with federationSettingsId 5d1113b25a115342acc2d1aa and idpType WORKLOAD\n \tatlas federatedAuthentication federationSettings identityProvider list --federationSettingsId 5d1113b25a115342acc2d1aa --idpType WORKLOAD\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings identityProvider revokeJwk <identityProviderId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - identityProviderId\n     - string\n     - true\n     - ID of the identityProvider.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for revokeJwk\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-revokeJwk.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Revoke the Jwk from the identity provider with ID aa2223b25a115342acc1f108 and federation settings with federationSettingsId 5d1113b25a115342acc2d1aa.\n \tatlas federatedAuthentication federationSettings identityProvider revokeJwk aa2223b25a115342acc1f108 --federationSettingsId 5d1113b25a115342acc2d1aa\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-revokeJwk.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas federatedAuthentication federationSettings identityProvider update oidc [identityProviderId] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - identityProviderId\n     - string\n     - false\n     - The Identity Provider ID.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --associatedDomain\n     - strings\n     - false\n     - List of domains associated with the Identity Provider.\n   * - --audience\n     - string\n     - false\n     - Identifier of the intended recipient of the token.\n   * - --authorizationType\n     - string\n     - false\n     - Type of authorization. Valid values are NONE, JWT, or SAML.\n   * - --clientId\n     - string\n     - false\n     - Client identifier that is assigned to an application by the Identity Provider.\t\n   * - --desc\n     - string\n     - false\n     - Description of the Identity Provider.\n   * - --federationSettingsId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - --groupsClaim\n     - string\n     - false\n     - Identifier of the claim which contains IdP Group IDs in the token.\n   * - -h, --help\n     - \n     - false\n     - help for oidc\n   * - --idpType\n     - string\n     - true\n     - Type of Identity Provider. Valid values are WORKFORCE or WORKLOAD.\n   * - --issuerUri\n     - string\n     - false\n     - Unique string that identifies the issuer of the OIDC metadata/discovery document URL.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --requestedScope\n     - strings\n     - false\n     - Scopes that MongoDB applications will request from the authorization endpoint.\t\n   * - --userClaim\n     - string\n     - false\n     - Identifier of the claim which contains the user ID in the token.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-update-oidc.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the audience of the identity provider with ID aa2223b25a115342acc1f108 and from your federation settings with federationSettingsId 5d1113b25a115342acc2d1aa with IdpType WORKFORCE\n \t\t\tatlas federatedAuthentication federationSettings identityProvider update aa2223b25a115342acc1f108 --federationSettingsId 5d1113b25a115342acc2d1aa --idpType WORKFORCE --audience newAudience\n \t\t\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-federatedAuthentication-federationSettings-identityProvider-update-oidc.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations create DATADOG [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKey\n     - string\n     - true\n     - Datadog API key that allows Atlas to access your Datadog account.\n   * - -h, --help\n     - \n     - false\n     - help for DATADOG\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - false\n     - Code that indicates which regional URL MongoDB uses to access the Datadog API. Valid values are US, EU, US3, US5, and AP1. This value defaults to \"US\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-DATADOG.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Integrate Datadog with Atlas for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations create DATADOG --apiKey a1a23bcdef45ghijk6789 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-DATADOG.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations create OPS_GENIE [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKey\n     - string\n     - true\n     - Opsgenie API key that allows Atlas to access your Opsgenie account.\n   * - -h, --help\n     - \n     - false\n     - help for OPS_GENIE\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - false\n     - Code that indicates which regional URL MongoDB uses to access the third-party API. Valid values are US and EU. This value defaults to \"US\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-OPS_GENIE.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Integrate Opsgenie with Atlas for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations create OPS_GENIE --apiKey a1a23bcdef45ghijk6789 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-OPS_GENIE.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations create PAGER_DUTY [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for PAGER_DUTY\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --serviceKey\n     - string\n     - true\n     - Service key associated with your PagerDuty account.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-PAGER_DUTY.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Integrate PagerDuty with Atlas for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations create PAGER_DUTY --serviceKey a1a23bcdef45ghijk6789 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-PAGER_DUTY.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations create VICTOR_OPS [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKey\n     - string\n     - true\n     - Splunk On-Call API key that allows Atlas to access your Splunk On-Call account.\n   * - -h, --help\n     - \n     - false\n     - help for VICTOR_OPS\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --routingKey\n     - string\n     - true\n     - Routing key associated with your Splunk On-Call account.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-VICTOR_OPS.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Integrate Splunk On-Call with Atlas using the routing key operations for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations create VICTOR_OPS --apiKey a1a23bcdef45ghijk6789 --routingKey operations --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-VICTOR_OPS.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations create WEBHOOK [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for WEBHOOK\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --secret\n     - string\n     - true\n     - Secret that secures your webhook.\n   * - --url\n     - string\n     - true\n     - Endpoint web address to which Atlas sends notifications.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-WEBHOOK.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Integrate a webhook with Atlas that uses the secret mySecret for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations create WEBHOOK --url http://9b4ac7aa.abc.io/payload --secret mySecret --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-create-WEBHOOK.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations delete <integrationType> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - integrationType\n     - string\n     - true\n     - Human-readable label that identifies the service integration to delete. Valid values are PAGER_DUTY, MICROSOFT_TEAMS, SLACK, DATADOG, NEW_RELIC, OPS_GENIE, VICTOR_OPS, WEBHOOK, PROMETHEUS.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the Datadog integration for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations delete DATADOG --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations describe <integrationType> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - integrationType\n     - string\n     - true\n     - Human-readable label that identifies the integrated service. Valid values are PAGER_DUTY, MICROSOFT_TEAMS, SLACK, DATADOG, NEW_RELIC, OPS_GENIE, VICTOR_OPS, WEBHOOK, PROMETHEUS.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the Datadog integration for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations describe DATADOG --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas integrations list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of active third-party integrations for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas integrations list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-integrations-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas kubernetes config apply [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - strings\n     - false\n     - One or more comma separated cluster names to import\n   * - -h, --help\n     - \n     - false\n     - help for apply\n   * - --kubeContext\n     - string\n     - false\n     - Name of the kubeconfig context to use.\n   * - --kubeconfig\n     - string\n     - false\n     - Path to the kubeconfig file to use for CLI requests.\n   * - --operatorVersion\n     - string\n     - false\n     - Version of Atlas Kubernetes Operator to generate resources for.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --targetNamespace\n     - string\n     - false\n     - Namespaces to use for generated kubernetes entities\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-apply.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export and apply all supported resources of a specific project:\n   atlas kubernetes config apply --projectId=<projectId>\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-apply.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export and apply all supported resources of a specific project and to a specific namespace:\n   atlas kubernetes config apply --projectId=<projectId> --targetNamespace=<namespace>\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-apply.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export and apply all supported Project resource, and only the described Deployment resources of a specific project to a specific namespace:\n   atlas kubernetes config apply --projectId=<projectId> --clusterName=<cluster-name-1, cluster-name-2> --targetNamespace=<namespace>\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-apply.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export and apply all supported resources of a specific project to a specific namespace restricting the version of the Atlas Kubernetes Operator:\n   atlas kubernetes config apply --projectId=<projectId> --targetNamespace=<namespace> --operatorVersion=1.5.1\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-apply.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas kubernetes config generate [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - strings\n     - false\n     - One or more comma separated cluster names to import\n   * - --dataFederationName\n     - strings\n     - false\n     - One or more comma separated data federation names to import\n   * - -h, --help\n     - \n     - false\n     - help for generate\n   * - --includeSecrets\n     - \n     - false\n     - Flag that generates kubernetes secrets with data for projects, users, deployments entities.\n   * - --operatorVersion\n     - string\n     - false\n     - Version of Atlas Kubernetes Operator to generate resources for. This value defaults to \"2.4.0\".\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --targetNamespace\n     - string\n     - false\n     - Namespaces to use for generated kubernetes entities\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-generate.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export Project, DatabaseUsers, Deployments resources for a specific project without connection and integration secrets:\n   atlas kubernetes config generate --projectId=<projectId>\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-generate.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export Project, DatabaseUsers, Deployments resources for a specific project including connection and integration secrets:\n   atlas kubernetes config generate --projectId=<projectId> --includeSecrets\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-generate.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export Project, DatabaseUsers, Deployments resources for a specific project including connection and integration secrets to a specific namespace:\n   atlas kubernetes config generate --projectId=<projectId> --includeSecrets --targetNamespace=<namespace>\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-generate.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export Project, DatabaseUsers, DataFederations and specific Deployment resources for a specific project including connection and integration secrets to a specific namespace:\n   atlas kubernetes config generate --projectId=<projectId> --clusterName=<cluster-name-1, cluster-name-2> --includeSecrets --targetNamespace=<namespace>\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-generate.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export resources for a specific version of the Atlas Kubernetes Operator:\n   atlas kubernetes config generate --projectId=<projectId> --targetNamespace=<namespace> --operatorVersion=1.5.1\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-generate.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Export Project, DatabaseUsers, Clusters and specific DataFederation resources for a specific project to a specific namespace:\n   atlas kubernetes config generate --projectId=<projectId> --dataFederationName=<data-federation-name-1, data-federation-name-2> --targetNamespace=<namespace>\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-config-generate.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas kubernetes operator install [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --atlasGov\n     - \n     - false\n     - Flag that indicates whether to configure Atlas for Government as a target of the operator.\n   * - -h, --help\n     - \n     - false\n     - help for install\n   * - --import\n     - \n     - false\n     - Flag that indicates whether to import existing Atlas resources into the cluster for the operator to manage.\n   * - --kubeContext\n     - string\n     - false\n     - Name of the kubeconfig context to use.\n   * - --kubeconfig\n     - string\n     - false\n     - Path to the kubeconfig file to use for CLI requests.\n   * - --operatorVersion\n     - string\n     - false\n     - Version of the operator to install.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - --projectName\n     - string\n     - false\n     - Name of the project to create or use with the installed operator.\n   * - --resourceDeletionProtection\n     - \n     - false\n     - Toggle atlas operator deletion protection for resources like Projects, Deployments, etc. Read more: https://dochub.mongodb.org/core/ako-deletion-protection This value defaults to true.\n   * - --subresourceDeletionProtection\n     - \n     - false\n     - Toggle atlas operator deletion protection for subresources like Alerts, Integrations, etc. Read more: https://dochub.mongodb.org/core/ako-deletion-protection This value defaults to true.\n   * - --targetNamespace\n     - string\n     - false\n     - Namespace where to install the operator.\n   * - --watchNamespace\n     - strings\n     - false\n     - List that contains namespaces that the operator will listen to.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install latest version of the operator into the default namespace:\n   atlas kubernetes operator install\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install the latest version of the operator targeting Atlas for Government instead of regular commercial Atlas:\n   atlas kubernetes operator install --atlasGov\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install a specific version of the operator:\n   atlas kubernetes operator install --operatorVersion=1.7.0\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install a specific version of the operator to a namespace and watch only this namespace and a second one:\n   atlas kubernetes operator install --operatorVersion=1.7.0 --targetNamespace=<namespace> --watchNamespace=<namespace>,<secondNamespace>\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install and import all objects from an organization:\n   atlas kubernetes operator install --targetNamespace=<namespace> --orgID <orgID> --import\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install and import objects from a specific project:\n   atlas kubernetes operator install --targetNamespace=<namespace> --orgID <orgID> --projectName <project> --import\n\n \t\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install the operator and disable deletion protection:\n \tatlas kubernetes operator install --resourceDeletionProtection=false\n\n \t\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install the operator and disable deletion protection for sub-resources (Atlas project integrations, private endpoints, etc.):\n \tatlas kubernetes operator install --subresourceDeletionProtection=false\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-kubernetes-operator-install.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas liveMigrations create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Human-readable label that identifies the Atlas destination cluster.\n   * - --drop\n     - \n     - false\n     - Flag that indicates whether this process should drop existing collections from the destination (Atlas) cluster given in --destinationClusterName before starting the migration of data from the source cluster.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --migrationHost\n     - strings\n     - true\n     - List of hosts running the MongoDB Agent that can transfer your MongoDB data from the source (Cloud Manager or Ops Manager) to destination (Atlas) deployments. Each live migration process uses its own dedicated migration host.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --sourceCACertificatePath\n     - string\n     - false\n     - Path to the CA certificate that signed TLS certificates use to authenticate to the source Cloud Manager or Ops Manager cluster. Omit this value if --sourceSSL is not passed.\n   * - --sourceClusterName\n     - string\n     - true\n     - Human-readable label that identifies the source Cloud Manager or Ops Manager cluster.\n   * - --sourceManagedAuthentication\n     - \n     - false\n     - Flag that indicates whether MongoDB Automation manages authentication to the source Cloud Manager or Ops Manager cluster. If you set this to true, don't provide values for --sourceUsername and --sourcePassword.\n\n       Mutually exclusive with --sourceUsername.\n   * - -p, --sourcePassword\n     - string\n     - false\n     - Password that authenticates the username to the source Cloud Manager or Ops Manager cluster. Omit this value if --sourceManagedAuthentication is passed.\n   * - --sourceProjectId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the source project.\n   * - --sourceSsl\n     - \n     - false\n     - Flag that indicates whether data source has TLS enabled.\n   * - -u, --sourceUsername\n     - string\n     - false\n     - Human-readable label that identifies the SCRAM-SHA user that connects to the source Cloud Manager or Ops Manager cluster. Omit this value if --sourceManagedAuthentication is set.\n\n       Mutually exclusive with --sourceManagedAuthentication.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-liveMigrations-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas liveMigrations cutover [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for cutover\n   * - --liveMigrationId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the live migration job.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-liveMigrations-cutover.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas liveMigrations describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --liveMigrationId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the live migration job.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-liveMigrations-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas liveMigrations link create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --accessListIp\n     - strings\n     - false\n     - IP address access list entries that are associated with the link-token.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-liveMigrations-link-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas liveMigrations link delete [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-liveMigrations-link-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas liveMigrations validation create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Human-readable label that identifies the Atlas destination cluster.\n   * - --drop\n     - \n     - false\n     - Flag that indicates whether this process should drop existing collections from the destination (Atlas) cluster given in --destinationClusterName before starting the migration of data from the source cluster.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --migrationHost\n     - strings\n     - true\n     - List of hosts running the MongoDB Agent that can transfer your MongoDB data from the source (Cloud Manager or Ops Manager) to destination (Atlas) deployments. Each live migration process uses its own dedicated migration host.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --sourceCACertificatePath\n     - string\n     - false\n     - Path to the CA certificate that signed TLS certificates use to authenticate to the source Cloud Manager or Ops Manager cluster. Omit this value if --sourceSSL is not passed.\n   * - --sourceClusterName\n     - string\n     - true\n     - Human-readable label that identifies the source Cloud Manager or Ops Manager cluster.\n   * - --sourceManagedAuthentication\n     - \n     - false\n     - Flag that indicates whether MongoDB Automation manages authentication to the source Cloud Manager or Ops Manager cluster. If you set this to true, don't provide values for --sourceUsername and --sourcePassword.\n\n       Mutually exclusive with --sourceUsername.\n   * - -p, --sourcePassword\n     - string\n     - false\n     - Password that authenticates the username to the source Cloud Manager or Ops Manager cluster. Omit this value if --sourceManagedAuthentication is passed.\n   * - --sourceProjectId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the source project.\n   * - --sourceSsl\n     - \n     - false\n     - Flag that indicates whether data source has TLS enabled.\n   * - -u, --sourceUsername\n     - string\n     - false\n     - Human-readable label that identifies the SCRAM-SHA user that connects to the source Cloud Manager or Ops Manager cluster. Omit this value if --sourceManagedAuthentication is set.\n\n       Mutually exclusive with --sourceManagedAuthentication.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-liveMigrations-validation-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas liveMigrations validation describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --validationId\n     - string\n     - false\n     - Unique 24-hexadecimal digit string that identifies the validation job.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-liveMigrations-validation-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas logs download <hostname> <mongodb.gz|mongos.gz|mongosqld.gz|mongodb-audit-log.gz|mongos-audit-log.gz> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - hostname\n     - string\n     - true\n     - Label that identifies the host that stores the log files that you want to download.\n   * - mongodb.gz|mongos.gz|mongosqld.gz|mongodb-audit-log.gz|mongos-audit-log.gz\n     - string\n     - true\n     - Log file that you want to return.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -d, --decompress\n     - \n     - false\n     - Flag that indicates whether to decompress the log files.\n   * - --end\n     - int\n     - false\n     - Ending date and time for the range of log messages to retrieve, given in UNIX time. Defaults to the start date plus 24 hours, if the start date is set. If start date is not provided, ending time defaults to the current time.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to overwrite the destination file.\n   * - -h, --help\n     - \n     - false\n     - help for download\n   * - --out\n     - string\n     - false\n     - Output file name. This value defaults to the log name.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - int\n     - false\n     - UNIX Epoch-formatted starting date and time for the range of log messages to retrieve. This value defaults to 24 hours prior to the current timestamp.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-logs-download.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Download the mongodb log file from the host atlas-123abc-shard-00-00.111xx.mongodb.net for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas logs download  atlas-123abc-shard-00-00.111xx.mongodb.net mongodb.gz --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-logs-download.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas maintenanceWindows clear [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for clear\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-clear.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Clear the current maintenance window for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas maintenanceWindows clear --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-clear.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas maintenanceWindows defer [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for defer\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-defer.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Defer scheduled maintenance for one week for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas maintenanceWindows defer --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-defer.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas maintenanceWindows describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the maintenance window for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas maintenanceWindows describe --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas maintenanceWindows update [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --dayOfWeek\n     - int\n     - false\n     - Day of the week that you want the maintenance window to start, as a 1-based integer. Use 1 for Sunday, 2 for Monday, 3 for Tuesday, 4 for Wednesday, 5 for Thursday, 6 for Friday, or 7 for Saturday.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --hourOfDay\n     - int\n     - false\n     - Hour of the day that you want the maintenance window to start according to a 24-hour clock. Use 0 for midnight and 12 for noon.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --startASAP\n     - \n     - false\n     - Flag that starts maintenance immediately upon receiving this request. This flag resets to false after Atlas completes maintenance.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update the maintenance window to midnight on Saturdays for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas maintenanceWindows update --dayOfWeek 7 --hourOfDay 0 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-maintenanceWindows-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas metrics databases describe <hostname:port> <databaseName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - hostname:port\n     - string\n     - true\n     - Hostname and port number of the instance running the MongoDB process.\n   * - databaseName\n     - string\n     - true\n     - Label that identifies the database from which you want to retrieve metrics.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --end\n     - string\n     - false\n     - ISO 8601-formatted date and time that specifies when to stop retrieving measurements. You can't set this parameter and period in the same request.\n\n       Mutually exclusive with --period.\n   * - --granularity\n     - string\n     - true\n     - ISO 8601-formatted duration that specifies the interval between measurement data points. Only the following subset of ISO 8601-formatted time periods are supported: PT10S, PT1M, PT5M, PT1H, P1D. When you specify granularity, you must specify either period or start and end.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --period\n     - string\n     - false\n     - ISO 8601-formatted time period that specifies the length of time in the past to query. You can't set this parameter and the start or end parameter in the same request.\n\n       Mutually exclusive with --start, --end.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - string\n     - false\n     - ISO 8601-formatted date and time that specifies when to start retrieving measurements. You can't set this parameter and period in the same request.\n\n       Mutually exclusive with --period.\n   * - --type\n     - strings\n     - false\n     - Measurements to return. This option returns all measurements by default. Valid values include DATABASE_AVERAGE_OBJECT_SIZE, DATABASE_COLLECTION_COUNT, DATABASE_DATA_SIZE, DATABASE_STORAGE_SIZE, DATABASE_INDEX_SIZE, DATABASE_INDEX_COUNT, DATABASE_EXTENT_COUNT, DATABASE_OBJECT_COUNT, and DATABASE_VIEW_COUNT\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-databases-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted database metrics from the last 36 hours with 5-minute granularity for the database named testDB in the host atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017 \n   atlas metrics databases describe atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017 testDB --granularity PT1M --period P1DT12H --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-databases-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas metrics databases list <hostname:port> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - hostname:port\n     - string\n     - true\n     - Hostname and port number of the instance running the MongoDB process.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-databases-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of available databases for the host atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017\n   atlas metrics databases list atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-databases-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas metrics disks describe <hostname:port> <diskName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - hostname:port\n     - string\n     - true\n     - Hostname and port number of the instance running the MongoDB process.\n   * - diskName\n     - string\n     - true\n     - Label that identifies the disk or partition from which you want to retrieve metrics.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --end\n     - string\n     - false\n     - ISO 8601-formatted date and time that specifies when to stop retrieving measurements. You can't set this parameter and period in the same request.\n\n       Mutually exclusive with --period.\n   * - --granularity\n     - string\n     - true\n     - ISO 8601-formatted duration that specifies the interval between measurement data points. Only the following subset of ISO 8601-formatted time periods are supported: PT10S, PT1M, PT5M, PT1H, P1D. When you specify granularity, you must specify either period or start and end.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --period\n     - string\n     - false\n     - ISO 8601-formatted time period that specifies the length of time in the past to query. You can't set this parameter and the start or end parameter in the same request.\n\n       Mutually exclusive with --start, --end.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - string\n     - false\n     - ISO 8601-formatted date and time that specifies when to start retrieving measurements. You can't set this parameter and period in the same request.\n\n       Mutually exclusive with --period.\n   * - --type\n     - strings\n     - false\n     - Measurements to return. This option returns all measurements by default. Valid values include DATABASE_AVERAGE_OBJECT_SIZE, DATABASE_COLLECTION_COUNT, DATABASE_DATA_SIZE, DATABASE_STORAGE_SIZE, DATABASE_INDEX_SIZE, DATABASE_INDEX_COUNT, DATABASE_EXTENT_COUNT, DATABASE_OBJECT_COUNT, and DATABASE_VIEW_COUNT\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-disks-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted disk metrics from the last 36 hours with 5-minute granularity for the database named testDB in the host atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017\n   atlas metrics disks describe atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017 testDB --granularity PT1M --period P1DT12H --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-disks-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas metrics disks list <hostname:port> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - hostname:port\n     - string\n     - true\n     - Hostname and port number of the instance running the MongoDB process.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-disks-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of disks and partitions for the host atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017\n   atlas metrics disks list atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-disks-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas metrics processes <hostname:port> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - hostname:port\n     - string\n     - true\n     - Hostname and port number of the instance running the MongoDB process.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --end\n     - string\n     - false\n     - ISO 8601-formatted date and time that specifies when to stop retrieving measurements. You can't set this parameter and period in the same request.\n\n       Mutually exclusive with --period.\n   * - --granularity\n     - string\n     - true\n     - ISO 8601-formatted duration that specifies the interval between measurement data points. Only the following subset of ISO 8601-formatted time periods are supported: PT10S, PT1M, PT5M, PT1H, P1D. When you specify granularity, you must specify either period or start and end.\n   * - -h, --help\n     - \n     - false\n     - help for processes\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --period\n     - string\n     - false\n     - ISO 8601-formatted time period that specifies the length of time in the past to query. You can't set this parameter and the start or end parameter in the same request.\n\n       Mutually exclusive with --start, --end.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - string\n     - false\n     - ISO 8601-formatted date and time that specifies when to start retrieving measurements. You can't set this parameter and period in the same request.\n\n       Mutually exclusive with --period.\n   * - --type\n     - strings\n     - false\n     - Measurements to return. This option returns all measurements by default. To learn which values the CLI accepts, see the Items Enum for m in the Atlas API spec: https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Monitoring-and-Logs/operation/getHostMeasurements/.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-processes.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted process metrics for the host atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017\n   atlas metrics processes atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-metrics-processes.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking containers delete <containerId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - containerId\n     - string\n     - true\n     - Unique 24-hexadecimal digit string that identifies the network container that you want to remove.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-containers-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the network peering container with the ID 5e44103f8d614b2f0b6530d8 from the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas networking containers delete 5e44103f8d614b2f0b6530d8 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-containers-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking containers list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - false\n     - Name of your cloud service provider. Valid values are AWS, AZURE, or GCP.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-containers-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of network peering containers in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas networking containers list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-containers-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking peering create aws [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --accountId\n     - string\n     - true\n     - Unique twelve-digit AWS account ID that owns the peer VPC.\n   * - --atlasCidrBlock\n     - string\n     - false\n     - CIDR block that Atlas uses for all network peering connections created in the project. This option is required only if you do not already have an Atlas VPC. To learn more, see the Atlas UI tab at https://dochub.mongodb.org/core/peering-connection-atlas.\n   * - -h, --help\n     - \n     - false\n     - help for aws\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - true\n     - Cloud provider region where the VPC that you peered with the Atlas VPC resides.\n   * - --routeTableCidrBlock\n     - string\n     - true\n     - Peer VPC CIDR block or subnet.\n   * - --vpcId\n     - string\n     - true\n     - Unique identifier of the peer VPC.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-create-aws.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a network peering connection between the Atlas VPC in CIDR block 192.168.0.0/24 and your AWS VPC in CIDR block 10.0.0.0/24 for AWS account number 854333054055:\n   atlas networking peering create aws --accountId 854333054055 --atlasCidrBlock 192.168.0.0/24 --region us-east-1 --routeTableCidrBlock 10.0.0.0/24 --vpcId vpc-078ac381aa90e1e63\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-create-aws.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking peering create azure [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --atlasCidrBlock\n     - string\n     - false\n     - CIDR block that Atlas uses for all network peering connections created in the project. This option is required only if you do not already have an Atlas VPC. To learn more, see the Atlas UI tab at https://dochub.mongodb.org/core/peering-connection-atlas.\n   * - --directoryId\n     - string\n     - true\n     - Unique identifier for an Azure AD directory.\n   * - -h, --help\n     - \n     - false\n     - help for azure\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - true\n     - Cloud provider region where the VPC that you peered with the Atlas VPC resides.\n   * - --resourceGroup\n     - string\n     - true\n     - Name of your Azure resource group.\n   * - --subscriptionId\n     - string\n     - true\n     - Unique identifier of the Azure subscription in which the VNet resides.\n   * - --vnet\n     - string\n     - true\n     - Name of your Azure VNet.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-create-azure.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a network peering connection between the Atlas VPC in CIDR block 192.168.0.0/24 and your Azure VNet named atlascli-test in in US_EAST_2:\n   atlas networking peering create azure --atlasCidrBlock 192.168.0.0/24 --directoryId 56657fdb-ca45-40dc-fr56-77fd8b6d2b37 --subscriptionId 345654f3-77cf-4084-9e06-8943a079ed75 --resourceGroup atlascli-test --region US_EAST_2 --vnet atlascli-test\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-create-azure.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking peering create gcp [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --atlasCidrBlock\n     - string\n     - true\n     - CIDR block that Atlas uses for all network peering connections created in the project. This option is required only if you do not already have an Atlas VPC. To learn more, see the Atlas UI tab at https://dochub.mongodb.org/core/peering-connection-atlas.\n   * - --gcpProjectId\n     - string\n     - false\n     - Unique identifier of the GCP project in which the network peer resides.\n   * - -h, --help\n     - \n     - false\n     - help for gcp\n   * - --network\n     - string\n     - false\n     - Unique identifier of the Network Peering connection in the Atlas project.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - strings\n     - false\n     - List of Atlas regions where the container resides.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-create-gcp.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a network peering connection between the Atlas VPC in CIDR block 192.168.0.0/24 and your GCP VPC with the GCP project ID grandiose-branch-256701 in the network named cli-test:\n   atlas networking peering create gcp --atlasCidrBlock 192.168.0.0/24 --gcpProjectId grandiose-branch-256701 --network cli-test --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-create-gcp.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking peering delete <peerId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - peerId\n     - string\n     - true\n     - Unique ID of the network peering connection that you want to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the network peering connection with the ID 5f60c5bd0948295c093565ba in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas networking peering delete 5f60c5bd0948295c093565ba --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking peering list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - false\n     - Name of your cloud service provider. Valid values are AWS, AZURE, or GCP. This value defaults to \"AWS\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for all network peering connections in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas networking peering list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas networking peering watch <peerId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - peerId\n     - string\n     - true\n     - Unique ID of the network peering connection that you want to watch.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   Watch for the network peering connection with the ID 5f621dc701240c5b7c3a888e to become available in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas networking peering watch 5f621dc701240c5b7c3a888e --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-networking-peering-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys accessLists create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKey\n     - string\n     - true\n     - Unique 24-digit ID that identifies your API key.\n   * - --cidr\n     - strings\n     - false\n     - Access list entry in CIDR notation to be added for your API key. To add more than one entry, you can specify each entry with a separate cidr flag or specify all the entries as a comma-separated list using one cidr flag. You can't set both cidr and ip in the same command.\n   * - --currentIp\n     - \n     - false\n     - Flag that adds the IP address from the host that is currently executing the command to the access list. Only applicable for type ipAddress entries. You don't need the entry argument when you use the currentIp option.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --ip\n     - strings\n     - false\n     - IP address to add to the access list for your API key. To add more than one IP address, specify each address with a separate ip flag or specify all addresses as a comma-separated list using one ip flag. You can't set both ip and cidr in the same command.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-accessLists-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create access list entries for two IP addresses for the API key with the ID 5f24084d8dbffa3ad3f21234 in the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys accessLists create --apiKey 5f24084d8dbffa3ad3f21234 --cidr 192.0.2.0/24,198.51.100.0/24 --orgId 5a1b39eec902201990f12345 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-accessLists-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys accessLists delete <entry> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - entry\n     - string\n     - true\n     - IP or CIDR address that you want to remove from the access list.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKey\n     - string\n     - false\n     - Unique 24-digit ID that identifies your API key.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-accessLists-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the IP address 192.0.2.0 from the access list for the API key with the ID 5f24084d8dbffa3ad3f21234 in the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys accessLists delete 192.0.2.0 --apiKey 5f24084d8dbffa3ad3f21234 --orgId 5a1b39eec902201990f12345\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-accessLists-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys accessLists list <apiKeyID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - apiKeyID\n     - string\n     - true\n     - Unique 24-digit string that identifies your API key.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-accessLists-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of access list entries for the API key with the ID 5f24084d8dbffa3ad3f21234 in the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys accessLists list --apiKey 5f24084d8dbffa3ad3f21234 --orgId 5a1b39eec902201990f12345 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-accessLists-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys assign <apiKeyId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - apiKeyId\n     - string\n     - true\n     - Unique 24-digit string that identifies your API key.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --desc\n     - string\n     - false\n     - Description of the API key.\n   * - -h, --help\n     - \n     - false\n     - help for assign\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --role\n     - strings\n     - false\n     - Role or roles that you want to assign to the API key. To assign more than one role, specify each role with a separate role flag or specify all of the roles as a comma-separated list using one role flag. To learn which values the CLI accepts, see the Items Enum for roles in the Atlas API spec: https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Programmatic-API-Keys/operation/createApiKey/. Passing this flag replaces preexisting data.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-assign.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Modify the role and description for the API key with the ID 5f24084d8dbffa3ad3f21234 for the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys assign 5f24084d8dbffa3ad3f21234 --role ORG_MEMBER --desc \"User1 Member Key\" --orgId 5a1b39eec902201990f12345 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-assign.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --desc\n     - string\n     - true\n     - Description of the API key.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --role\n     - strings\n     - true\n     - Role or roles that you want to assign to the API key. To assign more than one role, specify each role with a separate role flag or specify all of the roles as a comma-separated list using one role flag. To learn which values the CLI accepts, see the Items Enum for roles in the Atlas API spec: https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Programmatic-API-Keys/operation/createApiKey/.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an organization API key with organization owner access in the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys create --role ORG_OWNER --desc \"My API Key\" --orgId 5a1b39eec902201990f12345 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys delete <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies the organization's API key.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the organization API key with the ID 5f24084d8dbffa3ad3f21234 for the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys delete 5f24084d8dbffa3ad3f21234 --orgId 5a1b39eec902201990f12345\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys describe <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies your API key.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the organization API key with the ID 5f24084d8dbffa3ad3f21234 for the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys describe 5f24084d8dbffa3ad3f21234 --orgId 5a1b39eec902201990f12345 -output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations apiKeys list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of organization API keys for the organization with the ID 5a1b39eec902201990f12345:\n   atlas organizations apiKeys list --orgId 5a1b39eec902201990f12345 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-apiKeys-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations create <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Label that identifies the organization.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --apiKeyDescription\n     - string\n     - false\n     - Description of the API key.Required when creating organizations authenticated with API Keys.\n   * - --apiKeyRole\n     - strings\n     - false\n     - Role or roles that you want to assign to the API key. To assign more than one role, specify each role with a separate role flag or specify all of the roles as a comma-separated list using one role flag. To learn which values the CLI accepts, see the Items Enum for roles in the Atlas API spec: https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Programmatic-API-Keys/operation/createApiKey/.Required when creating organizations authenticated with API Keys.\n   * - --federationSettingsId\n     - string\n     - false\n     - Unique 24-hexadecimal digit string that identifies the federation settings.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --ownerId\n     - string\n     - false\n     - Unique 24-digit string that identifies the Atlas user to be granted the Org Owner role on the specified organization. Required if using API keys.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an Atlas organization with the name myOrg:\n   atlas organizations create myOrg --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations delete <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies the organization.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the organization with the ID 5e2211c17a3e5a48f5497de3:\n   atlas organizations delete 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations describe <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies the organization.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the organization with the ID 5e2211c17a3e5a48f5497de3:\n   atlas organizations describe 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations invitations delete <invitationId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - invitationId\n     - string\n     - true\n     - Unique 24-digit string that identifies the invitation.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the pending invitation with the ID 5dd56c847a3e5a1f363d424d from the organization with the ID 5f71e5255afec75a3d0f96dc:\n   atlas organizations invitations delete 5dd56c847a3e5a1f363d424d --orgId 5f71e5255afec75a3d0f96dc\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations invitations describe <invitationId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - invitationId\n     - string\n     - true\n     - Unique 24-digit string that identifies the invitation.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details of the pending invitation with the ID 5dd56c847a3e5a1f363d424d for the organization with the ID 5f71e5255afec75a3d0f96dc:\n   atlas organizations invitations describe 5dd56c847a3e5a1f363d424d --orgId 5f71e5255afec75a3d0f96dc --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations invitations invite <email> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - email\n     - string\n     - true\n     - Email address that belongs to the user that you want to invite to the organization.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -f, --file\n     - string\n     - false\n     - Path to an optional JSON configuration file that defines invitation settings. To learn more about invitation configuration files for the Atlas CLI, see https://XXX.\n\n       Mutually exclusive with --role, --teamId.\n   * - -h, --help\n     - \n     - false\n     - help for invite\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --role\n     - strings\n     - false\n     - User's roles for the associated organization. Valid values include ORG_OWNER, ORG_MEMBER, ORG_GROUP_CREATOR, ORG_BILLING_ADMIN, and ORG_READ_ONLY.\n\n       Mutually exclusive with --file.\n   * - --teamId\n     - strings\n     - false\n     - Unique 24-digit string that identifies the team.\n\n       Mutually exclusive with --file.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-invite.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Invite the MongoDB user with the email user@example.com to the organization with the ID 5f71e5255afec75a3d0f96dc with ORG_OWNER access:\n   atlas organizations invitations invite user@example.com --orgId 5f71e5255afec75a3d0f96dc --role ORG_OWNER --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-invite.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations invitations list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --email\n     - string\n     - false\n     - Email address for the user.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of pending invitations to the organization with the ID 5f71e5255afec75a3d0f96dc:\n   atlas organizations invitations list --orgId 5f71e5255afec75a3d0f96dc --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations invitations update [invitationId] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - invitationId\n     - string\n     - false\n     - Unique 24-digit string that identifies the invitation.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --email\n     - string\n     - false\n     - Email address for the user.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --role\n     - strings\n     - true\n     - User's roles for the associated organization. Valid values include ORG_OWNER, ORG_MEMBER, ORG_GROUP_CREATOR, ORG_BILLING_ADMIN, and ORG_READ_ONLY. Passing this flag replaces preexisting data.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Modify the pending invitation with the ID 5dd56c847a3e5a1f363d424d to grant ORG_OWNER access the organization with the ID 5f71e5255afec75a3d0f96dc:\n   atlas organizations invitations update 5dd56c847a3e5a1f363d424d --orgId 5f71e5255afec75a3d0f96dc --role ORG_OWNER --output json\n \t\t\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Modify the invitation for the user with the email address user@example.com to grant ORG_OWNER access the organization with the ID 5f71e5255afec75a3d0f96dc:\n   atlas organizations invitations update --email user@example.com --orgId 5f71e5255afec75a3d0f96dc --role ORG_OWNER --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-invitations-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --includeDeleted\n     - \n     - false\n     - Flag that indictaes whether to include deleted organizations in the list. This option applies only to Ops Manager organizations. You can't return deleted Atlas or Cloud Manager organizations.\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --name\n     - string\n     - false\n     - Organization name to perform a case-insensitive search for.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all organizations:\n   atlas organizations list --output json\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list that includes the organizations named org1 and Org1, but doesn't return org123:\n   atlas organizations list --name org1 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas organizations users list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-users-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all users for the organization with the ID 5e2211c17a3e5a48f5497de3:\n   atlas organizations users list --orgId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-organizations-users-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas performanceAdvisor namespaces list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --duration\n     - int\n     - false\n     - Length of time in milliseconds for which you want to return results. If you specify the since option, the duration starts at the date and time specified. If you don't set the since option, this command returns data from the duration before the current time.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --processName\n     - string\n     - true\n     - Unique identifier for the host of a MongoDB process in the following format: {hostname}:{port}. You can obtain a list of possible values from the 'id' field when you run the 'atlas processes list' command.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --since\n     - int\n     - false\n     - Date and time from which the query retrieves the suggested indexes. Specify this value as the number of seconds that have elapsed since the UNIX epoch. If you don't set the duration option, this command returns data from the since value to the current time.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-namespaces-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of namespaces for collections with slow queries for the atlas-111ggi-shard-00-00.111xx.mongodb.net:27017 host in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas performanceAdvisor namespaces list --processName atlas-111ggi-shard-00-00.111xx.mongodb.net:27017 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-namespaces-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas performanceAdvisor slowOperationThreshold disable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for disable\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-slowOperationThreshold-disable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas performanceAdvisor slowOperationThreshold enable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-slowOperationThreshold-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas performanceAdvisor slowQueryLogs list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --duration\n     - int\n     - false\n     - Length of time in milliseconds for which you want to return results. If you specify the since option, the duration starts at the date and time specified. If you don't set the since option, this command returns data from the duration before the current time.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --nLog\n     - int\n     - false\n     - Maximum number of log lines to return. This value defaults to 20000.\n   * - --namespaces\n     - strings\n     - false\n     - Namespaces from which to retrieve suggested slow query logs formatted as <database>.<collection>. Omit this parameter to return results for all namespaces.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --processName\n     - string\n     - true\n     - Unique identifier for the host of a MongoDB process in the following format: {hostname}:{port}. You can obtain a list of possible values from the 'id' field when you run the 'atlas processes list' command.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --since\n     - int\n     - false\n     - Date and time from which the query retrieves the suggested indexes. Specify this value as the number of seconds that have elapsed since the UNIX epoch. If you don't set the duration option, this command returns data from the since value to the current time.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-slowQueryLogs-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of log lines for collections with slow queries for the atlas-111ggi-shard-00-00.111xx.mongodb.net:27017 host in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas performanceAdvisor slowQueryLogs list --processName atlas-111ggi-shard-00-00.111xx.mongodb.net:27017 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-slowQueryLogs-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas performanceAdvisor suggestedIndexes list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --duration\n     - int\n     - false\n     - Length of time in milliseconds for which you want to return results. If you specify the since option, the duration starts at the date and time specified. If you don't set the since option, this command returns data from the duration before the current time.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --nExamples\n     - int\n     - false\n     - Maximum number of example queries to provide that a suggested index will improve.\n   * - --nIndexes\n     - int\n     - false\n     - Maximum number of indexes to suggest.\n   * - --namespaces\n     - strings\n     - false\n     - Namespaces from which to retrieve suggested indexes.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --processName\n     - string\n     - true\n     - Unique identifier for the host of a MongoDB process in the following format: {hostname}:{port}. You can obtain a list of possible values from the 'id' field when you run the 'atlas processes list' command.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --since\n     - int\n     - false\n     - Date and time from which the query retrieves the suggested indexes. Specify this value as the number of seconds that have elapsed since the UNIX epoch. If you don't set the duration option, this command returns data from the since value to the current time.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-suggestedIndexes-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of suggested indexes for the atlas-111ggi-shard-00-00.111xx.mongodb.net:27017 host in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas performanceAdvisor suggestedIndexes list --processName atlas-111ggi-shard-00-00.111xx.mongodb.net:27017 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-performanceAdvisor-suggestedIndexes-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas plugin install [<github-owner>/<github-repository-name>] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - <github-owner>/<github-repository-name>\n     - string\n     - false\n     - Repository identifier.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for install\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install the latest version of the plugin:\n   atlas plugin install mongodb/atlas-cli-plugin-example\n   atlas plugin install https://github.com/mongodb/atlas-cli-plugin-example\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-install.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Install a specific version of the plugin:\n   atlas plugin install mongodb/atlas-cli-plugin-example@1.0.4\n   atlas plugin install https://github.com/mongodb/atlas-cli-plugin-example/@v1.2.3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-install.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas plugin list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas plugin uninstall [plugin] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - plugin\n     - string\n     - false\n     - Plugin identifier.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for uninstall\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-uninstall.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Uninstall a plugin:\n   atlas plugin uninstall mongodb/atlas-cli-plugin-example\n   atlas plugin uninstall atlas-cli-plugin-example\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-uninstall.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas plugin update [plugin] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - plugin\n     - string\n     - false\n     - Plugin identifier.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --all\n     - \n     - false\n     - update all plugins\n   * - -h, --help\n     - \n     - false\n     - help for update\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update a plugin:\n   atlas plugin update mongodb/atlas-cli-plugin-example\n   atlas plugin update atlas-cli-plugin-example\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update all plugins\n   atlas plugin update --all\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-plugin-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - true\n     - Cloud provider region in which you want to create the private endpoint connection. For a complete list of supported AWS regions, see: https://dochub.mongodb.org/core/aws-atlas. For a complete list of supported Azure regions, see: https://dochub.mongodb.org/core/azure-atlas. For a complete list of supported GCP regions, see: https://dochub.mongodb.org/core/gcp-atlas.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a private endpoint connection for AWS in the us-east-1 region for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints aws create --region us-east-1 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws delete <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the AWS private endpoint with the ID 5f4fc14da2b47835a58c63a2 from the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints aws delete 5f4fc14da2b47835a58c63a2 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws describe <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the AWS private endpoint connection with the ID 5f4fc81c1f03a835c2728ff7 for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints aws describe 5f4fc81c1f03a835c2728ff7 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws interfaces create <endpointServiceId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --privateEndpointId\n     - string\n     - true\n     - Unique 22-character alphanumeric string that identifies the AWS PrivateLink connection in AWS. You can find this value on the AWS VPC Dashboard under Endpoints > VPC ID.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-interfaces-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a new interface for an AWS private endpoint with the ID 5f4fc14da2b47835a58c63a2 in Atlas and the ID vpce-00713b5e644e830a3 in AWS for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints aws interfaces create 5f4fc14da2b47835a58c63a2 --privateEndpointId vpce-00713b5e644e830a3 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-interfaces-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws interfaces delete <interfaceEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - interfaceEndpointId\n     - string\n     - true\n     - Unique string that identifies the AWS private endpoint interface in AWS.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpointServiceId\n     - string\n     - false\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-interfaces-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the AWS private endpoint interface with the ID vpce-00713b5e644e830a3 in AWS from the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints aws interfaces delete vpce-00713b5e644e830a3 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-interfaces-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws interfaces describe <interfaceEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - interfaceEndpointId\n     - string\n     - true\n     - Unique string that identifies the AWS private endpoint interface in AWS.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-interfaces-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details of the AWS private endpoint interface with the ID \t\n \t\tvpce-00713b5e644e830a3 in AWS for an AWS private endpoint with the ID 5f4fc14da2b47835a58c63a2 in Atlas:\n   atlas privateEndpoints aws interfaces describe \t\n   vpce-00713b5e644e830a3 --endpointServiceId 5f4fc14da2b47835a58c63a2\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-interfaces-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all AWS private endpoints for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints aws list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints aws watch <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch for the AWS private endpoint with the ID 5f4fc14da2b47835a58c63a2 to become available in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints aws watch 5f4fc14da2b47835a58c63a2 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-aws-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - true\n     - Cloud provider region in which you want to create the private endpoint connection. For a complete list of supported AWS regions, see: https://dochub.mongodb.org/core/aws-atlas. For a complete list of supported Azure regions, see: https://dochub.mongodb.org/core/azure-atlas. For a complete list of supported GCP regions, see: https://dochub.mongodb.org/core/gcp-atlas.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a private endpoint connection for Azure in the eastus region for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints azure create --region eastus --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure delete <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the Azure private endpoint with the ID 5f4fc14da2b47835a58c63a2 from the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints azure delete 5f4fc14da2b47835a58c63a2 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure describe <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the Azure private endpoint connection with the ID 5f4fc81c1f03a835c2728ff7 for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints azure describe 5f4fc81c1f03a835c2728ff7 --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure interfaces create <endpointServiceId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --privateEndpointId\n     - string\n     - true\n     - Unique string that identifies the Azure private endpoint in Azure. The Properties page for your private endpoint on your Azure dashboard displays this property in the Resource ID field.\n   * - --privateEndpointIpAddress\n     - string\n     - true\n     - Private IP address of the private endpoint network interface you created in your Azure VNet.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-interfaces-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a new interface for an Azure private endpoint with the ID 5f4fc14da2b47835a58c63a2 in Atlas and the ID /subscriptions/4e133d35-e734-4385-a565-c0945567ae346/resourceGroups/rg_95847a959b876e255dbb9b33_dfragd7w/providers/Microsoft.Network/privateEndpoints/test-endpoint in Azure for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints azure interfaces create 5f4fc14da2b47835a58c63a2 --privateEndpointId /subscriptions/4e133d35-e734-4385-a565-c0945567ae346/resourceGroups/rg_95847a959b876e255dbb9b33_dfragd7w/providers/Microsoft.Network/privateEndpoints/test-endpoint --projectId 5e2211c17a3e5a48f5497de3 --privateEndpointIpAddress 192.0.2.5\n   --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-interfaces-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure interfaces delete <privateEndpointResourceId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointResourceId\n     - string\n     - true\n     - Unique string that identifies the Azure private endpoint interface in Azure.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpointServiceId\n     - string\n     - false\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-interfaces-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the Azure private endpoint interface with the ID /subscriptions/4e133d35-e734-4385-a565-c0945567ae346/resourceGroups/rg_95847a959b876e255dbb9b33_dfragd7w/providers/Microsoft.Network/privateEndpoints/cli-test in Azure from the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints azure interfaces delete /subscriptions/4e133d35-e734-4385-a565-c0945567ae346/resourceGroups/rg_95847a959b876e255dbb9b33_dfragd7w/providers/Microsoft.Network/privateEndpoints/cli-test --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-interfaces-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure interfaces describe <privateEndpointResourceId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointResourceId\n     - string\n     - true\n     - Unique string that identifies the Azure private endpoint interface in Azure.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-interfaces-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details of the Azure private endpoint interface with the ID /subscriptions/4e133d35-e734-4385-a565-c0945567ae346/resourceGroups/rg_95847a959b876e255dbb9b33_dfragd7w/providers/Microsoft.Network/privateEndpoints/cli-test in Azure for an AWS private endpoint with the ID 5f4fc14da2b47835a58c63a2 in Atlas:\n   atlas privateEndpoints azure interfaces describe /subscriptions/4e133d35-e734-4385-a565-c0945567ae346/resourceGroups/rg_95847a959b876e255dbb9b33_dfragd7w/providers/Microsoft.Network/privateEndpoints/cli-test --endpointServiceId 5f4fc14da2b47835a58c63a2\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-interfaces-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all Azure private endpoints for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints azure list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints azure watch <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch for the Azure private endpoint with the ID 5f4fc14da2b47835a58c63a2 to become available in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints azure watch 5f4fc14da2b47835a58c63a2 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-azure-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --region\n     - string\n     - true\n     - Cloud provider region in which you want to create the private endpoint connection. For a complete list of supported AWS regions, see: https://dochub.mongodb.org/core/aws-atlas. For a complete list of supported Azure regions, see: https://dochub.mongodb.org/core/azure-atlas. For a complete list of supported GCP regions, see: https://dochub.mongodb.org/core/gcp-atlas.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoints gcp create --region CENTRAL_US\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp delete <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 22-character alphanumeric string that identifies the private endpoint.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoint gcp delete tester-1 --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp describe <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 22-character alphanumeric string that identifies the private endpoint.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoint gcp describe tester-1\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp interfaces create <endpointGroupId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - endpointGroupId\n     - string\n     - true\n     - Unique identifier for the endpoint group.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpoint\n     - strings\n     - false\n     - List of GCP endpoints in the group separated by commas, such as: endpointName1@ipAddress1,...,endpointNameN@ipAddressN\n   * - --endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - --gcpProjectId\n     - string\n     - true\n     - Unique identifier of the GCP project in which the network peer resides.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-interfaces-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoints gcp interfaces create endpoint-1 \\\n   --endpointServiceId 61eaca605af86411903de1dd \\\n   --gcpProjectId mcli-private-endpoints \\\n   --endpoint endpoint-0@10.142.0.2,endpoint-1@10.142.0.3,endpoint-2@10.142.0.4,endpoint-3@10.142.0.5,endpoint-4@10.142.0.6,endpoint-5@10.142.0.7\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-interfaces-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp interfaces delete <id> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - id\n     - string\n     - true\n     - Unique identifier for the endpoint group.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-interfaces-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoints gcp interfaces delete endpoint-1 \\\n   --endpointServiceId 61eaca605af86411903de1dd\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-interfaces-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp interfaces describe <id> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - id\n     - string\n     - true\n     - Unique identifier of the private endpoint you want to retrieve.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --endpointServiceId\n     - string\n     - true\n     - Unique 24-character alphanumeric string that identifies the private endpoint in Atlas.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-interfaces-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoints gcp interfaces describe endpoint-1 \\\n   --endpointServiceId 61eaca605af86411903de1dd\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-interfaces-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoint gcp ls\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints gcp watch <privateEndpointId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - privateEndpointId\n     - string\n     - true\n     - Unique 22-character alphanumeric string that identifies the private endpoint.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas privateEndpoint gcp watch tester-1\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-gcp-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints regionalModes describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-regionalModes-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the regionalized private endpoint setting for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints regionalModes describe --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-regionalModes-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints regionalModes disable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for disable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-regionalModes-disable.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Disable the regionalied private endpoint setting in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints regionalModes disable --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-regionalModes-disable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas privateEndpoints regionalModes enable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for enable\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-regionalModes-enable.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Enable the regionalied private endpoint setting in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas privateEndpoints regionalModes enable --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-privateEndpoints-regionalModes-enable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas processes describe <hostname:port> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - hostname:port\n     - string\n     - true\n     - Hostname and port number of the instance running the Atlas MongoDB process.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-processes-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the MongoDB process with hostname and port atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017\n   atlas process describe atlas-lnmtkm-shard-00-00.ajlj3.mongodb.net:27017 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-processes-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas processes list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-processes-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all MongoDB processes in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas processes list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-processes-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects apiKeys assign <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies your API key.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for assign\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --role\n     - strings\n     - true\n     - Role or roles that you want to assign to the API key. To assign more than one role, specify each role with a separate role flag or specify all of the roles as a comma-separated list using one role flag. To learn which values the CLI accepts, see the Items Enum for roles in the Atlas API spec: https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Programmatic-API-Keys/operation/createProjectApiKey/.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-assign.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Assign an organization API key with the ID 5f46ae53d58b421fe3edc115 and grant the GROUP_DATA_ACCESS_READ_WRITE role for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas projects apiKeys assign 5f46ae53d58b421fe3edc115 --projectId 5e1234c17a3e5a48f5497de3 --role GROUP_DATA_ACCESS_READ_WRITE --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-assign.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects apiKeys create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --desc\n     - string\n     - true\n     - Description of the API key.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --role\n     - strings\n     - true\n     - Role or roles that you want to assign to the API key. To assign more than one role, specify each role with a separate role flag or specify all of the roles as a comma-separated list using one role flag. To learn which values the CLI accepts, see the Items Enum for roles in the Atlas API spec: https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Programmatic-API-Keys/operation/createProjectApiKey/.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an organization API key with the GROUP_OWNER role and assign it to the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas projects apiKeys create --desc \"My API key\" --projectId 5e1234c17a3e5a48f5497de3 --role GROUP_OWNER --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects apiKeys delete <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies your API key.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove an organization API key with the ID 5f46ae53d58b421fe3edc115 from the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas projects apiKeys delete 5f46ae53d58b421fe3edc115 --projectId 5e1234c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects apiKeys list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of organization API keys assigned to the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas projects apiKeys list --projectId 5e1234c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-apiKeys-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects create <projectName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - projectName\n     - string\n     - true\n     - Label that identifies the project.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --govCloudRegionsOnly\n     - \n     - false\n     - Flag that designates that the project uses only the AWS GovCloud region. Use this option only for Atlas for Government projects. If unspecified, the project uses only the AWS Standard region for AWS deployments. You can't deploy clusters across AWS GovCloud and AWS Standard regions in the same project.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --ownerId\n     - string\n     - false\n     - Unique 24-digit string that identifies the Atlas user to be granted the Project Owner role on the specified project. If unspecified, this value defaults to the user ID of the oldest Organization Owner.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the project.\n   * - --withoutDefaultAlertSettings\n     - \n     - false\n     - Flag that creates the new project without the default alert settings enabled. This flag defaults to false. This option is useful if you create projects programmatically and want to create your own alerts instead of using the default alert settings.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a project in the organization with the ID 5e2211c17a3e5a48f5497de3 using default alert settings:\n   atlas projects create my-project --orgId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects delete <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies the project.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas projects delete 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects describe <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies the project.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas projects describe 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all projects:\n   atlas projects list --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects settings describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-settings-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # This example uses the profile named \"myprofile\" for accessing Atlas.\n   atlas projects settings describe -P myprofile --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-settings-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects settings update [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --disableCollectDatabaseSpecificsStatistics\n     - \n     - false\n     - Flag that disables the Collect Database Specific Statistics project setting.\n\n       Mutually exclusive with --enableCollectDatabaseSpecificsStatistics.\n   * - --disableDataExplorer\n     - \n     - false\n     - Flag that disables the Data Explorer project setting.\n\n       Mutually exclusive with --enableDataExplorer.\n   * - --disablePerformanceAdvisor\n     - \n     - false\n     - Flag that disables the Performance Advisor project setting.\n\n       Mutually exclusive with --enablePerformanceAdvisor.\n   * - --disableRealtimePerformancePanel\n     - \n     - false\n     - Flag that disables the Real Time Performance Panel project setting.\n\n       Mutually exclusive with --enableRealtimePerformancePanel.\n   * - --disableSchemaAdvisor\n     - \n     - false\n     - Flag that disables the Schema Advisor project setting.\n\n       Mutually exclusive with --enableSchemaAdvisor.\n   * - --enableCollectDatabaseSpecificsStatistics\n     - \n     - false\n     - Flag that enables the Collect Database Specific Statistics project setting.\n\n       Mutually exclusive with --disableCollectDatabaseSpecificsStatistics.\n   * - --enableDataExplorer\n     - \n     - false\n     - Flag that enables the Data Explorer project setting.\n\n       Mutually exclusive with --disableDataExplorer.\n   * - --enablePerformanceAdvisor\n     - \n     - false\n     - Flag that enables the Performance Advisor project setting.\n\n       Mutually exclusive with --disablePerformanceAdvisor.\n   * - --enableRealtimePerformancePanel\n     - \n     - false\n     - Flag that enables the Real Time Performance Panel project setting.\n\n       Mutually exclusive with --disableRealtimePerformancePanel.\n   * - --enableSchemaAdvisor\n     - \n     - false\n     - Flag that enables the Schema Advisor project setting.\n\n       Mutually exclusive with --disableSchemaAdvisor.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-settings-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # This example uses the profile named \"myprofile\" for accessing Atlas.\n   atlas projects settings update --disableCollectDatabaseSpecificsStatistics -P myprofile --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-settings-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects teams add <teamId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for add\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --role\n     - strings\n     - true\n     - User role that applies to all members of the specified team for the associated project. Valid values include GROUP_CLUSTER_MANAGER, GROUP_DATA_ACCESS_ADMIN, GROUP_DATA_ACCESS_READ_ONLY, GROUP_DATA_ACCESS_READ_WRITE, GROUP_OWNER, and GROUP_READ_ONLY.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-add.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Add the team with the ID 5dd58c647a3e5a6c5bce46c7 to the project with the ID 5e2211c17a3e5a48f5497de3 with GROUP_READ_ONLY project access:\n   atlas projects teams add 5dd58c647a3e5a6c5bce46c7 --projectId 5e2211c17a3e5a48f5497de3 --role GROUP_READ_ONLY\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-add.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects teams delete <teamId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the team with the ID 5dd58c647a3e5a6c5bce46c7 from the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas projects teams delete 5dd58c647a3e5a6c5bce46c7 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects teams list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all teams for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas projects teams list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects teams update <teamId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --role\n     - strings\n     - true\n     - User role that applies to all members of the specified team for the associated project. Valid values include GROUP_CLUSTER_MANAGER, GROUP_DATA_ACCESS_ADMIN, GROUP_DATA_ACCESS_READ_ONLY, GROUP_DATA_ACCESS_READ_WRITE, GROUP_OWNER, and GROUP_READ_ONLY. Passing this flag replaces preexisting data.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Modify the roles for the team with the ID 5dd56c847a3e5a1f363d424d to grant GROUP_READ_ONLY access to the project with the ID 5f71e5255afec75a3d0f96dc:\n   atlas projects teams update 5dd56c847a3e5a1f363d424d --projectId 5f71e5255afec75a3d0f96dc --role GROUP_READ_ONLY --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-teams-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects update <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - ID of the project you want to update.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -f, --file\n     - string\n     - true\n     - Path to the JSON configuration file that defines project configuration settings. To learn more about project configuration files for the Atlas CLI, see https://dochub.mongodb.org/core/project-config-file.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Update a project with the ID 5e2211c17a3e5a48f5497de3 using the JSON file named myProject.json:\n   atlas projects update 5f4007f327a3bd7b6f4103c5 --file myProject.json --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects users delete <ID> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - ID\n     - string\n     - true\n     - Unique 24-digit string that identifies the user.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-users-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the user with the ID 5dd58c647a3e5a6c5bce46c7 from the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas projects users delete 5dd58c647a3e5a6c5bce46c7 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-users-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas projects users list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-users-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all users for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas projects users list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-projects-users-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security customerCerts create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --casFile\n     - string\n     - true\n     - Path to a PEM file containing one or more CAs for database user authentication.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-customerCerts-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Save the file named ca.pem stored in the files directory to the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas security customerCerts create --casFile files/ca.pem --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-customerCerts-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security customerCerts describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-customerCerts-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the customer-managed X.509 configuration in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas security customerCerts describe --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-customerCerts-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security customerCerts disable [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for disable\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-customerCerts-disable.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Disable the customer-managed X.509 configuration in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas security customerCerts disable --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-customerCerts-disable.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security ldap delete [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the current LDAP configuration in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas security ldap delete --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security ldap get [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for get\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-get.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details of the current LDAP configuration in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas security ldap get --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-get.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security ldap save [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --authenticationEnabled\n     - \n     - false\n     - Flag that indicates whether to enable LDAP user authentication.\n   * - --authorizationEnabled\n     - \n     - false\n     - Flag that indicates whether to enable LDAP user authorization.\n   * - --authzQueryTemplate\n     - string\n     - false\n     - RFC 4515-formatted or RFC 4516-formatted LDAP query template that Atlas executes to obtain the LDAP authorization groups to which the authenticated user belongs. Use the {USER} placeholder in the URL to substitute the username. The query is relative to the host specified with the hostname.\n   * - --bindPassword\n     - string\n     - false\n     - Password used to authenticate the bindUsername.\n   * - --bindUsername\n     - string\n     - true\n     - User distinguished name (DN) that Atlas uses to connect to the LDAP server. You must format LDAP distinguished names according to RFC 2253.\n   * - --caCertificate\n     - string\n     - false\n     - Certificate Authority (CA) used to verify the identity of the LDAP server. To delete an assigned value, pass an empty string.\n   * - -h, --help\n     - \n     - false\n     - help for save\n   * - --hostname\n     - string\n     - true\n     - Hostname or IP address of the LDAP server.\n   * - --mappingLdapQuery\n     - string\n     - false\n     - RFC 4515-formatted or RFC 4516-formatted LDAP query template that inserts the LDAP name that the regex matches into an LDAP query URI.\n\n       Mutually exclusive with --mappingSubstitution, --mappingSubstitution.\n   * - --mappingMatch\n     - string\n     - false\n     - ECMAScript-formatted regular expression (regex) to match against a provided username.\n   * - --mappingSubstitution\n     - string\n     - false\n     - LDAP distinguished name (DN) template that converts the LDAP username that matches the regex specified in the match option into an LDAP DN.\n\n       Mutually exclusive with --mappingLdapQuery, --mappingLdapQuery.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --port\n     - int\n     - false\n     - Port that the LDAP server listens to for client connections. This value defaults to 636.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-save.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Save an LDAP server configuration to authenticate and authorize MongoDB users for the host atlas-ldaps-01.ldap.myteam.com: \n   atlas security ldap save --authenticationEnabled --authorizationEnabled \n   --hostname atlas-ldaps-01.ldap.myteam.com --bindUsername \n   \"CN=Administrator,CN=Users,DC=atlas-ldaps-01,DC=myteam,DC=com\" \n   --bindPassword changeMe\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-save.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security ldap verify status watch <requestId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - requestId\n     - string\n     - true\n     - ID of the request to verify an LDAP configuration.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-verify-status-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas security ldap status watch requestIdSample\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-verify-status-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security ldap verify status <requestId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - requestId\n     - string\n     - true\n     - ID of the request to verify an LDAP configuration.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for status\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-verify-status.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas security ldap verify [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --authzQueryTemplate\n     - string\n     - false\n     - RFC 4515-formatted or RFC 4516-formatted LDAP query template that Atlas executes to obtain the LDAP authorization groups to which the authenticated user belongs. Use the {USER} placeholder in the URL to substitute the username. The query is relative to the host specified with the hostname.\n   * - --bindPassword\n     - string\n     - false\n     - Password used to authenticate the bindUsername.\n   * - --bindUsername\n     - string\n     - true\n     - User distinguished name (DN) that Atlas uses to connect to the LDAP server. You must format LDAP distinguished names according to RFC 2253.\n   * - --caCertificate\n     - string\n     - false\n     - Certificate Authority (CA) used to verify the identity of the LDAP server. To delete an assigned value, pass an empty string.\n   * - -h, --help\n     - \n     - false\n     - help for verify\n   * - --hostname\n     - string\n     - true\n     - Hostname or IP address of the LDAP server.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --port\n     - int\n     - false\n     - Port that the LDAP server listens to for client connections. This value defaults to 636.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-verify.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Request the JSON-formatted verification of the LDAP configuration for the atlas-ldaps-01.ldap.myteam.com host in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas security ldap verify --hostname atlas-ldaps-01.ldap.myteam.com --bindUsername \"CN=Administrator,CN=Users,DC=atlas-ldaps-01,DC=myteam,DC=com\" --bindPassword changeMe --projectId 5e2211c17a3e5a48f5497de3 --output json\n\nRelated Commands\n----------------\n\n* :ref:`atlas-security-ldap-verify-status` - Get the status of an LDAP configuration request.\n\n\n.. toctree::\n   :titlesonly:\n\n   status </command/atlas-security-ldap-verify-status>\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-security-ldap-verify.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless backups restores create [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --deliveryType\n     - string\n     - true\n     - Type of restore job to create. Valid values include: automated, download, pointInTime. To learn more about types of restore jobs, see https://dochub.mongodb.org/core/backup-restore-cluster-atlas.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --oplogInc\n     - int\n     - false\n     - 32-bit incrementing ordinal that represents operations within a given second. When paired with oplogTs, they represent the point in time to which your data will be restored.\n   * - --oplogTs\n     - int\n     - false\n     - Oplog timestamp given as a timestamp in the number of seconds that have elapsed since the UNIX Epoch. When paired with oplogInc, they represent the point in time to which your data will be restored.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --pointInTimeUTCSeconds\n     - int\n     - false\n     - Timestamp in the number of seconds that have elapsed since the UNIX epoch that represents the point in time to which your data will be restored. This timestamp must be within the last 24 hours of the current time.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --snapshotId\n     - string\n     - false\n     - Unique identifier of the snapshot.\n   * - --targetClusterName\n     - string\n     - false\n     - Name of the target cluster. For use only with automated restore jobs. You must specify a targetClusterName for automated restores.\n   * - --targetProjectId\n     - string\n     - false\n     - Unique identifier of the project that contains the destination cluster for the restore job. You must specify a targetProjectId for automated restores.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create an automated restore:\n   atlas serverless backup restore create \\\n          --deliveryType automated \\\n          --clusterName myDemo \\\n          --snapshotId 5e7e00128f8ce03996a47179 \\\n          --targetClusterName myDemo2 \\\n          --targetProjectId 1a2345b67c8e9a12f3456de7\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a point-in-time restore:\n   atlas serverless backup restore create \\\n          --deliveryType pointInTime \\\n          --clusterName myDemo \\\n          --pointInTimeUTCSeconds 1588523147 \\\n          --targetClusterName myDemo2 \\\n          --targetProjectId 1a2345b67c8e9a12f3456de7\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a download restore:\n   atlas serverless backup restore create \\\n          --deliveryType download \\\n          --clusterName myDemo \\\n          --snapshotId 5e7e00128f8ce03996a47179\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless backups restores describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --restoreJobId\n     - string\n     - true\n     - Unique identifier that identifies the Restore Job.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the continuous backup restore job with the ID 507f1f77bcf86cd799439011 for the serverless isntance named Cluster0:\n   atlas serverless backup restore describe --restoreJobId 507f1f77bcf86cd799439011 --clusterName Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless backups restores list <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Label that identifies the Atlas serverless instance for which you want to return restore jobs.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return all continuous backup restore jobs for the serverless instance Instance0:\n   atlas serverless backup restore list Instance0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless backups restores watch [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --restoreJobId\n     - string\n     - true\n     - Unique identifier that identifies the Restore Job.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch the continuous backup restore job with the ID 507f1f77bcf86cd799439011 for the cluster named Cluster0 until it becomes available:\n   atlas serverless backup restore watch --restoreJobId 507f1f77bcf86cd799439011 --clusterName Cluster0\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-restores-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless backups snapshots describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --snapshotId\n     - string\n     - true\n     - Unique identifier of the snapshot.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-snapshots-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the details for the backup snapshot with the ID 5f4007f327a3bd7b6f4103c5 for the instance named myDemo:\n   atlas serverless backups snapshots describe --snapshotId 5f4007f327a3bd7b6f4103c5 --clusterName myDemo\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-snapshots-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless backups snapshots list <clusterName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - clusterName\n     - string\n     - true\n     - Label that identifies the Atlas serverless instance that contains the snapshots you want to return.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-snapshots-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of snapshots for the instance named myDemo \n   atlas serverless backups snapshots list myDemo --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-snapshots-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless backups snapshots watch [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --clusterName\n     - string\n     - true\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --snapshotId\n     - string\n     - true\n     - Unique identifier of the snapshot.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-snapshots-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Watch the backup snapshot with the ID 5f4007f327a3bd7b6f4103c5 in the cluster named myDemo until it becomes available:\n   atlas backups snapshots watch 5f4007f327a3bd7b6f4103c5 --clusterName myDemo\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-backups-snapshots-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless create <instanceName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - instanceName\n     - string\n     - true\n     - Human-readable label that identifies your serverless instance.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - true\n     - Cloud service provider that applies to the provisioned serverless instance.\n   * - --region\n     - string\n     - true\n     - Human-readable label that identifies the physical location of your MongoDB serverless instance. The region you choose can affect network latency for clients accessing your databases.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the serverless instance.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy a serverlessInstance named myInstance for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas serverless create myInstance --provider AWS --region US_EAST_1 --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless delete <instanceName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - instanceName\n     - string\n     - true\n     - Name of the instance to delete.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove a serverlessInstance named myInstance for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas serverless delete myInstance --projectId 5e2211c17a3e5a48f5497de3\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove a serverlessInstance named myInstance for the project with the ID 5e2211c17a3e5a48f5497de3 without requiring confirmation:\n   atlas serverless delete myInstance --projectId 5e2211c17a3e5a48f5497de3 --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless describe <instanceName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - instanceName\n     - string\n     - true\n     - Human-readable label that identifies your serverless instance.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the serverlessInstance named myInstance in the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas serverless describe myInstance --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted list of all serverlessInstances for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas serverless list --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless update <instanceName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - instanceName\n     - string\n     - true\n     - Human-readable label that identifies your serverless instance.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --disableServerlessContinuousBackup\n     - \n     - false\n     - Disables Serverless Continuous Backup for your serverless instance. If disabled the serverless instance uses Basic Backup.\n\n       Mutually exclusive with --enableServerlessContinuousBackup.\n   * - --disableTerminationProtection\n     - \n     - false\n     - Disables termination protection for your cluster. You can delete a cluster with termination protection disabled.\n\n       Mutually exclusive with --enableTerminationProtection.\n   * - --enableServerlessContinuousBackup\n     - \n     - false\n     - Flag that enables Serverless Continuous Backup for your serverless instance. If enabled, the serverless instance does not use Basic Backup.\n\n       Mutually exclusive with --disableServerlessContinuousBackup.\n   * - --enableTerminationProtection\n     - \n     - false\n     - Enables termination protection for your cluster. You can't delete a cluster with termination protection enabled.\n\n       Mutually exclusive with --disableTerminationProtection.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the serverless instance. Passing this flag replaces preexisting data.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas serverless watch <instanceName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - instanceName\n     - string\n     - true\n     - Name of the instance to watch.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for watch\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-watch.rst"
  },
  {
    "code": "   :copyable: false\n\n   atlas serverless watch instanceNameSample\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-serverless-watch.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas setup [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --accessListIp\n     - strings\n     - false\n     - IP address to grant access to the deployment.\n\n       Mutually exclusive with --currentIp.\n   * - --clusterName\n     - string\n     - false\n     - Name of the cluster. To learn more, see https://dochub.mongodb.org/core/create-cluster-api.\n   * - --currentIp\n     - \n     - false\n     - Flag that adds the IP address from the host that is currently executing the command to the access list.\n\n       Mutually exclusive with --accessListIp.\n   * - --enableTerminationProtection\n     - \n     - false\n     - Enables termination protection for your cluster. You can't delete a cluster with termination protection enabled.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the request for input and create a cluster with the default settings for any unspecified options.\n   * - --gov\n     - \n     - false\n     - Register with Atlas for Government.\n   * - -h, --help\n     - \n     - false\n     - help for setup\n   * - --noBrowser\n     - \n     - false\n     - Don't try to open a browser session.\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - false\n     - Name of your cloud service provider. Valid values are AWS, AZURE, or GCP.\n   * - -r, --region\n     - string\n     - false\n     - Physical location of your MongoDB cluster. For a complete list of supported AWS regions, see: https://dochub.mongodb.org/core/aws-atlas. For a complete list of supported Azure regions, see: https://dochub.mongodb.org/core/azure-atlas. For a complete list of supported GCP regions, see: https://dochub.mongodb.org/core/gcp-atlas.\n   * - --skipMongosh\n     - \n     - false\n     - Flag that indicates whether to skip accessing your deployment with MongoDB Shell.\n   * - --skipSampleData\n     - \n     - false\n     - Flag that indicates whether to skip loading sample data into your MongoDB cluster.\n   * - --tag\n     - key=value\n     - false\n     - List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the cluster.\n   * - --tier\n     - string\n     - false\n     - Tier for each data-bearing server in the cluster. To learn more about cluster tiers, see https://dochub.mongodb.org/core/cluster-tier-atlas. This value defaults to \"M0\".\n   * - --username\n     - string\n     - false\n     - Username for authenticating to MongoDB.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-setup.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Override default cluster settings like name, provider, or database username by using the command options\n   atlas setup --clusterName Test --provider GCP --username dbuserTest\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-setup.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams connections create [connectionName] [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - connectionName\n     - string\n     - false\n     - Name of the connection\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -f, --file\n     - string\n     - true\n     - Path to a JSON configuration file that defines an Atlas Stream Processing connection.\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -i, --instance\n     - string\n     - true\n     - Name of your Atlas Stream Processing instance.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # create a new connection for Atlas Stream Processing:\n   atlas streams connection create kafkaprod -i test01 -f kafkaConfig.json\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # create a new connection using the name from a cluster configuration file\n   atlas streams connection create -i test01 -f clusterConfig.json\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams connections delete <connectionName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - connectionName\n     - string\n     - true\n     - Name of the connection\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - -i, --instance\n     - string\n     - true\n     - Name of your Atlas Stream Processing instance.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # deletes connection 'ExampleConnection' from instance 'ExampleInstance':\n   atlas streams connection delete ExampleConnection --instance ExampleInstance\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # deletes connection 'ExampleConnection' from instance 'ExampleInstance' without requiring confirmation:\n   atlas streams connection delete ExampleConnection --instance ExampleInstance --force\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams connections describe <streamConnectionName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - streamConnectionName\n     - string\n     - true\n     - Name of the Atlas Stream Processing connection.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -i, --instance\n     - string\n     - true\n     - Name of your Atlas Stream Processing instance.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # retrieves stream connection 'ExampleConnection' in instance 'ExampleInstance':\n atlas streams connection describe ExampleConnection --instance ExampleInstance\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams connections list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - -i, --instance\n     - string\n     - true\n     - Name of your Atlas Stream Processing instance.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # list all connections within ExampleInstance:\n atlas streams connection list --instance ExampleInstance\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams connections update <connectionName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - connectionName\n     - string\n     - true\n     - Name of the connection.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -f, --file\n     - string\n     - true\n     - Path to a JSON configuration file that defines an Atlas Stream Processing connection.\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -i, --instance\n     - string\n     - true\n     - Name of your Atlas Stream Processing instance.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # update an Atlas Stream Processing connection:\n   atlas streams connection update kafkaprod --instance test01 -f kafkaConfig.json\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-connections-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams instances create <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the Atlas Stream Processing instance. After creation, you can't change the name of the instance. The name can contain ASCII letters, numbers, and hyphens.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - true\n     - Cloud service provider that applies to the provisioned Atlas Stream Processing instance. This value defaults to \"AWS\".\n   * - -r, --region\n     - string\n     - true\n     - Human-readable label that identifies the physical location of your Atlas Stream Processing instance. The region can affect network latency and performance if it is far from your source or sink.\n   * - --tier\n     - string\n     - false\n     - Tier for your Stream Instance. This value defaults to \"SP30\".\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Deploy an Atlas Stream Processing instance called myProcessor for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas streams instance create myProcessor --projectId 5e2211c17a3e5a48f5497de3 --provider AWS --region VIRGINIA_USA --tier SP30\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams instances delete <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the Atlas Streams instance.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove an Atlas Stream Processing instance after prompting for a confirmation:\n   atlas streams instance delete myProcessorInstance\n\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove an Atlas Stream Processing instance named myProcessorInstance without requiring confirmation:\n   atlas streams instance delete myProcessorInstance --force\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams instances describe <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the Atlas Streams processor instance.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return an Atlas Stream Processing instance with a specific name:\n   atlas streams instance describe myProcessor\n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted Atlas Stream Processing instance with a specific name:\n   atlas streams instance describe myProcessor --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams instances download <tenantName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - tenantName\n     - string\n     - true\n     - Label that identifies the tenant that stores the log files that you want to download.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --end\n     - int\n     - false\n     - Ending date and time for the range of log messages to retrieve, given in UNIX time. Defaults to the start date plus 24 hours, if the start date is set. If start date is not provided, ending time defaults to the current time.\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to overwrite the destination file.\n   * - -h, --help\n     - \n     - false\n     - help for download\n   * - --out\n     - string\n     - true\n     - Output file name. This value defaults to the log name.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --start\n     - int\n     - false\n     - UNIX Epoch-formatted starting date and time for the range of log messages to retrieve. This value defaults to 24 hours prior to the current timestamp.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-download.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Download the audit log file from the instance myProcessor for the project with the ID 5e2211c17a3e5a48f5497de3:\n   atlas streams instance download myProcessor --projectId 5e2211c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-download.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams instances list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of all Atlas Stream Processing instances for the project with ID 5e2211c17a3e5a48f5497de3:\n   atlas streams instance list --projectId 5e2211c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas streams instances update <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Name of the Atlas Stream Processing instance. After creation, you can't change the name of the instance. The name can contain ASCII letters, numbers, and hyphens.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for update\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --projectId\n     - string\n     - false\n     - Hexadecimal string that identifies the project to use. This option overrides the settings in the configuration file or environment variable.\n   * - --provider\n     - string\n     - true\n     - Cloud service provider that applies to the provisioned Atlas Stream Processing instance. This value defaults to \"AWS\".\n   * - -r, --region\n     - string\n     - true\n     - Human-readable label that identifies the physical location of your Atlas Stream Processing instance. The region can affect network latency and performance if it is far from your source or sink.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-update.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Modify the Atlas Stream Processing instance configuration with the name MyInstance:\n   atlas streams instance update MyInstance --provider AWS --region VIRGINIA_USA\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-streams-instances-update.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams create <name> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - name\n     - string\n     - true\n     - Label that identifies the team.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for create\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --username\n     - strings\n     - true\n     - Comma-separated list that contains the valid usernames of the MongoDB users to add to the new team. A team must have at least one user. New users must accept the invitation to join an organization before you can add them to a team.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-create.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create a team named myTeam in the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams create myTeam --username user1@example.com,user2@example.com --orgId 5e1234c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-create.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams delete <teamId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the team with the ID 5e44445ef10fab20b49c0f31 from the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams delete 5e44445ef10fab20b49c0f31 --orgId 5e1234c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --id\n     - string\n     - false\n     - Unique 24-digit string that identifies the team.\n   * - --name\n     - string\n     - false\n     - Label that identifies the team.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the the team with the ID 5e44445ef10fab20b49c0f31 in the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams describe --id 5e44445ef10fab20b49c0f31 --projectId 5e1234c17a3e5a48f5497de3 --output json\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the the team with the name myTeam in the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams describe --name myTeam --projectId 5e1234c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --limit\n     - int\n     - false\n     - Number of items per results page, up to a maximum of 500. If you have more than 500 results, specify the --page option to change the results page. This value defaults to 100.\n   * - --omitCount\n     - \n     - false\n     - Flag that indicates whether the JSON response returns the total number of items (totalCount) in the JSON response.\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --page\n     - int\n     - false\n     - Page number that specifies a page of results. This value defaults to 1.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of the teams for the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams list --orgId 5e1234c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams rename <newName> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - newName\n     - string\n     - true\n     - New label that identifies the team.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for rename\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-rename.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Rename a team in the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams rename newName --teamId 5e1234c17a3e5a48f5497de3 --orgId 5e1234c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-rename.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams users add <userId>... [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - userId\n     - string\n     - true\n     - Unique 24-digit string that identifies the user. You can add more than one user at a time by specifying multiple user IDs separated by a space.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for add\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-users-add.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Add the users with the IDs 5dd58c647a3e5a6c5bce46c7 and 5dd56c847a3e5a1f363d424d to the team with the ID 5f6a5c6c713184005d72fe6e for the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams users add 5dd58c647a3e5a6c5bce46c7 5dd56c847a3e5a1f363d424d --teamId 5f6a5c6c713184005d72fe6e --orgId 5e1234c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-users-add.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams users delete <userId> [options]\n\n.. Code end marker, please don't delete this comment\n\nArguments\n---------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - userId\n     - string\n     - true\n     - Unique 24-digit string that identifies the user.\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --force\n     - \n     - false\n     - Flag that indicates whether to skip the confirmation prompt before proceeding with the requested action.\n   * - -h, --help\n     - \n     - false\n     - help for delete\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - --teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-users-delete.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Remove the user with the ID 5dd58c647a3e5a6c5bce46c7 from the team with the ID 5f6a5c6c713184005d72fe6e for the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams users delete 5dd58c647a3e5a6c5bce46c7 --teamId 5f6a5c6c713184005d72fe6e --orgId 5e1234c17a3e5a48f5497de3\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-users-delete.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas teams users list [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -c, --compact\n     - \n     - false\n     - Flag that enables the compact array response structure for a json output. The --compact option returns array objects as top-level responses and allows backward compatibility for scripts based on previous CLI versions. Omitting the --compact option for a json output returns array objects within a 'results' sub-array. You must specify --output json to use this option.\n   * - -h, --help\n     - \n     - false\n     - help for list\n   * - --orgId\n     - string\n     - false\n     - Organization ID to use. This option overrides the settings in the configuration file or environment variable.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --teamId\n     - string\n     - true\n     - Unique 24-digit string that identifies the team.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nExamples\n--------\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-users-list.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return a JSON-formatted list of the users for the team with the ID 5f6a5c6c713184005d72fe6e in the organization with ID 5e2211c17a3e5a48f5497de3:\n   atlas teams users list --teamId 5f6a5c6c713184005d72fe6e --orgId 5e1234c17a3e5a48f5497de3 --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-teams-users-list.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas users describe [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -h, --help\n     - \n     - false\n     - help for describe\n   * - --id\n     - string\n     - false\n     - Unique 24-digit identifier of the user.\n\n       Mutually exclusive with --username.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --username\n     - string\n     - false\n     - Name that identifies the user. You must specify a valid email address.\n\n       Mutually exclusive with --id.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-users-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the Atlas user with the ID 5dd56c847a3e5a1f363d424d:\n   atlas users describe --id 5dd56c847a3e5a1f363d424d --output json\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-users-describe.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Return the JSON-formatted details for the Atlas user with the username myUser:\n   atlas users describe --username myUser --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-users-describe.rst"
  },
  {
    "code": "   :caption: Command Syntax\n\n   atlas users invite [options]\n\n.. Code end marker, please don't delete this comment\n\nOptions\n-------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - --country\n     - string\n     - true\n     - ISO 3166-1 alpha two-letter country code of the user's geographic location. The Atlas CLI requires this option.\n   * - --email\n     - string\n     - true\n     - Email address for the user.\n   * - --firstName\n     - string\n     - true\n     - First or given name for the user.\n   * - -h, --help\n     - \n     - false\n     - help for invite\n   * - --lastName\n     - string\n     - true\n     - Last name, family name, or surname for the user.\n   * - --mobile\n     - string\n     - false\n     - Mobile phone number for the user.\n   * - --orgRole\n     - strings\n     - false\n     - Unique 24-digit string that identifies the organization, colon, and the user's role  for the organization. Specify this value as orgID:ROLE. Valid values for ROLE include ORG_OWNER, ORG_MEMBER, ORG_GROUP_CREATOR, ORG_BILLING_ADMIN, and ORG_READ_ONLY.\n   * - -o, --output\n     - string\n     - false\n     - Output format. Valid values are json, json-path, go-template, or go-template-file. To see the full output, use the -o json option.\n   * - --password\n     - string\n     - false\n     - Password for the user.\n   * - --projectRole\n     - strings\n     - false\n     - Unique 24-digit string that identifies the project, colon, and the user's role for the project. Specify this value as projectID:ROLE. Valid values for ROLE include GROUP_CLUSTER_MANAGER, GROUP_DATA_ACCESS_ADMIN, GROUP_DATA_ACCESS_READ_ONLY, GROUP_DATA_ACCESS_READ_WRITE, GROUP_OWNER, and GROUP_READ_ONLY.\n   * - --username\n     - string\n     - true\n     - Name that identifies the user. You must specify a valid email address.\n\nInherited Options\n-----------------\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 10 10 60\n\n   * - Name\n     - Type\n     - Required\n     - Description\n   * - -P, --profile\n     - string\n     - false\n     - Name of the profile to use from your configuration file. To learn about profiles for the Atlas CLI, see https://dochub.mongodb.org/core/atlas-cli-save-connection-settings.\n\nOutput\n------\n\nIf the command succeeds, the CLI returns output similar to the following sample. Values in brackets represent your values.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-users-invite.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create the Atlas user with the username user@example.com and invite them to the organization with the ID 5dd56c847a3e5a1f363d424d with ORG_OWNER access:\n   atlas users invite --email user@example.com --username user@example.com --orgRole 5dd56c847a3e5a1f363d424d:ORG_OWNER --firstName Example --lastName User --country US --output json\n   \n   \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-users-invite.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Create the Atlas user with the username user@example.com and invite them to the project with the ID 5f71e5255afec75a3d0f96dc with GROUP_READ_ONLY access:\n   atlas users invite --email user@example.com --username user@example.com --projectRole 5f71e5255afec75a3d0f96dc:GROUP_READ_ONLY --firstName Example --lastName User --country US --output json\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas-users-invite.rst"
  },
  {
    "code": "   :copyable: false\n\n   # Display the help menu for the config command:\n   atlas config --help\n\nRelated Commands\n----------------\n\n* :ref:`atlas-accessLists` - Manage the list of IP addresses that can access your Atlas project.\n* :ref:`atlas-accessLogs` - Return the access logs for a cluster.\n* :ref:`atlas-alerts` - Manage alerts for your project.\n* :ref:`atlas-auditing` - Returns database auditing settings for MongoDB Cloud projects.\n* :ref:`atlas-auth` - Manage the CLI's authentication state.\n* :ref:`atlas-backups` - Manage cloud backups for your project.\n* :ref:`atlas-cloudProviders` - Manage cloud provider access in Atlas using AWS IAM roles.\n* :ref:`atlas-clusters` - Manage clusters for your project.\n* :ref:`atlas-completion` - Generate the autocompletion script for the specified shell\n* :ref:`atlas-config` - Configure and manage your user profiles.\n* :ref:`atlas-customDbRoles` - Manage custom database roles for your project.\n* :ref:`atlas-customDns` - Manage DNS configuration of Atlas project’s clusters deployed to AWS.\n* :ref:`atlas-dataFederation` - Data federation.\n* :ref:`atlas-dbusers` - Manage database users for your project.\n* :ref:`atlas-deployments` - Manage cloud and local deployments.\n* :ref:`atlas-events` - Manage events for your organization or project.\n* :ref:`atlas-federatedAuthentication` - Manage Atlas Federated Authentication.\n* :ref:`atlas-integrations` - Configure third-party integrations for your Atlas project.\n* :ref:`atlas-kubernetes` - Manage Kubernetes resources.\n* :ref:`atlas-liveMigrations` - Manage a Live Migration to Atlas for your organization.\n* :ref:`atlas-logs` - Download host logs for your project.\n* :ref:`atlas-maintenanceWindows` - Manage Atlas maintenance windows.\n* :ref:`atlas-metrics` - Get metrics on the MongoDB process.\n* :ref:`atlas-networking` - Manage or configure network peering for your Atlas project.\n* :ref:`atlas-organizations` - Manage your Atlas organizations.\n* :ref:`atlas-performanceAdvisor` - Learn more about slow queries and get suggestions to improve database performance.\n* :ref:`atlas-plugin` - Manage plugins for the AtlasCLI.\n* :ref:`atlas-privateEndpoints` - Manage Atlas private endpoints.\n* :ref:`atlas-processes` - Manage MongoDB processes for your project.\n* :ref:`atlas-projects` - Manage your Atlas projects.\n* :ref:`atlas-security` - Manage security configuration for your project.\n* :ref:`atlas-serverless` - Manage serverless instances for your project.\n* :ref:`atlas-setup` - Register, authenticate, create, and access an Atlas cluster.\n* :ref:`atlas-streams` - Manage your Atlas Stream Processing deployments.\n* :ref:`atlas-teams` - Manage your Atlas teams.\n* :ref:`atlas-users` - Manage your Atlas users.\n\n\n.. toctree::\n   :titlesonly:\n\n   accessLists </command/atlas-accessLists>\n   accessLogs </command/atlas-accessLogs>\n   alerts </command/atlas-alerts>\n   auditing </command/atlas-auditing>\n   auth </command/atlas-auth>\n   backups </command/atlas-backups>\n   cloudProviders </command/atlas-cloudProviders>\n   clusters </command/atlas-clusters>\n   completion </command/atlas-completion>\n   config </command/atlas-config>\n   customDbRoles </command/atlas-customDbRoles>\n   customDns </command/atlas-customDns>\n   dataFederation </command/atlas-dataFederation>\n   dbusers </command/atlas-dbusers>\n   deployments </command/atlas-deployments>\n   events </command/atlas-events>\n   federatedAuthentication </command/atlas-federatedAuthentication>\n   integrations </command/atlas-integrations>\n   kubernetes </command/atlas-kubernetes>\n   liveMigrations </command/atlas-liveMigrations>\n   logs </command/atlas-logs>\n   maintenanceWindows </command/atlas-maintenanceWindows>\n   metrics </command/atlas-metrics>\n   networking </command/atlas-networking>\n   organizations </command/atlas-organizations>\n   performanceAdvisor </command/atlas-performanceAdvisor>\n   plugin </command/atlas-plugin>\n   privateEndpoints </command/atlas-privateEndpoints>\n   processes </command/atlas-processes>\n   projects </command/atlas-projects>\n   security </command/atlas-security>\n   serverless </command/atlas-serverless>\n   setup </command/atlas-setup>\n   streams </command/atlas-streams>\n   teams </command/atlas-teams>\n   users </command/atlas-users>\n\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/command/atlas.rst"
  },
  {
    "code": "   :language: json\n   :dedent:\n   :emphasize-lines: 7,12\n\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/create-iam-role.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos:\n\n      db.listingsAndReviews.aggregate([{$match: {\"bedrooms\" : 3, \"review_scores.review_scores_rating\": {$gt: 79}} }, {$count: \"numProperties\"}])\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      { \n         \"numProperties\" : 295 \n      }\n\nFind properties with ``3`` bedrooms and include only the ``name`` and ``bedrooms`` fields in the results. Sort the returned documents by customer review rating. Limit the number of documents returned to ``5``:\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-airbnb.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos:\n\n      db.listingsAndReviews.find({\"bedrooms\": 3}, {\"name\": 1, \"bedrooms\": 1}).sort({review_scores_rating: -1}).limit(5)\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      [\n        {\n          _id: '20045679',\n          name: 'House Near Espinho/Santa Maria Feira',\n          bedrooms: Long(\"3\")\n        },\n        {\n          _id: '19760228',\n          name: 'Apartment Salva - 3 bedroom in Poble Sec',\n          bedrooms: Long(\"3\")\n        },\n        {\n          _id: '19768051',\n          name: 'Ultra Modern Pool House Maroubra',\n          bedrooms: Long(\"3\")\n        },\n        {\n          _id: '19877706',\n          name: 'Big 3 Bedroom Garden Level Apartment Near Subway',\n          bedrooms: Long(\"3\")\n        },\n        {\n          _id: '6291063',\n          name: 'Beautiful Tropical Oasis near beach in Kailua',\n          bedrooms: Long(\"3\")\n        }\n      ]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-airbnb.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos:\n\n      db.accounts.find({\"limit\": {$eq: 10000}, \"products\": \"Commodity\"}).limit(3)\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee5816238d\"),\n\t      \"account_id\" : 557378,\n\t      \"limit\" : 10000,\n\t      \"products\" : [\n\t\t      \"InvestmentStock\",\n\t\t      \"Commodity\",\n\t\t      \"Brokerage\",\n\t\t      \"CurrencyService\"\n\t      ]\n      }\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee58162390\"),\n\t      \"account_id\" : 278603,\n\t      \"limit\" : 10000,\n\t      \"products\" : [\n\t\t      \"Commodity\",\n\t\t      \"InvestmentStock\"\n\t      ]\n      }\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee5816239b\"),\n\t      \"account_id\" : 870466,\n\t      \"limit\" : 10000,\n\t      \"products\" : [\n\t\t      \"Derivatives\",\n\t\t      \"Brokerage\",\n\t\t      \"Commodity\",\n\t\t      \"InvestmentStock\"\n\t      ]\n      }\n   \nFind customers whose birthdate is before ``1990-01-01`` and limit the number of documents returned to ``5``: \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-analytics.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos:\n\n      db.customers.find({\"birthdate\": {$lt: ISODate(\"1990-01-01T22:15:34.000+00:00\")}}, {\"name\": 1, \"birthdate\": 1, \"email\": 1}).limit(5)\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a6a\"),\n\t      \"name\" : \"Katherine David\",\n\t      \"birthdate\" : ISODate(\"1988-06-20T22:15:34Z\"),\n\t      \"email\" : \"timothy78@hotmail.com\"\n      }\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a6c\"),\n\t      \"name\" : \"Brad Cardenas\",\n\t      \"birthdate\" : ISODate(\"1977-05-06T21:57:35Z\"),\n\t      \"email\" : \"dustin37@yahoo.com\"\n      }\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a74\"),\n\t      \"name\" : \"Dr. Angela Brown\",\n\t      \"birthdate\" : ISODate(\"1977-06-19T20:35:52Z\"),\n\t      \"email\" : \"michaelespinoza@gmail.com\"\n      }\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a76\"),\n\t      \"name\" : \"Lauren Clark\",\n\t      \"birthdate\" : ISODate(\"1980-10-28T16:25:59Z\"),\n\t      \"email\" : \"briannafrost@yahoo.com\"\n      }\n      {\n\t      \"_id\" : ObjectId(\"5ca4bbcea2dd94ee58162a77\"),\n\t      \"name\" : \"Jacqueline Haynes\",\n\t      \"birthdate\" : ISODate(\"1982-09-01T07:12:57Z\"),\n\t      \"email\" : \"virginia36@hotmail.com\"\n      }\n\nFind transaction details for user whose account ID is ``557378`` \nand use the :pipeline:`$sort` stage to sort on the \n``transactions.symbol`` field:\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-analytics.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos:\n\n      db.accounts.aggregate([ { $match: {\"account_id\": 557378}},{$sort: {\"transactions.symbol\": -1}} ])\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      { \n        \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee5816238d\"), \n        \"account_id\" : 557378, \n        \"limit\" : 10000, \n        \"products\" : [ \"InvestmentStock\", \"Commodity\", \"Brokerage\", \"CurrencyService\" ] \n      }\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-analytics.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos: \n\n      db.movies.find({\"type\": \"movie\", \"year\": {$gt: 2010, $lt: 2015} }, {\"title\": 1, \"year\": 1 }).limit(5)\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      {\n\t    \"_id\" : ObjectId(\"573a13b8f29313caabd4c8c5\"),\n\t    \"year\" : 2011,\n\t    \"title\" : \"Thor\"\n      }\n      {\n\t    \"_id\" : ObjectId(\"573a13b0f29313caabd34a3e\"),\n\t    \"year\" : 2011,\n\t    \"title\" : \"Cowboys & Aliens\"\n      }\n      {\n\t    \"_id\" : ObjectId(\"573a13b8f29313caabd4ca3f\"),\n\t    \"title\" : \"Red Dog\",\n\t    \"year\" : 2011\n      }\n      {\n\t    \"_id\" : ObjectId(\"573a13b8f29313caabd4d58c\"),\n\t    \"title\" : \"Jack and Jill\",\n\t    \"year\" : 2011\n      }\n      {\n\t    \"_id\" : ObjectId(\"573a13b8f29313caabd4d5b5\"),\n\t    \"year\" : 2011,\n\t    \"title\" : \"Take Me Home Tonight\"\n      }\n\nFind the sessions details for a user specified by ID.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-mflix.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos: \n\n      db.sessions.find({\"user_id\": \"t3qulfeem@kwiv5.6ur\"})\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      { \n          \"_id\" : ObjectId(\"5a97f9c91c807bb9c6eb5fb4\"), \n          \"user_id\" : \"t3qulfeem@kwiv5.6ur\", \n          \"jwt\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NieyJpYXQiOjE1MTk5MDkzMjEsIm5iZiI6MTUxOTkwOTMyMSwianRpIjoiNmJlZDAwMWYtNTFiYi00NzVhLTgAtMDcwNGE5Mjk0MWZlIiwiZXhwIjoxNTE5OTEwMjIxLCJpZGVudGl0eSI6eyJlbWFpbCI6InQzcXVsZmVlbd2l2NS42dXIiLCJuYW1lIjoiM2lveHJtZnF4IiwicGFzc3dvcmQiOm51bGx9LCJmcmVzaCI6ZmFsc2UsInRUiOiJhY2Nlc3MiLCJ1c2VyX2NsYWltcyI6eyJ1c2VyIjp7ImVtYWlsIjoidDNxdWxmZWVtQGt3aXY1LjZ1cIm5hbWUiOiIzaW94cm1mcXgiLCJwYXNzd29yZCI6bnVsbH19ejtr_NyZyBronWMKuE0RFTjWej--T0zGrdc_iymGtVs\" \n      }\n\nFind the theater specified by its ``id`` and ``zipcode``.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-mflix.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos: \n\n      db.theaters.findOne({$and: [{\"_id\": ObjectId(\"59a47286cfa9a3a73e51e763\")}, {\"location.address.zipcode\": \"93933\"}]})\n               \n   .. output:: \n      :language: json\n      :linenos:\n\n      {\n\t    \"_id\" : ObjectId(\"59a47286cfa9a3a73e51e763\"),\n\t    \"theaterId\" : 1061,\n\t    \"location\" : {\n\t\t    \"address\" : {\n\t\t\t    \"street1\" : \"101 General Stillwell Dr\",\n\t\t\t    \"city\" : \"Marina\",\n\t\t\t    \"state\" : \"CA\",\n\t\t\t    \"zipcode\" : \"93933\"\n\t\t    },\n\t\t    \"geo\" : {\n\t\t\t    \"type\" : \"Point\",\n\t\t\t    \"coordinates\" : [\n\t\t\t\t    -121.81196,\n\t\t\t\t    36.66708\n\t\t\t    ]\n\t\t  }\n\t    }\n      }\n\nFind all users whose last name is ``Lannister`` and limit the \nnumber of documents returned to ``5``.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-mflix.rst"
  },
  {
    "code": "   :copyable: true\n      \n   .. input:: \n      :language:  json\n      :linenos: \n      \n      db.users.find({ name: /Lannister/ }).limit(5)\n\n   .. output:: \n      :language: json\n      :linenos:\n\n      {\n\t    \"_id\" : ObjectId(\"59b99db5cfa9a34dcd7885b8\"),\n\t    \"name\" : \"Jaime Lannister\",\n\t    \"email\" : \"nikolaj_coster-waldau@gameofthron.es\",\n\t    \"password\" : \"$2b$12$6vz7wiwO.EI5Rilvq1zUc./9480gb1uPtXcahDxIadgyC3PS8XCUK\"\n      }\n      {\n\t    \"_id\" : ObjectId(\"59b99db6cfa9a34dcd7885ba\"),\n\t    \"name\" : \"Cersei Lannister\",\n\t    \"email\" : \"lena_headey@gameofthron.es\",\n\t    \"password\" : \"$2b$12$FExjgr7CLhNCa.oUsB9seub8mqcHzkJCFZ8heMc8CeIKOZfeTKP8m\"\n      }\n      {\n\t    \"_id\" : ObjectId(\"59b99dbdcfa9a34dcd7885c7\"),\n\t    \"name\" : \"Tyrion Lannister\",\n\t    \"email\" : \"peter_dinklage@gameofthron.es\",\n\t    \"password\" : \"$2b$12$xtHwQNXYlQzP2REobUDlzuQimjzBlXrTx1GnwP.xkfULeuuUpRxa2\"\n      }\n      {\n\t    \"_id\" : ObjectId(\"59b99dc2cfa9a34dcd7885d2\"),\n\t    \"name\" : \"Tywin Lannister\",\n\t    \"email\" : \"charles_dance@gameofthron.es\",\n\t    \"password\" : \"$2b$12$/i04T5yEJvmsBhF0Jd.kJOk3ZhRzezbTU7ASEM5o43Xxsa4o6IgEy\"\n      }\n      {\n\t    \"_id\" : ObjectId(\"59b99dcecfa9a34dcd7885ea\"),\n\t    \"name\" : \"Lancel Lannister\",\n\t    \"email\" : \"eugene_simon@gameofthron.es\",\n\t    \"password\" : \"$2b$12$mNWiHoOqOWQser3s6ezqZeTU5vhskTq.K7xkeTA2P.CIfoWsHvonO\"\n      }\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/data-federation/query-examples-mflix.rst"
  },
  {
    "code": "   :language: csharp\n   :linenos:\n   :emphasize-lines: 9\n\nTo run the sample application, use the following command:\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/csharp-insert-data.rst"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: shell\n\n      dotnet run Program.cs\n\n   .. output::\n      :language: json\n\n      Document found:\n      { \"_id\" : ObjectId(\"65c28fcf87156efe024c4558\"), \"Name\" : { \"First\" : \"Alan\", \"Last\" : \"Turing\" }, \"Birth\" : ISODate(\"1912-05-23T06:00:00Z\"), \"Death\" : ISODate(\"1954-05-07T05:00:00Z\"), \"Contribs\" : [\"Turing machine\", \"Turing test\", \"Turingery\"], \"Views\" : 1250000 }\n\n.. note::\n\n    You might see a different value for\n    :manual:`ObjectId </reference/bson-types/#objectid>`,\n    because it is a system-generated value.\n    \n.. tip::\n\n   To learn more about querying data with C#, see\n   the :driver:`C# documentation </csharp/>`.\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/csharp-insert-data.rst"
  },
  {
    "code": "   :language: go\n   :linenos:\n   :emphasize-lines: 30\n\nTo run the sample application, use the following command:\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/go-insert-data.rst"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: shell\n\n      go run insert-data.go\n\n   .. output::\n      :language: json\n\n      Document Found: \n      {Name:{First:Alan Last:Turing} Birth:1912-06-23 06:00:00 +0000 UTC Death:1954-06-07 05:00:00 +0000 UTC Contribs:[Turing machine Turing test Turingery] Views:1250000}\n\n.. note::\n\n   You might see a different value for\n   :manual:`ObjectId </reference/bson-types/#objectid>`,\n   because it is a system-generated value.\n     \n.. tip::\n\n   To learn more about querying data with Go, see\n   the :driver:`Go documentation </go/>`.\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/go-insert-data.rst"
  },
  {
    "code": "   :language: java\n   :linenos:\n   :emphasize-lines: 19\n\nThen, compile and run the SortDateForSpeed.java file:\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/java-insert-data.rst"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: shell\n\n      javac InsertData.java\n      java InsertData\n\n   .. output::\n      :language: json\n\n      Document found:\n      {\"_id\": {\"$oid\": \"64d52c3c3db2144fc00791b9\"}, \"name\": {\"first\": \"Alan\", \"last\": \"Turing\"}, \"birth\": {\"$date\": {\"$numberLong\": \"-1815328800000\"}}, \"death\": {\"$date\": {\"$numberLong\": \"-491338800000\"}}, \"contribs\": [\"Turing machine\", \"Turing test\", \"Turingery\"], \"views\": 1250000}\n\n.. note::\n\n    You might see a different value for\n    :manual:`ObjectId </reference/bson-types/#objectid>`,\n    because it is a system-generated value.\n    \n.. tip::\n\n   To learn more about querying data with Java, see\n   the :driver:`Java documentation </java/>`.\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/java-insert-data.rst"
  },
  {
    "code": "   :language: javascript\n   :linenos:\n   :emphasize-lines: 5\n\nTo run the sample application, use the following command:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/node-insert-data.rst"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: shell\n\n      node insert-data.js\n\n   .. output::\n      :language: json\n\n      Document found:\n      {\"_id\":\"65c296ae128a3f34abda47e0\",\"name\":{\"first\":\"Alan\",\"last\":\"Turing\"},\"birth\":\"1912-06-23T06:00:00.000Z\",\"death\":\"1954-06-07T05:00:00.000Z\",\"contribs\":[\"Turing machine\",\"Turing test\",\"Turingery\"],\"views\":1250000}\n\n.. note::\n\n    You might see a different value for\n    :manual:`ObjectId </reference/bson-types/#objectid>`,\n    because it is a system-generated value.\n\n.. tip::\n\n   To learn more about querying data with Node.js, see\n   the :driver:`Node.js documentation </node/>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/node-insert-data.rst"
  },
  {
    "code": "   :language: python\n   :linenos:\n   :emphasize-lines: 5\n\nTo run the sample application, use the following command:\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/python-insert-data.rst"
  },
  {
    "code": "   :copyable: true \n\n   .. input:: \n      :language: shell\n      :linenos: \n\n      python insert-data.py\n         \n   .. output::\n      :language: json \n\n      Document found:\n      { \n         '_id': ObjectId('65c2a8188388383b00a85b1f'), \n         'name': { \n            'first': 'Alan', \n            'last': 'Turing' \n         }, \n         'birth': datetime.datetime(1912, 6, 23, 0, 0), \n         'death': datetime.datetime(1954, 6, 7, 0, 0), \n         'contribs': [\n            'Turing machine', \n            'Turing test', \n            'Turingery'\n         ], \n         'views': 1250000 \n      }\n\n.. note::\n   \n   You might see a different value for\n   :manual:`ObjectId </reference/bson-types/#objectid>`,\n   because it is a system-generated value.\n   \n.. tip::\n   \n   To learn more about querying data with PyMongo, see\n   the :driver:`PyMongo documentation </python/>`.\n   \n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/drivers-get-started/python-insert-data.rst"
  },
  {
    "code": "   :copyable: false \n\n   \"scopes\": [\n     {\n       \"name\": <resource-name>,\n       \"type\": \"CLUSTER\"|\"DATA_LAKE\"\n     }\n   ]\n   \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-dbuser-scopes-format.rst"
  },
  {
    "code": "      :copyable: false\n      :emphasize-lines: 2\n\n      {\n        \"ts\": Timestamp(1537559320, 1),\n        \"h\": NumberLong(\"-2447431566377702740\"),\n        \"v\": 2,\n        \"op\": \"n\",\n        \"ns\": \"\",\n        \"wall\": ISODate(\"2018-09-21T19:48:40.708Z\"),\n        \"o\": {\n          \"msg\": \"initiating set\"\n        }\n      }\n\n   The parts of the ``ts`` value correspond to the values\n   you need for the :guilabel:`Timestamp` and\n   :guilabel:`Increment` boxes.\n\n   To translate the epoch time into a human-readable\n   timestamp, try using a tool like\n   `Epoch Converter <https://www.epochconverter.com/>`__ \n   MongoDB does not endorse this service. \n   Its reference is intended only as informational. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-find-latest-oplog-entry.rst"
  },
  {
    "code": "      :copyable: false \n\n      total number of index objects = 1 + number of nested embedded documents\n\n2. Multiply the number of index objects per document by the\n   total number of documents in the collection\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-fts-embedded-documents-limitation.rst"
  },
  {
    "code": "      :copyable: false \n\n      total number of index objects x total number of documents in collection\n\nNote that this approximation is a lower bound. \n\n.. example::\n\n   Consider the :asp:`collection </6601831bf3ec7476bd9da8c9>` named\n   ``schools``, described in this :ref:`tutorial \n   <embedded-documents-tutorial-sample-collection>`, and suppose the\n   collection contains 1000 documents similar to the following: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-fts-embedded-documents-limitation.rst"
  },
  {
    "code": "      :copyable: false \n\n      {\n        \"_id\": 0,\n        \"name\": \"Springfield High\",\n        \"mascot\": \"Pumas\",\n        \"teachers\": [\n          {\n            \"first\": \"Jane\",\n            \"last\": \"Smith\",\n            \"classes\": [\n              {\n                \"subject\": \"art of science\",\n                \"grade\": \"12th\"\n              },\n              ... // 2 more embedded documents\n            ]\n          },\n          ... // 1 more embedded document\n        ],\n        \"clubs\": {\n          \"stem\": [\n            {\n              \"club_name\": \"chess\",\n              \"description\": \"provides students opportunity to play the board game of chess informally and competitively in tournaments.\"\n            },\n            ... // 1 more embedded document\n          ],\n          ... // 1 more embedded document\n        }\n      }\n   \n   Now consider the index definition for the following fields in the\n   ``schools`` collection:  \n\n   .. tabs:: \n\n      .. tab:: Nested Array \n         :tabid: nested-array\n\n         The array of documents named ``teachers`` is indexed as the\n         ``embeddedDocuments`` type with dynamic mappings enabled.\n         However, the ``classes`` field *isn't indexed*. Use the\n         following to calculate the index objects:  \n\n         1. Calculate the number of index objects per document.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-fts-embedded-documents-limitation.rst"
  },
  {
    "code": "               :copyable: false \n\n               Number of ``teachers`` embedded documents = up to 2 \n               Total number of index objects per document = 1 + 2 = 3\n\n         #. Multiply by the total number of documents in the collection.\n  \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-fts-embedded-documents-limitation.rst"
  },
  {
    "code": "               :copyable: false \n\n               Number of documents in the collection = 1000\n               Number of index objects per document = 3\n               Total number of index objects for collection = 1000 x 3 = 3000\n\n      .. tab:: Nested Array Within Array\n         :tabid: nested-within-array\n\n         The arrays of documents named ``teachers`` and\n         ``teachers.classes`` are indexed as the ``embeddedDocuments``\n         type with dynamic mappings enabled. Use the following to \n         calculate the index objects:\n\n         2. Calculate the number of index objects per document:                                      \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-fts-embedded-documents-limitation.rst"
  },
  {
    "code": "               :copyable: false \n\n               Number of documents = 1\n               Number of ``teachers`` embedded documents  = up to 2\n               Number of ``classes`` embedded documents = up to 3\n               Number of index objects per document = 1 + ( 2 x 3 ) = 7\n\n         #. Multiply by the total number of documents in the collection.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-fts-embedded-documents-limitation.rst"
  },
  {
    "code": "               :copyable: false \n\n               Number of documents in the collection = 1000\n               Number of index objects per document = 7\n               Total number of index objects: 1000 x 7 = 7000\n\nIf your collection has large arrays that might generate 2,100,000,000\nindex objects, you must :ref:`shard <create-cluster-sharding>` any\n{+clusters+} that contain indexes with the ``embeddedDocuments`` type. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-fts-embedded-documents-limitation.rst"
  },
  {
    "code": "      :copyable: false\n        \n      CN=Atlas read only,OU=AADDC Users,DC=aadds,DC=example,DC=com\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-ldap-group-3-azure.rst"
  },
  {
    "code": "      :copyable: false\n   \n      cn=db-read,ou=groups,dc=mdb-example,dc=okta,dc=com\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-ldap-group-3-okta.rst"
  },
  {
    "code": "      :copyable: false\n   \n      cn=db-read,ou=groups,dc=mdb-example,dc=onelogin,dc=com\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-ldap-group-3-onelogin.rst"
  },
  {
    "code": "   :copyable: false \n\n   /title/plot/released\n\n|service| creates partitions first for the ``title`` field, followed by  the ``plot`` field, and then the ``released`` field. |service| uses the partitions for queries on the following fields:\n\n- the ``title`` field,\n- the ``title`` field and the ``plot`` field,\n- the ``title`` field and the ``plot`` field and the ``released`` field.\n\n|service| can also use the partitions to support a query on the ``title`` and ``released`` fields. However, in this case, |service| would not be as efficient in supporting the query as it would be if the query were on the ``title`` and ``plot`` fields only. Partitions are parsed in order; if a query omits a particular partition, |service| is less efficient in making use of any partitions that follow that. Since a query on ``title`` and ``released`` omits ``plot``, |service| uses the ``title`` partition more efficiently than the ``released`` partition to support this query. \n  \n|service| can't use the partitioning strategy to efficiently support queries on fields not specified here. Also, |service| can't use the partitions to support queries that include the following fields without the ``title`` field:\n\n- the ``plot`` field,\n- the ``released`` field, or\n- the ``plot`` and ``released`` fields.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-oa-partitions-date-criteria-timeseries-collection.rst"
  },
  {
    "code": "   :copyable: false\n\n   $ nslookup -type=SRV _mongodb._tcp.serverlessinstance0-pe-1.oqg5v.mongodb.net\n\n    Server: 127.0.0.1\n    Address: 127.0.0.1#53\n\n         Non-authoritative answer:\n         _mongodb._tcp.serverlessinstance0-pe-1.oqg5v.mongodb.net service = 0 0 27017 pe-1-serverlessinstance0.oqg5v.mongodb.net.\n\nIn the preceding example:\n\n- ``_mongodb._tcp.serverlessinstance0-pe-1.oqg5v.mongodb.net`` \n  is the SRV record that the ``mongodb+srv://serverlessinstance0-pe-1.oqg5v.mongodb.net`` \n  connection string references.\n\n- ``serverlessinstance0-pe-1.oqg5v.mongodb.net`` is the hostname\n  for the |service| {+serverless-instance+} for which you have\n  configured {+aws-pl+}.\n  \n- ``27017`` is a unique port that |service| assigns to the load\n  balancer for the |service| {+serverless-instance+} for which you\n  enabled {+aws-pl+}.\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-pl-serverless-srv-record-aws.rst"
  },
  {
    "code": "   :copyable: false\n\n   $ nslookup -type=SRV _mongodb._tcp.serverlessinstance0-pe-1.oqg5v.mongodb.net\n\n   Server:  127.0.0.1\n   Address:  127.0.0.1#53\n\n   Non-authoritative answer:\n   _mongodb._tcp.serverlessinstance0-pe-1.oqg5v.mongodb.net service = 0 0 27017 serverlessinstance0-pe-1.oqg5v.mongodb.net.\n\nIn the preceding example:\n\n- ``_mongodb._tcp.serverlessinstance0-pe-1.oqg5v.mongodb.net``\n  is the SRV record that the connection string references. \n\n- ``serverlessinstance0-pe-1.oqg5v.mongodb.net`` is the\n  hostname for the |service| {+serverless-instance+} for which you have \n  configured {+az-pl+}.\n  \n- ``27017`` is a unique port that |service| assigns to the load\n  balancer for the |service| {+serverless-instance+} for which you\n  enabled {+az-pl+}.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-pl-serverless-srv-record-azure.rst"
  },
  {
    "code": "        :copyable: false \n\n        The specified module could not be found (path of the dll which exists and has the proper permission). \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fact-shared-prereqs-odbc-driver.rst"
  },
  {
    "code": "      :copyable: false\n\n      p%40ssw0rd%279%27%21\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/facts/characters-not-allowed-auth.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\": \"Off Beat\" }\n         { \"title\": \"Off the Map\" }\n         { \"title\": \"Off and Running\" }\n         { \"title\": \"Hands off Mississippi\" }\n         { \"title\": \"Taking Off\" }\n         { \"title\": \"Noises Off...\" }\n         { \"title\": \"Brassed Off\" }\n         { \"title\": \"Face/Off\" }\n         { \"title\": \"Benji: Off the Leash!\" }\n         { \"title\": \"Set It Off\" }\n\n      In the above results, the characters ``off`` appear at the\n      left side of a word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Taking Off\" }\n         { \"title\" : \"Noises Off...\" }\n         { \"title\" : \"Brassed Off\" }\n         { \"title\" : \"Face/Off\" }\n         { \"title\" : \"Set It Off\" }\n         { \"title\" : \"Hands off Mississippi\" }\n         { \"title\" : \"Ferris Bueller's Day Off\" }\n         { \"title\" : \"Off Beat\" }\n         { \"title\" : \"Benji: Off the Leash!\" }\n         { \"title\" : \"Off the Map\" }\n\n      In the above results, the characters ``off`` appear at the\n      right side of a word in all the titles.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Come Have Coffee with Us\" }\n         { \"title\" : \"A Spell to Ward Off the Darkness\" }\n         { \"title\" : \"Remake, Remix, Rip-Off: About Copy Culture & Turkish Pop Cinema\" }\n         { \"title\" : \"Benji: Off the Leash!\" }\n         { \"title\" : \"A Coffee in Berlin\" }\n         { \"title\" : \"An Officer and a Gentleman\" }\n         { \"title\" : \"The Official Story\" }\n         { \"title\" : \"The Officer's Ward\" }\n         { \"title\" : \"Hands off Mississippi\" }\n         { \"title\" : \"Romanoff and Juliet\" }\n\n      In the above results, the characters ``off`` appear at\n      different positions in the titles.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Off Beat}]\n         [{title Off the Map}]\n         [{title Off and Running}]\n         [{title Hands off Mississippi}]\n         [{title Taking Off}]\n         [{title Noises Off...}]\n         [{title Brassed Off}]\n         [{title Face/Off}]\n         [{title Benji: Off the Leash!}]\n         [{title Set It Off}]\n\n      In the above results, the characters ``off`` appear at the\n      left side of a word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Taking Off}]\n         [{title Noises Off...}]\n         [{title Brassed Off}]\n         [{title Face/Off}]\n         [{title Set It Off}]\n         [{title Hands off Mississippi}]\n         [{title Ferris Bueller's Day Off}]\n         [{title Off Beat}]\n         [{title Benji: Off the Leash!}]\n         [{title Off the Map}]\n\n      In the above results, the characters ``off`` appear at the\n      right side of a word in all the titles.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Come Have Coffee with Us}]\n         [{title A Spell to Ward Off the Darkness}]\n         [{title Remake, Remix, Rip-Off: About Copy Culture & Turkish Pop Cinema}]\n         [{title Benji: Off the Leash!}]\n         [{title A Coffee in Berlin}]\n         [{title An Officer and a Gentleman}]\n         [{title The Official Story}]\n         [{title The Officer's Ward}]\n         [{title Hands off Mississippi}]\n         [{title Romanoff and Juliet}]\n\n      In the above results, the characters ``off`` appear at\n      different positions in the titles.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Off Beat\"}\n         {\"title\": \"Off the Map\"}\n         {\"title\": \"Off and Running\"}\n         {\"title\": \"Hands off Mississippi\"}\n         {\"title\": \"Taking Off\"}\n         {\"title\": \"Noises Off...\"}\n         {\"title\": \"Brassed Off\"}\n         {\"title\": \"Face/Off\"}\n         {\"title\": \"Benji: Off the Leash!\"}\n         {\"title\": \"Set It Off\"}\n\n      In the above results, the characters ``off`` appear at the\n      left side of a word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Taking Off\"}\n         {\"title\": \"Noises Off...\"}\n         {\"title\": \"Brassed Off\"}\n         {\"title\": \"Face/Off\"}\n         {\"title\": \"Set It Off\"}\n         {\"title\": \"Hands off Mississippi\"}\n         {\"title\": \"Ferris Bueller's Day Off\"}\n         {\"title\": \"Off Beat\"}\n         {\"title\": \"Benji: Off the Leash!\"}\n         {\"title\": \"Off the Map\"}\n\n      In the above results, the characters ``off`` appear at the\n      right side of a word in all the titles.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Come Have Coffee with Us\"}\n         {\"title\": \"A Spell to Ward Off the Darkness\"}\n         {\"title\": \"Remake, Remix, Rip-Off: About Copy Culture & Turkish Pop Cinema\"}\n         {\"title\": \"Benji: Off the Leash!\"}\n         {\"title\": \"A Coffee in Berlin\"}\n         {\"title\": \"An Officer and a Gentleman\"}\n         {\"title\": \"The Official Story\"}\n         {\"title\": \"The Officer's Ward\"}\n         {\"title\": \"Hands off Mississippi\"}\n         {\"title\": \"Romanoff and Juliet\"}\n\n      In the above results, the characters ``off`` appear at\n      different positions in the titles.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Off Beat' }\n         { title: 'Off the Map' }\n         { title: 'Off and Running' }\n         { title: 'Hands off Mississippi' }\n         { title: 'Taking Off' }\n         { title: 'Noises Off...' }\n         { title: 'Brassed Off' }\n         { title: 'Face/Off' }\n         { title: 'Benji: Off the Leash!' }\n         { title: 'Set It Off' }\n\n      In the above results, the characters ``off`` appear at the\n      left side of a word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Taking Off' }\n         { title: 'Noises Off...' }\n         { title: 'Brassed Off' }\n         { title: 'Face/Off' }\n         { title: 'Set It Off' }\n         { title: 'Hands off Mississippi' }\n         { title: \"Ferris Bueller's Day Off\" }\n         { title: 'Off Beat' }\n         { title: 'Benji: Off the Leash!' }\n         { title: 'Off the Map' }\n\n      In the above results, the characters ``off`` appear at the\n      right side of a word in all the titles.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Come Have Coffee with Us' }\n         { title: 'A Spell to Ward Off the Darkness' }\n         { title: 'Remake, Remix, Rip-Off: About Copy Culture & Turkish Pop Cinema' }\n         { title: 'Benji: Off the Leash!' }\n         { title: 'A Coffee in Berlin' }\n         { title: 'An Officer and a Gentleman' }\n         { title: 'The Official Story' }\n         { title: \"The Officer's Ward\" }\n         { title: 'Hands off Mississippi' }\n         { title: 'Romanoff and Juliet' }\n\n      In the above results, the characters ``off`` appear at\n      different positions in the titles.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Off Beat}}\n         Document{{title=Off the Map}}\n         Document{{title=Off and Running}}\n         Document{{title=Hands off Mississippi}}\n         Document{{title=Taking Off}}\n         Document{{title=Face/Off}}\n         Document{{title=Noises Off...}}\n         Document{{title=Brassed Off}}\n         Document{{title=Benji: Off the Leash!}}\n         Document{{title=Set It Off}}\n\n      In the above results, the characters ``off`` appear at the\n      left side of a word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Noises Off...}}\n         Document{{title=Taking Off}}\n         Document{{title=Brassed Off}}\n         Document{{title=Face/Off}}\n         Document{{title=Set It Off}}\n         Document{{title=Hands off Mississippi}}\n         Document{{title=Ferris Bueller's Day Off}}\n         Document{{title=Off Beat}}\n         Document{{title=Benji: Off the Leash!}}\n         Document{{title=Off and Running}}\n\n      In the above results, the characters ``off`` appear at the\n      right side of a word in all the titles.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Taking Off}}\n         Document{{title=Noises Off...}}\n         Document{{title=Brassed Off}}\n         Document{{title=Face/Off}}\n         Document{{title=Off Beat}}\n         Document{{title=Hands off Mississippi}}\n         Document{{title=Off the Map}}\n         Document{{title=Set It Off}}\n         Document{{title=Off and Running}}\n         Document{{title=Benji: Off the Leash!}}\n\n      In the above results, the characters ``off`` appear at\n      different positions in the titles.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n         \n         {'title': 'Off Beat'}\n         {'title': 'Off the Map'}\n         {'title': 'Off and Running'}\n         {'title': 'Hands off Mississippi'}\n         {'title': 'Taking Off'}\n         {'title': 'Noises Off...'}\n         {'title': 'Brassed Off'}\n         {'title': 'Face/Off'}\n         {'title': 'Benji: Off the Leash!'}\n         {'title': 'Set It Off'}\n\n      In the above results, the characters ``off`` appear at the\n      left side of a word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Taking Off'}\n         {'title': 'Noises Off...'}\n         {'title': 'Brassed Off'}\n         {'title': 'Face/Off'}\n         {'title': 'Set It Off'}\n         {'title': 'Hands off Mississippi'}\n         {'title': \"Ferris Bueller's Day Off\"}\n         {'title': 'Off Beat'}\n         {'title': 'Benji: Off the Leash!'}\n         {'title': 'Off the Map'}\n\n      In the above results, the characters ``off`` appear at the\n      right side of a word in all the titles.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Come Have Coffee with Us'}\n         {'title': 'A Spell to Ward Off the Darkness'}\n         {'title': 'Remake, Remix, Rip-Off: About Copy Culture & Turkish Pop Cinema'}\n         {'title': 'Benji: Off the Leash!'}\n         {'title': 'A Coffee in Berlin'}\n         {'title': 'An Officer and a Gentleman'}\n         {'title': 'The Official Story'}\n         {'title': \"The Officer's Ward\"}\n         {'title': 'Hands off Mississippi'}\n         {'title': 'Romanoff and Juliet'}\n\n      In the above results, the characters ``off`` appear at\n      different positions in the titles.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Off Beat' },\n         { title: 'Off the Map' },\n         { title: 'Off and Running' },\n         { title: 'Hands off Mississippi' },\n         { title: 'Taking Off' },\n         { title: 'Noises Off...' },\n         { title: 'Brassed Off' },\n         { title: 'Face/Off' },\n         { title: 'Benji: Off the Leash!' },\n         { title: 'Set It Off' }\n\n      In the above results, the characters ``off`` appear at the\n      left side of a word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n         \n         { title: 'Taking Off' }\n         { title: 'Noises Off...' }\n         { title: 'Brassed Off' }\n         { title: 'Face/Off' }\n         { title: 'Set It Off' }\n         { title: 'Hands off Mississippi' }\n         { title: \"Ferris Bueller's Day Off\" }\n         { title: 'Off Beat' }\n         { title: 'Benji: Off the Leash!' }\n         { title: 'Off the Map' }\n\n      In the above results, the characters ``off`` appear at the\n      right side of a word in all the titles.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Come Have Coffee with Us' },\n         { title: 'A Spell to Ward Off the Darkness' },\n         { title: 'Remake, Remix, Rip-Off: About Copy Culture & Turkish Pop Cinema' },\n         { title: 'Benji: Off the Leash!' },\n         { title: 'A Coffee in Berlin' },\n         { title: 'An Officer and a Gentleman' },\n         { title: 'The Official Story' },\n         { title: \"The Officer's Ward\" },\n         { title: 'Hands off Mississippi' },\n         { title: 'Romanoff and Juliet' }\n\n      In the above results, the characters ``off`` appear at\n      different positions in the titles.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/basic-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         { \n            \"plot\" : 'Filmmakers James Franco and Travis Mathews re-imagine the lost 40 minutes from \\\"Cruising\\\" as a starting point to a broader exploration of sexual and creative freedom.', \n            \"title\" : 'Interior. Leather Bar.'\n         }\n         { \n            \"plot\" : 'Almost forty years after the John F. Kennedy assassination, an ex-Marine named Walter Ohlinger has come forward with a startling claim.', \n            \"title\" : 'Interview with the Assassin' \n         }\n         { \n            \"plot\" : 'A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.', \n            \"title\" : 'Brief Interviews with Hideous Men' \n         }\n         { \n            \"plot\" : 'A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.', \n            \"title\" : 'Austin Powers\\:\\ International Man of Mystery'\n         }\n         { \n            \"plot\" : 'A confused young man (Marsden) takes a journey on a road that doesn\\'t exist on any map.', \n            \"title\" : 'Interstate 60\\:\\ Episodes of the Road' \n         }\n         { \n            \"plot\" : 'A vampire tells his epic life story\\:\\ love, betrayal, loneliness, and hunger.', \n            \"title\" : 'Interview with the Vampire\\:\\ The Vampire Chronicles'\n         }\n         { \n            \"plot\" : 'The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.', \n            \"title\" : 'The Internet\\'s Own Boy\\:\\ The Story of Aaron Swartz'\n         }\n         { \n            \"plot\" : 'The film chronicles Australian-born opera star Marjorie Lawrence\\'s success, her battle with polio, and her eventual career comeback.', \n            \"title\" : 'Interrupted Melody' \n         }\n         { \n            \"plot\" : \"Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.\", \n            \"title\" : \"Richness of Internal Space\" \n         }\n         { \n            \"plot\" : \"Three sisters find their lives spinning out of control in the wake of their parents' sudden, unexpected divorce.\", \n            \"title\" : \"Interiors\" \n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-edgegram-result.rst\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         { \n            \"plot\" : 'After her son is hospitalized, a doctor cheats on her husband with a snow plow driver who is a suspect in her investigation of the recent death of a young Arab boy.', \n            \"title\" : 'Kissed by Winter'\n         }\n         { \n            \"plot\" : 'The American oil company KIC Corporation is building an ice road to explore the remote Northern Arctic National Wildlife Refuge seeking energy independence. Independent environmentalists ...', \n            \"title\" : 'The Last Winter'\n         }\n         { \n            \"plot\" : 'A couple engage in discussions with people on the street, politicians and religious leaders about the discrimination against gays and lesbians in Italy.', \n            \"title\" : 'Suddenly, Last Winter'\n         }\n         { \n            \"plot\" : 'WINTER is a dangerous, sexy, poignant and at times darkly funny story about two people who desperately want intimacy but have fashioned lives of reclusivity and emotional fracture which ...', \n            \"title\" : 'After Fall, Winter'\n         }\n         { \n            \"plot\" : 'Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...', \n            \"title\" : 'Summer Wishes, Winter Dreams'\n         }\n         { \n            \"plot\" : '1183 AD\\:\\ King Henry II\\'s three sons all want to inherit the throne, but he won\\'t commit to a choice. They and his wife variously plot to force him.', \n            \"title\" : 'The Lion in Winter'\n         }\n         { \n            \"plot\" : 'Felicie and Charles have a serious if whirlwind holiday romance. Due to a mix-up on addresses they lose contact, and five years later at Christmas-time Felicie is living with her mother in ...', \n            \"title\" : 'A Tale of Winter'\n         }\n         { \n            \"plot\" : 'A mysterious creature is killing a farmer\\'s livestock.', \n            \"title\" : 'In the Winter Dark'\n         }\n         { \n            \"plot\" : 'Sean is a little duck with a big problem. Due to a mishap with a jet aircraft Sean misses the annual migration South and has to face the winter alone. However, he is befriended by a water ...', \n            \"title\" : 'The First Snow of Winter'\n         }\n         { \n            \"plot\" : 'A renowned artist must uncover a young dancer\\'s secrets in order to truly capture her likeness for a commissioned work.', \n            \"title\" : 'A Year Ago in Winter'\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-rightedgegram-result.rst\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n      \n         { \n            \"plot\" : 'A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.', \n            \"title\" : 'Austin Powers\\:\\ International Man of Mystery'\n         }\n         { \n            \"plot\" : 'On an isolated lake, an old monk lives on a small floating temple. The wise master has also a young boy with him who learns to become a monk. And we watch as seasons and years pass by.', \n            \"title\" : 'Spring, Summer, Fall, Winter... and Spring'\n         }\n         { \n            \"plot\" : 'Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...', \n            \"title\" : 'Summer Wishes, Winter Dreams'\n         }\n         { \n            \"plot\" : 'A mysterious creature is killing a farmer\\'s livestock.', \n            \"title\" : 'In the Winter Dark'\n         }\n         { \n            \"plot\" : 'Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.', \n            \"title\" : 'Richness of Internal Space'\n         }\n         { \n            \"plot\" : 'A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.', \n            \"title\" : 'Brief Interviews with Hideous Men'\n         }\n         { \n            \"plot\" : 'As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history\\:\\ an assassin known as the Winter Soldier.', \n            \"title\" : 'Captain America\\:\\ The Winter Soldier'\n         }\n         { \n            \"plot\" : 'On a cold winter day a mysterious stranger shows up at the Witting Farm. He is John Witting, the father of Jacob Witting who abandoned Jacob and his mother when Jacob was little. Jacob is ...', \n            \"title\" : 'Sarah, Plain and Tall\\:\\ Winter\\'s End'\n         }\n         { \n            \"plot\" : 'The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.', \n            \"title\" : 'The Internet\\'s Own Boy\\:\\ The Story of Aaron Swartz'\n         }\n         { \n            \"plot\" : 'Out of work actor Joe volunteers to help try and save his sister\\'s local church for the community by putting on a Christmas production of Hamlet, somewhat against the advice of his agent ...', \n            \"title\" : 'A Midwinter\\'s Tale'\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-ngram-result.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [\n          {plot Filmmakers James Franco and Travis Mathews re-imagine the lost 40 minutes from \\\"Cruising\\\" as a starting point to a broader exploration of sexual and creative freedom.}\n          {title Interior. Leather Bar.}\n         ]\n         [\n          {plot Almost forty years after the John F. Kennedy assassination, an ex-Marine named Walter Ohlinger has come forward with a startling claim.}\n          {title Interview with the Assassin}\n         ]\n         [\n          {plot A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.}\n          {title Brief Interviews with Hideous Men}\n         ]\n         [\n          {plot A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.}\n          {title Austin Powers: International Man of Mystery}\n         ]\n         [\n          {plot A confused young man (Marsden) takes a journey on a road that doesn't exist on any map.}\n          {title Interstate 60: Episodes of the Road}\n         ]\n         [\n          {plot A vampire tells his epic life story: love, betrayal, loneliness, and hunger.}\n          {title Interview with the Vampire: The Vampire Chronicles}\n         ]\n         [\n          {plot The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.}\n          {title The Internet's Own Boy: The Story of Aaron Swartz}\n         ]\n         [\n          {plot The film chronicles Australian-born opera star Marjorie Lawrence's success, her battle with polio, and her eventual career comeback.}\n          {title Interrupted Melody}\n         ]\n         [\n          {plot Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.}\n          {title Richness of Internal Space}\n         ]\n         [\n          {plot Three sisters find their lives spinning out of control in the wake of their parents' sudden, unexpected divorce.}\n          {title Interiors}\n         ]\n      \n      .. include:: /includes/extracts/fts-autocomplete-edgegram-result.rst\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         [\n          {plot After her son is hospitalized, a doctor cheats on her husband with a snow plow driver who is a suspect in her investigation of the recent death of a young Arab boy.}\n          {title Kissed by Winter}\n         ]\n         [\n          {plot The American oil company KIC Corporation is building an ice road to explore the remote Northern Arctic National Wildlife Refuge seeking energy independence. Independent environmentalists ...}\n          {title The Last Winter}\n         ]\n         [\n          {plot A couple engage in discussions with people on the street, politicians and religious leaders about the discrimination against gays and lesbians in Italy.}\n          {title Suddenly, Last Winter}\n         ]\n         [\n          {plot WINTER is a dangerous, sexy, poignant and at times darkly funny story about two people who desperately want intimacy but have fashioned lives of reclusivity and emotional fracture which ...}\n          {title After Fall, Winter}\n         ]\n         [\n          {plot Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...}\n          {title Summer Wishes, Winter Dreams}\n         ]\n         [\n          {plot 1183 AD: King Henry II's three sons all want to inherit the throne, but he won't commit to a choice. They and his wife variously plot to force him.}\n          {title The Lion in Winter}\n         ]\n         [\n          {plot Felicie and Charles have a serious if whirlwind holiday romance. Due to a mix-up on addresses they lose contact, and five years later at Christmas-time Felicie is living with her mother in ...}\n          {title A Tale of Winter}\n         ]\n         [\n          {plot A mysterious creature is killing a farmer's livestock.}\n          {title In the Winter Dark}\n         ]\n         [\n          {plot Sean is a little duck with a big problem. Due to a mishap with a jet aircraft Sean misses the annual migration South and has to face the winter alone. However, he is befriended by a water ...}\n          {title The First Snow of Winter}\n         ]\n         [\n          {plot A renowned artist must uncover a young dancer's secrets in order to truly capture her likeness for a commissioned work.}\n          {title A Year Ago in Winter}\n         ]\n\n      .. include:: /includes/extracts/fts-autocomplete-rightedgegram-result.rst\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n      \n         [\n          {plot A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.}\n          {title Austin Powers: International Man of Mystery}\n         ]\n         [\n          {plot On an isolated lake, an old monk lives on a small floating temple. The wise master has also a young boy with him who learns to become a monk. And we watch as seasons and years pass by.}\n          {title Spring, Summer, Fall, Winter... and Spring}\n         ]\n         [\n          {plot Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...}\n          {title Summer Wishes, Winter Dreams}\n         ]\n         [\n          {plot A mysterious creature is killing a farmer's livestock.}\n          {title In the Winter Dark}\n         ]\n         [\n          {plot Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.}\n          {title Richness of Internal Space}\n         ]\n         [\n          {plot A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.}\n          {title Brief Interviews with Hideous Men}\n         ]\n         [\n          {plot As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history: an assassin known as the Winter Soldier.}\n          {title Captain America: The Winter Soldier}\n         ]\n         [\n          {plot On a cold winter day a mysterious stranger shows up at the Witting Farm. He is John Witting, the father of Jacob Witting who abandoned Jacob and his mother when Jacob was little. Jacob is ...}\n          {title Sarah, Plain and Tall: Winter's End}\n         ]\n         [\n          {plot The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.}\n          {title The Internet's Own Boy: The Story of Aaron Swartz}\n         ]\n         [\n          {plot Out of work actor Joe volunteers to help try and save his sister's local church for the community by putting on a Christmas production of Hamlet, somewhat against the advice of his agent ...}\n          {title A Midwinter's Tale}\n         ]\n\n      .. include:: /includes/extracts/fts-autocomplete-ngram-result.rst\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         { \n            \"plot\" : \"Filmmakers James Franco and Travis Mathews re-imagine the lost 40 minutes from \\\"Cruising\\\" as a starting point to a broader exploration of sexual and creative freedom.\", \n            \"title\" : \"Interior. Leather Bar.\" \n         }\n         { \n            \"plot\" : \"Almost forty years after the John F. Kennedy assassination, an ex-Marine named Walter Ohlinger has come forward with a startling claim.\", \n            \"title\" : \"Interview with the Assassin\" \n         }\n         { \n            \"plot\" : \"A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.\", \n            \"title\" : \"Brief Interviews with Hideous Men\" \n         }\n         { \n            \"plot\" : \"A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.\", \n            \"title\" : \"Austin Powers\\:\\ International Man of Mystery\" \n         }\n         { \n            \"plot\" : \"A confused young man (Marsden) takes a journey on a road that doesn't exist on any map.\", \n            \"title\" : \"Interstate 60\\:\\ Episodes of the Road\" \n         }\n         { \n            \"plot\" : \"A vampire tells his epic life story\\:\\ love, betrayal, loneliness, and hunger.\", \n            \"title\" : \"Interview with the Vampire\\:\\ The Vampire Chronicles\" \n         }\n         { \n            \"plot\" : \"The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.\", \n            \"title\" : \"The Internet's Own Boy\\:\\ The Story of Aaron Swartz\" \n         }\n         { \n            \"plot\" : \"The film chronicles Australian-born opera star Marjorie Lawrence's success, her battle with polio, and her eventual career comeback.\", \n            \"title\" : \"Interrupted Melody\" \n         }\n         { \n            \"plot\" : \"Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.\", \n            \"title\" : \"Richness of Internal Space\" \n         }\n         { \n            \"plot\" : \"Three sisters find their lives spinning out of control in the wake of their parents' sudden, unexpected divorce.\", \n            \"title\" : \"Interiors\" \n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-edgegram-result.rst\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         { \n            \"plot\" : 'After her son is hospitalized, a doctor cheats on her husband with a snow plow driver who is a suspect in her investigation of the recent death of a young Arab boy.', \n            \"title\" : 'Kissed by Winter'\n         }\n         { \n            \"plot\" : 'The American oil company KIC Corporation is building an ice road to explore the remote Northern Arctic National Wildlife Refuge seeking energy independence. Independent environmentalists ...', \n            \"title\" : 'The Last Winter'\n         }\n         { \n            \"plot\" : 'A couple engage in discussions with people on the street, politicians and religious leaders about the discrimination against gays and lesbians in Italy.', \n            \"title\" : 'Suddenly, Last Winter'\n         }\n         { \n            \"plot\" : 'WINTER is a dangerous, sexy, poignant and at times darkly funny story about two people who desperately want intimacy but have fashioned lives of reclusivity and emotional fracture which ...', \n            \"title\" : 'After Fall, Winter'\n         }\n         { \n            \"plot\" : 'Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...', \n            \"title\" : 'Summer Wishes, Winter Dreams'\n         }\n         { \n            \"plot\" : '1183 AD\\:\\ King Henry II\\'s three sons all want to inherit the throne, but he won\\'t commit to a choice. They and his wife variously plot to force him.', \n            \"title\" : 'The Lion in Winter'\n         }\n         { \n            \"plot\" : 'Felicie and Charles have a serious if whirlwind holiday romance. Due to a mix-up on addresses they lose contact, and five years later at Christmas-time Felicie is living with her mother in ...', \n            \"title\" : 'A Tale of Winter'\n         }\n         { \n            \"plot\" : 'A mysterious creature is killing a farmer\\'s livestock.', \n            \"title\" : 'In the Winter Dark'\n         }\n         { \n            \"plot\" : 'Sean is a little duck with a big problem. Due to a mishap with a jet aircraft Sean misses the annual migration South and has to face the winter alone. However, he is befriended by a water ...', \n            \"title\" : 'The First Snow of Winter'\n         }\n         { \n            \"plot\" : 'A renowned artist must uncover a young dancer\\'s secrets in order to truly capture her likeness for a commissioned work.', \n            \"title\" : 'A Year Ago in Winter'\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-rightedgegram-result.rst\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n      \n         {\n            \"plot\": \"A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.\",\n            \"title\": \"Austin Powers\\:\\ International Man of Mystery\"\n         }\n         {\n            \"plot\": \"On an isolated lake, an old monk lives on a small floating temple. The wise master has also a young boy with him who learns to become a monk. And we watch as seasons and years pass by.\",\n            \"title\": \"Spring, Summer, Fall, Winter... and Spring\"\n         }\n         {\n            \"plot\": \"Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...\",\n            \"title\": \"Summer Wishes, Winter Dreams\"\n         }\n         {\n            \"plot\": \"A mysterious creature is killing a farmer's livestock.\",\n            \"title\": \"In the Winter Dark\"\n         }\n         {\n            \"plot\": \"Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.\",\n            \"title\": \"Richness of Internal Space\"\n         }\n         {\n            \"plot\": \"A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.\",\n            \"title\": \"Brief Interviews with Hideous Men\"\n         }\n         {\n            \"plot\": \"As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history\\:\\ an assassin known as the Winter Soldier.\",\n            \"title\": \"Captain America\\:\\ The Winter Soldier\"\n         }\n         {\n            \"plot\": \"On a cold winter day a mysterious stranger shows up at the Witting Farm. He is John Witting, the father of Jacob Witting who abandoned Jacob and his mother when Jacob was little. Jacob is ...\",\n            \"title\": \"Sarah, Plain and Tall\\:\\ Winter's End\"\n         }\n         {\n            \"plot\": \"The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.\",\n            \"title\": \"The Internet's Own Boy\\:\\ The Story of Aaron Swartz\"\n         }\n         {\n            \"plot\": \"Out of work actor Joe volunteers to help try and save his sister's local church for the community by putting on a Christmas production of Hamlet, somewhat against the advice of his agent ...\",\n            \"title\": \"A Midwinter's Tale\"\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-ngram-result.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         Document{{plot=Almost forty years after the John F. Kennedy assassination, an ex-Marine named Walter Ohlinger has come forward with a startling claim., title=Interview with the Assassin}}\n         Document{{plot=A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men., title=Brief Interviews with Hideous Men}}\n         Document{{plot=A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place., title=Austin Powers: International Man of Mystery}}\n         Document{{plot=A confused young man (Marsden) takes a journey on a road that doesn't exist on any map., title=Interstate 60: Episodes of the Road}}\n         Document{{plot=A vampire tells his epic life story: love, betrayal, loneliness, and hunger., title=Interview with the Vampire: The Vampire Chronicles}}\n         Document{{plot=The film chronicles Australian-born opera star Marjorie Lawrence's success, her battle with polio, and her eventual career comeback., title=Interrupted Melody}}\n         Document{{plot=The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26., title=The Internet's Own Boy: The Story of Aaron Swartz}}\n         Document{{plot=Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man., title=Richness of Internal Space}}\n         Document{{plot=Vincent Eastman has to choose between his wife of 16 years, Sally, and his new love, Olivia. Frequent flashbacks explain the background to the marriage and the affair., title=Intersection}}\n         Document{{plot=After falling out with his editor, a fading political journalist is forced to interview America's most popular soap actress., title=Interview}}\n\n      .. include:: /includes/extracts/fts-autocomplete-edgegram-result.rst\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         Document{{plot=A couple engage in discussions with people on the street, politicians and religious leaders about the discrimination against gays and lesbians in Italy., title=Suddenly, Last Winter}}\n         Document{{plot=After her son is hospitalized, a doctor cheats on her husband with a snow plow driver who is a suspect in her investigation of the recent death of a young Arab boy., title=Kissed by Winter}}\n         Document{{plot=WINTER is a dangerous, sexy, poignant and at times darkly funny story about two people who desperately want intimacy but have fashioned lives of reclusivity and emotional fracture which ..., title=After Fall, Winter}}\n         Document{{plot=Felicie and Charles have a serious if whirlwind holiday romance. Due to a mix-up on addresses they lose contact, and five years later at Christmas-time Felicie is living with her mother in ..., title=A Tale of Winter}}\n         Document{{plot=A mysterious creature is killing a farmer's livestock., title=In the Winter Dark}}\n         Document{{plot=Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ..., title=Summer Wishes, Winter Dreams}}\n         Document{{plot=1183 AD: King Henry II's three sons all want to inherit the throne, but he won't commit to a choice. They and his wife variously plot to force him., title=The Lion in Winter}}\n         Document{{plot=As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history: an assassin known as the Winter Soldier., title=Captain America: The Winter Soldier}}\n         Document{{plot=Sean is a little duck with a big problem. Due to a mishap with a jet aircraft Sean misses the annual migration South and has to face the winter alone. However, he is befriended by a water ..., title=The First Snow of Winter}}\n         Document{{plot=A renowned artist must uncover a young dancer's secrets in order to truly capture her likeness for a commissioned work., title=A Year Ago in Winter}}\n\n      .. include:: /includes/extracts/fts-autocomplete-rightedgegram-result.rst\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n      \n         Document{{plot=On an isolated lake, an old monk lives on a small floating temple. The wise master has also a young boy with him who learns to become a monk. And we watch as seasons and years pass by., title=Spring, Summer, Fall, Winter... and Spring}}\n         Document{{plot=A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place., title=Austin Powers: International Man of Mystery}}\n         Document{{plot=Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ..., title=Summer Wishes, Winter Dreams}}\n         Document{{plot=A mysterious creature is killing a farmer's livestock., title=In the Winter Dark}}\n         Document{{plot=Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man., title=Richness of Internal Space}}\n         Document{{plot=A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men., title=Brief Interviews with Hideous Men}}\n         Document{{plot=As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history: an assassin known as the Winter Soldier., title=Captain America: The Winter Soldier}}\n         Document{{plot=On a cold winter day a mysterious stranger shows up at the Witting Farm. He is John Witting, the father of Jacob Witting who abandoned Jacob and his mother when Jacob was little. Jacob is ..., title=Sarah, Plain and Tall: Winter's End}}\n         Document{{plot=The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26., title=The Internet's Own Boy: The Story of Aaron Swartz}}\n         Document{{plot=Set during World War 2. After Nazi Germany invaded Poland in September 1939, Russia attacked Finland in November 1939. Finnish reservists leave their homes and go to war. The film focuses ..., title=The Winter War}}\n\n      .. include:: /includes/extracts/fts-autocomplete-ngram-result.rst\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         {\n            \"plot\": \"Filmmakers James Franco and Travis Mathews re-imagine the lost 40 minutes from \\\"Cruising\\\" as a starting point to a broader exploration of sexual and creative freedom.\",\n            \"title\": \"Interior. Leather Bar.\"\n         }\n         {\n            \"plot\": \"Almost forty years after the John F. Kennedy assassination, an ex-Marine named Walter Ohlinger has come forward with a startling claim.\",\n            \"title\": \"Interview with the Assassin\"\n         }\n         {\n            \"plot\": \"A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.\",\n            \"title\": \"Brief Interviews with Hideous Men\"\n         }\n         {\n            \"plot\": \"A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.\",\n            \"title\": \"Austin Powers\\:\\ International Man of Mystery\"\n         }\n         {\n            \"plot\": \"A confused young man (Marsden) takes a journey on a road that doesn't exist on any map.\",\n            \"title\": \"Interstate 60\\:\\ Episodes of the Road\"\n         }\n         {\n            \"plot\": \"A vampire tells his epic life story\\:\\ love, betrayal, loneliness, and hunger.\",\n            \"title\": \"Interview with the Vampire\\:\\ The Vampire Chronicles\"\n         }\n         {\n            \"plot\": \"The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.\",\n            \"title\": \"The Internet's Own Boy\\:\\ The Story of Aaron Swartz\"\n         }\n         { \n            \"plot\": \"The film chronicles Australian-born opera star Marjorie Lawrence's success, her battle with polio, and her eventual career comeback.\",\n            \"title\": \"Interrupted Melody\"\n         }\n         {\n            \"plot\": \"Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.\",\n            \"title\": \"Richness of Internal Space\"\n         }\n         {\n            \"plot\": \"Three sisters find their lives spinning out of control in the wake of their parents' sudden, unexpected divorce.\",\n            \"title\": \"Interiors\"\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-edgegram-result.rst\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-nodejs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         {\n            \"plot\": \"After her son is hospitalized, a doctor cheats on her husband with a snow plow driver who is a suspect in her investigation of the recent death of a young Arab boy.\",\n            \"title\": \"Kissed by Winter\"\n         }\n         {\n            \"plot\": \"The American oil company KIC Corporation is building an ice road to explore the remote Northern Arctic National Wildlife Refuge seeking energy independence. Independent environmentalists ...\",\n            \"title\": \"The Last Winter\"\n         }\n         {\n            \"plot\": \"A couple engage in discussions with people on the street, politicians and religious leaders about the discrimination against gays and lesbians in Italy.\",\n            \"title\": \"Suddenly, Last Winter\"\n         }\n         {\n            \"plot\": \"WINTER is a dangerous, sexy, poignant and at times darkly funny story about two people who desperately want intimacy but have fashioned lives of reclusivity and emotional fracture which ...\",\n            \"title\": \"After Fall, Winter\"\n         }\n         {\n            \"plot\": \"Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...\",\n            \"title\": \"Summer Wishes, Winter Dreams\"\n         }\n         {\n            \"plot\": \"1183 AD\\:\\ King Henry II's three sons all want to inherit the throne, but he won't commit to a choice. They and his wife variously plot to force him.\",\n            \"title\": \"The Lion in Winter\"\n         }\n         {\n            \"plot\": \"Felicie and Charles have a serious if whirlwind holiday romance. Due to a mix-up on addresses they lose contact, and five years later at Christmas-time Felicie is living with her mother in ...\",\n            \"title\": \"A Tale of Winter\"\n         }\n         {\n            \"plot\": \"A mysterious creature is killing a farmer's livestock.\",\n            \"title\": \"In the Winter Dark\"\n         }\n         {\n            \"plot\": \"Sean is a little duck with a big problem. Due to a mishap with a jet aircraft Sean misses the annual migration South and has to face the winter alone. However, he is befriended by a water ...\",\n            \"title\": \"The First Snow of Winter\"\n         }\n         {\n            \"plot\": \"A renowned artist must uncover a young dancer's secrets in order to truly capture her likeness for a commissioned work.\",\n            \"title\": \"A Year Ago in Winter\"\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-rightedgegram-result.rst\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-nodejs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n      \n         {\n            \"plot\": \"A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.\",\n            \"title\": \"Austin Powers\\:\\ International Man of Mystery\"\n         }\n         {\n            \"plot\": \"On an isolated lake, an old monk lives on a small floating temple. The wise master has also a young boy with him who learns to become a monk. And we watch as seasons and years pass by.\",\n            \"title\": \"Spring, Summer, Fall, Winter... and Spring\"\n         }\n         {\n            \"plot\": \"Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...\",\n            \"title\": \"Summer Wishes, Winter Dreams\"\n         }\n         {\n            \"plot\": \"A mysterious creature is killing a farmer's livestock.\",\n            \"title\": \"In the Winter Dark\"\n         }\n         {\n            \"plot\": \"Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.\",\n            \"title\": \"Richness of Internal Space\"\n         }\n         {\n            \"plot\": \"A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.\",\n            \"title\": \"Brief Interviews with Hideous Men\"\n         }\n         {\n            \"plot\": \"As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history\\:\\ an assassin known as the Winter Soldier.\",\n            \"title\": \"Captain America\\:\\ The Winter Soldier\"\n         }\n         {\n            \"plot\": \"On a cold winter day a mysterious stranger shows up at the Witting Farm. He is John Witting, the father of Jacob Witting who abandoned Jacob and his mother when Jacob was little. Jacob is ...\",\n            \"title\": \"Sarah, Plain and Tall\\:\\ Winter's End\"\n         }\n         {\n            \"plot\": \"The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.\",\n            \"title\": \"The Internet's Own Boy\\:\\ The Story of Aaron Swartz\"\n         }\n         {\n            \"plot\": \"Out of work actor Joe volunteers to help try and save his sister's local church for the community by putting on a Christmas production of Hamlet, somewhat against the advice of his agent ...\",\n            \"title\": \"A Midwinter's Tale\"\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-ngram-result.rst\n\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-nodejs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         {\n            \"plot\": \"Filmmakers James Franco and Travis Mathews re-imagine the lost 40 minutes from \\\"Cruising\\\" as a starting point to a broader exploration of sexual and creative freedom.\",\n            \"title\": \"Interior. Leather Bar.\"\n         }\n         {\n            \"plot\": \"Almost forty years after the John F. Kennedy assassination, an ex-Marine named Walter Ohlinger has come forward with a startling claim.\",\n            \"title\": \"Interview with the Assassin\"\n         }\n         {\n            \"plot\": \"A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.\",\n            \"title\": \"Brief Interviews with Hideous Men\"\n         }\n         {\n            \"plot\": \"A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.\",\n            \"title\": \"Austin Powers\\:\\ International Man of Mystery\"\n         }\n         {\n            \"plot\": \"A confused young man (Marsden) takes a journey on a road that doesn't exist on any map.\",\n            \"title\": \"Interstate 60\\:\\ Episodes of the Road\"\n         }\n         {\n            \"plot\": \"A vampire tells his epic life story\\:\\ love, betrayal, loneliness, and hunger.\",\n            \"title\": \"Interview with the Vampire\\:\\ The Vampire Chronicles\"\n         }\n         {\n            \"plot\": \"The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.\",\n            \"title\": \"The Internet's Own Boy\\:\\ The Story of Aaron Swartz\"\n         }\n         {\n            \"plot\": \"The film chronicles Australian-born opera star Marjorie Lawrence's success, her battle with polio, and her eventual career comeback.\",\n            \"title\": \"Interrupted Melody\"\n         }\n         {\n            \"plot\": \"Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.\",\n            \"title\": \"Richness of Internal Space\"\n         }\n         {\n            \"plot\": \"Three sisters find their lives spinning out of control in the wake of their parents' sudden, unexpected divorce.\",\n            \"title\": \"Interiors\"\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-edgegram-result.rst\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n\n         {\n            \"plot\": \"After her son is hospitalized, a doctor cheats on her husband with a snow plow driver who is a suspect in her investigation of the recent death of a young Arab boy.\",\n            \"title\": \"Kissed by Winter\"\n         }\n         {\n            \"plot\": \"The American oil company KIC Corporation is building an ice road to explore the remote Northern Arctic National Wildlife Refuge seeking energy independence. Independent environmentalists ...\",\n            \"title\": \"The Last Winter\"\n         }\n         {\n            \"plot\": \"A couple engage in discussions with people on the street, politicians and religious leaders about the discrimination against gays and lesbians in Italy.\",\n            \"title\": \"Suddenly, Last Winter\"\n         }\n         {\n            \"plot\": \"WINTER is a dangerous, sexy, poignant and at times darkly funny story about two people who desperately want intimacy but have fashioned lives of reclusivity and emotional fracture which ...\",\n            \"title\": \"After Fall, Winter\"\n         }\n         {\n            \"plot\": \"Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...\",\n            \"title\": \"Summer Wishes, Winter Dreams\"\n         }\n         {\n            \"plot\": \"1183 AD\\:\\ King Henry II's three sons all want to inherit the throne, but he won't commit to a choice. They and his wife variously plot to force him.\",\n            \"title\": \"The Lion in Winter\"\n         }\n         {\n            \"plot\": \"Felicie and Charles have a serious if whirlwind holiday romance. Due to a mix-up on addresses they lose contact, and five years later at Christmas-time Felicie is living with her mother in ...\",\n            \"title\": \"A Tale of Winter\"\n         }\n         {\n            \"plot\": \"A mysterious creature is killing a farmer's livestock.\",\n            \"title\": \"In the Winter Dark\"\n         }\n         {\n            \"plot\": \"Sean is a little duck with a big problem. Due to a mishap with a jet aircraft Sean misses the annual migration South and has to face the winter alone. However, he is befriended by a water ...\",\n            \"title\": \"The First Snow of Winter\"\n         }\n         {\n            \"plot\": \"A renowned artist must uncover a young dancer's secrets in order to truly capture her likeness for a commissioned work.\",\n            \"title\": \"A Year Ago in Winter\"\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-rightedgegram-result.rst\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n      \n         {\n            \"plot\": \"A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.\",\n            \"title\": \"Austin Powers\\:\\ International Man of Mystery\"\n         }\n         {\n            \"plot\": \"On an isolated lake, an old monk lives on a small floating temple. The wise master has also a young boy with him who learns to become a monk. And we watch as seasons and years pass by.\",\n            \"title\": \"Spring, Summer, Fall, Winter... and Spring\"\n         }\n         {\n            \"plot\": \"Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...\",\n            \"title\": \"Summer Wishes, Winter Dreams\"\n         }\n         {\n            \"plot\": \"A mysterious creature is killing a farmer's livestock.\",\n            \"title\": \"In the Winter Dark\"\n         }\n         {\n            \"plot\": \"Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.\",\n            \"title\": \"Richness of Internal Space\"\n         }\n         {\n            \"plot\": \"A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.\",\n            \"title\": \"Brief Interviews with Hideous Men\"\n         }\n         {\n            \"plot\": \"As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history\\:\\ an assassin known as the Winter Soldier.\",\n            \"title\": \"Captain America\\:\\ The Winter Soldier\"\n         }\n         {\n            \"plot\": \"On a cold winter day a mysterious stranger shows up at the Witting Farm. He is John Witting, the father of Jacob Witting who abandoned Jacob and his mother when Jacob was little. Jacob is ...\",\n            \"title\": \"Sarah, Plain and Tall\\:\\ Winter's End\"\n         }\n         {\n            \"plot\": \"The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.\",\n            \"title\": \"The Internet's Own Boy\\:\\ The Story of Aaron Swartz\"\n         }\n         {\n            \"plot\": \"Out of work actor Joe volunteers to help try and save his sister's local church for the community by putting on a Christmas production of Hamlet, somewhat against the advice of his agent ...\",\n            \"title\": \"A Midwinter's Tale\"\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-ngram-result.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \n           plot: 'Filmmakers James Franco and Travis Mathews re-imagine the lost 40 minutes from \\\"Cruising\\\" as a starting point to a broader exploration of sexual and creative freedom.',\n           title: 'Interior. Leather Bar.'\n         },\n         { \n           plot: 'Almost forty years after the John F. Kennedy assassination, an ex-Marine named Walter Ohlinger has come forward with a startling claim.',\n           title: 'Interview with the Assassin'\n         },\n         { \n           plot: 'A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.',\n           title: 'Brief Interviews with Hideous Men'\n         },\n         { \n           plot: 'A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.',\n           title: 'Austin Powers\\:\\ International Man of Mystery'\n         },\n         { \n           plot: 'A confused young man (Marsden) takes a journey on a road that doesn\\'t exist on any map.',\n           title: 'Interstate 60\\:\\ Episodes of the Road'\n         },\n         { \n           plot: 'A vampire tells his epic life story\\:\\ love, betrayal, loneliness, and hunger.',\n           title: 'Interview with the Vampire\\:\\ The Vampire Chronicles'\n         },\n         { \n           plot: 'The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.',\n           title: 'The Internet\\'s Own Boy\\:\\ The Story of Aaron Swartz'\n         },\n         { \n           plot: 'The film chronicles Australian-born opera star Marjorie Lawrence\\'s success, her battle with polio, and her eventual career comeback.',\n           title: 'Interrupted Melody'\n         }\n         { \n           plot: 'Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.',\n           title: 'Richness of Internal Space'\n         }\n         {\n           plot: 'Three sisters find their lives spinning out of control in the wake of their parents\\' sudden, unexpected divorce.',\n           title: 'Interiors'\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-edgegram-result.rst\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos: \n      \n         { \n           plot: 'After her son is hospitalized, a doctor cheats on her husband with a snow plow driver who is a suspect in her investigation of the recent death of a young Arab boy.',\n           title: 'Kissed by Winter'\n         },\n         { \n           plot: 'The American oil company KIC Corporation is building an ice road to explore the remote Northern Arctic National Wildlife Refuge seeking energy independence. Independent environmentalists ...',\n           title: 'The Last Winter'\n         },\n         { \n           plot: 'A couple engage in discussions with people on the street, politicians and religious leaders about the discrimination against gays and lesbians in Italy.',\n           title: 'Suddenly, Last Winter'\n         },\n         { \n           plot: 'WINTER is a dangerous, sexy, poignant and at times darkly funny story about two people who desperately want intimacy but have fashioned lives of reclusivity and emotional fracture which ...',\n           title: 'After Fall, Winter'\n         },\n         { \n           plot: 'Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...',\n           title: 'Summer Wishes, Winter Dreams'\n         },\n         { \n           plot: '1183 AD\\:\\ King Henry II\\'s three sons all want to inherit the throne, but he won\\'t commit to a choice. They and his wife variously plot to force him.',\n           title: 'The Lion in Winter'\n         },\n         { \n           plot: 'Felicie and Charles have a serious if whirlwind holiday romance. Due to a mix-up on addresses they lose contact, and five years later at Christmas-time Felicie is living with her mother in ...',\n           title: 'A Tale of Winter'\n         },\n         { \n           plot: 'A mysterious creature is killing a farmer\\'s livestock.',\n           title: 'In the Winter Dark'\n         },\n         { \n           plot: 'Sean is a little duck with a big problem. Due to a mishap with a jet aircraft Sean misses the annual migration South and has to face the winter alone. However, he is befriended by a water ...',\n           title: 'The First Snow of Winter'\n         },\n         { \n           plot: 'A renowned artist must uncover a young dancer\\'s secrets in order to truly capture her likeness for a commissioned work.',\n           title: 'A Year Ago in Winter'\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-rightedgegram-result.rst\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \n           plot: 'A 1960s hipster secret agent is brought out of cryofreeze to oppose his greatest enemy in the 1990s, where his social attitudes are glaringly out of place.',\n           title: 'Austin Powers\\:\\ International Man of Mystery'\n         },\n         { \n           plot: 'On an isolated lake, an old monk lives on a small floating temple. The wise master has also a young boy with him who learns to become a monk. And we watch as seasons and years pass by.',\n           title: 'Spring, Summer, Fall, Winter... and Spring'\n         },\n         { \n           plot: 'Rita, a middle aged New York City homemaker, finds herself in an emotional crisis which forces her to re-examine her life, as well as her relationships with her mother, her eye doctor ...',\n           title: 'Summer Wishes, Winter Dreams'\n         },\n         { \n           plot: 'A mysterious creature is killing a farmer\\'s livestock.',\n           title: 'In the Winter Dark'\n         },\n         { \n           plot: 'Locked up and isolated, constantly exposed and threatened to be killed, for the first time in his life Lazaro understood that he was a free man.',\n           title: 'Richness of Internal Space'\n         },\n         { \n           plot: 'A graduate student (Nicholson) copes with a recent breakup by conducting interviews with various men.',\n           title: 'Brief Interviews with Hideous Men'\n         },\n         { \n           plot: 'As Steve Rogers struggles to embrace his role in the modern world, he teams up with another super soldier, the black widow, to battle a new threat from old history\\:\\ an assassin known as the Winter Soldier.',\n           title: 'Captain America\\:\\ The Winter Soldier'\n         },\n         { \n           plot: 'On a cold winter day a mysterious stranger shows up at the Witting Farm. He is John Witting, the father of Jacob Witting who abandoned Jacob and his mother when Jacob was little. Jacob is ...',\n           title: 'Sarah, Plain and Tall\\:\\ Winter\\'s End'\n         },\n         { \n           plot: 'The story of programming prodigy and information activist Aaron Swartz, who took his own life at the age of 26.',\n           title: 'The Internet\\'s Own Boy\\:\\ The Story of Aaron Swartz'\n         },\n         { \n           plot: 'Out of work actor Joe volunteers to help try and save his sister\\'s local church for the community by putting on a Christmas production of Hamlet, somewhat against the advice of his agent ...',\n           title: 'A Midwinter\\'s Tale'\n         }\n\n      .. include:: /includes/extracts/fts-autocomplete-ngram-result.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/compound-eg-output-shell-and-compass.rst"
  },
  {
    "code": "   :copyable: false\n           \n   count: Object\n     lowerBound: 5\n   facet: Object\n     titleFacet: Object\n       buckets: Array (3)\n       0: Object\n         _id: \"Gravity\"\n         count: 3\n       1: Object\n         _id: \"Defying Gravity\"\n         count: 1\n       2: Object\n         _id: \"Laws of Gravity\"\n         count: 1\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-atlas-ui.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n\n   { \n     \"count\" : {\n       \"lowerBound\" : NumberLong(5),\n       \"total\" : null\n     }, \n     \"facet\" : {\n       \"titleFacet\" : {\n         \"buckets\" : [\n           {\n             \"_id\" : \"Gravity\", \n             \"count\" : NumberLong(3) \n           }, \n           {\n             \"_id\" : \"Defying Gravity\", \n             \"count\" : NumberLong(1)\n           },\n           {\n             \"_id\" : \"Laws of Gravity\", \n             \"count\" : NumberLong(1) \n           }]\n       }\n     }\n   }\n      \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-cs.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos: \n      \n   [\n     { \n       count [{\n         lowerBound 5}\n       ]\n     } \n     {\n       facet [{\n         titleFacet [{\n           buckets [\n              [{_id Gravity} {count 3}] \n              [{_id Defying Gravity} {count 1}] \n              [{_id Laws of Gravity} {count 1}]\n           ]\n        }]}]\n     }\n   ]\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-go.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n      \n   {\n     \"count\": {\n       \"lowerBound\": 5\n      }, \n      \"facet\": {\n        \"titleFacet\": {\n          \"buckets\": [\n          {\n            \"_id\": \"Gravity\", \n            \"count\": 3\n          }, \n          {\n            \"_id\": \"Defying Gravity\", \n            \"count\": 1\n          }, \n          {\n            \"_id\": \"Laws of Gravity\", \n            \"count\": 1\n          }]\n      }\n     }\n   }\n      \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-java.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n      \n   Document{{count=Document{{lowerBound=5}},\n   facet=Document{{titleFacet=Document{{buckets=[Document{{_id=Gravity,\n   count=3}}, Document{{_id=Defying Gravity, count=1}}, Document{{_id=Laws\n   of Gravity, count=1}}]}}}}}}      \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-kotlin.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos: \n      \n   '{\n     \"count\":{\n       \"lowerBound\":5\n      },\n      \"facet\":{\n        \"titleFacet\":{\n          \"buckets\":[\n            {\n              \"_id\":\"Gravity\",\n              \"count\":3\n            },\n            {\n              \"_id\":\"Defying Gravity\",\n              \"count\":1\n            },\n            {\n              \"_id\":\"Laws of Gravity\",\n              \"count\":1\n            }\n          ]\n        }\n      }\n    }'\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-nodejs.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n      \n   {\n     'count': {'lowerBound': 5}, \n     'facet': {\n       'titleFacet': {\n         'buckets': [\n         {\n           '_id': 'Gravity',\n           'count': 3\n         }, \n         {\n           '_id': 'Defying Gravity',\n           'count': 1\n         }, \n         {\n           '_id': 'Laws of Gravity',\n           'count': 1\n         }]\n      }\n     }\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-py.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos: \n\n   [{\n      count: { lowerBound: Long(\"5\") },\n      facet: {\n         titleFacet: {\n         buckets: [\n            { _id: 'Gravity', count: Long(\"3\") },\n            { _id: 'Defying Gravity', count: Long(\"1\") },\n            { _id: 'Laws of Gravity', count: Long(\"1\") }\n         ]\n         }\n      }\n   }]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/facet-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"The Perils of Pauline\" }\n         { \"title\" : \"The Blood of a Poet\" }\n         { \"title\" : \"The Private Life of Henry VIII.\" }\n         { \"title\" : \"The Private Life of Don Juan\" }\n         { \"title\" : \"The Prisoner of Shark Island\" }\n         { \"title\" : \"The Prince and the Pauper\" }\n         { \"title\" : \"The Prisoner of Zenda\" }\n         { \"title\" : \"Dance Program\" }\n         { \"title\" : \"The Pied Piper\" }\n         { \"title\" : \"Prelude to War\" }\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the left side of the word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Where Are My Children?\" }\n         { \"title\" : \"The Four Horsemen of the Apocalypse\" }\n         { \"title\" : \"The Hunchback of Notre Dame\" }\n         { \"title\" : \"Show People\" }\n         { \"title\" : \"Berkeley Square\" }\n         { \"title\" : \"Folies Bergère de Paris\" }\n         { \"title\" : \"Here Comes Mr. Jordan\" }\n         { \"title\" : \"Cat People\" }\n         { \"title\" : \"People on the Alps\" }\n         { \"title\" : \"The Gang's All Here\" }\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the right side of the word in all the\n      titles. \n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"The Perils of Pauline\" }\n         { \"title\" : \"Les vampires\" }\n         { \"title\" : \"The Saphead\" }\n         { \"title\" : \"The Four Horsemen of the Apocalypse\" }\n         { \"title\" : \"He Who Gets Slapped\" }\n         { \"title\" : \"The Phantom of the Opera\" }\n         { \"title\" : \"Show People\" }\n         { \"title\" : \"The Blood of a Poet\" }\n         { \"title\" : \"The 3 Penny Opera\" }\n         { \"title\" : \"Shanghai Express\" }\n\n      These results show the words that are predicted for the query\n      string with one character modification at different positions in\n      the words in the titles. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title The Perils of Pauline}]\n         [{title The Blood of a Poet}]\n         [{title The Private Life of Henry VIII.}]\n         [{title The Private Life of Don Juan}]\n         [{title The Prisoner of Shark Island}]\n         [{title The Prince and the Pauper}]\n         [{title The Prisoner of Zenda}]\n         [{title Dance Program}]\n         [{title The Pied Piper}]\n         [{title Prelude to War}]\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the left side of the word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Where Are My Children?}]\n         [{title The Four Horsemen of the Apocalypse}]\n         [{title The Hunchback of Notre Dame}]\n         [{title Show People}]\n         [{title Berkeley Square}]\n         [{title Folies Bergère de Paris}]\n         [{title Here Comes Mr. Jordan}]\n         [{title Cat People}]\n         [{title People on the Alps}]\n         [{title The Gang's All Here}]\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the right side of the word in all the\n      titles. \n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title The Perils of Pauline}]\n         [{title Les vampires}]\n         [{title The Saphead}]\n         [{title The Four Horsemen of the Apocalypse}]\n         [{title He Who Gets Slapped}]\n         [{title The Phantom of the Opera}]\n         [{title Show People}]\n         [{title The Blood of a Poet}]\n         [{title The 3 Penny Opera}]\n         [{title Shanghai Express}]\n\n      These results show the words that are predicted for the query\n      string with one character modification at different positions in\n      the words in the titles. \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"The Perils of Pauline\"}\n         {\"title\": \"The Blood of a Poet\"}\n         {\"title\": \"The Private Life of Henry VIII.\"}\n         {\"title\": \"The Private Life of Don Juan\"}\n         {\"title\": \"The Prisoner of Shark Island\"}\n         {\"title\": \"The Prince and the Pauper\"}\n         {\"title\": \"The Prisoner of Zenda\"}\n         {\"title\": \"Dance Program\"}\n         {\"title\": \"The Pied Piper\"}\n         {'title': 'Prelude to War'}\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the left side of the word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Where Are My Children?\"}\n         {\"title\": \"The Four Horsemen of the Apocalypse\"}\n         {\"title\": \"The Hunchback of Notre Dame\"}\n         {\"title\": \"Show People\"}\n         {\"title\": \"Berkeley Square\"}\n         {\"title\": \"Folies Bergère de Paris\"}\n         {\"title\": \"Here Comes Mr. Jordan\"}\n         {\"title\": \"Cat People\"}\n         {\"title\": \"People on the Alps\"}\n         {\"title\": \"The Gang's All Here\"}\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the right side of the word in all the\n      titles. \n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"The Perils of Pauline\"}\n         {\"title\": \"Les vampires\"}\n         {\"title\": \"The Saphead\"}\n         {\"title\": \"The Four Horsemen of the Apocalypse\"}\n         {\"title\": \"He Who Gets Slapped\"}\n         {\"title\": \"The Phantom of the Opera\"}\n         {\"title\": \"Show People\"}\n         {\"title\": \"The Blood of a Poet\"}\n         {\"title\": \"The 3 Penny Opera\"}\n         {\"title\": \"Shanghai Express\"}\n\n      These results show the words that are predicted for the query\n      string with one character modification at different positions in\n      the words in the titles. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'The Perils of Pauline' }\n         { title: 'The Blood of a Poet' }\n         { title: 'The Private Life of Henry VIII.' }\n         { title: 'The Private Life of Don Juan' }\n         { title: 'The Prisoner of Shark Island' }\n         { title: 'The Prince and the Pauper' }\n         { title: 'The Prisoner of Zenda' }\n         { title: 'Dance Program' }\n         { title: 'The Pied Piper' }\n         { title: 'Prelude to War' }\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the left side of the word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Where Are My Children?' }\n         { title: 'The Four Horsemen of the Apocalypse' }\n         { title: 'The Hunchback of Notre Dame' }\n         { title: 'Show People' }\n         { title: 'Berkeley Square' }\n         { title: 'Folies Bergère de Paris' }\n         { title: 'Here Comes Mr. Jordan' }\n         { title: 'Cat People' }\n         { title: 'People on the Alps' }\n         { title: \"The Gang's All Here\" }\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the right side of the word in all the\n      titles. \n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'The Perils of Pauline' }\n         { title: 'Les vampires' }\n         { title: 'The Saphead' }\n         { title: 'The Four Horsemen of the Apocalypse' }\n         { title: 'He Who Gets Slapped' }\n         { title: 'The Phantom of the Opera' }\n         { title: 'Show People' }\n         { title: 'The Blood of a Poet' }\n         { title: 'The 3 Penny Opera' }\n         { title: 'Shanghai Express' }\n\n      These results show the words that are predicted for the query\n      string with one character modification at different positions in\n      the words in the titles. \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=The Perils of Pauline}}\n         Document{{title=The Private Life of Henry VIII.}}\n         Document{{title=Prelude to War}}\n         Document{{title=Sitting Pretty}}\n         Document{{title=The Prisoner}}\n         Document{{title=Chi lavora è perduto (In capo al mondo)}}\n         Document{{title=Profound Desires of the Gods}}\n         Document{{title=The Protagonists}}\n         Document{{title=Property Is No Longer a Theft}}\n         Document{{title=Premiya}}\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the left side of the word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=The Four Horsemen of the Apocalypse}}\n         Document{{title=Folies Bergère de Paris}}\n         Document{{title=Mother Wore Tights}}\n         Document{{title=El hombre sin rostro}}\n         Document{{title=Il segno di Venere}}\n         Document{{title=Creature from the Black Lagoon}}\n         Document{{title=Susan Slept Here}}\n         Document{{title=Tell Them Willie Boy Is Here}}\n         Document{{title=Pilatus und andere - Ein Film fèr Karfreitag}}\n         Document{{title=Watch Out, We're Mad}}\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the right side of the word in all the\n      titles. \n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=The Four Horsemen of the Apocalypse}}\n         Document{{title=The Private Life of Henry VIII.}}\n         Document{{title=David Copperfield}}\n         Document{{title=The Prisoner of Zenda}}\n         Document{{title=People on the Alps}}\n         Document{{title=Prelude to War}}\n         Document{{title=The Pride of the Yankees}}\n         Document{{title=Phantom of the Opera}}\n         Document{{title=The Curse of the Cat People}}\n         Document{{title=The People Against O'Hara}}\n\n      These results show the words that are predicted for the query\n      string with one character modification at different positions in\n      the words in the titles. \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'The Perils of Pauline'}\n         {'title': 'The Blood of a Poet'}\n         {'title': 'The Private Life of Henry VIII.'}\n         {'title': 'The Private Life of Don Juan'}\n         {'title': 'The Prisoner of Shark Island'}\n         {'title': 'The Prince and the Pauper'}\n         {'title': 'The Prisoner of Zenda'}\n         {'title': 'Dance Program'}\n         {'title': 'The Pied Piper'}\n         {'title': 'Prelude to War'}\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the left side of the word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Where Are My Children?'}\n         {'title': 'The Four Horsemen of the Apocalypse'}\n         {'title': 'The Hunchback of Notre Dame'}\n         {'title': 'Show People'}\n         {'title': 'Berkeley Square'}\n         {'title': 'Folies Bergère de Paris'}\n         {'title': 'Here Comes Mr. Jordan'}\n         {'title': 'Cat People'}\n         {'title': 'People on the Alps'}\n         {'title': \"The Gang's All Here\"}\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the right side of the word in all the\n      titles. \n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'The Perils of Pauline'}\n         {'title': 'Les vampires'}\n         {'title': 'The Saphead'}\n         {'title': 'The Four Horsemen of the Apocalypse'}\n         {'title': 'He Who Gets Slapped'}\n         {'title': 'The Phantom of the Opera'}\n         {'title': 'Show People'}\n         {'title': 'The Blood of a Poet'}\n         {'title': 'The 3 Penny Opera'}\n         {'title': 'Shanghai Express'}\n\n      These results show the words that are predicted for the query\n      string with one character modification at different positions in\n      the words in the titles. \n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'The Perils of Pauline' },\n         { title: 'The Blood of a Poet' },\n         { title: 'The Private Life of Henry VIII.' },\n         { title: 'The Private Life of Don Juan' },\n         { title: 'The Prisoner of Shark Island' },\n         { title: 'The Prince and the Pauper' },\n         { title: 'The Prisoner of Zenda' },\n         { title: 'Dance Program' },\n         { title: 'The Pied Piper' },\n         { title: 'Prelude to War' }\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the left side of the word in all the titles.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Where Are My Children?' }\n         { title: 'The Four Horsemen of the Apocalypse' }\n         { title: 'The Hunchback of Notre Dame' }\n         { title: 'Show People' }\n         { title: 'Berkeley Square' }\n         { title: 'Folies Bergère de Paris' }\n         { title: 'Here Comes Mr. Jordan' }\n         { title: 'Cat People' }\n         { title: 'People on the Alps' }\n         { title: \"The Gang's All Here\" }\n\n      These results show the words that are predicted for the query\n      string with one character modification and with the first\n      character constant at the right side of the word in all the\n      titles. \n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'The Perils of Pauline' }\n         { title: 'Les vampires' }\n         { title: 'The Saphead' }\n         { title: 'The Four Horsemen of the Apocalypse' }\n         { title: 'He Who Gets Slapped' }\n         { title: 'The Phantom of the Opera' }\n         { title: 'Show People' }\n         { title: 'The Blood of a Poet' }\n         { title: 'The 3 Penny Opera' }\n         { title: 'Shanghai Express' }\n\n      These results show the words that are predicted for the query\n      string with one character modification at different positions in\n      the words in the titles. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/fuzzy-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Gertie the Dinosaur\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.92276901006698608, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Gertie the Dinosaur\" }] }], \"score\" : 6.0822906494140625 }\n         { \"title\" : \"Germany Year Zero\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.91800123453140259, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Germany Year Zero\" }] }], \"score\" : 6.0822906494140625 }\n         { \"title\" : \"Germany in Autumn\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.91800123453140259, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Germany in Autumn\" }] }], \"score\" : 6.0822906494140625 }\n         { \"title\" : \"Germany Pale Mother\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.92276901006698608, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Germany Pale Mother\" }] }], \"score\" : 6.0822906494140625 }\n         { \"title\" : \"Gerhard Richter - Painting\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.93867748975753784, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Gerhard Richter - Painting\" }] }], \"score\" : 6.0822906494140625 }\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the left side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"South Park: Bigger Longer & Uncut\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.61778789758682251, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"South Park: Bigger Longer\" }, { \"type\" : \"Text\", \"value\" : \" & Uncut\" }] }], \"score\" : 4.7550506591796875 }\n         { \"title\" : \"Roger Dodger\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.90562665462493896, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Roger Dodger\" }] }], \"score\" : 4.5688495635986328 }\n         { \"title\" : \"The Jazz Singer\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.91313058137893677, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"The Jazz Singer\" }] }], \"score\" : 4.5206832885742188 }\n         { \"title\" : \"Love and Anger\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.91065597534179688, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Love and Anger\" }] }], \"score\" : 4.5206832885742188 }\n         { \"title\" : \"Save the Tiger\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.91065597534179688, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Save the Tiger\" }] }], \"score\" : 4.5206832885742188 }\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the right side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"South Park: Bigger Longer & Uncut\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.38510727882385254, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"South Park: Bigger Longer & Uncut\" }] }], \"score\" : 4.3711643218994141 }\n         { \"title\" : \"Bigger Stronger Faster*\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.52828019857406616, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Bigger Stronger Faster\" }, { \"type\" : \"Text\", \"value\" : \"*\" }] }], \"score\" : 4.3067307472229004 }\n         { \"title\" : \"The Toxic Avenger Part II\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.59840208292007446, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"The Toxic Avenger Part II\" }] }], \"score\" : 4.2667369842529297 }\n         { \"title\" : \"When a Stranger Calls Back\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.60086840391159058, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"When a Stranger Calls Back\" }] }], \"score\" : 4.2667369842529297 }\n         { \"title\" : \"Carol Channing: Larger Than Life\", \"highlights\" : [{ \"path\" : \"title\", \"score\" : 0.61540728807449341, \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Carol Channing: Larger Than Life\" }] }], \"score\" : 4.2667369842529297 }\n       \n      Atlas Search returns these results because the characters\n      ``ger`` appear at different positions in the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [\n            {title Gertie the Dinosaur} \n            {score 6.085907459259033} \n            {highlight [[\n               {score 0.9227690100669861} \n               {path title} \n               {texts [[{value Gertie the Dinosaur} {type hit}]]}]]}]\n         [\n            {title Germany Year Zero} \n            {score 6.085907459259033} \n            {highlight [[\n               {score 0.9180012345314026} \n               {path title} \n               {texts [[{value Germany Year Zero} {type hit}]]}]]}]\n         [\n            {title Germany in Autumn} \n            {score 6.085907459259033} \n            {highlight [[\n               {score 0.9180012345314026} \n               {path title} \n               {texts [[{value Germany in Autumn} {type hit}]]}]]}]\n         [\n            {title Germany Pale Mother} \n            {score 6.085907459259033} \n            {highlight [[\n               {score 0.9227690100669861} \n               {path title} \n               {texts [[{value Germany Pale Mother} {type hit}]]}]]}]\n         [\n            {title Gerhard Richter - Painting} \n            {score 6.085907459259033} \n            {highlight [[\n               {score 0.9386774897575378} \n               {path title} \n               {texts [[{value Gerhard Richter - Painting} {type hit}]]}]]}]\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the left side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [\n            {title South Park: Bigger Longer & Uncut} \n            {score 4.807340621948242} \n            {highlight [[\n               {score 0.6177878975868225} \n               {path title} \n               {texts [[{value South Park: Bigger Longer} {type hit}] [{value  & Uncut} {type text}]]}]]}]\n         [\n            {title Roger Dodger} \n            {score 4.6073713302612305} \n            {highlight [[\n               {score 0.905626654624939} \n               {path title} \n               {texts [[{value Roger Dodger} {type hit}]]}]]}]\n         [\n            {title The Jazz Singer} \n            {score 4.577486038208008} \n            {highlight [[\n               {score 0.9131305813789368} \n               {path title} \n               {texts [[{value The Jazz Singer} {type hit}]]}]]}]\n         [\n            {title Love and Anger} \n            {score 4.577486038208008} \n            {highlight [[\n               {score 0.9106559753417969} \n               {path title} \n               {texts [[{value Love and Anger} {type hit}]]}]]}]\n         [\n            {title Save the Tiger} \n            {score 4.577486038208008} \n            {highlight [[\n               {score 0.9106559753417969} \n               {path title} \n               {texts [[{value Save the Tiger} {type hit}]]}]]}]\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the right side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [\n            {title South Park: Bigger Longer & Uncut} \n            {score 4.365298748016357} \n            {highlight [[\n               {score 0.38510727882385254} \n               {path title} \n               {texts [[{value South Park: Bigger Longer & Uncut} {type hit}]]}]]}]\n         [\n            {title Bigger Stronger Faster*} {\n            score 4.300583839416504} \n            {highlight [[\n               {score 0.5282801985740662} \n               {path title} \n               {texts [[{value Bigger Stronger Faster} {type hit}] [{value *} {type text}]]}]]}]\n         [\n            {title The Toxic Avenger Part II} \n            {score 4.2650651931762695} \n            {highlight [[\n               {score 0.5984020829200745} \n               {path title} \n               {texts [[{value The Toxic Avenger Part II} {type hit}]]}]]}]\n         [\n            {title When a Stranger Calls Back} \n            {score 4.2650651931762695} \n            {highlight [[\n               {score 0.6008684039115906} \n               {path title} \n               {texts [[{value When a Stranger Calls Back} {type hit}]]}]]}]\n         [\n            {title Carol Channing: Larger Than Life} \n            {score 4.2650651931762695} \n            {highlight [[\n               {score 0.6154072880744934} \n               {path title} \n               {texts [[{value Carol Channing: Larger Than Life} {type hit}]]}]]}]\n \n      Atlas Search returns these results because the characters\n      ``ger`` appear at different positions in the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           \"title\": \"Gertie the Dinosaur\", \n           \"score\": 6.085907459259033, \n           \"highlights\": [{\n             \"score\": 0.9227690100669861, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Gertie the Dinosaur\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Germany Year Zero\", \n           \"score\": 6.085907459259033, \n           \"highlights\": [{\n             \"score\": 0.9180012345314026, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Germany Year Zero\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Germany in Autumn\", \n           \"score\": 6.085907459259033, \n           \"highlights\": [{\n             \"score\": 0.9180012345314026, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Germany in Autumn\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Germany Pale Mother\", \n           \"score\": 6.085907459259033, \n           \"highlights\": [{\n             \"score\": 0.9227690100669861, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Germany Pale Mother\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Gerhard Richter - Painting\", \n           \"score\": 6.085907459259033, \n           \"highlights\": [{\n             \"score\": 0.9386774897575378, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Gerhard Richter - Painting\", \"type\": \"hit\"}]}]}\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the left side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           \"title\": \"South Park: Bigger Longer & Uncut\", \n           \"score\": 4.807340621948242, \n           \"highlights\": [{\n             \"score\": 0.6177878975868225, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"South Park: Bigger Longer\", \"type\": \"hit\"}, {\"value\": \" & Uncut\", \"type\": \"text\"}]}]}\n         {\n           \"title\": \"Roger Dodger\", \n           \"score\": 4.6073713302612305, \n           \"highlights\": [{\n             \"score\": 0.905626654624939, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Roger Dodger\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"The Jazz Singer\", \n           \"score\": 4.577486038208008, \n           \"highlights\": [{\n             \"score\": 0.9131305813789368, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"The Jazz Singer\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Love and Anger\", \n           \"score\": 4.577486038208008, \n           \"highlights\": [{\n             \"score\": 0.9106559753417969, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Love and Anger\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Save the Tiger\", \n           \"score\": 4.577486038208008, \n           \"highlights\": [{\n             \"score\": 0.9106559753417969, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Save the Tiger\", \"type\": \"hit\"}]}]}\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the right side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           \"title\": \"South Park: Bigger Longer & Uncut\", \n           \"score\": 4.365298748016357, \n           \"highlights\": [{\n             \"score\": 0.38510727882385254, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"South Park: Bigger Longer & Uncut\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Bigger Stronger Faster*\", \n           \"score\": 4.300583839416504, \n           \"highlights\": [{\n             \"score\": 0.5282801985740662, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Bigger Stronger Faster\", \"type\": \"hit\"}, {\"value\": \"*\", \"type\": \"text\"}]}]}\n         {\n           \"title\": \"The Toxic Avenger Part II\", \n           \"score\": 4.2650651931762695, \n           \"highlights\": [{\n             \"score\": 0.5984020829200745, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"The Toxic Avenger Part II\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"When a Stranger Calls Back\", \n           \"score\": 4.2650651931762695, \n           \"highlights\": [{\n             \"score\": 0.6008684039115906, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"When a Stranger Calls Back\", \"type\": \"hit\"}]}]}\n         {\n           \"title\": \"Carol Channing: Larger Than Life\", \n           \"score\": 4.2650651931762695, \n           \"highlights\": [{\n             \"score\": 0.6154072880744934, \n             \"path\": \"title\", \n             \"texts\": [{\"value\": \"Carol Channing: Larger Than Life\", \"type\": \"hit\"}]}]}\n\n      Atlas Search returns these results because the characters\n      ``ger`` appear at different positions in the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         '{\n            \"title\":\"Gertie the Dinosaur\",\n            \"score\":6.0822906494140625,\n            \"highlights\":[{\n              \"score\":0.9227690100669861,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Gertie the Dinosaur\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Germany Year Zero\",\n            \"score\":6.0822906494140625,\n            \"highlights\":[{\n              \"score\":0.9180012345314026,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Germany Year Zero\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Germany in Autumn\",\n            \"score\":6.0822906494140625,\n            \"highlights\":[{\n              \"score\":0.9180012345314026,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Germany in Autumn\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Germany Pale Mother\",\n            \"score\":6.0822906494140625,\n            \"highlights\":[{\n              \"score\":0.9227690100669861,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Germany Pale Mother\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Gerhard Richter - Painting\",\n            \"score\":6.0822906494140625,\n            \"highlights\":[{\n              \"score\":0.9386774897575378,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Gerhard Richter - Painting\",\"type\":\"hit\"}]}]}'\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the left side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         '{\n            \"title\":\"South Park: Bigger Longer & Uncut\",\n            \"score\":4.7550506591796875,\n            \"highlights\":[{\n              \"score\":0.6177878975868225,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"South Park: Bigger Longer\",\"type\":\"hit\"},{\"value\":\" & Uncut\",\"type\":\"text\"}]}]}'\n         '{\n            \"title\":\"Roger Dodger\",\n            \"score\":4.568849563598633,\n            \"highlights\":[{\n              \"score\":0.905626654624939,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Roger Dodger\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"The Jazz Singer\",\n            \"score\":4.520683288574219,\n            \"highlights\":[{\n              \"score\":0.9131305813789368,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"The Jazz Singer\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Love and Anger\",\n            \"score\":4.520683288574219,\n            \"highlights\":[{\n              \"score\":0.9106559753417969,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Love and Anger\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Save the Tiger\",\n            \"score\":4.520683288574219,\n            \"highlights\":[{\n              \"score\":0.9106559753417969,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Save the Tiger\",\"type\":\"hit\"}]}]}'\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the right side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         '{\n            \"title\":\"South Park: Bigger Longer & Uncut\",\n            \"score\":4.371164321899414,\n            \"highlights\":[{\n              \"score\":0.38510727882385254,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"South Park: Bigger Longer & Uncut\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Bigger Stronger Faster*\",\n            \"score\":4.3067307472229,\n            \"highlights\":[{\n              \"score\":0.5282801985740662,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Bigger Stronger Faster\",\"type\":\"hit\"},{\"value\":\"*\",\"type\":\"text\"}]}]}'\n         '{\n            \"title\":\"The Toxic Avenger Part II\",\n            \"score\":4.26673698425293,\n            \"highlights\":[{\n              \"score\":0.5984020829200745,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"The Toxic Avenger Part II\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"When a Stranger Calls Back\",\n            \"score\":4.26673698425293,\n            \"highlights\":[{\n              \"score\":0.6008684039115906,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"When a Stranger Calls Back\",\"type\":\"hit\"}]}]}'\n         '{\n            \"title\":\"Carol Channing: Larger Than Life\",\n            \"score\":4.26673698425293,\n            \"highlights\":[{\n              \"score\":0.6154072880744934,\n              \"path\":\"title\",\n              \"texts\":[{\"value\":\"Carol Channing: Larger Than Life\",\"type\":\"hit\"}]}]}'\n\n      Atlas Search returns these results because the characters\n      ``ger`` appear at different positions in the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Germany in Autumn, score=6.160550117492676, highlights=[Document{{score=0.9180012345314026, path=title, texts=[Document{{value=Germany in Autumn, type=hit}}]}}]}}\n         Document{{title=Gertie the Dinosaur, score=6.160550117492676, highlights=[Document{{score=0.9227690100669861, path=title, texts=[Document{{value=Gertie the Dinosaur, type=hit}}]}}]}}\n         Document{{title=Germany Pale Mother, score=6.160550117492676, highlights=[Document{{score=0.9227690100669861, path=title, texts=[Document{{value=Germany Pale Mother, type=hit}}]}}]}}\n         Document{{title=Geronimo: An American Legend, score=6.096138954162598, highlights=[Document{{score=0.9430088996887207, path=title, texts=[Document{{value=Geronimo: An American, type=hit}}, Document{{value= Legend, type=text}}]}}]}}\n         Document{{title=Geri's Game, score=5.900832176208496, highlights=[Document{{score=1.1180211305618286, path=title, texts=[Document{{value=Geri's Game, type=hit}}]}}]}}\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the left side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=South Park: Bigger Longer & Uncut, score=4.770905017852783, highlights=[Document{{score=0.6177878975868225, path=title, texts=[Document{{value=South Park: Bigger Longer, type=hit}}, Document{{value= & Uncut, type=text}}]}}]}}\n         Document{{title=Roger Dodger, score=4.584150791168213, highlights=[Document{{score=0.905626654624939, path=title, texts=[Document{{value=Roger Dodger, type=hit}}]}}]}}\n         Document{{title=The Crazy Stranger, score=4.535715103149414, highlights=[Document{{score=0.9203977584838867, path=title, texts=[Document{{value=The Crazy Stranger, type=hit}}]}}]}}\n         Document{{title=The Ring Finger, score=4.535715103149414, highlights=[Document{{score=0.9131305813789368, path=title, texts=[Document{{value=The Ring Finger, type=hit}}]}}]}}\n         Document{{title=Shoot the Messenger, score=4.535715103149414, highlights=[Document{{score=0.9227690100669861, path=title, texts=[Document{{value=Shoot the Messenger, type=hit}}]}}]}}\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the right side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=South Park: Bigger Longer & Uncut, score=4.395573139190674, highlights=[Document{{score=0.38510727882385254, path=title, texts=[Document{{value=South Park: Bigger Longer & Uncut, type=hit}}]}}]}}\n         Document{{title=Bigger Stronger Faster*, score=4.33078145980835, highlights=[Document{{score=0.5282801985740662, path=title, texts=[Document{{value=Bigger Stronger Faster, type=hit}}, Document{{value=*, type=text}}]}}]}}\n         Document{{title=The Toxic Avenger Part II, score=4.2905426025390625, highlights=[Document{{score=0.5984020829200745, path=title, texts=[Document{{value=The Toxic Avenger Part II, type=hit}}]}}]}}\n         Document{{title=Carol Channing: Larger Than Life, score=4.2905426025390625, highlights=[Document{{score=0.6154072880744934, path=title, texts=[Document{{value=Carol Channing: Larger Than Life, type=hit}}]}}]}}\n         Document{{title=When a Stranger Calls Back, score=4.2905426025390625, highlights=[Document{{score=0.6008684039115906, path=title, texts=[Document{{value=When a Stranger Calls Back, type=hit}}]}}]}}\n\n      Atlas Search returns these results because the characters\n      ``ger`` appear at different positions in the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9227690100669861, \n             'texts': [{'type': 'hit', 'value': 'Gertie the Dinosaur'}]}], \n           'score': 6.085907459259033, \n           'title': 'Gertie the Dinosaur'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9180012345314026, \n             'texts': [{'type': 'hit', 'value': 'Germany Year Zero'}]}],\n           'score': 6.085907459259033, \n           'title': 'Germany Year Zero'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9180012345314026, \n             'texts': [{'type': 'hit', 'value': 'Germany in Autumn'}]}],\n           'score': 6.085907459259033, \n           'title': 'Germany in Autumn'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9227690100669861,\n             'texts': [{'type': 'hit', 'value': 'Germany Pale Mother'}]}],\n           'score': 6.085907459259033, \n           'title': 'Germany Pale Mother'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9386774897575378,\n             'texts': [{'type': 'hit', 'value': 'Gerhard Richter - Painting'}]}], \n           'score': 6.085907459259033, \n           'title': 'Gerhard Richter - Painting'}\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the left side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.6177878975868225, \n             'texts': [{'type': 'hit', 'value': 'South Park: Bigger Longer'}, {'type': 'text', 'value': ' & Uncut'}]}], \n           'score': 4.807340621948242, \n           'title': 'South Park: Bigger Longer & Uncut'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.905626654624939,\n             'texts': [{'type': 'hit', 'value': 'Roger Dodger'}]}],\n           'score': 4.6073713302612305, \n           'title': 'Roger Dodger'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9131305813789368,\n             'texts': [{'type': 'hit', 'value': 'The Jazz Singer'}]}],\n           'score': 4.577486038208008, \n           'title': 'The Jazz Singer'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9106559753417969, \n             'texts': [{'type': 'hit', 'value': 'Love and Anger'}]}], \n           'score': 4.577486038208008, \n           'title': 'Love and Anger'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.9106559753417969,\n             'texts': [{'type': 'hit', 'value': 'Save the Tiger'}]}],\n           'score': 4.577486038208008, \n           'title': 'Save the Tiger'}\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the right side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.38510727882385254, \n             'texts': [{'type': 'hit', 'value': 'South Park: Bigger Longer & Uncut'}]}], \n           'score': 4.365298748016357, \n           'title': 'South Park: Bigger Longer & Uncut'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.5282801985740662, \n             'texts':[{'type': 'hit', 'value': 'Bigger Stronger Faster'}, {'type': 'text', 'value': '*'}]}], \n           'score': 4.300583839416504, \n           'title': 'Bigger Stronger Faster*'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.5984020829200745, \n             'texts': [{'type': 'hit', 'value': 'The Toxic Avenger Part II'}]}],\n           'score': 4.2650651931762695, \n           'title': 'The Toxic Avenger Part II'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.6008684039115906, \n             'texts': [{'type': 'hit', 'value': 'When a Stranger Calls Back'}]}],\n           'score': 4.2650651931762695, \n           'title': 'When a Stranger Calls Back'}\n         {\n           'highlights': [{\n             'path': 'title', \n             'score': 0.6154072880744934, \n             'texts': [{'type': 'hit', 'value': 'Carol Channing: Larger Than Life'}]}], \n           'score': 4.2650651931762695, \n           'title': 'Carol Channing: Larger Than Life'}\n\n      Atlas Search returns these results because the characters\n      ``ger`` appear at different positions in the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n\n         {\n           title: 'Gertie the Dinosaur',\n           score: 6.085907459259033,\n           highlights: [{\n             score: 0.9227690100669861,\n             path: 'title',\n             texts: [ { value: 'Gertie the Dinosaur', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'Germany Year Zero',\n           score: 6.085907459259033,\n           highlights: [{\n             score: 0.9180012345314026,\n             path: 'title',\n             texts: [ { value: 'Germany Year Zero', type: 'hit' } ]\n            }]\n         },\n         {\n           title: 'Germany in Autumn',\n           score: 6.085907459259033,\n           highlights: [{\n             score: 0.9180012345314026,\n             path: 'title',\n             texts: [ { value: 'Germany in Autumn', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'Germany Pale Mother',\n           score: 6.085907459259033,\n           highlights: [{\n             score: 0.9227690100669861,\n             path: 'title',\n             texts: [ { value: 'Germany Pale Mother', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'Gerhard Richter - Painting',\n           score: 6.085907459259033,\n           highlights: [{\n             score: 0.9386774897575378,\n             path: 'title',\n             texts: [ { value: 'Gerhard Richter - Painting', type: 'hit' } ]\n           }]\n         }\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the left side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           title: 'South Park: Bigger Longer & Uncut',\n           score: 4.807340621948242,\n           highlights: [{\n             score: 0.6177878975868225,\n             path: 'title',\n             texts: [\n               { value: 'South Park: Bigger Longer', type: 'hit' },\n               { value: ' & Uncut', type: 'text' } ]\n           }]\n         },\n         {\n           title: 'Roger Dodger',\n           score: 4.6073713302612305,\n           highlights: [{\n             score: 0.905626654624939,\n             path: 'title',\n             texts: [ { value: 'Roger Dodger', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'The Jazz Singer',\n           score: 4.577486038208008,\n           highlights: [{\n             score: 0.9131305813789368,\n             path: 'title',\n             texts: [ { value: 'The Jazz Singer', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'Love and Anger',\n           score: 4.577486038208008,\n           highlights: [{\n             score: 0.9106559753417969,\n             path: 'title',\n             texts: [ { value: 'Love and Anger', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'Save the Tiger',\n           score: 4.577486038208008,\n           highlights: [{\n             score: 0.9106559753417969,\n             path: 'title',\n             texts: [ { value: 'Save the Tiger', type: 'hit' } ]\n           }]\n         }\n\n      Atlas Search returns these results because the characters ``ger``\n      appear at the right side of a word in all the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\n           title: 'South Park: Bigger Longer & Uncut',\n           score: 4.365298748016357,\n           highlights: [{\n             score: 0.38510727882385254,\n             path: 'title',\n             texts: [ { value: 'South Park: Bigger Longer & Uncut', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'Bigger Stronger Faster*',\n           score: 4.300583839416504,\n           highlights: [{\n             score: 0.5282801985740662,\n             path: 'title',\n             texts: [\n               { value: 'Bigger Stronger Faster', type: 'hit' },\n               { value: '*', type: 'text' }\n             ]\n            }]\n         },\n         {\n           title: 'The Toxic Avenger Part II',\n           score: 4.2650651931762695,\n           highlights: [{\n             score: 0.5984020829200745,\n             path: 'title',\n             texts: [ { value: 'The Toxic Avenger Part II', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'When a Stranger Calls Back',\n           score: 4.2650651931762695,\n           highlights: [{\n             score: 0.6008684039115906,\n             path: 'title',\n             texts: [ { value: 'When a Stranger Calls Back', type: 'hit' } ]\n           }]\n         },\n         {\n           title: 'Carol Channing: Larger Than Life',\n           score: 4.2650651931762695,\n           highlights: [{\n             score: 0.6154072880744934,\n             path: 'title',\n             texts: [ { value: 'Carol Channing: Larger Than Life', type: 'hit' } ]\n           }]\n         }\n\n      Atlas Search returns these results because the characters\n      ``ger`` appear at different positions in the titles. Atlas Search\n      matches a highlight ``hit`` more coarsely to your query terms when\n      a highlighted path is referenced only in the autocomplete\n      operators of the highlighted query.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/highlight-output-shell-and-compass.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n    \n   { \"title\" : \"Fast & Furious\" }\n   { \"title\" : \"Fast & Furious 6\" }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/starts-with-output-cs.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n    \n    [{title Fast & Furious}]\n    [{title Fast & Furious 6}]\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/starts-with-output-go.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n    \n   {\"title\": \"Fast & Furious\"}\n   {\"title\": \"Fast & Furious 6\"}\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/starts-with-output-java.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n    \n   { title: 'Fast & Furious' }\n   { title: 'Fast & Furious 6' }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/starts-with-output-js.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n\n   Document{{title=Fast & Furious}}\n   Document{{title=Fast & Furious 6}}\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/starts-with-output-kotlin.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n    \n   {'title': 'Fast & Furious'}\n   {'title': 'Fast & Furious 6'}\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/starts-with-output-py.rst"
  },
  {
    "code": "   :copyable: false\n   :linenos:\n    \n   { title: 'Fast & Furious' }, \n   { title: 'Fast & Furious 6' }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/starts-with-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Men with Guns\" }\n         { \"title\" : \"Men with Brooms\" }\n         { \"title\" : \"Men Without Women\" }\n         { \"title\" : \"Brief Interviews with Hideous Men\" }\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Men with Guns\" }\n         { \"title\" : \"Men with Brooms\" }\n         { \"title\" : \"Getting Even with Dad\" }\n         { \"title\" : \"Chicken with Plums\" }\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Men Without Women\" }\n         { \"title\" : \"Men with Guns\" }\n         { \"title\" : \"Men with Brooms\" }\n         { \"title\" : \"Women Without Men\" }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Men with Guns}]\n         [{title Men with Brooms}]\n         [{title Men Without Women}]\n         [{title Brief Interviews with Hideous Men}]\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Men with Guns}]\n         [{title Men with Brooms}]\n         [{title Getting Even with Dad}]\n         [{title Chicken with Plums}]\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Men Without Women}]\n         [{title Men with Guns}]\n         [{title Men with Brooms}]\n         [{title Women Without Men}]\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Men with Guns\"}\n         {\"title\": \"Men with Brooms\"}\n         {\"title\": \"Men Without Women\"}\n         {\"title\": \"Brief Interviews with Hideous Men\"}\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Men with Guns\"}\n         {\"title\": \"Men with Brooms\"}\n         {\"title\": \"Getting Even with Dad\"}\n         {\"title\": \"Chicken with Plums\"}\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Men Without Women\"}\n         {\"title\": \"Men with Guns\"}\n         {\"title\": \"Men with Brooms\"}\n         {\"title\": \"Women Without Men\"}\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Men Without Women' }\n         { title: 'Brief Interviews with Hideous Men' }\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Getting Even with Dad' }\n         { title: 'Chicken with Plums' }\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men Without Women' }\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Women Without Men' }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Men with Brooms}}\n         Document{{title=Men with Guns}}\n         Document{{title=Men Without Women}}\n         Document{{title=Brief Interviews with Hideous Men}}\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Men with Brooms}}\n         Document{{title=Men with Guns}}\n         Document{{title=Getting Even with Dad}}\n         Document{{title=Chicken with Plums}}\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Men with Guns}}\n         Document{{title=Men with Brooms}}\n         Document{{title=Men Without Women}}\n         Document{{title=Women Without Men}}\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Men with Guns'}\n         {'title': 'Men with Brooms'}\n         {'title': 'Men Without Women'}\n         {'title': 'Brief Interviews with Hideous Men'}\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Men with Guns'}\n         {'title': 'Men with Brooms'}\n         {'title': 'Getting Even with Dad'}\n         {'title': 'Chicken with Plums'}\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Men Without Women'}\n         {'title': 'Men with Brooms'}\n         {'title': 'Women Without Men'}\n         {'title': 'Men with Guns'}\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Men Without Women' }\n         { title: 'Brief Interviews with Hideous Men' }\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Getting Even with Dad' }\n         { title: 'Chicken with Plums' }\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men Without Women' }\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Women Without Men' }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-output-shell-and-compass.rst"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any.rst\n\n   .. tab::\n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "         :language: python\n         :dedent:\n\n.. include:: /includes/fts-tutorial/autocomplete/different-results-note.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. tabs::\n\n         .. tab:: edgeGram\n            :tabid: edgeGram\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 21.18158721923828  _id:  “573a139af29313caabcf0b12”\n                 plot: \"Humberto Fuentes is a wealthy doctor whose wife has recently died. In …\"\n                 genres: Array\n                 runtime: 127\n                 ...\n                 title: \"Men with Guns\"\n\n               SCORE: 21.18158721923828  _id:  “573a13a4f29313caabd1287f”\n                 plot: \"Paul Gross stars as the leader of a recently reunited curling team fro…\"\n                 genres: Array\n                 runtime: 102\n                 ...\n                 title: \"Men with Brooms\"\n\n               SCORE: 19.015962600708008  _id:  “573a1391f29313caabcd93a3”\n                 plot: \"Navy divers clear the torpedo tube of a sunken submarine.\"\n                 genres: Array\n                 runtime: 77\n                 ...\n                 title: \"Men Without Women\"\n\n               SCORE: 11.215812683105469  _id:  “573a13b8f29313caabd4bcbf”\n                 plot: \"A graduate student (Nicholson) copes with a recent breakup by conducti…\"\n                 genres: Array\n                 runtime: 80\n                 ...\n                 title: \"Brief Interviews with Hideous Men\"\n\n               SCORE: 10.668076515197754  _id:  “573a13c9f29313caabd7ba99”\n                 plot: \"The women of a remote Latin American town are forced to pick up the pi…\"\"\n                 genres: Array\n                 runtime: 87\n                 ...\n                 title: \"Without Men\"\n\n               SCORE: 10.106664657592773  _id:  “573a13c8f29313caabd77ab6”\n                 plot: \"Against the tumultuous backdrop of Iran's 1953 CIA-backed coup d'ètat,…\"\n                 genres: Array\n                 runtime: 95\n                 ...\n                 title: \"Women Without Men\"\n\n               SCORE: 7.458737373352051  _id:  “573a1398f29313caabce9a19”\n                 plot: \"A man's wife leaves him to take up with an artist, so the man responds…\"\n                 genres: Array\n                 runtime: 99\n                 ...\n                 title: \"Men...\"\n\n               SCORE: 7.405402183532715  _id:  “573a13f2f29313caabdde0b4”\n                 plot: \"Men and Chicken is a black comedy about two outcast brothers, who by g…\"\n                 genres: Array\n                 runtime: 104\n                 ...\n                 title: \"Men & Chicken\"\n\n               SCORE: 7.2005205154418945  _id:  “573a1394f29313caabce06c3”\n                 plot: \"During the Korean War, a battle worn Lt. and his platoon behind enemy …\"\n                 genres: Array\n                 runtime: 102\n                 ...\n                 title: \"Men in War\"\n\n               SCORE: 7.2005205154418945  _id:  “573a1399f29313caabcec167”\n                 plot: \"A mother of two sons finds life considerably difficult on her own afte…\"\n                 genres: Array\n                 runtime: 115\n                 ...\n                 title: \"Men Don't Leave\"\n\n         .. tab:: rightEdgeGram\n            :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 19.302995681762695  _id:  “573a139af29313caabcf0b12”\n                 plot: \"Humberto Fuentes is a wealthy doctor whose wife has recently died. In …\"\n                 genres: Array\n                 runtime: 127\n                 ...\n                 title: \"Men with Guns\"\n\n               SCORE: 19.302995681762695  _id:  “573a13a4f29313caabd1287f”\n                 plot: \"Paul Gross stars as the leader of a recently reunited curling team fro…\"\n                 genres: Array\n                 runtime: 102\n                 ...\n                 title: \"Men with Brooms\"\n\n               SCORE: 13.835155487060547  _id:  “573a1399f29313caabcee64e”\n                 plot: \"A thief's son cons his father into spending more time with him.\"\n                 genres: Array\n                 runtime: 109\n                 ...\n                 title: \"Getting Even with Dad\"\n\n               SCORE: 13.309324264526367  _id:  “573a13cdf29313caabd844f5”\n                 plot: \"Since his beloved violin was broken, Nasser Ali Khan, one of the most …\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"Chicken with Plums\"\n\n               SCORE: 12.078420639038086  _id:  “573a13b8f29313caabd4bcbf”\n                 plot: \"A graduate student (Nicholson) copes with a recent breakup by conducti…\"\n                 genres: Array\n                 runtime: 80\n                 ...\n                 title: \"Brief Interviews with Hideous Men\"\n\n               SCORE: 10.180097579956055  _id:  “573a13b2f29313caabd3ab9b”\n                 fullplot: \"A man runs into a woman at a wedding. They start to flirt and talk and…\"\n                 imdb: Object\n                 year: 2005\n                 ...\n                 title: \"Conversations with Other Women\"\n\n               SCORE: 7.147367477416992  _id:  “573a1398f29313caabce9a19”\n                 plot: \"A man's wife leaves him to take up with an artist, so the man responds…\"\n                 genres: Array\n                 runtime: 99\n                 ...\n                 title: \"Men...\"\n\n               SCORE: 7.054648399353027  _id:  “573a1394f29313caabcde7cc”\n                 plot: \"Paralized war vet tries to adjust to the world without the use of his …\"\n                 genres: Array\n                 runtime: 85\n                 ...\n                 title: \"The Men\"\n\n               SCORE: 7.054648399353027  _id:  “573a1399f29313caabced53c”\n                 plot: \"Bitter about being double-crossed by the women he loved, (and with the…\"\n                 genres: Array\n                 runtime: 105\n                 ...\n                 title: \"Simple Men\"\n\n               SCORE: 7.054648399353027  _id:  “573a139af29313caabcf0f51”\n                 fullplot: \"In a world where both Mutants and Humans fear each other, Marie, bette…\"\n                 imdb: Object\n                 year: 2000\n                 ...\n                 title: \"X-Men\"\n\n         .. tab:: nGram\n            :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 16.18875503540039 _id:  “573a1391f29313caabcd93a3”\n                 plot: \"Navy divers clear the torpedo tube of a sunken submarine.\"\n                 genres: Array\n                 runtime: 77\n                 ...\n                 title: \"Men Without Women\"\n\n               SCORE: 15.995916366577148  _id:  “573a139af29313caabcf0b12”\n                 plot: \"Humberto Fuentes is a wealthy doctor whose wife has recently died. In …\"\n                 genres: Array\n                 runtime: 127\n                 ...\n                 title: \"Men with Guns\"\n\n               SCORE: 15.995916366577148  _id:  “573a13a4f29313caabd1287f”\n                 plot: \"Paul Gross stars as the leader of a recently reunited curling team fro…\"\n                 genres: Array\n                 runtime: 102\n                 ...\n                 title: \"Men with Brooms\"\n\n               SCORE: 15.642412185668945  _id:  “573a13c8f29313caabd77ab6”\n                 plot: \"Against the tumultuous backdrop of Iran's 1953 CIA-backed coup d'ètat,…\"\n                 genres: Array\n                 runtime: 95\n                 ...\n                 title: \"Women Without Men\"\n\n               SCORE: 8.15120792388916  _id:  “573a13b8f29313caabd4bcbf”\n                 plot: \"A graduate student (Nicholson) copes with a recent breakup by conducti…\"\n                 genres: Array\n                 runtime: 80\n                 ...\n                 title: \"Brief Interviews with Hideous Men\"\n\n               SCORE: 8.118724822998047  _id:  “573a13b2f29313caabd3ab9b”\n                 fullplot: \"A man runs into a woman at a wedding. They start to flirt and talk and…\"\n                 imdb: Object\n                 year: 2005\n                 ...\n                 title: \"Conversations with Other Women\"\n\n               SCORE: 8.048237800598145  _id:  “573a13a5f29313caabd138ca”\n                 plot: \"This documentary, first shown on the Turner Classic Movies cable chann…\"\n                 genres: Array\n                 runtime: 56\n                 ...\n                 title: \"Without Lying Down: Frances Marion and the Power of Women in Hollywood\"\n\n               SCORE: 7.620831489562988  _id:  “573a13c9f29313caabd7ba99”\n                 plot: \"The women of a remote Latin American town are forced to pick up the pi…\"\"\n                 genres: Array\n                 runtime: 87\n                 ...\n                 title: \"Without Men\"\n\n               SCORE: 4.35431432723999  _id:  “573a1393f29313caabcdcd9d”\n                 plot: \"A young Canadian nurse (Betsy) comes to the West Indies to care for Je…\"\n                 genres: Array\n                 runtime: 69\n                 ...\n                 title: \"I Walked with a Zombie\"\n\n               SCORE: 4.35431432723999  _id:  “573a1393f29313caabcdd9c7”\n                 plot: \"Political intrigue and psychological drama run parallel. The queen is …\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"The Eagle with Two Heads\"\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-js.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-any-output-py.rst\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-any-section.rst"
  },
  {
    "code": "   :emphasize-lines: 13, 16, 17\n   \n   {\n     \"mappings\": {\n       \"dynamic\": false,\n       \"fields\": {\n         \"title\": [\n         {\n           \"type\": \"stringFacet\"\n         },\n         {\n            \"type\": \"string\"\n         },\n         {\n           \"foldDiacritics\": true,\n           \"maxGrams\": 7,\n           \"minGrams\": 3,\n           \"analyzer\": \"lucene.keyword\",\n           \"tokenization\": \"edgeGram\",\n           \"type\": \"autocomplete\"\n         }]\n       }\n     }\n   }\n\nThe following query searches for movie titles that start with the term\n``Fast &``.\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      Copy and paste the following query into the \n      :guilabel:`Query Editor`, and then click the :guilabel:`Search` \n      button in the :guilabel:`Query Editor`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :language: python\n         :dedent:\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :copyable: false\n\n         SCORE: 10.042893409729004  _id:  “573a13bdf29313caabd5929f”\n           fullplot: \"Heading back to the streets where it all began, two men rejoin two wom…\"\n           imdb: Object\n           year: 2009\n           ...\n           title: \"Fast & Furious\"\n         \n         SCORE: 9.515419006347656  _id:  “573a13d3f29313caabd95cc5”\n           fullplot: \"Since Dom (Diesel) and Brian's (Walker) Rio heist toppled a kingpin's …\"\n           imdb: Object\n           year: 2013\n           ...\n           title \"Fast & Furious 6\"\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-js.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/starts-with-output-py.rst\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-analyzer-section.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Men with Guns\"}\n         {\"title\": \"Men with Brooms\"}\n         {\"title\": \"Men Without Women\"}\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Men with Guns\" }\n         { \"title\" : \"Men with Brooms\" }\n         { \"title\" : \"Getting Even with Dad\" }\n         { \"title\" : \"Chicken with Plums\" }\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Men Without Women\" }\n         { \"title\" : \"Men with Guns\" }\n         { \"title\" : \"Men with Brooms\" }\n         { \"title\" : \"Women Without Men\" }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-cs.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Men with Guns}]\n         [{title Men with Brooms}]\n         [{title Men Without Women}]\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Men with Guns}]\n         [{title Men with Brooms}]\n         [{title Getting Even with Dad}]\n         [{title Chicken with Plums}]\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         [{title Men Without Women}]\n         [{title Men with Guns}]\n         [{title Men with Brooms}]\n         [{title Women Without Men}]\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-go.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Men with Guns\"}\n         {\"title\": \"Men with Brooms\"}\n         {\"title\": \"Men Without Women\"}\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { \"title\" : \"Men with Guns\" }\n         { \"title\" : \"Men with Brooms\" }\n         { \"title\" : \"Getting Even with Dad\" }\n         { \"title\" : \"Chicken with Plums\" }\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {\"title\": \"Men Without Women\"}\n         {\"title\": \"Men with Guns\"}\n         {\"title\": \"Men with Brooms\"}\n         {\"title\": \"Women Without Men\"}\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-java.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n         \n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Men Without Women' }\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Getting Even with Dad' }\n         { title: 'Chicken with Plums' }\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men Without Women' }\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Women Without Men' }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-js.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Men with Brooms}}\n         Document{{title=Men with Guns}}\n         Document{{title=Men Without Women}}\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Men with Brooms}}\n         Document{{title=Men with Guns}}\n         Document{{title=Getting Even with Dad}}\n         Document{{title=Chicken with Plums}}\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         Document{{title=Men with Guns}}\n         Document{{title=Men with Brooms}}\n         Document{{title=Men Without Women}}\n         Document{{title=Women Without Men}}\n         \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Men with Guns'}\n         {'title': 'Men with Brooms'}\n         {'title': 'Men Without Women'}\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Men with Guns'}\n         {'title': 'Men with Brooms'}\n         {'title': 'Getting Even with Dad'}\n         {'title': 'Chicken with Plums'}\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         {'title': 'Men Without Women'}\n         {'title': 'Men with Guns'}\n         {'title': 'Men with Brooms'}\n         {'title': 'Women Without Men'}\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-py.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men with Guns' },\n         { title: 'Men with Brooms' },\n         { title: 'Men Without Women' }\n\n   .. tab:: rightEdgeGram\n      :tabid: rightEdgeGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men with Guns' }\n         { title: 'Men with Brooms' }\n         { title: 'Getting Even with Dad' }\n         { title: 'Chicken with Plums' }\n\n   .. tab:: nGram\n      :tabid: nGram\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-shell-and-compass.rst"
  },
  {
    "code": "         :copyable: false\n         :linenos:\n\n         { title: 'Men Without Women' },\n         { title: 'Men with Guns' },\n         { title: 'Men with Brooms' },\n         { title: 'Women Without Men' }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-output-shell-and-compass.rst"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "         :language: csharp\n         :dedent:\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "         :language: go\n         :dedent:\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "         :language: java\n         :dedent:\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "         :language: kotlin\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "         :language: js\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fact-fts-autocomplete-limit-project-stages-token-order.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "         :language: python\n         :dedent:\n\n.. include:: /includes/fts-tutorial/autocomplete/different-results-note.rst\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: atlas-ui\n\n      .. tabs::\n\n         .. tab:: edgeGram\n            :tabid: edgeGram\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 12.644559860229492  _id:  “573a139af29313caabcf0b12”\n                 plot: \"Humberto Fuentes is a wealthy doctor whose wife has recently died. In …\"\n                 genres: Array\n                 runtime: 127\n                 ...\n                 title: \"Men with Guns\"\n\n               SCORE: 12.644559860229492  _id:  “573a13a4f29313caabd1287f”\n                 plot: \"Paul Gross stars as the leader of a recently reunited curling team fro…\"\n                 genres: Array\n                 runtime: 102\n                 ...\n                 title: \"Men with Brooms\"\n\n               SCORE: 7.997925281524658  _id:  “573a1391f29313caabcd93a3”\n                 plot: \"Navy divers clear the torpedo tube of a sunken submarine.\"\n                 genres: Array\n                 runtime: 77\n                 ...\n                 title: \"Men Without Women\"\n\n         .. tab:: rightEdgeGram\n            :tabid: rightEdgeGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 11.758549690246582  _id:  “573a139af29313caabcf0b12”\n                 plot: \"Humberto Fuentes is a wealthy doctor whose wife has recently died. In …\"\n                 genres: Array\n                 runtime: 127\n                 ...\n                 title: \"Men with Guns\"\n\n               SCORE: 11.758549690246582  _id:  “573a13a4f29313caabd1287f”\n                 plot: \"Paul Gross stars as the leader of a recently reunited curling team fro…\"\n                 genres: Array\n                 runtime: 102\n                 ...\n                 title: \"Men with Brooms\"\n\n               SCORE: 7.70704460144043  _id:  “573a1399f29313caabcee64e”\n                 plot: \"A thief's son cons his father into spending more time with him.\"\n                 genres: Array\n                 runtime: 109\n                 ...\n                 title: \"Getting Even with Dad\"\n\n               SCORE: 7.111915588378906  _id:  “573a13cdf29313caabd844f5”\n                 plot: \"Since his beloved violin was broken, Nasser Ali Khan, one of the most …\"\n                 genres: Array\n                 runtime: 93\n                 ...\n                 title: \"Chicken with Plums\"\n\n         .. tab:: nGram\n            :tabid: nGram\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "               :copyable: false\n\n               SCORE: 7.928277015686035  _id:  “573a1391f29313caabcd93a3”\n                 plot: \"Navy divers clear the torpedo tube of a sunken submarine.\"\n                 genres: Array\n                 runtime: 77\n                 ...\n                 title: \"Men Without Women\"\n\n               SCORE: 7.928277015686035  _id:  “573a139af29313caabcf0b12”\n                 plot: \"Humberto Fuentes is a wealthy doctor whose wife has recently died. In …\"\n                 genres: Array\n                 runtime: 127\n                 ...\n                 title: \"Men with Guns\"\n\n               SCORE: 7.928277015686035  _id:  “573a13a4f29313caabd1287f”\n                 plot: \"Paul Gross stars as the leader of a recently reunited curling team fro…\"\n                 genres: Array\n                 runtime: 102\n                 ...\n                 title: \"Men with Brooms\"\n\n               SCORE: 7.381933212280273  _id:  “573a13c8f29313caabd77ab6”\n                 plot: \"Against the tumultuous backdrop of Iran's 1953 CIA-backed coup d'ètat,…\"\n                 genres: Array\n                 runtime: 95\n                 ...\n                 title: \"Women Without Men\"\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-shell-and-compass.rst\n\n   .. tab::\n      :tabid: compass\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-shell-and-compass.rst\n\n   .. tab:: \n      :tabid: csharp\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-cs.rst\n\n   .. tab:: \n      :tabid: go\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-go.rst\n\n   .. tab:: \n      :tabid: java-sync \n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-java.rst\n\n   .. tab:: \n      :tabid: kotlin-coroutine\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-kotlin.rst\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-js.rst\n\n   .. tab::\n      :tabid: python\n\n      .. include:: /includes/fts-tutorial/autocomplete/token-seq-output-py.rst\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/autocomplete/token-seq-section.rst"
  },
  {
    "code": "          :copyable: true\n     \n          {\n            index: \"pagination-tutorial\",\n            text: {\n              query: \"tom hanks\",\n              path: \"cast\"\n            }\n          }\n\n   * - ``$project``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true\n\n          {\n            _id: 0,\n            title: 1,\n            cast: 1\n          }\n\n   * - ``$set``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true\n\n          {\n            score: {\n              $meta: \"searchScore\"\n            }\n          }\n\n   * - ``$facet``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true\n\n          {\n            rows: [\n              {\n                $skip: 10\n              },\n              {\n                $limit: 10\n              }\n            ],\n            totalRows: [\n              {\n                $replaceWith: \"$$SEARCH_META\"\n              },\n              {\n                $limit: 1\n              }\n            ]\n          }\n\n   * - ``$set``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true\n\n          {\n            totalRows: {\n              $arrayElemAt: [\"$totalRows\", 0]\n            }\n          }\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true\n     \n          {\n            index: \"pagination-tutorial\",\n            text: {\n              query: \"tom hanks\",\n              path: \"cast\"\n            },\n          }\n\n   * - ``$project``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-simple-query.rst"
  },
  {
    "code": "          :copyable: true\n\n          {\n            _id: 0,\n            title: 1,\n            cast: 1\n          }\n\n   * - ``$skip``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-simple-query.rst"
  },
  {
    "code": "          :copyable: true\n\n          10\n\n   * - ``$limit``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-simple-query.rst"
  },
  {
    "code": "          :copyable: true\n\n          10\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/divide-results/list-table-compass-simple-query.rst"
  },
  {
    "code": "      :copyable: false \n\n      reciprocal_rank = 1 / ( r + rank_constant )\n\n   For each method of search, apply different weights (``w``) to give more\n   importance to that method of search. For each document, the weighted\n   reciprocal rank is calculated by multiplying the weight by the\n   reciprocal rank of the document. \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/hybrid-search.rst"
  },
  {
    "code": "      :copyable: false \n\n      weighted_reciprocal_rank = w x reciprocal_rank   \n  \n#. Combine the rank-derived and weighted scores of the documents in the\n   results. \n  \n   .. _combine-reciprocal-ranks:\n     \n   For each document across all search results, add the calculated\n   reciprocal ranks for a single score for the document. \n\n#. Sort the results by the combined score of the documents in the\n   results. \n\n   Sort the documents in the results based on the combined score across\n   the results for a single, combined ranked list of documents in the\n   results. \n\nPrerequisites \n-------------\n\nBefore you begin, you must have the following:\n\n- An |service| cluster with MongoDB version v6.0.11, or v7.0.2 or later. \n\n  .. note:: \n\n     Ensure that your |service| {+cluster+} has enough memory to store\n     both |fts| and {+avs+} indexes and run performant queries.\n\n- The :doc:`sample data </sample-data>` loaded into your |service| \n  cluster.\n  \n- One of the following applications to run queries on your |service|\n  {+cluster+}:\n\n  - :ref:`Search Tester <atlas-search-query-ui>`\n  - {+mongosh+}\n  - {+Compass+}\n  - :driver:`C# </csharp/current/>`\n  - :driver:`Java </java-drivers/>`\n  - :driver:`MongoDB Node Driver </node/current/>`\n  - :driver:`PyMongo </pymongo/>`\n\n- :authrole:`Project Data Access Admin` access to the project to create\n  {+avs+} and |fts| indexes. \n\nCreate the {+avs+} and |fts| Indexes \n-------------------------------------------------\n\nThis section demonstrates how to create the following indexes on the\nfields in the ``sample_mflix.embedded_movies`` collection: \n\n- An {+avs+} index on the ``plot_embeddings`` field for running vector\n  queries against that field. \n- An |fts| index on the ``title`` field for running full-text search\n  against that field.\n\nProcedure \n~~~~~~~~~\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/steps-avs-rrf-tutorial-create-index-javascript.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/steps-avs-rrf-tutorial-create-index-mongosh.rst\n\nRun a Combined Semantic Search and Full-Text Search Query \n---------------------------------------------------------\n\nThis section demonstrates how to query the data in the\n``sample_mflix.embedded_movies`` collection for *star wars* in the\n``plot_embeddings`` and ``title`` fields by using the\n:pipeline:`$vectorSearch` and :pipeline:`$search` pipeline stages and \ncombine each document's scores from both stages to re-sort the documents\nin the results. This ensures that documents appearing in both searches\nappear at the top of the combined results.  \n\nProcedure \n~~~~~~~~~\n\n.. tabs-drivers::\n\n   .. tab::\n      :tabid: nodejs\n\n      .. include:: /includes/steps-avs-rrf-javascript-query.rst\n\n   .. tab::\n      :tabid: shell\n\n      .. include:: /includes/steps-avs-rrf-shell-query.rst\n\nAbout the Query \n~~~~~~~~~~~~~~~\n\nThe sample query retrieves the sorted search results from the\nsemantic search and the full-text search, and assigns a reciprocal rank\nscore to the documents in the results based on their position in the\nresults array. The reciprocal rank score is calculated by using the\nfollowing formula:  \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/hybrid-search.rst"
  },
  {
    "code": "   :copyable: false \n\n   1.0/{document position in the results + constant value} \n\nThe query then adds the scores from both the searches for each document,\nranks the documents based on the combined score, and sorts the documents\nto return a single result. \n\nQuery Variables \n```````````````\n\nThe sample query defines the following variables to add weight to the\nscore, with a lower number providing higher weight:\n\n- ``vector_weight`` \n- ``full_text_weight``\n\nThe weighted reciprocal rank score is calculated by using the\nfollowing formula:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/hybrid-search.rst"
  },
  {
    "code": "   :copyable: false \n\n   weight x reciprocal rank \n\nQuery Stages \n````````````\n\nThe sample query uses the following pipeline stages to perform a\nsemantic search on the collection and retrieve the reciprocal rank of\nthe documents in the results: \n\n.. list-table:: \n    :widths: 30 70 \n\n    * - :pipeline:`$vectorSearch` \n      - Searches the ``plot_embeddings`` field for the string *star\n        wars* specified as vector embeddings in the ``queryVector``\n        field of the query. The query uses ``ada-002-text`` embedding,\n        which is the same as the vector embedding in the ``plot_embedding``\n        field. The query also specifies a search for up to ``100``\n        nearest neighbors and limit the results to ``20`` documents\n        only. This stage returns the sorted documents from the semantic\n        search in the results.\n    * - :pipeline:`$group`  \n      - Groups all the documents in the results from the semantic search\n        in a field named ``docs``. \n    * - :pipeline:`$unwind` \n      - Unwinds the array of documents in the ``docs`` field and store\n        the position of the document in the results array in a field\n        named ``rank``.  \n    * - :pipeline:`$addFields` \n      - Adds a new field named ``vs_score`` that contains the reciprocal\n        rank score for each document in the results. Here, reciprocal\n        rank score is calculated by dividing ``1.0`` by the sum of\n        ``rank`` and a rank constant value of ``60``. Then, the weighted\n        reciprocal rank is calculated by multiplying ``vector_weight``\n        weight by the reciprocal rank score.\n    * - :pipeline:`$project`  \n      - Includes only the following fields in the results:  \n\n        - ``vs_score``\n        - ``_id`` \n        - ``title`` \n\nThe sample query uses the :pipeline:`$unionWith` stage to perform a text\nsearch on the collection and retrieve the reciprocal rank of the\ndocuments in the results:   \n\n.. list-table:: \n    :widths: 30 70 \n\n    * - :pipeline:`$search` \n      - Searches for movies that contain the term ``star wars`` in the\n        ``title`` field. This stage returns the sorted documents from\n        the full-text search in the results. \n    * - :pipeline:`$limit` \n      - Limits the output to ``20`` results only.\n    * - :pipeline:`$group`  \n      - Groups all the documents from the full-text search in a field\n        named ``docs``. \n    * - :pipeline:`$unwind` \n      - Unwinds the array of documents in the ``docs`` field and store\n        the position of the document in the results array in a field\n        named ``rank``.  \n    * - :pipeline:`$addFields`  \n      - Adds a new field named ``fts_score`` that contains the reciprocal\n        rank score for each document in the results. Here, reciprocal\n        rank score is calculated by dividing ``1.0`` by the sum of\n        ``rank`` and a rank constant value of ``60``. Then, the weighted\n        reciprocal rank is calculated by multiplying ``full_text_weight``\n        weight by the reciprocal rank score.  \n    * - :pipeline:`$project` \n      - Includes only the following fields in the results:  \n\n        - ``fts_score``\n        - ``_id`` \n        - ``title``\n\nThe sample query uses the following stages to combine the results of the\nsemantic and text search and return a single ranked list of documents in\nthe results:\n\n.. list-table:: \n    :widths: 30 70 \n\n    * - :pipeline:`$group` \n      - Groups the documents in the results from the preceding stages by\n        ``title``, ``vs_score``, and ``fts_score``. \n\n    * - :pipeline:`$project` \n      - Includes only the following fields in the results:  \n\n        - ``vs_score``\n        - ``fts_score``\n        - ``_id`` \n        - ``title`` \n\n    * - :pipeline:`$project` \n      - Adds a field named ``score`` that contains the sum of\n        ``vs_score`` and ``fts_score`` to the results.   \n\n    * - :pipeline:`$sort` \n      - Sorts the results by ``score`` in descending order. \n    \n    * - :pipeline:`$limit` \n      - Limits the output to ``10`` results only.\n\nLearn by Watching\n~~~~~~~~~~~~~~~~~\n\nWatch a demonstration of an application that showcases hybrid search\nqueries combining |fts| full-text and vector search to return a single\nmerged result set. The application implements Relative Score Fusion\n(RSF) and Reciprocal Rank Fusion (RRF) to return a merged set created by\nusing a rank fusion algorithm.\n\n*Duration: 2.43 Minutes*\n\n.. video:: https://youtu.be/ipbLlUh8gwc\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/hybrid-search.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            from: \"accounts\",\n            localField: \"accounts\",\n            foreignField: \"account_id\",\n            as: \"purchases\",\n            pipeline: [\n              {\n                $search: {\n                  index: \"lookup-with-search-tutorial\",\n                  compound: {\n                    must: [\n                      {\n                        queryString: {\n                        defaultPath: \"products\",\n                        query:\n                          \"products: (CurrencyService AND InvestmentStock)\"\n                        }\n                      }\n                    ],\n                    should: [\n                      {\n                        range: {\n                          path: \"limit\",\n                          gte: 5000,\n                          lte: 10000,\n                        }\n                      }\n                    ]\n                  }\n                }\n              },\n              {\n                $project: {\n                  _id: 0,\n                }\n              }\n            ]\n          }\n\n   * - ``$limit``\n     - ``5`` \n\n   * - ``$project``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/lookup-with-search/list-table-compass-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n             _id: 0,\n             address: 0,\n             birthdate: 0,\n             username: 0,\n             tier_and_details: 0,\n          }\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/lookup-with-search/list-table-compass-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            \"text\": {\n              \"query\": \"Mobile\",\n              \"path\": \"name\"\n            }\n          }\n\n   * - ``$project``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-basic-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            \"score\": {\n              \"$meta\": \"searchScore\",\n            },\n            \"_id\": 0,\n            \"number_of_employees\": 1,\n            \"founded_year\": 1,\n            \"name\": 1\n          }\n\n   * - ``$set``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-basic-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            \"source\": \"companies\"\n          }\n\n   * - ``$limit``\n     - ``3``\n\n   * - ``$unionWith``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-basic-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            \"coll\": \"inspections\",\n            \"pipeline\": [\n              {\n                \"$search\": {\n                  \"text\": {\n                    \"query\": \"Mobile\",\n                    \"path\": \"business_name\",\n                  }\n                }\n              },\n              {\n                \"$set\": {\n                  \"source\": \"inspections\",\n                }\n              },\n              {\n                \"$project\": {\n                  \"score\": {\n                    \"$meta\": \"searchScore\"\n                  },\n                  \"source\": 1,\n                  \"_id\": 0,\n                  \"business_name\": 1,\n                  \"address\": 1\n                }\n              },\n              {\n                \"$limit\": 3\n              },\n              {\n                \"$sort\": {\n                  \"score\": -1\n                }\n              }\n            ]\n          }\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-basic-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            text: {\n              query: \"mobile\",\n              path: \"name\",\n              score: {\n                boost: {\n                  value: 1.6\n                }\n              }\n            }\n          }\n\n   * - ``$project``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            \"score\": {\n              \"$meta\": \"searchScore\",\n            },\n            \"_id\": 0,\n            \"number_of_employees\": 1,\n            \"founded_year\": 1,\n            \"name\": 1\n          }\n\n   * - ``$addFields``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            source: \"companies\",\n            source_count: \"$$SEARCH_META.count.lowerBound\"\n          }\n\n   * - ``$limit``\n     - ``3``\n\n   * - ``$unionWith``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            coll: \"inspections\",\n            pipeline: [\n              {\n                $search: {\n                  text: {\n                    query: \"mobile\",\n                    path: \"business_name\"\n                  }\n                }\n              },\n              {\n                $project: {\n                  score: {\n                    $meta: \"searchScore\"\n                  },\n                  business_name: 1,\n                  address: 1,\n                  _id: 0\n                }\n              },\n              {\n                $limit: 3,\n              },\n              {\n                $set: {\n                  source: \"inspections\",\n                  source_count: \"$$SEARCH_META.count.lowerBound\"\n                }\n              },\n              {\n                $sort: {\n                  score: -1\n                }\n              }\n            ]\n          }\n\n   * - ``$facet``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-facet-query.rst"
  },
  {
    "code": "          :copyable: true \n\n          {\n            allDocs: [],\n            totalCount: [\n              {\n                $group: {\n                  _id: \"$source\",\n                  firstCount: { $first: \"$source_count\" }\n                }\n              },\n              {\n                $project: {\n                  totalCount: {\n                    $sum: \"$firstCount\"\n                  }\n                }\n              }\n            ]\n          }\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/fts-tutorial/search-with-unionwith/list-table-compass-facet-query.rst"
  },
  {
    "code": "     :copyable: false\n\n     mongodb+srv://cluster0-pl-0.uzgh6.mongodb.net\n\n- Standard connection string\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/gcp-psc-connection-strings.rst"
  },
  {
    "code": "     :copyable: false\n\n     mongodb://pl-00-000-eastus2.uzgh6.mongodb.net:27017,pl-00-001-eastus2.uzgh6.mongodb.net:27017,pl-00-002-eastus2.uzgh6.mongodb.net:27017/?ssl=truereplicaSet=atlas-18bndf-shard-0\n\nWhen a client in your network connects to an |service| cluster using one\nof these private endpoint-aware connection strings, the client attempts to\nestablish a connection to the service attachments in the |service| |vpc| \nthrough the private endpoints. The service attachments send traffic through\n|gcp| internal load balancers to the |service| cluster nodes that you deployed\nin that region. Your client's |dns| resolution mechanism handles resolving the \nhostname to the endpoint's private IP address. \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/gcp-psc-connection-strings.rst"
  },
  {
    "code": "   :copyable: false\n\n   A migration to your Atlas cluster will expire in <number> hours!\n   Navigate to your destination cluster to start the cutover process. If\n   you don't take any action within <number> hours, the migration will be\n   cancelled and you will need to start again. You can also extend the\n   migration process if you need more time.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/import/migration-email-expiration.rst"
  },
  {
    "code": "             :copyable: false\n\n             .. input::\n                :linenos:\n\n                azure network private-endpoint create\n\n             .. output:: /includes/api/responses/az-network-private-endpoint-create.json\n                :language: json\n                :linenos:\n                :emphasize-lines: 4\n\n          You can also return this value using the `azure network private-endpoint list CLI command \n          <https://docs.microsoft.com/en-us/cli/azure/network/private-endpoint?view=azure-cli-latest#az-network-private-endpoint-list>`__.\n\n    * - :guilabel:`Private IP`\n      - Private IP address of the private endpoint network\n        interface you created in your |azure| VNet. Find this\n        value in one of the following ways:\n\n        - Use the |azure| dashboard to retrieve this value. \n          The :guilabel:`Overview` page for your private\n          endpoint on your |azure| dashboard displays this\n          property in the :guilabel:`Private IP` field.\n\n        - Use the |azure| CLI to retrieve this value:\n\n          i. Use the output from the following command, which returns the ID of the network\n             interface in the highlighted ``networkInterfaces.id`` field:\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/list-table-azure-serverless-create-endpoint-in-az.rst"
  },
  {
    "code": "                :copyable: false\n\n                .. input::\n                   :linenos:\n\n                   azure network private-endpoint create\n                \n                .. output:: /includes/api/responses/az-network-private-endpoint-create.json\n                   :language: json\n                   :linenos:\n                   :emphasize-lines: 33\n\n          #. Run the `az network nic show --id {networkInterface.id}\n             <https://docs.microsoft.com/en-us/cli/azure/network/nic?view=azure-cli-latest#az_network_nic_show>`__\n             |azure| CLI command with the value of the\n             ``networkInterfaces.id`` field to retrieve the\n             ``ipConfigurations.privateIPAddress`` for the private\n             endpoint network interface. The value of this field is\n             your :guilabel:`Private IP`. The input and output should \n             look similar to the following. Note the highlighted value \n             of the :guilabel:`Private Endpoint IP Address` field.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/list-table-azure-serverless-create-endpoint-in-az.rst"
  },
  {
    "code": "                :copyable: true\n\n                .. input::\n                   :linenos:\n\n                   az network nic show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/privatelink/providers/Microsoft.Network/networkInterfaces/privatelink.nic.00000000-0000-0000-0000-000000000000\n\n                .. output:: /includes/api/responses/az-network-nic-show.json\n                   :language: json\n                   :linenos:\n                   :emphasize-lines: 25\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/list-table-azure-serverless-create-endpoint-in-az.rst"
  },
  {
    "code": "          :copyable: false\n             \n          No dns entries found for endpoint vpce-<guid>, \n          your endpoint must be provisioned in at least one subnet. \n          Click \"Edit\" to fix the problem.\n\n       This message indicates that you didn't specify\n       a subnet when you created the {+aws-pl+}\n       connection. To resolve this error:\n            \n       a. Click :guilabel:`Edit`. \n       #. Click :guilabel:`Back`. \n       #. Specify at least one subnet.\n       #. Follow the remaining instructions to create\n          the {+aws-pl+} connection.\n\n   * - Available\n     - |service| |vpc| resources are connected to the \n       :term:`interface endpoint` \n       in your |vpc|. You can connect to |service| clusters in this\n       region using {+aws-pl+}.\n\n   * - Deleting\n     - |service| is removing the interface endpoint from the private\n       endpoint service.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/list-table-endpoint-status.rst"
  },
  {
    "code": "          :copyable: false \n\n          log(1 + (N - n + 0.5) / (n + 0.5))\n\n       where:\n\n       - ``N`` is the total number of documents with the field.\n       - ``n`` is the number of documents containing the term.\n\n   * - ``tf`` \n     - Term frequency. |fts| computes the frequency using the following\n       formula:  \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/list-table-fts-bm25similarity.rst"
  },
  {
    "code": "          :copyable: false  \n\n          freq / (freq + k1 * (1 - b + b * dl / avgdl))\n\n       where: \n\n       - ``freq`` is the number of occurrences of the term within the\n         document. \n       - ``k1`` is the term saturation parameter that is specified \n         internally. It affects how much the score increases with each\n         reoccurrence of the term. \n       - ``avgdl`` is the average length of the field across all\n         documents. \n       - ``dl`` is the length of the field in the document.\n       - ``b`` is the length normalization parameter that is also set\n         internally. ``b`` is multiplied by the ratio of ``dl`` to\n         ``avgdl``. If ``b`` increases, the effects of the ratio of \n         ``dl`` to ``avgdl`` is amplified.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/list-table-fts-bm25similarity.rst"
  },
  {
    "code": "                 :copyable: false\n\n                  unitPriceDollars * quantity * 100\n\n          * - ``unit``\n            - Unit of measure (e.g. GB, hours, etc.)\n\n          * - ``unitPriceDollars``\n            - Cost of the item, in dollars.\n\n   * - ``links``\n     - object array\n     - .. include:: /includes/links-explanation.rst\n\n   * - ``orgId``\n     - string\n     - Unique identifier for the organization that received this\n       invoice.\n\n   * - ``payments``\n     - object array\n     - Payments applied to the invoice. Objects in the ``payments``\n       array include the following fields:\n\n       .. list-table::\n          :widths: 30 70\n          :header-rows: 1\n          :stub-columns: 1\n\n          * - Field\n            - Description\n\n          * - ``amountBilledCents``\n            - The amount of the invoice, in USD cents.\n\n          * - ``amountPaidCents``\n            - The amount that the customer paid, in USD cents.\n\n          * - ``created``\n            - |iso8601-time| when the payment was recorded.\n\n          * - ``id``\n            - Unique identifier of the payment.\n\n          * - ``salesTaxCents``\n            - Amount of sales tax paid, in USD cents.\n\n          * - ``statusName``\n            - State of the payment.\n\n              .. list-table::\n                 :widths: 30 70\n                 :header-rows: 1\n                 :stub-columns: 1\n\n                 * - Status\n                   - Description\n\n                 * - ``CANCELLED``\n                   - The payment has been cancelled.\n\n                 * - ``FAILED``\n                   - The attempt to charge the credit card failed.\n\n                 * - ``FORGIVEN``\n                   - The payment was created, but was subsequently\n                     forgiven.\n\n                 * - ``NEW``\n                   - The payment has been created, but no attempt\n                     has been made to charge the credit card.\n\n                 * - ``PAID``\n                   - The payment was successful.\n\n          * - ``subtotalCents``\n            - Sum of all positive invoice line items, in USD cents.\n\n          * - ``updated``\n            - |iso8601-time| when the object was last updated.\n\n   * - ``refunds``\n     - object array\n     - Refunds issued for the invoice. Objects in the ``refunds`` array\n       include the following fields:\n\n       .. list-table::\n          :widths: 30 70\n          :header-rows: 1\n          :stub-columns: 1\n\n          * - Field\n            - Description\n\n          * - ``amountCents``\n            - The amount of the refund, in USD cents.\n\n          * - ``created``\n            - |iso8601-time| when the refund was recorded.\n\n          * - ``reason``\n            - Reason for the refund.\n\n          * - ``paymentId``\n            - Unique identifier of the payment.\n\n   * - ``salesTaxCents``\n     - number\n     - Amount of taxes levied on **subtotalCents**.\n\n   * - ``startDate``\n     - string\n     - |iso8601-time| of the starting date for this invoice.\n\n   * - ``statusName``\n     - string\n     - State of this invoice. Accepted values are:\n\n       .. include:: /includes/billing/list-table-statusName.rst\n\n   * - ``subtotalCents``\n     - number\n     - Sum of all positive invoice line items in USD cents.\n\n   * - ``updated``\n     - string\n     - |iso8601-time| when the invoice was last updated.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/list-table-single-invoice-response.rst"
  },
  {
    "code": "   :language: json\n   :dedent:\n   :emphasize-lines: 7,12\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/modify-trust-policy.rst"
  },
  {
    "code": "     :emphasize-lines: 10, 14, 15\n\n     use admin\n     db.getUser(\"admin\")\n     {\n       \"_id\" : \"admin.admin\",\n       \"user\" : \"admin\",\n       \"db\" : \"admin\",\n       \"roles\" : [\n         {\n           \"role\" : \"backup\",\n           \"db\" : \"admin\"\n         },\n         {\n           \"role\" : \"clusterMonitor\",\n           \"db\" : \"admin\"\n         }\n         {\n           \"role\" : \"readAnyDatabase\",\n           \"db\" : \"admin\"\n         }\n       ]\n     } ...\n  \n  In addition, the database user from your source cluster must have\n  the role to read the oplog on your ``admin`` database. To learn more,\n  see :ref:`Oplog Access <ref-atlas-oplog>`.\n\n- For source clusters running MongoDB 3.4 a user must have,\n  at a minimum, both :authrole:`clusterMonitor` and :authrole:`readAnyDatabase`\n  roles. For example:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/mongomirror-required-roles.rst"
  },
  {
    "code": "     :emphasize-lines: 6\n\n      use admin\n      db.createUser(\n        {\n          user: \"mySourceUser\",\n          pwd: \"mySourceP@$$word\",\n          roles: [ \"clusterMonitor\", \"readAnyDatabase\" ]\n        }\n      )\n      \n- For source clusters running MongoDB 3.2 a user must have,\n  at a minimum, both :authrole:`clusterManager` and\n  :authrole:`readAnyDatabase` roles, as well as read access on the\n  ``local`` database. This requires a :manual:`custom role\n  </core/security-user-defined-roles/>`, which you can create with\n  the following commands:\n    \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/mongomirror-required-roles.rst"
  },
  {
    "code": "     :emphasize-lines: 8\n    \n       use admin\n       db.createRole(\n            {\n              role: \"migrate\",\n              privileges: [\n                { resource: { db: \"local\", collection: \"\" }, actions: [ \"find\" ] }\n              ],\n              roles: [\"readAnyDatabase\", \"clusterManager\"]\n            }\n          )\n        db.createUser(\n            {\n              user: \"mySourceUser\",\n              pwd: \"mySourceP@$$word\",\n              roles: [ \"migrate\" ]\n            }\n          )\n\n- For source clusters running MongoDB 2.6 or 3.0 a user must have,\n  at a minimum, the :authrole:`readAnyDatabase` role. For example:\n    \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/mongomirror-required-roles.rst"
  },
  {
    "code": "     :emphasize-lines: 6\n\n       use admin\n          db.createUser(\n            {\n              user: \"mySourceUser\",\n              pwd: \"mySourceP@$$word\",\n              roles: [ \"readAnyDatabase\" ]\n            }\n          )\n\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/mongomirror-required-roles.rst"
  },
  {
    "code": "          :copyable: true\n\n          https://auth.mongodb.com/app/salesforce/exk1rw00vux0h1iFz297/sso/saml\n\n   * - MongoDB University\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/optional-idp-relay-state-step.rst"
  },
  {
    "code": "          :copyable: true\n\n          https://auth.mongodb.com/home/mongodb_thoughtindustriesstaging_1/0oadne22vtcdV5riC297/alndnea8d6SkOGXbS297\n   \n   * - MongoDB Community Forums\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/optional-idp-relay-state-step.rst"
  },
  {
    "code": "          :copyable: true\n\n          https://auth.mongodb.com/home/mongodbexternal_communityforums_3/0oa3bqf5mlIQvkbmF297/aln3bqgadajdHoymn297\n\n   * - MongoDB Feedback Engine\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/optional-idp-relay-state-step.rst"
  },
  {
    "code": "          :copyable: true\n\n          https://auth.mongodb.com/home/mongodbexternal_uservoice_1/0oa27cs0zouYPwgj0297/aln27cvudlhBT7grX297\n\n   * - MongoDB JIRA\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/optional-idp-relay-state-step.rst"
  },
  {
    "code": "          :copyable: true\n          \n          https://auth.mongodb.com/app/mongodbexternal_mongodbjira_1/exk1s832qkFO3Rqox297/sso/saml\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/optional-idp-relay-state-step.rst"
  },
  {
    "code": "                  :copyable: false\n\n                  mongodb-site-verification=<32-character string>\n\n            #. Log in to your domain name provider (such as \n               GoDaddy.com or networksolutions.com).\n\n            #. Add the TXT record that |service| provides to your domain.\n\n            #. Return to |service| and click :guilabel:`Finish`.\n\n   .. step:: Verify \n      your domain.\n\n      The :guilabel:`Domains` screen displays both unverified and verified\n      domains you've mapped to your |idp|. To verify your domain, click the\n      target domain's :guilabel:`Verify` button. |service| shows whether\n      the verification succeeded in a banner at the top of the screen.\n\n",
    "language": "ini",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/procedures/manage-domain-mapping.rst"
  },
  {
    "code": "          :copyable: false\n       \n          command <cmd name> is not allowed in this Atlas tier\n          (Unauthorized) not authorized on <db name> to execute command \n          <cmd name>\n\n   * - :manual:`Change Streams </changeStreams/>`\n     - {+Serverless-instances+} don't support change streams.\n\n       {+Serverless-instances+} don't support this feature even though \n       it's a part of the :manual:`Stable API v1 \n       </reference/stable-api/#api-v1-commands>`.\n\n   * - :manual:`Collation </reference/collation/>` \n     - {+Serverless-instances+} don't support collation on collections,\n       indexes, or queries.\n\n       .. include:: /includes/fact-unsupported-stable-api.rst\n\n   * - |bson| Nested Object Depth\n     - {+Serverless-instances+} can't store documents with more than 50 \n       nested levels.\n\n   * - Transaction Size\n     - {+Serverless-instances+} support multi-document transactions \n       that are up to 700 MB in size. |service| aborts any \n       {+serverless-instance+} transactions that\n       exceed 700 MB.\n\n   * - Write Concern\n     - {+Serverless-instances+} don't support a numeric :manual:`write \n       concern </reference/write-concern/#mongodb-writeconcern-writeconcern.-number->` level greater than \n       ``1``, or custom write concerns. Operations that use a \n       write concern level greater than ``1``, or custom write \n       concerns, might return an ``UnsatisfiableWriteConcern`` error. \n       This behavior also applies to operations sent over a connection \n       created with a :manual:`write concern option \n       </reference/connection-string/#write-concern-options>`.\n\n       For {+clusters+} other than ``M0``, ``M2``, or ``M5`` \n       {+clusters+}, you can verify whether you're using a write \n       concern mode that {+serverless-instances+} don't support with \n       the :manual:`serverStatus </reference/command/serverStatus/>` \n       command's :manual:`opWriteConcernCounters </reference/command/serverStatus/#opwriteconcerncounters>` \n       field.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/serverless-features-not-supported.rst"
  },
  {
    "code": "                :copyable: false\n      \n                CN=Jane Doe,O=MongoDB,C=US\n      \n         * - :guilabel:`User Privileges`\n      \n           - You can assign roles in one of the following ways:\n      \n             - Select :atlasrole:`Atlas admin`, which provides the user\n               with :atlasrole:`readWriteAnyDatabase` as well as a number\n               of administrative privileges.\n      \n             - Select :atlasrole:`Read and write to any database`, which\n               provides the user with privileges to read and write to any\n               database.\n      \n             - Select :atlasrole:`Only read any database` which provides\n               the user with privileges to read any database.\n      \n             - Select :guilabel:`Select Custom Role` to select a custom \n               role previously created in |service|. You can create custom \n               roles for database users in cases where the \n               :manual:`built-in database user roles </reference/built-in-roles/#database-user-roles>` \n               cannot describe the desired set of \n               privileges. For more information on custom roles, see \n               :ref:`mongodb-roles`.\n      \n             - Click :guilabel:`Add Default Privileges`. When you\n               click this option, you can select\n               individual roles and specify the database on which the\n               roles apply. Optionally, for the ``read`` and ``readWrite``\n               roles, you can also specify a collection. If you do not\n               specify a collection for ``read`` and ``readWrite``, the\n               role applies to all non-``system`` collections in the\n               database.\n      \n               .. include:: /includes/fact-read-read-write-actions.rst\n      \n             For information on the built-in |service| privileges, see\n             :ref:`atlas-user-privileges`.\n      \n             For more information on authorization, see :manual:`Role-Based\n             Access Control </core/authorization>` and :manual:`Built-in\n             Roles </core/security-built-in-roles>` in the MongoDB manual.\n      \n   .. step:: Click :guilabel:`Add User`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-add-self-managed-x509-user.rst"
  },
  {
    "code": "                :copyable: false\n      \n                CN=Jane Doe,O=MongoDB,C=US\n\n         * - :guilabel:`User Privileges`\n      \n           - You can assign roles in one of the following ways:\n      \n             - Select :atlasrole:`Atlas admin`, which provides the user\n               with :atlasrole:`readWriteAnyDatabase` as well as a number\n               of administrative privileges.\n      \n             - Select :atlasrole:`Read and write to any database`, which\n               provides the user with privileges to read and write to any\n               database.\n      \n             - Select :atlasrole:`Only read any database` which provides\n               the user with privileges to read any database.\n      \n             - Select :guilabel:`Select Custom Role` to select a custom \n               role previously created in |service|. You can create custom \n               roles for database users in cases where the \n               :manual:`built-in database user roles </reference/built-in-roles/#database-user-roles>` \n               cannot describe the desired set of \n               privileges. For more information on custom roles, see \n               :ref:`mongodb-roles`.\n      \n             - Click :guilabel:`Add Default Privileges`. When you\n               click this option, you can select\n               individual roles and specify the database on which the\n               roles apply. Optionally, for the ``read`` and ``readWrite``\n               roles, you can also specify a collection. If you do not\n               specify a collection for ``read`` and ``readWrite``, the\n               role applies to all non-``system`` collections in the\n               database.\n      \n               .. include:: /includes/fact-read-read-write-actions.rst\n      \n             For information on the built-in |service| privileges, see\n             :ref:`atlas-user-privileges`.\n      \n             For more information on authorization, see :manual:`Role-Based\n             Access Control </core/authorization>` and :manual:`Built-in\n             Roles </core/security-built-in-roles>` in the MongoDB manual.\n      \n   .. step:: Click :guilabel:`Add User`.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-adf-add-self-managed-x509-user.rst"
  },
  {
    "code": "            :copyable: true \n            \n            .. input:: \n               :language: python \n\n               from pprint import pprint\n\n               query_text = \"tell me a science fact\"\n               float32_results = run_vector_search(query_text, col, \"{FIELD-NAME-FOR-FLOAT32-TYPE}\")\n               int8_results = run_vector_search(query_text, col, \"{FIELD-NAME-FOR-INT8-TYPE}\")\n\n               print(\"results from float32 embeddings\")\n               pprint(list(float32_results))\n               print(\"--------------------------------------------------------------------------\")\n               print(\"results from int8 embeddings\")\n               pprint(list(int8_results))\n\n            .. output:: \n               :language: shell \n\n               results from float32 embeddings\n               [{'data': 'Mount Everest is the highest peak on Earth at 8,848m.',\n                 'score': 0.4222325384616852},\n                {'data': 'The Great Wall of China is visible from space.',\n                 'score': 0.4112812876701355},\n                {'data': 'The Mona Lisa was painted by Leonardo da Vinci.',\n                 'score': 0.3871753513813019},\n                {'data': 'The Eiffel Tower was completed in Paris in 1889.',\n                 'score': 0.38428616523742676},\n                {'data': 'Shakespeare wrote 37 plays and 154 sonnets during his lifetime.',\n                 'score': 0.37546128034591675}]\n               --------------------------------------------------------------------------\n               results from int8 embeddings\n               [{'data': 'Mount Everest is the highest peak on Earth at 8,848m.',\n                 'score': 4.619598996669083e-07},\n                {'data': 'The Great Wall of China is visible from space.',\n                 'score': 4.5106872903488693e-07},\n                {'data': 'The Mona Lisa was painted by Leonardo da Vinci.',\n                 'score': 4.0036800896814384e-07},\n                {'data': 'The Eiffel Tower was completed in Paris in 1889.',\n                 'score': 3.9345573554783186e-07},\n                {'data': 'Shakespeare wrote 37 plays and 154 sonnets during his lifetime.',\n                 'score': 3.797164538354991e-07}]\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-bson-vectors-python.rst"
  },
  {
    "code": "         :language: json\n         :copyable: true \n         :linenos:\n\n      .. example:: \n\n         Create a file named ``vector-index.json``.\n\n   .. step:: Replace the following placeholder values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<name-of-database>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<name-of-collection>``\n           - Collection for which you want to create the index.\n\n         * - ``<index-name>``\n           - Name of your index. If you omit the index name, {+avs+} names the index ``vector_index``.\n\n         * - ``<number-of-dimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<field-to-index>``\n           - Vector and filter fields to index.\n\n      .. example:: \n\n         Copy and paste the following index definition into the\n         ``vector-index.json`` file. The following index definition\n         indexes the ``plot_embedding`` field as the ``vector`` type\n         and the ``genres`` and ``year`` fields as the ``filter`` type\n         in an {+avs+} index. The ``plot_embedding`` field contains\n         embeddings created using OpenAI's ``text-embedding-ada-002``\n         embeddings model. The index definition specifies ``1536``\n         vector dimensions and measures similarity using ``euclidean`` distance.\n\n         .. tabs:: \n\n            .. tab:: Basic Example\n               :tabid: basic\n\n               The following index definition indexes only the vector\n               embeddings field for performing vector search.\n                  \n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-acli.rst"
  },
  {
    "code": "                  :language: json\n                  :copyable:\n                  :linenos:\n\n            .. tab:: Filter Example \n               :tabid: advanced\n\n               This index definition indexes the following fields: \n         \n               - A string field (``genres``) and a numeric field (``year``)\n                 for pre-filtering the data. \n               - The vector embeddings field (``plot_embedding``) for\n                 performing vector search against pre-filtered data.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-acli.rst"
  },
  {
    "code": "                  :language: json\n                  :copyable:\n                  :linenos:\n\n   .. step:: Run the following command to create the index.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-acli.rst"
  },
  {
    "code": "         :copyable: true\n      \n         atlas clusters search indexes create --clusterName [cluster_name] --file [vector_index].json\n\n      In the command, replace the following placeholder values:\n      \n      - ``cluster_name`` is the name of the |service| {+cluster+} that\n        contains the collection for which you want to create the index.\n      - ``vector_index`` is the name of the |json| file that contains the\n        index definition for the {+avs+} index.\n\n      .. example:: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-acli.rst"
  },
  {
    "code": "            :copyable: true\n      \n            atlas clusters search indexes create --clusterName [cluster_name] --file vector-index.json\n\n      To learn more about the command syntax and parameters, see the\n      {+atlas-cli+} documentation for the :atlascli:`atlas clusters search\n      indexes create </command/atlas-clusters-search-indexes-create/>`\n      command.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-acli.rst"
  },
  {
    "code": "         :copyable: true \n         :linenos:\n\n         {\n           \"fields\":[ \n             {\n               \"type\": \"vector\",\n               \"path\": <field-to-index>,\n               \"numDimensions\": <number-of-dimensions>,\n               \"similarity\": \"euclidean | cosine | dotProduct\"\n             },\n             {\n               \"type\": \"filter\",\n               \"path\": \"<field-to-index>\"\n             },\n             ...\n           ]\n         }\n\n      To learn more about the fields in the index, see\n      :ref:`avs-types-vector-search`. \n\n      .. example:: \n\n         The following index definition indexes the ``plot_embedding``\n         field as the ``vector`` type and the ``genres`` and ``year``\n         fields as the ``filter`` type in an {+avs+} index. The\n         ``plot_embedding`` field contains embeddings created using\n         OpenAI's ``text-embedding-ada-002`` embeddings model. The\n         index definition specifies ``1536`` vector dimensions and\n         measures similarity using ``euclidean`` distance. \n\n         .. tabs:: \n\n            .. tab:: Basic Example\n               :tabid: basic\n\n               The following index definition indexes only the vector\n               embeddings field for performing vector search.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-atlas-ui.rst"
  },
  {
    "code": "                  :linenos:\n\n                  {\n                    \"fields\": [{\n                      \"type\": \"vector\",\n                      \"path\": \"plot_embedding\",\n                      \"numDimensions\": 1536,\n                      \"similarity\": \"euclidean\"\n                    }]\n                  }\n\n            .. tab:: Filter Example \n               :tabid: advanced\n\n               This index definition indexes the following fields: \n      \n               - A string field (``genres``) and a numeric field (``year``)\n                 for pre-filtering the data. \n               - The vector embeddings field (``plot_embedding``) for\n                 performing vector search against pre-filtered data.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-atlas-ui.rst"
  },
  {
    "code": "                  :linenos:\n\n                  {\n                    \"fields\": [{\n                      \"type\": \"vector\",\n                      \"path\": \"plot_embedding\",\n                      \"numDimensions\": 1536,\n                      \"similarity\": \"euclidean\"\n                    },\n                    {\n                      \"type\": \"filter\",\n                      \"path\": \"genres\"\n                    },\n                    {\n                      \"type\": \"filter\",\n                      \"path\": \"year\"\n                    }]\n                  }\n\n   .. step:: Click :guilabel:`Next` to review the index. \n\n   .. include:: /includes/steps-fts-finish-index-creation.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-atlas-ui.rst"
  },
  {
    "code": "         :language: go\n         :copyable: true \n         :linenos: \n\n      .. example:: \n\n         Create a file named ``vector-index.go``.\n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - Collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - Name of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n         * - ``<numberOfDimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<fieldToIndex>``\n           - Vector and filter fields to index.\n\n      .. example:: \n\n         Copy and paste the following into the ``vector-index.go`` file\n         and replace the ``<connectionString>`` placeholder value. The\n         following index definition indexes the ``plot_embedding`` field\n         as the ``vector`` type and the ``genres`` and ``year`` fields\n         as the ``filter`` type in an {+avs+} index. The\n         ``plot_embedding`` field contains embeddings created using\n         OpenAI's ``text-embedding-ada-002`` embeddings model. The index \n         definition specifies ``1536`` vector dimensions and measures\n         similarity using ``euclidean`` distance. \n\n         .. tabs:: \n\n            .. tab:: Basic Example\n               :tabid: basic\n\n               The following index definition indexes only the vector\n               embeddings field (``plot_embedding``) for performing vector search. \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-go.rst"
  },
  {
    "code": "                  :language: go\n                  :copyable: true \n                  :linenos:\n\n            .. tab:: Filter Example \n               :tabid: advanced\n\n               This index definition indexes the following fields: \n      \n               - A string field (``genres``) and a numeric field (``year``)\n                 for pre-filtering the data. \n               - The vector embeddings field (``plot_embedding``) for\n                 performing vector search against pre-filtered data.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-go.rst"
  },
  {
    "code": "                  :language: go\n                  :copyable: true \n                  :linenos:\n\n   .. step:: Run the following command to create the index.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-go.rst"
  },
  {
    "code": "            :copyable: true \n\n            .. input:: \n               :language: shell\n              \n               use sample_mflix \n\n            .. output:: \n              :language: shell \n\n              switched to db sample_mflix\n\n   .. step:: Run the :method:`db.collection.createSearchIndex()` method. \n\n      The :method:`db.collection.createSearchIndex()` method has the\n      following syntax:   \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-mongosh.rst"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n\n         db.<collectionName>.createSearchIndex(\n           \"<index-name>\",\n           \"vectorSearch\", //index type\n           {\n             fields: [\n               {\n                 \"type\": \"vector\",\n                 \"numDimensions\": <number-of-dimensions>,\n                 \"path\": \"<field-to-index>\",\n                 \"similarity\": \"euclidean | cosine | dotProduct\"\n               },\n               {\n                 \"type\": \"filter\",\n                 \"path\": \"<field-to-index>\"\n               },\n               ...\n             ]\n           }\n         );\n         \n      .. example:: \n\n         The following index definition indexes the ``plot_embedding``\n         field as the ``vector`` type and the ``genres`` and ``year``\n         fields as the ``filter`` type in an {+avs+} index. The\n         ``plot_embedding`` field contains embeddings created using\n         OpenAI's ``text-embedding-ada-002`` embeddings model. The\n         index definition specifies ``1536`` vector dimensions and\n         measures similarity using ``euclidean`` distance.\n\n         .. tabs:: \n\n            .. tab:: Basic Example\n               :tabid: basic\n\n               The following index definition indexes only the vector\n               embeddings field for performing vector search.  \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-mongosh.rst"
  },
  {
    "code": "                  :language: shell\n                  :copyable: true \n                  :linenos:\n\n            .. tab:: Filter Example \n               :tabid: advanced\n\n               This index definition indexes the following fields: \n      \n               - A string field (``genres``) and a numeric field (``year``)\n                 for pre-filtering the data. \n               - The vector embeddings field (``plot_embedding``) for\n                 performing vector search against pre-filtered data.\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-mongosh.rst"
  },
  {
    "code": "                  :language: shell\n                  :copyable: true \n                  :linenos:\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-mongosh.rst"
  },
  {
    "code": "         :language: javascript\n         :copyable: true \n         :linenos: \n\n      .. example:: \n\n         Create a file named ``vector-index.js``.\n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - Collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - Name of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n         * - ``<numberOfDimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<fieldToIndex>``\n           - Vector and filter fields to index.\n\n      .. example:: \n\n         Copy and paste the following into the ``vector-index.js`` file\n         and replace the ``<connectionString>`` placeholder value. The\n         following index definition indexes the ``plot_embedding`` field\n         as the ``vector`` type and the ``genres`` and ``year`` fields\n         as the ``filter`` type in an {+avs+} index. The\n         ``plot_embedding`` field contains embeddings created using\n         OpenAI's ``text-embedding-ada-002`` embeddings model. The index \n         definition specifies ``1536`` vector dimensions and measures\n         similarity using ``euclidean`` distance. \n\n         .. tabs:: \n\n            .. tab:: Basic Example\n               :tabid: basic\n\n               The following index definition indexes only the vector\n               embeddings field (``plot_embedding``) for performing vector search. \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-nodejs.rst"
  },
  {
    "code": "                  :language: js\n                  :copyable: true \n                  :linenos:\n\n            .. tab:: Filter Example \n               :tabid: advanced\n\n               This index definition indexes the following fields: \n      \n               - A string field (``genres``) and a numeric field (``year``)\n                 for pre-filtering the data. \n               - The vector embeddings field (``plot_embedding``) for\n                 performing vector search against pre-filtered data.\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-nodejs.rst"
  },
  {
    "code": "                  :language: js\n                  :copyable: true \n                  :linenos:\n\n   .. step:: Run the following command to create the index.\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-nodejs.rst"
  },
  {
    "code": "               :language: python\n               :copyable: true \n               :linenos: \n\n            To learn more, see the `create_search_index() <https://pymongo.readthedocs.io/en/4.7.1/api/pymongo/collection.html#pymongo.collection.Collection.create_search_index>`__\n            method. \n\n         .. tab:: \n            :tabid: Multiple Indexes\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-pymongo.rst"
  },
  {
    "code": "               :language: python\n               :copyable: true \n               :linenos: \n\n            To learn more, see the `create_search_indexes() <https://pymongo.readthedocs.io/en/4.7.1/api/pymongo/collection.html#pymongo.collection.Collection.create_search_indexes>`__ \n            method.\n\n      .. example:: \n\n         Create a file named ``vector-index.py``.\n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - Collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - Name of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n         * - ``<numberOfDimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<fieldToIndex>``\n           - Vector and filter fields to index.\n\n      .. example:: \n\n         Copy and paste the following into the ``vector-index.py`` and\n         replace the ``<connectionString>`` placeholder value. The following index\n         definition indexes the ``plot_embedding`` field as the\n         ``vector`` type and the ``genres`` and ``year`` fields as the\n         ``filter`` type in an {+avs+} index. The ``plot_embedding``\n         field contains embeddings created using OpenAI's\n         ``text-embedding-ada-002`` embeddings model. The index\n         definition specifies ``1536`` vector dimensions and measures\n         similarity using ``euclidean`` distance. \n\n         .. tabs:: \n\n            .. tab:: Basic Example\n               :tabid: basic\n\n               The following index definition indexes only the vector\n               embeddings field (``plot_embedding``) for performing\n               vector search.   \n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-pymongo.rst"
  },
  {
    "code": "                  :language: python\n                  :copyable: true \n                  :linenos:\n\n            .. tab:: Filter Example \n               :tabid: advanced\n\n               This index definition indexes the following fields: \n      \n               - A string field (``genres``) and a numeric field (``year``)\n                 for pre-filtering the data. \n               - The vector embeddings field (``plot_embedding``) for\n                 performing vector search against pre-filtered data.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-pymongo.rst"
  },
  {
    "code": "                  :language: python\n                  :copyable: true \n                  :linenos:\n\n   .. step:: Run the following command to create the index.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-create-index-pymongo.rst"
  },
  {
    "code": "         :copyable: true\n      \n         atlas clusters search indexes delete <indexId> [options]\n\n      In the command, replace the ``indexId`` placeholder value with the\n      unique identifier of the index to delete. \n\n      To learn more about the command syntax and parameters, see the\n      {+atlas-cli+} documentation for the :atlascli:`atlas clusters search\n      indexes delete </command/atlas-clusters-search-indexes-delete/>`\n      command.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-delete-index-acli.rst"
  },
  {
    "code": "         :language: go\n         :copyable: true \n         :linenos: \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - The database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - The collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - The name of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n   .. step:: Run the following command to delete the index.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-delete-index-go.rst"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n\n         db.<collectionName>.dropSearchIndex( \"<index-name>\" );\n         \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-delete-index-mongosh.rst"
  },
  {
    "code": "         :language: javascript\n         :copyable: true \n         :linenos: \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - The database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - The collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - The name of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n   .. step:: Run the following command to delete the index.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-delete-index-nodejs.rst"
  },
  {
    "code": "         :language: python\n         :copyable: true \n         :linenos: \n\n      To learn more, see the `drop_search_index() <https://pymongo.readthedocs.io/en/4.7.1/api/pymongo/collection.html#pymongo.collection.Collection.drop_search_index>`__\n      method. \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - The name of the database that contains the collection.\n\n         * - ``<collectionName>``\n           - The name of the collection.\n\n         * - ``<indexName>``\n           - The name of the index to delete.\n\n   .. step:: Run the following command to delete the index.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-delete-index-pymongo.rst"
  },
  {
    "code": "         :language: json\n         :copyable: true \n         :linenos:\n\n   .. step:: Replace the following placeholder values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<name-of-database>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<name-of-collection>``\n           - Collection for which you want to create the index.\n\n         * - ``<index-name>``\n           - Name of your index. If you omit the index name, {+avs+} names the index ``vector_index``.\n\n         * - ``<number-of-dimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<field-to-index>``\n           - Vector and filter fields to index.\n\n   .. step:: Run the following command to update the index.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-edit-index-acli.rst"
  },
  {
    "code": "         :copyable: true\n      \n         atlas clusters search indexes update <indexId> --clusterName [cluster_name] --file [vector-_index].json\n\n      In the command, replace the following placeholder values:\n      \n      - ``cluster_name`` - the name of the |service| {+cluster+} that\n        contains the collection for which you want to update the index.\n      - ``vector_index`` - the name of the |json| file that contains the\n        modified index definition for the {+avs+} index.\n\n      To learn more about the command syntax and parameters, see the\n      {+atlas-cli+} documentation for the :atlascli:`atlas clusters\n      search indexes update </command/atlas-clusters-search-indexes-update/>`\n      command.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-edit-index-acli.rst"
  },
  {
    "code": "         :language: go\n         :copyable: true \n         :linenos: \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - Collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - Name of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n         * - ``<numberOfDimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<fieldToIndex>``\n           - Vector and filter fields to index.\n\n   .. step:: Run the following command to update the index.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-edit-index-go.rst"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n\n         db.<collectionName>.updateSearchIndex(\n           \"<index-name>\",\n           {\n             fields: [\n               {\n                 \"type\": \"vector\",\n                 \"numDimensions\": <number-of-dimensions>,\n                 \"path\": \"<field-to-index>\",\n                 \"similarity\": \"euclidean | cosine | dotProduct\"\n               },\n               {\n                 \"type\": \"filter\",\n                 \"path\": \"<field-to-index>\"\n               },\n               ...\n             ]\n           }\n         );\n         \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-edit-index-mongosh.rst"
  },
  {
    "code": "         :language: javascript\n         :copyable: true \n         :linenos: \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - Collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - Name of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n         * - ``<numberOfDimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<fieldToIndex>``\n           - Vector and filter fields to index.\n\n   .. step:: Run the following command to update the index.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-edit-index-nodejs.rst"
  },
  {
    "code": "         :language: python\n         :copyable: true \n         :linenos: \n\n      To learn more, see the `update_search_index() <https://pymongo.readthedocs.io/en/4.7.1/api/pymongo/collection.html#pymongo.collection.Collection.update_search_index>`__\n      method. \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - Database that contains the collection for which you want to create the index.\n\n         * - ``<collectionName>``\n           - Collection for which you want to create the index.\n\n         * - ``<indexName>``\n           - Bame of your index. If you omit the index name, |fts| names the index ``vector_index``.\n\n         * - ``<numberOfDimensions>``\n           - Number of vector dimensions that {+avs+} enforces at index-time and query-time.\n\n         * - ``<fieldToIndex>``\n           - Vector and filter fields to index.\n\n   .. step:: Run the following command to update the index.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-edit-index-pymongo.rst"
  },
  {
    "code": "      :emphasize-lines: 2\n\n      {\n        \"type\": \"module\",\n        // other fields...\n      }\n      \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-nodejs-config-modules.rst"
  },
  {
    "code": "            :copyable: true \n            :linenos: \n\n            {\n              \"fields\": [{\n                \"type\": \"vector\",\n                \"path\": \"plot_embedding\",\n                \"numDimensions\": 1536,\n                \"similarity\": \"dotProduct\"\n              }]\n            }\n\n         This index definition:\n\n         - Indexes the ``plot_embedding`` field as the ``vector`` :ref:`type <avs-types-vector>`. \n           This field contains :term:`vector embeddings` that represent the summary of a \n           movie's plot.\n         - Specifies ``1536`` :term:`vector dimensions <vector>`.\n         - Measures :ref:`similarity <fields-similarity>` using ``dotProduct`` similarity.\n\n      #. Click :guilabel:`Next`.\n\n      #. Click :guilabel:`Create Search Index`. \n\n         The index should take about one minute to build. When your vector index is \n         finished building, the :guilabel:`Status` column reads :guilabel:`Active`.\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-create-index-atlas.rst"
  },
  {
    "code": "           :copyable: true \n\n           {\n             \"database\": \"sample_mflix\",\n             \"collectionName\": \"embedded_movies\",\n             \"type\": \"vectorSearch\",\n             \"name\": \"vector_index\",\n               \"fields\": [\n                 {\n                   \"type\": \"vector\",\n                   \"path\": \"plot_embedding\",\n                   \"numDimensions\": 1536,\n                   \"similarity\": \"dotProduct\"\n                 }\n               ]\n           }\n\n         This index definition:\n\n         - Indexes the ``plot_embedding`` field as the ``vector`` type. \n           This field contains :term:`vector embeddings` that represent the summary of a \n           movie's plot.\n         - Specifies ``1536`` :term:`vector dimensions <vector>`.\n         - Measures :ref:`similarity <fields-similarity>` using ``dotProduct`` similarity.\n         \n      #. Save the file, and then run the following command\n         in your terminal, replacing ``<path-to-file>`` with the path to the \n         ``vector-index.json`` file that you created.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-create-index-local.rst"
  },
  {
    "code": "            :copyable: true \n\n            atlas deployments search indexes create --file <path-to-file>\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-create-index-local.rst"
  },
  {
    "code": "          :language: c\n          :linenos: \n\n       .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n  .. step:: Specify the ``<connection-string>``.\n\n    .. include:: /includes/steps-connection-string-drivers.rst\n\n  .. step:: Configure CMake for your project.\n\n    a. In your project directory, create a file named \n       ``CMakeLists.txt`` and copy the following code into the file.\n \n       .. include:: /includes/avs-examples/pipeline-stage-examples/cmakelists-txt-c.rst\n\n    #. Create a directory in your project folder called ``build``.\n\n",
    "language": "c",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-c.rst"
  },
  {
    "code": "       :copyable: true\n\n       .. input::\n          :language: shell\n\n          cmake --build . \n          ./atlas-vector-search-quick-start\n\n       .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-c-output.js\n            :language: js\n            :linenos:\n\n",
    "language": "bash",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-c.rst"
  },
  {
    "code": "            :language: cpp\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n      \n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Compile and run your query.\n\n      a. Create and enter the ``/build`` directory:\n\n",
    "language": "cpp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-cpp.rst"
  },
  {
    "code": "            :copyable: true\n\n            .. input::\n               :language: bash\n\n               ./query_quick_start\n\n            .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-nodejs-output.js\n               :language: js\n               :linenos:\n\n",
    "language": "bash",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-cpp.rst"
  },
  {
    "code": "            :language: csharp\n            :linenos: \n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n      \n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n    \n      Compile and run the ``Program.cs`` file.\n      \n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-csharp.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            dotnet run query-quick-start.csproj\n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-csharp-output.js\n            :language: js\n            :linenos:\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-csharp.rst"
  },
  {
    "code": "            :copyable: true\n\n            mkdir go-vector-quickstart && cd go-vector-quickstart\n            go mod init go-vector-quickstart\n\n      b. Add MongoDB Go as a dependency:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-go.rst"
  },
  {
    "code": "            :copyable: true\n\n            go get go.mongodb.org/mongo-driver/mongo\n\n      For more detailed installation instructions, see the\n      :ref:`MongoDB Go Driver documentation <golang-quickstart>`.\n\n   .. step:: Construct your vector search query.\n\n      .. include:: /includes/fact-avs-quick-start-intro.rst\n\n      a. Create a file named ``atlas_vector_search_quick_start.go`` .\n\n      #. Copy and paste the following sample query into the\n         ``atlas_vector_search_quick_start.go`` file:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-go.rst"
  },
  {
    "code": "            :language: go\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n\n      Run the following command to query your collection:\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-go.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            go run atlas_vector_search_quick_start.go\n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-nodejs-output.js\n            :language: js\n            :linenos:\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-go.rst"
  },
  {
    "code": "              :copyable: true\n\n              <dependency>\n                 <groupId>org.mongodb</groupId>\n                 <artifactId>mongodb-driver-sync</artifactId>\n                 <version>5.2.0</version>\n              </dependency>\n\n         - If you are using Gradle, add the following dependency to your\n           ``build.gradle`` dependencies list:\n\n",
    "language": "xml",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-java.rst"
  },
  {
    "code": "              :copyable: true\n\n              dependencies {\n                 implementation 'org.mongodb:mongodb-driver-sync:5.2.0'\n              }\n\n      #. Add the Java driver JAR files to your ``CLASSPATH``.\n\n      For more detailed installation instructions and version compatibility, see\n      the :driver:`MongoDB Java Driver documentation\n      </java/sync/current/quick-start/#std-label-add-mongodb-dependency>`.\n\n   .. step:: Construct your vector search query.\n\n      .. include:: /includes/fact-avs-quick-start-intro.rst\n\n      a. Create a file named ``BasicQuery.java``.\n\n      #. Copy and paste the following sample query into the \n         ``BasicQuery.java`` file:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-java.rst"
  },
  {
    "code": "            :language: java\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n    \n      Compile and run the ``BasicQuery.java`` file:\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-java.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell \n\n            javac BasicQuery.java\n            java BasicQuery\n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-java-output.js \n            :language: js\n            :linenos: \n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-java.rst"
  },
  {
    "code": "            :copyable: true\n\n            dependencies {\n               implementation 'mongodb-driver-kotlin-coroutine:5.2.0'\n            }\n\n      - If you are using Maven, add the following dependency to your\n         ``pom.xml`` dependencies list:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-coroutine.rst"
  },
  {
    "code": "            :copyable: true\n\n            <dependency>\n               <groupId>org.mongodb</groupId>\n               <artifactId>mongodb-driver-kotlin-coroutine</artifactId>\n               <version>5.2.0</version>\n            </dependency>\n\n      For more detailed installation instructions and version compatibility,\n      see the :ref:`MongoDB Kotlin Coroutine Driver documentation\n      <kotlin-quickstart>`.\n\n   .. step:: Construct your vector search query.\n\n      .. include:: /includes/fact-avs-quick-start-intro.rst\n\n      a. Create a file named ``atlasVectorSearchQuery.kt``.\n\n      #. Copy and paste the following sample query into the\n         ``atlasVectorSearchQuery.kt`` file:\n\n",
    "language": "xml",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-coroutine.rst"
  },
  {
    "code": "            :language: kotlin\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n\n      Run the ``atlasVectorSearchQuery.kt`` file in your IDE.\n      The output should resemble the following:\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-coroutine.rst"
  },
  {
    "code": "         :language: js\n         :linenos:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-coroutine.rst"
  },
  {
    "code": "            :copyable: true\n\n            dependencies {\n               implementation 'mongodb-driver-kotlin-sync:5.2.0'\n            }\n\n      - If you are using Maven, add the following dependency to your\n         ``pom.xml`` dependencies list:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-sync.rst"
  },
  {
    "code": "            :copyable: true\n\n            <dependency>\n               <groupId>org.mongodb</groupId>\n               <artifactId>mongodb-driver-kotlin-sync</artifactId>\n               <version>5.2.0</version>\n            </dependency>\n\n      For more detailed installation instructions and version compatibility,\n      see the :ref:`MongoDB Kotlin Sync Driver documentation\n      <kotlin-sync-download-install>`.\n\n   .. step:: Construct your vector search query.\n\n      .. include:: /includes/fact-avs-quick-start-intro.rst\n\n      a. Create a file named ``atlasVectorSearchQuery.kt``.\n\n      #. Copy and paste the following sample query into the\n         ``atlasVectorSearchQuery.kt`` file:\n\n",
    "language": "xml",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-sync.rst"
  },
  {
    "code": "            :language: kotlin\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n\n      Run the ``atlasVectorSearchQuery.kt`` file in your IDE.\n      The output should resemble the following:\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-sync.rst"
  },
  {
    "code": "         :language: js\n         :linenos:\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-kotlin-sync.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: shell\n\n            use sample_mflix\n      \n         .. output:: \n            :language: shell\n      \n            switched to db sample_mflix\n\n   .. step:: Construct and run your vector search query. \n\n      a. Copy and paste the following sample query into your terminal and then \n         run it using {+mongosh+}. {+mongosh+} might lag slightly when you paste \n         in the query due to the number of characters in the vector embedding. \n\n         .. include:: /includes/fact-avs-quick-start-intro.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-mongosh.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: /includes/avs-examples/pipeline-stage-examples/basic-query.sh\n            :language: json\n            :linenos: \n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-shell-output.js\n            :language: js\n            :linenos:   \n         \n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`. \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-mongosh.rst"
  },
  {
    "code": "         :copyable: true \n\n         npm install mongodb\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-nodejs.rst"
  },
  {
    "code": "         :copyable: true \n\n         yarn add mongodb\n\n      For more detailed installation instructions, see the \n      :ref:`MongoDB Node.js Driver documentation <node-quick-start-download-and-install>`.\n\n   .. step:: Construct your vector search query.\n\n      .. include:: /includes/fact-avs-quick-start-intro.rst\n    \n      a. Create a file named ``atlas-vector-search-quick-start.js`` .\n\n      #. Copy and paste the following sample query into the \n         ``atlas-vector-search-quick-start.js`` file:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-nodejs.rst"
  },
  {
    "code": "            :language: js\n            :linenos:\n\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n\n      Run the following command to query your collection: \n  \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-nodejs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n     \n            node atlas-vector-search-quick-start.js\n        \n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-nodejs-output.js \n            :language: js\n            :linenos: \n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-nodejs.rst"
  },
  {
    "code": "            :language: php\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n\n      Run the following command to query your collection:\n\n",
    "language": "php",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-php.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            php atlas_vector_search_quick_start.php\n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-nodejs-output.js\n            :language: js\n            :linenos:\n\n",
    "language": "php",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-php.rst"
  },
  {
    "code": "         :copyable: true \n\n         pip install pymongo\n\n      For more detailed installation instructions, see the \n      :ref:`MongoDB Python Driver documentation <pymongo-get-started-download-and-install>`.\n\n   .. step:: Construct your vector search query.\n\n      .. include:: /includes/fact-avs-quick-start-intro.rst\n    \n      a. Create a file named ``atlas-vector-search-quick-start.py``.\n\n      #. Copy and paste the following sample query into the \n         ``atlas-vector-search-quick-start.py`` file:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-python.rst"
  },
  {
    "code": "            :language: python\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n    \n      Run the following command to query your collection:\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-python.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n     \n            python atlas-vector-search-quick-start.py\n        \n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-python-output.js\n            :language: js\n            :linenos: \n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-python.rst"
  },
  {
    "code": "            :copyable: true\n\n            bundle init\n\n      #. Add the ``mongo`` gem to your ``Gemfile``:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-ruby.rst"
  },
  {
    "code": "            :copyable: true\n            :caption: Gemfile\n\n            gem \"mongo\"\n\n      #. Run the following command to install the dependency:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-ruby.rst"
  },
  {
    "code": "            :copyable: true\n\n            bundle install\n\n      This installs the latest version of the Ruby driver. For\n      alternate installation instructions and version compatibility,\n      see the\n      :ref:`MongoDB Ruby Driver documentation <installation>`.\n\n   .. step:: Construct your vector search query.\n\n      .. include:: /includes/fact-avs-quick-start-intro.rst\n\n      a. Create a file named ``atlas_vector_search_quick_start.rb`` .\n\n      #. Copy and paste the following sample query into the\n         ``atlas_vector_search_quick_start.rb`` file:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-ruby.rst"
  },
  {
    "code": "            :language: ruby\n            :linenos:\n\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n\n      Run the following command to query your collection:\n\n",
    "language": "ruby",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-ruby.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            bundle exec ruby atlas_vector_search_quick_start.rb\n\n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-nodejs-output.js\n            :language: js\n            :linenos:\n\n",
    "language": "ruby",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-ruby.rst"
  },
  {
    "code": "               :language: rust\n         \n         .. tab:: \n            :tabid: Synchronous API\n\n",
    "language": "rust",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-rust.rst"
  },
  {
    "code": "               :language: rust\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n   .. step:: Specify the ``<connection-string>``.\n\n      .. include:: /includes/steps-connection-string-drivers.rst\n\n   .. step:: Run your query.\n    \n      Run the following command to query your collection:\n\n",
    "language": "rust",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-rust.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n     \n            cargo run\n        \n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-python-output.js\n            :language: js\n            :linenos: \n\n",
    "language": "rust",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-rust.rst"
  },
  {
    "code": "         :copyable: false\n\n         .. input::\n            :language: bash\n\n            sbt:quick-start> ~run\n        \n         .. output:: /includes/avs-examples/pipeline-stage-examples/basic-query-nodejs-output.js \n            :language: js\n            :linenos: \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-queries-scala.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: /includes/avs-examples/tutorial/quick-start-ui.js \n            :language: json\n            :linenos:\n\n         .. output:: /includes/avs-examples/tutorial/quick-start-ui-output.js\n            :language: javascript\n            :linenos:\n\n      .. include:: /includes/fact-avs-quick-start-intro-II.rst\n\n      The :guilabel:`Pipeline Output` pane displays the results of\n      your query.\n\n      To learn more about this pipeline stage, see\n      :ref:`return-vector-search-results`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-quick-start-run-query-atlas-ui.rst"
  },
  {
    "code": "         :language: javascript\n\n   .. step:: Ingest data into |service|.\n\n      In this section, you :ref:`ingest <rag-ingestion>` sample \n      data into |service| that |llm|\\s don't have access to.\n      The following code uses the :ref:`LangChain integration <langchain-js>`\n      and :driver:`Node.js driver </node/current/quick-start>` to do the\n      following:\n      \n      - Load a PDF that contains a `MongoDB earnings report\n        <https://investors.mongodb.com/node/12236/pdf>`__.\n      - Split the data into chunks, specifying the *chunk size*\n        (number of characters) and *chunk overlap* (number of overlapping\n        characters between consecutive chunks). \n      - Create vector embeddings from the chunked data by using \n        the ``getEmbeddings`` function that you defined.\n      - Store these embeddings alongside the chunked data in the\n        ``rag_db.test`` collection in your |service| {+cluster+}.\n\n      Create a file called ``ingest-data.js`` in your project, and paste the\n      following code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "         :language: javascript\n\n      Then, run the following command to execute the code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "            :language: javascript\n\n         Then, run the following command to execute the code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "            :language: javascript\n\n      #. Test retrieving the data.\n      \n         Create a new file called ``retrieve-documents-test.js``. In this step,\n         you check that the function you just defined returns relevant results.\n         \n         Paste this code into your file:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "            :language: javascript\n\n         Then, run the following command to execute the code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "            :copyable: true\n\n            .. input::\n               :language: shell\n\n               node --env-file=.env retrieve-documents-test.js\n\n            .. output:: /includes/avs-examples/rag/retrieve-data-output.sh\n               :language: console\n               :visible: false\n\n   .. step:: Generate responses with the |llm|.\n\n      In this section, you :ref:`generate <rag-ingestion>` \n      responses by prompting an |llm| to use the retrieved documents \n      as context. This example uses the function you just defined to retrieve\n      matching documents from the database, and additionally:\n      \n      - Accesses the `Mistral 7B Instruct <https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.3>`__ \n        model from Hugging Face's model hub.\n      - Instructs the |llm| to include the user's question and retrieved\n        documents in the prompt.\n      - Prompts the |llm| about MongoDB's latest AI announcements.\n      \n      Create a new file called ``generate-responses.js``, and paste the following\n      code into it:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "         :language: javascript\n\n      Then, run this command to execute the code. The generated response might\n      vary.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input::\n            :language: shell\n      \n            node --env-file=.env generate-responses.js\n\n         .. output:: \n            \n            MongoDB's latest AI announcements include the launch of the MongoDB\n            AI Applications Program (MAAP), which provides customers with\n            reference architectures, pre-built partner integrations, and\n            professional services to help them build AI-powered applications\n            quickly. Accenture has joined MAAP as the first global systems\n            integrator, establishing a center of excellence focused on MongoDB\n            projects. Additionally, Bendigo and Adelaide Bank have partnered\n            with MongoDB to modernize their core banking technology using\n            MongoDB's Relational Migrator and generative AI-powered\n            modernization tools.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-javascript.rst"
  },
  {
    "code": "            :copyable: true\n\n            .. input::\n               :language: python\n\n               # Instantiate Atlas Vector Search as a retriever\n               retriever = vector_store.as_retriever(\n                  search_type = \"similarity\"\n               )\n\n               # Run a sample query in order of relevance\n               retriever.invoke(\"AI technology\")\n\n            .. output::\n\n               [Document(metadata={'_id': '66a910ba7f78f7ec6760ceba', 'source': 'https://investors.mongodb.com/node/12236/pdf', 'page': 0}, page_content=\"more of our customers. We also see a tremendous opportunity to win more legacy workloads, as AI has now become a catalyst to modernize these\\napplications. MongoDB's  document-based architecture is particularly well-suited for the variety and scale of data required by AI-powered applications.\"),\n                Document(metadata={'_id': '66a910ba7f78f7ec6760ced6', 'source': 'https://investors.mongodb.com/node/12236/pdf', 'page': 1}, page_content='artificial intelligence, in our offerings or partnerships; the growth and expansion of the market for database products and our ability to penetrate that\\nmarket; our ability to integrate acquired businesses and technologies successfully or achieve the expected benefits of such acquisitions; our ability to'),\n                Document(metadata={'_id': '66a910ba7f78f7ec6760cec3', 'source': 'https://investors.mongodb.com/node/12236/pdf', 'page': 0}, page_content='MongoDB  continues to expand its AI ecosystem with the announcement of the MongoDB AI Applications Program (MAAP),'),\n                Document(metadata={'_id': '66a910ba7f78f7ec6760cec4', 'source': 'https://investors.mongodb.com/node/12236/pdf', 'page': 1}, page_content='which provides customers with reference architectures, pre-built partner integrations, and professional services to help\\nthem quickly build AI-powered applications. Accenture will establish a center of excellence focused on MongoDB  projects,\\nand is the first global systems integrator to join MAAP.')]\n\n   .. step:: Generate responses with the |llm|.\n\n      In this section, you :ref:`generate <rag-ingestion>` \n      responses by prompting an |llm| to use the retrieved documents \n      as context. The following code uses LangChain to do the following:\n      \n      - Access the `Mistral 7B Instruct <https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.2>`__ \n        model from Hugging Face's model hub.\n      - Instruct the |llm| to include the user's question and retrieved documents \n        in the prompt by using a `prompt template \n        <https://python.langchain.com/docs/modules/model_io/prompts/quick_start#prompttemplate>`__ \n        and `chain <https://python.langchain.com/docs/modules/chains>`__.\n      - Prompt the |llm| about MongoDB's latest AI announcements.\n      \n      Paste and run the following code in your notebook, replacing ``<token>`` \n      with your Hugging Face access token. The generated response might vary.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-python.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: python\n\n            from langchain_huggingface import HuggingFaceEndpoint\n            from langchain.prompts import PromptTemplate\n            from langchain_core.runnables import RunnablePassthrough\n            from langchain_core.output_parsers import StrOutputParser\n            import os\n\n            # Authenticate to your Hugging Face account\n            os.environ[\"HF_TOKEN\"] = \"<token>\"\n         \n            # Access the LLM (https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.2)\n            llm = HuggingFaceEndpoint(repo_id=\"mistralai/Mistral-7B-Instruct-v0.2\")\n\n            # Create prompt and RAG workflow\n            prompt = PromptTemplate.from_template(\"\"\"\n               Answer the following question based on the given context.\n\n               Question: {question}\n               Context: {context}\n            \"\"\")\n\n            rag_chain = (\n               { \"context\": retriever, \"question\": RunnablePassthrough()}\n               | prompt\n               | llm\n               | StrOutputParser()\n            )\n\n            # Prompt the LLM\n            question = \"In a few sentences, what are MongoDB's latest AI announcements?\"\n            answer = rag_chain.invoke(question)\n            print(answer)\n\n         .. output:: \n            \n            Answer: MongoDB recently announced the MongoDB AI Applications Program \n            (MAAP) as part of their efforts to expand their AI ecosystem.\n            The document-based architecture of MongoDB is particularly well-suited \n            for AI-powered applications, offering an opportunity to win more legacy \n            workloads. These announcements were made at MongoDB.local NYC.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rag-huggingface-python.rst"
  },
  {
    "code": "         :language: javascript\n         :linenos:\n\n   .. step:: Execute the code to run the queries against the ``embedded_movies`` collection.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-javascript-query.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input::\n            :language: shell\n\n            node --env-file=.env combined-query.js\n\n         .. output:: /includes/avs-examples/rrf-tutorial/shell-query-output.js\n            :language: js\n            :visible: true\n\n      If you sort the results in ascending order by replacing the value\n      of ``score`` on line 123 with ``1``, {+avs+} returns the following\n      results: \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-javascript-query.rst"
  },
  {
    "code": "         :copyable: false \n\n         [\n           {\n             _id: 'Cowboys & Aliens',\n             vs_score: 0.0012658227848101266,\n             fts_score: 0,\n             score: 0.0012658227848101266\n           },\n           {\n             _id: 'Planet of the Apes',\n             vs_score: 0.001298701298701299,\n             fts_score: 0,\n             score: 0.001298701298701299\n           },\n           {\n             _id: 'Starcrash',\n             vs_score: 0.0013157894736842105,\n             fts_score: 0,\n             score: 0.0013157894736842105\n           },\n           {\n             _id: 'Zathura: A Space Adventure',\n             vs_score: 0.0013333333333333335,\n             fts_score: 0,\n             score: 0.0013333333333333335\n           },\n           {\n             _id: 'Space Raiders',\n             vs_score: 0.0013513513513513514,\n             fts_score: 0,\n             score: 0.0013513513513513514\n           },\n           {\n             _id: 'Star Wars: Episode III - Revenge of the Sith',\n             vs_score: 0.0013698630136986301,\n             fts_score: 0,\n             score: 0.0013698630136986301\n           },\n           {\n             _id: 'The Ewok Adventure',\n             vs_score: 0.001388888888888889,\n             fts_score: 0,\n             score: 0.001388888888888889\n           },\n           {\n             _id: 'Dune',\n             vs_score: 0.0014084507042253522,\n             fts_score: 0,\n             score: 0.0014084507042253522\n           },\n           {\n             _id: 'Abiogenesis',\n             vs_score: 0.0014285714285714286,\n             fts_score: 0,\n             score: 0.0014285714285714286\n           },\n           {\n             _id: 'Guardians of the Galaxy',\n             vs_score: 0.0014705882352941176,\n             fts_score: 0,\n             score: 0.0014705882352941176\n           }\n         ]\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-javascript-query.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: sh\n\n            use sample_mflix \n\n         .. output:: \n            :language: sh\n            :emphasize-lines: 1 \n\n            switched to db sample_mflix\n\n   .. step:: Run the following |fts| queries against the ``embedded_movies`` collection.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-shell-query.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: /includes/avs-examples/rrf-tutorial/query.sh\n            :language: js \n            :linenos:\n\n         .. output:: /includes/avs-examples/rrf-tutorial/shell-query-output.js\n            :language: js\n            :visible: true\n\n      If you sort the results in ascending order by replacing the value\n      of ``score`` on line 116 with ``1``, {+avs+} returns the following\n      results: \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-shell-query.rst"
  },
  {
    "code": "         :copyable: false \n\n         [\n           {\n             _id: 'Cowboys & Aliens',\n             vs_score: 0.0012658227848101266,\n             fts_score: 0,\n             score: 0.0012658227848101266\n           },\n           {\n             _id: 'Planet of the Apes',\n             vs_score: 0.001298701298701299,\n             fts_score: 0,\n             score: 0.001298701298701299\n           },\n           {\n             _id: 'Starcrash',\n             vs_score: 0.0013157894736842105,\n             fts_score: 0,\n             score: 0.0013157894736842105\n           },\n           {\n             _id: 'Zathura: A Space Adventure',\n             vs_score: 0.0013333333333333335,\n             fts_score: 0,\n             score: 0.0013333333333333335\n           },\n           {\n             _id: 'Space Raiders',\n             vs_score: 0.0013513513513513514,\n             fts_score: 0,\n             score: 0.0013513513513513514\n           },\n           {\n             _id: 'Star Wars: Episode III - Revenge of the Sith',\n             vs_score: 0.0013698630136986301,\n             fts_score: 0,\n             score: 0.0013698630136986301\n           },\n           {\n             _id: 'The Ewok Adventure',\n             vs_score: 0.001388888888888889,\n             fts_score: 0,\n             score: 0.001388888888888889\n           },\n           {\n             _id: 'Dune',\n             vs_score: 0.0014084507042253522,\n             fts_score: 0,\n             score: 0.0014084507042253522\n           },\n           {\n             _id: 'Abiogenesis',\n             vs_score: 0.0014285714285714286,\n             fts_score: 0,\n             score: 0.0014285714285714286\n           },\n           {\n             _id: 'Guardians of the Galaxy',\n             vs_score: 0.0014705882352941176,\n             fts_score: 0,\n             score: 0.0014705882352941176\n           }\n         ]\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-shell-query.rst"
  },
  {
    "code": "            :emphasize-lines: 3\n\n            {\n               \"name\": \"hybrid-search-mongodb\",\n               \"type\": \"module\",\n               ...\n\n      #. Create an ``.env`` file.\n\n         i. In your project, create a ``.env`` file to store your Atlas connection\n            string.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-tutorial-create-index-javascript.rst"
  },
  {
    "code": "            :language: javascript\n\n      #. Run the following command to execute the code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-tutorial-create-index-javascript.rst"
  },
  {
    "code": "            :language: javascript\n\n      #. Run the following command to execute the code:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-rrf-tutorial-create-index-javascript.rst"
  },
  {
    "code": "            :copyable: true \n            :linenos: \n\n            {\n              \"fields\": [\n                {\n                  \"type\": \"vector\",\n                  \"path\": \"plot_embedding\",\n                  \"numDimensions\": 1536,\n                  \"similarity\": \"euclidean\"\n                },\n                {\n                  \"type\": \"filter\",\n                  \"path\": \"genres\"\n                },\n                {\n                  \"type\": \"filter\",\n                  \"path\": \"year\"\n                }\n              ]\n            }\n\n   .. step:: Review the index definition and then click :guilabel:`Create Search Index`.\n\n      A modal window displays to let you know that your index is building.\n\n   .. step::  Click :guilabel:`Close` to close the :guilabel:`You're All Set!` modal window and wait for the index to finish building. \n\n      The index should take about one minute to build. While it\n      builds, the :guilabel:`Status` column reads :guilabel:`Initial\n      Sync`. When it finishes building, the :guilabel:`Status` column\n      reads :guilabel:`Active`. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-create-index.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 22\n\n\n         .. tab:: Pre-Filter by OR and AND Operator \n            :tabid: or-and-operator\n\n            .. include:: /includes/extracts/fts-vector-search-tutorial-advanced-query-desc.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-java.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 21\n\n      .. note:: \n\n         To run the sample code in your Maven environment, add the \n         following code above the import statements in your file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-java.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell \n\n                  javac AtlasVectorSearchTutorial.java\n                  java AtlasVectorSearchTutorial\n\n               .. output:: /includes/avs-examples/tutorial/filter-by-and-query-java-output.js\n                  :language: json \n                  :linenos:\n                  :visible: true\n\n         .. tab:: Pre-Filter by OR and AND Operator \n            :tabid: or-and-operator\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-java.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell \n\n                  javac AtlasVectorSearchTutorial.java\n                  java AtlasVectorSearchTutorial\n\n               .. output:: /includes/avs-examples/tutorial/filter-by-or-and-query-java-output.js\n                  :language: json \n                  :linenos:\n                  :visible: true\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-java.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: shell\n\n            use sample_mflix\n      \n         .. output:: \n            :language: shell\n      \n            switched to db sample_mflix\n\n   .. step:: Run the semantic search query against the indexed fields.\n\n      .. include:: /includes/extracts/fts-vector-search-tutorial-queries-desc.rst\n\n      .. tabs:: \n\n         .. tab:: Pre-Filter by AND Operator \n            :tabid: basic\n\n            .. include:: /includes/extracts/fts-vector-search-tutorial-simple-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-mongosh.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: /includes/avs-examples/tutorial/filter-by-and-query.sh \n                  :language: json\n                  :linenos:\n                       \n               .. output:: /includes/avs-examples/tutorial/filter-by-and-query-shell-output.js\n                  :language: javascript\n                  :linenos:\n\n         .. tab:: Pre-Filter by OR or AND Operator\n            :tabid: advanced\n\n            .. include:: /includes/extracts/fts-vector-search-tutorial-advanced-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-mongosh.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: /includes/avs-examples/tutorial/filter-by-or-and-query.sh\n                  :language: json\n                  :linenos:\n                       \n               .. output:: /includes/avs-examples/tutorial/filter-by-or-and-query-shell-output.js\n                  :language: javascript\n                  :linenos:\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-mongosh.rst"
  },
  {
    "code": "               :language: js\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n         .. tab:: Pre-Filter by OR and AND Operator \n            :tabid: or-and-operator\n\n            .. include:: /includes/extracts/fts-vector-search-tutorial-advanced-query-desc.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-nodejs.rst"
  },
  {
    "code": "               :language: js\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Query your collection.\n\n      Run the following command to query your collection: \n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Pre-Filter by AND Operator \n            :tabid: and-operator\n  \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  node atlas-vector-search-tutorial.js\n        \n               .. output:: /includes/avs-examples/tutorial/filter-by-and-query-nodejs-output.js \n                  :language: json\n                  :visible: true\n\n         .. tab:: Pre-Filter by OR and AND Operator \n            :tabid: or-and-operator\n  \n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  node atlas-search-tutorial.js\n        \n               .. output:: /includes/avs-examples/tutorial/filter-by-or-and-query-nodejs-output.js \n                  :language: json\n                  :visible: true        \n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-nodejs.rst"
  },
  {
    "code": "               :language: js\n               :linenos:\n               :dedent:\n               :emphasize-lines: 5\n\n         .. tab:: Pre-Filter by OR and AND Operator \n            :tabid: or-and-operator\n\n            .. include:: /includes/extracts/fts-vector-search-tutorial-advanced-query-desc.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-python.rst"
  },
  {
    "code": "               :language: js\n               :linenos:\n               :dedent:\n               :emphasize-lines: 5\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the command to query your collection.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Pre-Filter by AND Operator \n            :tabid: and-operator\n  \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-python.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  python atlas-vector-search-tutorial.py\n        \n               .. output:: /includes/avs-examples/tutorial/filter-by-and-query-python-output.js \n                  :language: json\n                  :visible: true\n\n         .. tab:: Pre-Filter by OR and AND Operator \n            :tabid: or-and-operator\n  \n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-python.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  python atlas-vector-search-tutorial.py\n        \n               .. output:: /includes/avs-examples/tutorial/filter-by-or-and-query-python-output.js \n                  :language: json\n                  :visible: true      \n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-queries-python.rst"
  },
  {
    "code": "                  :copyable: true\n      \n                  .. input:: /includes/avs-examples/tutorial/filter-by-and-query-ui.js \n                     :language: json\n                     :linenos:\n\n                  .. output:: /includes/avs-examples/tutorial/filter-by-and-query-ui-output.js\n                     :language: javascript\n                     :linenos:\n\n            .. tab:: Pre-Filter by OR or AND Operator\n               :tabid: advanced\n\n               .. include:: /includes/extracts/fts-vector-search-tutorial-advanced-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "                  :copyable: true\n      \n                  .. input:: /includes/avs-examples/tutorial/filter-by-or-and-query-ui.js\n                     :language: json\n                     :linenos:\n\n                  .. output:: /includes/avs-examples/tutorial/filter-by-or-and-query-ui-output.js\n                     :language: javascript\n                     :linenos:\n\n      .. note:: \n\n         The :guilabel:`Pipeline Output` pane displays the results of\n         your query.\n\n   .. step:: Expand your query results.\n\n      The :guilabel:`Data Explorer` might not display all the values in the \n      documents it returns. To view all the values for the fields that\n      you searched in the :ref:`query path <ref-path>`, expand the\n      fields in the documents.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: true\n      \n         atlas clusters search indexes list --clusterName [cluster_name] --db <db-name> --collection <collection-name>\n\n      In the command, replace the following placeholder values:\n      \n      - ``cluster-name`` - the name of the |service| {+cluster+} that\n        contains the indexed collection.\n      - ``db-name`` - the name of the database that contains the\n        collection for which you want to retrieve the indexes.\n      - ``collection-name`` - the name of the collection for which you\n        want to retrieve the indexes.  \n\n      To learn more about the command syntax and parameters, see the\n      {+atlas-cli+} documentation for the :atlascli:`atlas clusters search\n      indexes list </command/atlas-clusters-search-indexes-list/>`\n      command.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-view-index-acli.rst"
  },
  {
    "code": "         :language: go\n         :copyable: true \n         :linenos: \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - The database that contains the collection.\n\n         * - ``<collectionName>``\n           - The collection for which you want to retrieve the indexes.\n\n         * - ``<indexName>``\n           - The name of your index if you want to retrieve a specific\n             index. To return all indexes on the collection, omit this\n             value.\n\n   .. step:: Run the following command to retrieve the index.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-view-index-go.rst"
  },
  {
    "code": "         :copyable: true \n         :linenos: \n\n         db.<collectionName>.getSearchIndexes( \"<index-name>\" );\n         \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-view-index-mongosh.rst"
  },
  {
    "code": "         :language: javascript\n         :copyable: true \n         :linenos: \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - The database that contains the collection.\n\n         * - ``<collectionName>``\n           - The collection for which you want to retrieve the indexes.\n\n         * - ``<indexName>``\n           - The name of your index if you want to retrieve a specific\n             index. To return all indexes on the collection, omit this\n             value.\n\n   .. step:: Run the following command to retrieve the index.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-view-index-nodejs.rst"
  },
  {
    "code": "         :language: python\n         :copyable: true \n         :linenos: \n\n      To learn more, see the `list_search_indexes() <https://pymongo.readthedocs.io/en/4.7.1/api/pymongo/collection.html#pymongo.collection.Collection.list_search_indexes>`__\n      method. \n\n   .. step:: Replace the following values and save the file.\n\n      .. list-table:: \n         :stub-columns: 1 \n\n         * - ``<connectionString>``\n           - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           - The name of the database that contains the collection.\n\n         * - ``<collectionName>``\n           - The name of the collection.\n\n   .. step:: Run the following command to retrieve the indexes.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-avs-view-index-pymongo.rst"
  },
  {
    "code": "            :emphasize-lines: 14\n\n            curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n            --header \"Accept: application/json\" \\\n            --header \"Content-Type: application/json\" \\\n            --include \\\n            --request PATCH \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/encryptionAtRest/\" \\\n            --data '\n              {\n                \"azureKeyVault\": {\n                  \"azureEnvironment\": \"AZURE\",\n                  \"clientID\": \"5e4ea010-a908-45a1-a70b-ebd2e4feb055\",\n                  \"enabled\": true,\n                  \"keyIdentifier\": \"https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86\",\n                  \"keyVaultName\": \"string\",\n                  \"requirePrivateNetworking\": true,\n                  \"resourceGroupName\": \"string\",\n                  \"secret\": \"string\",\n                  \"subscriptionID\": \"d0dd68eb-7e97-448c-b361-f7a7213dc7e2\",\n                  \"tenantID\": \"f95ac700-4c8f-4a38-a8d1-1582733edd5b\"\n                }\n              }'\n\n   .. step:: Create a private endpoint.\n\n      Use the {+atlas-admin-api+} to create a private endpoint to \n      communicate with your |akv|.  \n    \n      Send a ``POST`` request to the :oas-atlas-op:`endpoint \n      </createEncryptionAtRestPrivateEndpoint>` with the |azure|\n      region in which you want |service| to create the private\n      endpoint. You must send a separate request for each region\n      in which you want |service| to create a private endpoint. \n\n      .. example:: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-azure-enable-private-endpoint-connections.rst"
  },
  {
    "code": "            :copyable: true\n            \n            .. input:: \n               :language: shell\n\n               curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n               --header \"Accept: application/json\" \\\n               --header \"Content-Type: application/json\" \\\n               --include \\\n               --request GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/encryptionAtRest/AZURE/privateEndpoints\"               \n      \n            .. output:: \n               :language: shell\n\n               {\n                 \"links\": [\n                   {\n                     \"href\": \"https://cloud.mongodb.com/api/atlas\",\n                     \"rel\": \"self\"\n                   }\n                 ],\n                 \"results\": [\n                   {\n                     \"cloudProvider\": \"AZURE\",\n                     \"errorMessage\": \"string\",\n                     \"id\": \"24-hexadecimal-digit-string\",\n                     \"regionName\": \"string\",\n                     \"status\": \"INITIATING\",\n                     \"privateEndpointConnectionName\": \"string\"\n                   }\n                 ],\n                 \"totalCount\": 0\n               }\n\n      After you approve the private endpoint, it can take |service| up\n      to three minutes to reflect the current status of your private\n      endpoint. The private endpoint can have one of the following\n      statuses:   \n\n      .. include:: /includes/list-tables/azure-pvt-endpoint-statuses.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-azure-enable-private-endpoint-connections.rst"
  },
  {
    "code": "                     :copyable: false \n      \n                     /genres/title\n      \n                  |service| creates partitions first for the ``genres`` \n                  field, followed by  the ``title`` field. |service| uses \n                  the partitions for queries on the following fields:\n      \n                  - the ``genres`` field,\n                  - the ``genres`` field and the ``title`` field.\n      \n                  |service| can also use the partitions to support a query \n                  on the ``title`` field only. However, in this case,\n                  |service| wouldn't be as efficient in supporting the \n                  query as it would be if the query were on the ``genres`` \n                  field only or the ``genres`` and ``title`` fields. \n                  Partitions are parsed in order; if a query omits a \n                  particular partition, |service| is less efficient in \n                  making use of any partitions that follow that. Since a \n                  query on ``title`` omits ``genres``, |service| doesn't \n                  use the ``genres`` partition to support this query. \n                  Also, |service| is less efficient in using the partitions \n                  to support a query on the ``title`` field followed by the \n                  ``genres`` field.\n      \n                  |service| can't use the partitions to support queries on \n                  fields not specified here. \n      \n         .. tab:: Time-Series Collection \n            :tabid: timeseries\n      \n            .. include:: /includes/fact-oa-partitions-date-criteria-timeseries-collection.rst\n      \n      - Choose fields that contain only characters supported on \n        |aws|. To learn more about the characters to avoid, see \n        `Creating object key names\n        <https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html>`__. \n        |service| skips and doesn't archive documents that contain unsupported\n        characters.\n      - Choose fields that do not contain polymorphic data. |service| \n        determines the data type of a partition field by sampling 10 \n        documents from the collection. |service| will not archive a \n        document if the specified field value in a document does not match \n        values in other documents in the same collection.\n      - Choose fields that you query frequently and order them from the \n        most frequently queried in the first position to the least queried \n        field in the last position. For example, if you frequently query on \n        the date field, then leave the date field in the first position. \n        But if you frequently query on another field, then that field \n        should be in the first position. \n      \n      .. note:: \n      \n         For {+Online-Archive+}\\s created before June 2023, MongoDB doesn't\n         recommend ``string`` type fields with high cardinality as a query\n         field for {+Online-Archive+}\\s. For fields of type ``string`` with\n         high cardinality, |service| creates a large number of partitions.\n         This doesn't apply to {+Online-Archive+}\\s created after June 2023.\n         To learn more, read the :website:`MongoDB blog post </blog/post/new-online-archive-performance-improvements-enhanced-metrics>`.\n      \n      |service| supports the following partition attribute types: \n      \n      - ``date`` \n      - ``double``\n      - ``int``\n      - ``long``\n      - ``objectId``\n      - ``string`` \n      - ``boolean``\n      \n      To learn more about the supported partition attribute types, see \n      :ref:`Partition Attribute Types <adf-s3-path-attribute-types>`.\n      \n      .. note:: \n      \n         You can use the :manual:`explain\n         </reference/command/explain/>` command to return information\n         about the data partitions used to satisfy a query. To learn more,\n         see :ref:`adf-diagnostic-cmd-explain`.\n      \n      While partitions improve query performance, queries that don't \n      contain these fields require a full collection scan of all archived \n      documents, which will take longer and increase your costs. To learn \n      more about how partitions improve your query performance in {+adf+}, \n      see :ref:`Data Structure in S3 <optimize-query-perf>`.\n      \n   .. step:: Click :guilabel:`Next` to review and confirm the online archive settings.\n      You can review the following archiving rule settings: \n      \n      - The name of the database and collection \n      - The name of the cloud provider and the cloud provider region \n      - The name of the date field (for :guilabel:`Date Match` only)\n      - The number of days to keep data on the |service| cluster (for \n        :guilabel:`Date Match` only)\n      - The number of days after which to delete archived data \n      - The frequency and time window for archiving data\n            \n      - The custom query to use to identify data to archive (for \n        :guilabel:`Custom Criteria` only)\n      - The partition fields\n      \n      Click :guilabel:`Back` to edit these settings if needed.\n      \n   .. step:: Copy and run the displayed query in your {+mongosh+} shell to see the documents that match the criteria in the rule you defined in step 5.\n      You can run :manual:`explain </reference/method/cursor.explain/>` on \n      the query to check whether it uses an index. Proceed to the next step \n      to create the index if the fields are not indexed. If the fields are \n      already indexed, skip to step 11.\n      \n   .. step:: (Optional) Copy and run the displayed query in your {+mongosh+} to create the required index. This ensures that your data is indexed for optimal performance.\n      \n   .. step:: Verify and confirm your archiving rule.\n      \n      a. Click :guilabel:`Begin Archiving` in the :guilabel:`Confirm an \n         online archive` tab.\n      \n      b. Click :guilabel:`Confirm` in the :guilabel:`Begin Archiving` \n         window.\n      \n      .. note:: \n      \n         Once your document is queued for archiving, you can no longer edit \n         the document. See :ref:`restore-archived-data` to move archived \n         data back into the live |service| cluster.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-config-online-archive.rst"
  },
  {
    "code": "               :copyable: false\n            \n               CN=Jane Doe,ou=AADDC Users,DC=aadds,DC=example,DC=com\n              \n         #. If you entered a :guilabel:`User to DN Mapping`,\n            enter the username that your mapping requires.\n            \n      #. Select the database access level to grant to the user.\n      #. Click :guilabel:`Add User`.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-authentication-ldaps-azure.rst"
  },
  {
    "code": "               :copyable: false\n            \n               uid=jane@example.com,ou=users,dc=mdb-example,dc=okta,dc=com\n              \n         #. If you entered a :guilabel:`User to DN Mapping`,\n            enter the username or email address that your mapping requires.\n            \n      #. Select the database access level to grant to the user.\n      #. Click :guilabel:`Add User`.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-authentication-ldaps-okta.rst"
  },
  {
    "code": "               :copyable: false\n            \n               cn=jane@example.com,ou=users,dc=mdb-example,dc=onelogin,dc=com\n              \n         #. If you entered a :guilabel:`User to DN Mapping`,\n            enter the username or email address that your mapping requires.\n            \n      #. Select the database access level to grant to the user.\n      #. Click :guilabel:`Add User`.\n      \n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-authentication-ldaps-onelogin.rst"
  },
  {
    "code": "            :copyable: true\n            \n            .. input:: \n               :language: shell\n      \n               curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n               --header \"Accept: application/json\" \\\n               --header \"Content-Type: application/json\" \\\n               --include \\\n               --request GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/encryptionAtRest\"      \n      \n            .. output:: \n               :language: shell\n\n               {\n                 \"azureKeyVault\": {\n                   \"azureEnvironment\": \"AZURE\",\n                   \"clientID\": \"5e4ea010-a908-45a1-a70b-ebd2e4feb055\",\n                   \"enabled\": true,\n                   \"keyIdentifier\": \"https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86\",\n                   \"keyVaultName\": \"string\",\n                   \"requirePrivateNetworking\": false,\n                   \"resourceGroupName\": \"string\",\n                   \"subscriptionID\": \"d0dd68eb-7e97-448c-b361-f7a7213dc7e2\",\n                   \"tenantID\": \"f95ac700-4c8f-4a38-a8d1-1582733edd5b\",\n                   \"valid\": true\n                 }\n               }\n\n      In the response, ``enabled`` is ``true`` if your project is\n      successfully enabled for Encryption at Rest using |cmk|. You can\n      set up private networking to ensure that all traffic between\n      |service| and Key Vault takes place over |azure|'s private network\n      interfaces. To learn more, see :ref:`azure-kms-enable-pvt-endpoint`. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-azure-encryption-for-project-api.rst"
  },
  {
    "code": "            :copyable: false\n\n            ServiceError: code: LinkedAuthorizationFailed - , The client has permission to perform action 'Microsoft.Network/privateLinkServices/PrivateEndpointConnectionsApproval/action' on scope '/subscriptions/<subscription-id>/resourceGroups/privatelink/providers/Microsoft.Network/privateEndpoints/privatelink', however the current tenant '<tenant-id>' is not authorized to access linked subscription '<tenant-id>'.\n\n         If you receive this error, add the \n         ``--manual-request true`` parameter to the |azure| CLI command \n         you used to create the private endpoint, then run the command \n         again.\n            \n      #. Click :guilabel:`Next`.\n      \n   .. step:: Finalize your private endpoint connection.\n      \n      a. Enter the following details about your private endpoint:\n\n         .. include:: /includes/list-table-azure-serverless-create-endpoint-in-az.rst\n\n      #. Enter an optional description for the endpoint.\n      #. Click :guilabel:`Create`.\n\n   .. include:: /includes/nav/steps-network-access.rst\n      \n   .. step:: Verify that the private endpoint is available.\n      \n      You can connect to an |service| cluster using the {+az-pl+} private \n      endpoint when all of the resources are configured and the private\n      endpoint becomes available.\n      \n      To verify that the {+az-pl+} private endpoint is available:\n      \n      On the :guilabel:`Private Endpoint` tab, select a \n      {+database-deployment+} type and verify the following \n      statuses for the region that contains the cluster \n      you want to connect to using {+az-pl+}:\n      \n      .. list-table::\n         :widths: 20 80\n      \n         * - :guilabel:`Atlas Endpoint Service Status`\n           - Available\n               \n         * - :guilabel:`Endpoint Status`\n           - Available\n      \n      To learn more about possible status values, see :ref:`pl-troubleshooting`.\n      \n      If you do not see these statuses, see :ref:`pl-troubleshooting` for\n      additional information.     \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-privatelink-az-serverless.rst"
  },
  {
    "code": "            :copyable: false\n\n            ServiceError: code: LinkedAuthorizationFailed - , The client has permission to perform action 'Microsoft.Network/privateLinkServices/PrivateEndpointConnectionsApproval/action' on scope '/subscriptions/<subscription-id>/resourceGroups/privatelink/providers/Microsoft.Network/privateEndpoints/privatelink', however the current tenant '<tenant-id>' is not authorized to access linked subscription '<tenant-id>'.\n\n         If you receive this error, you must add the \n         ``--manual-request true`` parameter to the |azure| CLI command \n         you used to create the private endpoint, then run the command \n         again.\n            \n      #. Click :guilabel:`Next`.\n      \n   .. step:: Finalize your private endpoint connection.\n      \n      a. Enter the following details about your private endpoint:\n\n         .. list-table::\n            :widths: 20 80\n\n            * - :guilabel:`Private Endpoint Resource ID`\n              - The unique identifier of the private endpoint you \n                created in your |azure| VNet. Find this value in one of \n                the following ways:\n\n                - The :guilabel:`Properties` page for your private\n                  endpoint on your |azure| dashboard displays this\n                  property in the :guilabel:`Resource ID` field.\n\n                - The output from the following command that you ran   \n                  earlier to create the private endpoint returns the \n                  highlighted value in the **id** field:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-privatelink-azure.rst"
  },
  {
    "code": "                     :copyable: false\n\n                     .. input::\n                        :linenos:\n\n                        azure network private-endpoint create\n\n                     .. output:: /includes/api/responses/az-network-private-endpoint-create.json\n                        :language: json\n                        :linenos:\n                        :emphasize-lines: 4\n\n            * - :guilabel:`Private Endpoint IP Address`\n              - The private IP address of the private endpoint network\n                interface you created in your |azure| VNet. Find this\n                value in one of the following ways:\n\n                - Use the |azure| dashboard to retrieve this value. \n                  The :guilabel:`Overview` page for your private\n                  endpoint on your |azure| dashboard displays this\n                  property in the :guilabel:`Private IP` field.\n\n                - Use the |azure| CLI to retrieve this value:\n\n                  i. The output from the following command that you ran \n                     earlier to create the private endpoint includes \n                     the ID of the network interface in the highlighted \n                     **networkInterfaces.id** field:\n                   \n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-privatelink-azure.rst"
  },
  {
    "code": "                        :copyable: false\n\n                        .. input::\n                           :linenos:\n\n                           azure network private-endpoint create\n\n                        .. output:: /includes/api/responses/az-network-private-endpoint-create.json\n                           :language: json\n                           :linenos:\n                           :emphasize-lines: 33\n\n                  #. Run the `az network nic show --id {networkInterface.id}\n                     <https://docs.microsoft.com/en-us/cli/azure/network/nic?view=azure-cli-latest#az_network_nic_show>`__\n                     |azure| CLI command with the value of the\n                     **networkInterfaces.id** field to retrieve the\n                     **ipConfigurations.privateIPAddress** for the \n                     private endpoint network interface. The value of \n                     this field is your \n                     :guilabel:`Private Endpoint IP Address`. The input \n                     and output should look similar to the following. \n                     Note the highlighted value of the \n                     :guilabel:`Private Endpoint IP Address` field.\n                   \n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-privatelink-azure.rst"
  },
  {
    "code": "                        :copyable: true\n\n                        .. input::\n                           :language: sh\n                           :linenos:\n                         \n                           az network nic show --id /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/privatelink/providers/Microsoft.Network/networkInterfaces/privatelink.nic.00000000-0000-0000-0000-000000000000\n\n                        .. output:: /includes/api/responses/az-network-nic-show.json\n                           :language: json\n                           :linenos:\n                           :emphasize-lines: 25\n\n      #. Enter an optional description for the endpoint.\n\n      #. Click :guilabel:`Create`.\n\n   .. include:: /includes/nav/steps-network-access.rst\n      \n   .. step:: Verify that the private endpoint is available.\n      \n      You can connect to an |service| cluster using the {+az-pl+} private \n      endpoint when all of the resources are configured and the private\n      endpoint becomes available.\n      \n      To verify that the {+az-pl+} private endpoint is available:\n      \n      On the :guilabel:`Private Endpoint` tab, select a \n      {+database-deployment+} type and verify the following \n      statuses for the region that contains the cluster \n      you want to connect to using {+az-pl+}:\n      \n      .. list-table::\n         :widths: 20 80\n      \n         * - :guilabel:`Atlas Endpoint Service Status`\n           - Available\n               \n         * - :guilabel:`Endpoint Status`\n           - Available\n      \n      To learn more about possible status values, see :ref:`pl-troubleshooting`.\n      \n      If you do not see these statuses, see :ref:`pl-troubleshooting` for\n      additional information.   \n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-configure-privatelink-azure.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: sh\n\n            db.monthlyPhoneTransactions.find().sort( { _id: -1} )\n\n         .. output::\n            :language: json\n            :visible: false\n \n            {\n              _id: '2018-01',\n              sales_quantity: 66,\n              sales_price: Decimal128(\"1407.10\")\n            }\n\n      The ``monthlyPhoneTransactions`` materialized view shows the \n      newly added data. The top result reflects that the most recent \n      transaction took place in January 2018.\n\n   .. step:: Review and deploy the ``Sales-App`` application draft.\n\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-cross-collection-define-po-function.rst"
  },
  {
    "code": "           :copyable: false\n      \n           { \"_id\" : \"<YYYY-mm>\", \"sales_quantity\" : <num>, \"sales_amount\" : <NumberDecimal> }\n      \n      - The :pipeline:`$set` stage changes the data type of the ``sales_price``\n        field to ``double``. |fts| ``$search`` operators don't support the\n        ``Decimal128`` data type. Changing the ``sales_price`` field's data\n        type allows you to query this field using |fts| indexes.\n      \n      - The :pipeline:`$merge` stage writes the output to the\n        ``monthlyPhoneTransactions`` collection.\n      \n        :ref:`Based <merge-on>` on the ``_id`` field, the stage checks if the \n        document in the aggregation results :ref:`matches <merge-whenMatched>` \n        an existing document in the collection:\n      \n        - When |fts| finds a :ref:`match <merge-whenMatched>` (that is, a\n          document with the same year-month already exists in the collection),\n          |fts| :ref:`replaces <merge-whenMatched-replace>` the existing\n          document with the document from the aggregation results as specified\n          in the stage.\n      \n        - When |fts| doesn't find a :ref:`match <merge-whenNotMatched>`, |fts|\n          inserts the document from the aggregation results into the collection\n          as specified in the stage.\n      \n   .. step:: Test the Function.\n\n      Click the :guilabel:`Run` button in the \n      lower right-hand corner of the :guilabel:`Function Editor`\n      to create the ``monthlyPhoneTransactions`` materialized view.\n\n      The :guilabel:`Result` tab at the bottom of the \n      :guilabel:`Function Editor` reflects the execution status of \n      the function. Click :guilabel:`Save Draft`.\n      \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-cross-collection-index-create-realm-scheduled-trigger.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-atlas-stores-reference`.\n\n#. Define your {+fdi+} virtual databases, collections, and views.\n\n   Edit the |json| configuration settings shown in the UI for \n   ``databases``. Your ``databases`` cofiguration setting should \n   resemble the following:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-atlas-json-editor.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-atlas-databases-reference`.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-atlas-json-editor.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-azure-stores-reference`.\n\n#. Define your {+fdi+} virtual databases, collections, and views.\n\n   Edit the |json| configuration settings shown in the UI for \n   ``databases``. Your ``databases`` cofiguration setting should \n   resemble the following:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-azure-json-editor.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-azure-databases-reference`.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-azure-json-editor.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-http-stores-reference`.\n\n#. Define your {+fdi+} virtual databases, collections, and views.\n \n   Edit the |json| configuration settings shown in the UI for \n   ``databases``. Your ``databases`` cofiguration setting should \n   resemble the following:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-http-json-editor.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-http-databases-reference`.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-http-json-editor.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-aws-stores-reference`.\n\n#. Define your {+fdi+} virtual databases, collections, and views.\n\n   Edit the |json| configuration settings shown in the UI for \n   ``databases``. Your ``databases`` cofiguration setting should \n   resemble the following:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-s3-json-editor.rst"
  },
  {
    "code": "      :language: json\n\n   To learn more about these configuration settings, see \n   :ref:`adf-aws-databases-reference`.\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-deploy-s3-json-editor.rst"
  },
  {
    "code": "               :copyable: false \n      \n               <cluster-name>_archive_only_<start-date>_<end-date>_queries.log.gz\n      \n         .. tab:: Cluster and Online Archive \n            :tabid: clusterandoa\n      \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-download-online-archive-query-logs.rst"
  },
  {
    "code": "               :copyable: false \n      \n               <cluster-name>_cluster_archive_<start-date>_<end-date>_queries.log.gz    \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-download-online-archive-query-logs.rst"
  },
  {
    "code": "         :copyable: true \n      \n         .. input::\n            :language: json\n      \n            [\n              {\n                $search: {\n                  index: \"autocomplete-tutorial\",\n                  compound: {\n                    should: [{\n                      autocomplete: {\n                        query: \"pri\",\n                        path: \"title\"\n                      }\n                    },\n                    {\n                      autocomplete: {\n                        query: \"pri\",\n                        path: \"plot\"\n                      }\n                    }],\n                    minimumShouldMatch: 1\n                  }\n                }\n              }\n            ]\n            \n         .. output::\n            :visible: true\n            \n            SCORE: 7.52535343170166  _id:  \"573a13e7f29313caabdc80cd\"\n              plot: \"Prison Terminal: The Last Days of Private Jack Hall is a moving cinema…\"\n              genre: Array\n              runtime: 40\n      \n            SCORE: 7.235145568847656  _id:  \"573a13adf29313caabd2b504\"\n              plot: \"Now settled in Genovia, Princess Mia faces a new revelation: she is be…\"\n              genres: Array\n              runtime: 113\n      \n            SCORE: 7.202958106994629  _id:  \"573a13b5f29313caabd43816\"\n              plot: \"A young fugitive prince and princess must stop a villain who unknowing…\"\n              genres: Array\n              runtime: 116\n      \n            SCORE: 7.201740264892578  _id:  \"573a139af29313caabcf0d54\"\n              plot: \"The first wedding anniversary of Princess Odette and Prince Derek is d…\"\n              genres: Array\n              runtime: 71\n      \n            SCORE: 7.174992561340332  _id:  \"573a1399f29313caabceeead\"\n              plot: \"Jane Austen's classic novel about the prejudice that occurred between …\"\n              genres: Array\n              runtime: 327\n            \n            SCORE: 7.173888206481934  _id:  \"573a13c1f29313caabd63a21\"\n              plot: \"A princess whose country has been invaded goes into hiding in Louisian…\"\n              genres: Array\n              countries: Array\n      \n            SCORE: 7.163987159729004  _id:  \"573a13eef29313caabdd51a6\"\n              plot: \"Follows the people racing to bring the hot new 3D printing technology …\"\n              genres: Array\n              runtime: 100\n      \n            SCORE: 7.155245780944824  _id:  \"573a13a5f29313caabd14adf\"\n              plot: \"When her father is captured by The Sheriff of Nottingham and Prince Jo…\"\n              genres: Array\n              runtime: 88\n      \n            SCORE: 7.146618843078613  _id:  \"573a139af29313caabcf0efc\"\n              plot: \"An Egyptian prince learns of his identity as a Hebrew and, later his d…\"\n              genres: Array\n              runtime: 99\n      \n            SCORE: 7.132328987121582  _id:  \"573a139af29313caabcf003b\"\n              plot: \"Two Russian soldiers, one battle-seasoned and the other barely into hi…\"\n              genres: Array\n              runtime: 99\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n      \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-autocomplete-multi-field-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: true \n      \n         .. input::\n            :language: json\n      \n            [\n              {\n                $search: {\n                  index: \"autocomplete-tutorial\",\n                  autocomplete: {\n                    query: \"ger\",\n                    path: \"title\"\n                  }\n                }\n              }\n            ]\n            \n         .. output::\n            :visible: true\n            \n            SCORE: 6.085907459259033  _id:  \"573a1390f29313caabcd50e5\"\n              plot: \"The cartoonist, Winsor McCay, brings the Dinosaurus back to life in th…\"\n              genre: Array\n              runtime: 12\n      \n            SCORE: 6.085907459259033  _id:  \"573a1393f29313caabcddae1\"\n              plot: \"Edmund, a young boy who lives in war-devastated Germany after the Seco…\"\n              genres: Array\n              runtime: 78\n      \n            SCORE: 6.085907459259033  _id:  \"573a1397f29313caabce6b75\"\n              plot: \"Germany in Autumn does not have a plot per se; it mixes documentary fo…\"\n              genres: Array\n              runtime: 123\n      \n            SCORE: 6.085907459259033  _id:  \"573a1397f29313caabce77b5\"\n              plot: \"Germany 1939. Hans and Lene marry the day before the war breaks out, a…\"\n              genres: Array\n              runtime: 123\n      \n            SCORE: 6.085907459259033  _id:  \"573a13d4f29313caabd99fa2\"\n              plot: \"A documentary on the German artist that includes glimpses at his studi…\"\n              genres: Array\n              runtime: 97\n            \n            SCORE: 6.046686172485352  _id:  \"573a1399f29313caabcedb50\"\n              plot: \"The story of the Apache chief and his armed resistance to the US Gover…\"\n              genres: Array\n              runtime: 115\n      \n            SCORE: 5.8947296142578125  _id:  \"573a13a5f29313caabd15dae\"\n              num_mflix_comments: 1\n              genres: Array\n              runtime: 83\n      \n            SCORE: 5.826231956481934  _id:  \"573a139bf29313caabcf36bd\"\n              plot: \"Geri sets up a chess game to play his greatest opponent - himself.\"\n              genres: Array\n              runtime: 4\n      \n            SCORE: 5.772464752197266  _id:  \"573a13d2f29313caabd922de\"\n              plot: \"The true story of an Argentine family who lived with Josef Mengele wit…\"\n              genres: Array\n              runtime: 93\n      \n            SCORE: 5.772464752197266  _id:  \"573a13b4f29313caabd41bb7\"\n              plot: \"In 1928, Dr. Max Gerson, a German-Jewish researcher, stumbled upon a t…\"\n              genres: Array\n              countries: Array\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n      \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-autocomplete-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: json\n      \n                  [\n                    {\n                      $search: {\n                        index: \"compound-query-custom-score-tutorial\",\n                        compound: {\n                          filter: [{\n                            range: {\n                              path: \"year\",\n                              gte: 2013,\n                              lte: 2015\n                            }\n                          }],\n                          should: [{\n                            text: {\n                              query: \"snow\",\n                              path: \"title\",\n                              score: {constant: {value: 5}}\n                            }\n                          }]\n                        },\n                        highlight:{\n                          path: \"title\"\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n            \n                  SCORE: 5  _id:  \"573a13d7f29313caabda38ad\"\n                    Snow in Paradise\n                    Matching fields: title\n      \n                  SCORE: 5  _id:  \"573a13e2f29313caabdbeded\"\n                    Dead Snow 2: red vs.\n                    Matching fields: title\n      \n                  SCORE: 5  _id:  \"573a13e6f29313caabdc66c4\"\n                    The Snow White Murder Case\n                    Matching fields: title\n      \n                  SCORE: 5  _id:  \"573a13edf29313caabdd37bd\"\n                    Snow on the Blades\n                    Matching fields: title\n      \n                  SCORE: 0  _id:  \"573a13acf29313caabd29366\"\n                    No highlights found.\n                    Matching fields: unknown\n            \n                  SCORE: 0  _id:  \"573a13adf29313caabd2b765\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 0  _id:  \"573a13b0f29313caabd333e7\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 0  _id:  \"573a13b0f29313caabd3486a\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 0  _id:  \"573a13b1f29313caabd3719d\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 0  _id:  \"573a13b2f29313caabd3abb9\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n            .. include:: /includes/extracts/fts-compound-constant-score-desc.rst\n      \n         .. tab:: Boost Single\n            :tabid: boostsingle\n      \n            The following query:\n            \n            - Uses the following ``compound`` operator clauses:\n            \n              .. include:: /includes/extracts/fts-compound-boost-desc.rst\n      \n            - .. include:: /includes/extracts/fts-compound-highlight-desc.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-compound-score-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: json\n      \n                  [\n                    {\n                      $search: {\n                        index: \"compound-query-custom-score-tutorial\",\n                        compound: {\n                          must: [{\n                            range: {\n                              path: \"year\",\n                              gte: 2013,\n                              lte: 2015\n                            }\n                          }],\n                          should: [{\n                            text: {\n                              query: \"snow\",\n                              path: \"title\",\n                              score: {boost: {value: 2}}\n                            }\n                          }]\n                        },\n                        highlight:{\n                          path: \"title\"\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n            \n                  SCORE: 6.7722930908203125  _id:  \"573a13d7f29313caabda38ad\"\n                    Snow in Paradise\n                    Matching fields: title\n      \n                  SCORE: 6.063445568084717  _id:  \"573a13edf29313caabdd37bd\"\n                    Snow on the Blades\n                    Matching fields: title\n      \n                  SCORE: 5.509652137756348  _id:  \"573a13e6f29313caabdc66c4\"\n                    The Snow White Murder Case\n                    Matching fields: title\n      \n                  SCORE: 5.065053939819336  _id:  \"573a13e2f29313caabdbeded\"\n                    Dead Snow 2: Red vs.\n                    Matching fields: title\n      \n                  SCORE: 1  _id:  \"573a13acf29313caabd29366\"\n                    No highlights found.\n                    Matching fields: unknown\n            \n                  SCORE: 1  _id:  \"573a13adf29313caabd2b765\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b0f29313caabd333e7\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b0f29313caabd3486a\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b1f29313caabd3719d\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b2f29313caabd3abb9\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n            .. include:: /includes/extracts/fts-compound-boost-score-desc.rst\n      \n         .. tab:: Boost Multiple\n            :tabid: boostmulti\n      \n            The following query:\n            \n            - Uses the following ``compound`` operator clauses with \n              the ``boost`` option to prioritize some fields more \n              than other fields: \n            \n              .. include:: /includes/extracts/fts-compound-boost-advanced-desc.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-compound-score-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: json\n      \n                  [\n                    {\n                      $search: {\n                        index: \"compound-query-custom-score-tutorial\",\n                        compound: {\n                          must: [{\n                            text: {\n                              query: \"comedy\",\n                              path: \"genres\",\n                              score: {boost: {value: 9}}\n                            }\n                          },\n                          {\n                            text: {\n                              query: \"snow\",\n                              path: \"title\",\n                              score: {boost: {value: 5}}\n                            }\n                          }],\n                          should: [{\n                            range: {\n                              path: \"year\",\n                              gte: 2013,\n                              lte: 2015,\n                              score: {boost: {value: 3}}\n                            }\n                          }]\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n            \n                  SCORE: 21.872983932495117  _id:  \"573a13c2f29313caabd6874c\"\n                    plot: \"A ski vacation turns horrific for a group of medical students, as they…\"\n                    genres: Array\n                    runtime: 91\n      \n                  SCORE: 21.043487548828125  _id:  \"573a139ff29313caabcffff8\"\n                    fullplot: \"When an entire town in upstate New York is closed down by an unexpecte…\"\n                    imdb: Object\n                    year: 2000\n      \n                  SCORE: 21.043487548828125  _id:  \"573a13a6f29313caabd16b02\"\n                    plot: \"When a Miami dentist inherits a team of sled dogs, he's got to learn t…\"\n                    genres: Array\n                    runtime: 99\n      \n                  SCORE: 19.523927688598633  _id:  \"573a13a1f29313caabd06765\"\n                    fullplot: \"Our two young lovers meet on a series of snowy days in high school. Ye…\"\n                    imdb: Object\n                    runtime: 1999\n      \n                  SCORE: 17.426334381103516  _id:  \"573a13e2f29313caabdbeded\"\n                    plot: \"Still on the run from a group of Nazi zombies, a man seeks the aid of …\"\n                    genres: Array\n                    runtime: 100\n            \n                  SCORE: 16.367326736450195  _id:  \"573a13c2f29313caabd6688e\"\n                    countries: Array\n                    genres: Array\n                    runtime: 108\n      \n                  SCORE: 15.537829399108887  _id:  \"573a13b1f29313caabd36d7d\"\n                    plot: \"A love-struck Italian poet is stuck in Iraq at the onset of an America…\"\n                    genres: Array\n                    runtime: 110\n      \n                  SCORE: 14.4263334274292  _id:  \"573a1395f29313caabce1925\"\n                    plot: \"An ice-skating Snow White finds refuge from the Wicked Queen with the …\"\n                    genres: Array\n                    runtime: 107\n      \n         .. tab:: Function Score\n            :tabid: fuction-score \n      \n            The following query:\n                  \n            - Uses the following ``compound`` operator clauses: \n            \n              .. include:: /includes/extracts/fts-compound-function-desc.rst\n      \n            - .. include:: /includes/extracts/fts-compound-highlight-desc.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-compound-score-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: json\n      \n                  [\n                    {\n                      $search: {\n                        index: \"compound-query-custom-score-tutorial\",\n                        compound: {\n                          must: [{\n                            range: {\n                              path: \"year\",\n                              gte: 2013,\n                              lte: 2015,\n                            }\n                          }],\n                          should: [{\n                            text: {\n                              query: \"snow\",\n                              path: \"title\",\n                              score: {\n                                function: {\n                                  add: [{\n                                    path: {\n                                      value: \"imdb.rating\",\n                                      undefined: 2\n                                    }\n                                  },\n                                  {\n                                    score: \"relevance\"\n                                  }]\n                                }\n                              }  \n                            }\n                          }]\n                        },\n                        highlight: {\n                          path: \"title\"\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n            \n                  SCORE: 10.454826354980469  _id:  \"573a13e6f29313caabdc66c4\"\n                    The Snow White Murder Case\n                    Matching fields: title\n      \n                  SCORE: 10.3317232131958  _id:  \"573a13edf29313caabdd37bd\"\n                    Snow on the Blades\n                    Matching fields: title\n      \n                  SCORE: 10.032526969909668  _id:  \"573a13e2f29313caabdbeded\"\n                    Dead Snow 2: Red vs.\n                    Matching fields: title\n      \n                  SCORE: 8.386146545410156  _id:  \"573a13d7f29313caabda38ad\"\n                    Snow in Paradise\n                    Matching fields: title\n      \n                  SCORE: 1  _id:  \"573a13acf29313caabd29366\"\n                    No highlights found.\n                    Matching fields: unknown\n            \n                  SCORE: 1  _id:  \"573a13adf29313caabd2b765\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b0f29313caabd333e7\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b0f29313caabd3486a\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b1f29313caabd3719d\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n                  SCORE: 1  _id:  \"573a13b2f29313caabd3abb9\"\n                    No highlights found.\n                    Matching fields: unknown\n      \n            .. include:: /includes/extracts/fts-compound-function-score-desc.rst\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst  \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-compound-score-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :language: c\n               :copyable:\n               \n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n\n            You can also create multiple |fts| indexes at once. In the following example,\n            define each search index that you want to create as a document inside the\n            ``indexes`` array. Then, convert your command and search index information to\n            |bson| and call the ``mongoc_collection_command_simple()`` method to create the search\n            index:\n\n",
    "language": "c",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-c.rst"
  },
  {
    "code": "               :language: c\n               :copyable:\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to create the index. \n      - The name of your index. If you omit the index name, |fts| names the index ``default``.\n\n      .. tabs::\n         :hidden: true\n\n         .. tab:: Create One Search Index\n            :tabid: create-one\n\n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n            \n            - The search index definition. To learn more, see :ref:`ref-index-definitions`.\n\n   .. step:: Compile and run the file by using the following commands.\n\n",
    "language": "c",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-c.rst"
  },
  {
    "code": "         :caption: Program.cs\n         :language: csharp\n         :copyable:\n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n      Use the following command to run the project:\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-csharp.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            dotnet run csharp-create-index.csproj\n\n         .. output::\n\n            default\n\nCreate Multiple Indexes\n~~~~~~~~~~~~~~~~~~~~~~~\n\nTo create multiple |fts| indexes at once:\n\n1. Construct an instance of ``IEnumerable<CreateSearchIndexModel>`` that contains the search index definitions.\n   \n#. Pass the collection to the ``CreateMany()`` or ``CreateManyAsync()`` method.\n\nThe following example shows how to use the ``CreateMany()`` method to \ncreate multiple indexes:\n\n.. procedure::\n   :style: normal\n\n   .. step:: Create a new directory and initialize your project.\n\n      a. Run the following command to create a new directory called \n         ``csharp-create-index``.\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-csharp.rst"
  },
  {
    "code": "         :language: csharp\n         :copyable:\n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n      Use the following command to run the project:\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-csharp.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            dotnet run csharp-create-index-mult.csproj\n\n         .. output::\n\n            default\n\n.. tip:: API Documentation\n\n   To learn more about the methods on this page, see the \n   `API documentation <https://mongodb.github.io/mongo-csharp-driver/2.21/apidocs/html/Methods_T_MongoDB_Driver_Search_IMongoSearchIndexManager.htm>`__\n   for the .NET/C# driver.\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-csharp.rst"
  },
  {
    "code": "               :language: cpp\n               :copyable:\n               \n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n\n            You can also create multiple |fts| indexes at once. For each search index you want to\n            create, pass the search index specifications to the ``search_index_model()`` method.\n            Then, add each search index to a vector and pass the vector to the ``create_many()``\n            method to create the search indexes:\n\n",
    "language": "cpp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-cxx.rst"
  },
  {
    "code": "               :language: cpp\n               :copyable:\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to create the index. \n      - The name of your index. If you omit the index name, |fts| names the index ``default``.\n\n      .. tabs::\n         :hidden: true\n\n         .. tab:: Create One Search Index\n            :tabid: create-one\n\n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n\n            - The search index definition. To learn more, see :ref:`ref-index-definitions`.\n\n   .. step:: Compile and run the file by using the following commands.\n\n",
    "language": "cpp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-cxx.rst"
  },
  {
    "code": "               :language: java\n               :copyable:\n               \n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n\n            You can use the following sample application to create multiple |fts| indexes \n            at once. To do so, construct a document for each search index that \n            you wish to create, and then pass the documents as an array to \n            the ``createSearchIndexes()`` method:\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-java.rst"
  },
  {
    "code": "               :language: java\n               :copyable:\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to create the index. \n      - The names of your indexes. If you omit an index's name, |fts| names the index ``default``.\n\n      .. tabs::\n         :hidden: true\n\n         .. tab:: Create One Search Index\n            :tabid: create-one\n\n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n            \n            - The fields to define your search index. To learn more, see :ref:`ref-index-definitions`.\n\n   .. step:: Compile and run the file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-java.rst"
  },
  {
    "code": "         :caption: create-index.js\n         :language: javascript\n         :copyable:\n\n   .. step:: Run the sample application to create the index.\n      \n      Use the following command:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-node.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            node create-index.js\n\n         .. output::\n\n            <index-name>\n\nCreate Multiple Indexes\n~~~~~~~~~~~~~~~~~~~~~~~\n   \nTo create multiple |fts| indexes at once:\n\n1. In your application, define an array of search indexes.\n      \n#. Pass the array into the ``createSearchIndexes`` command.\n\nThe following example shows how to use the ``createSearchIndexes`` \ncommand to create multiple indexes:\n\n.. procedure::\n   :style: normal\n\n   .. step:: Create a file named ``create-index-mult.js``.\n\n   .. step:: Define the search index.\n\n      Replace the placeholder values in the following example:\n\n      .. list-table::\n         :widths: 20 80\n         :header-rows: 1\n\n         * - Value\n           - Description\n\n         * - ``<connection-string>`` \n           - Your |service| connection string. To learn more, see \n             :ref:`connect-via-driver`.\n\n         * - ``<databaseName>``\n           -  Database for which you want to create the index.\n\n         * - ``<collectionName>``   \n           - Collection for which you want to create the index.\n\n         * - ``<first-index-name>`` \n           - Name of your first index.\n\n         * - ``<last-index-name>``\n           - Name of your last index. \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-node.rst"
  },
  {
    "code": "         :language: javascript\n         :copyable:\n\n   .. step:: Run the sample application to create the index.\n      \n      Use the following command:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-node.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            node create-index-mult.js\n\n         .. output::\n\n            <index-name>\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-node.rst"
  },
  {
    "code": "               :language: python\n               :copyable:\n               \n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n\n            You can also create multiple |fts| indexes at once. In your application, \n            define an array of search indexes. Then, pass the array as a parameter to the \n            ``create_search_indexes()`` method:\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-python.rst"
  },
  {
    "code": "               :language: python\n               :copyable:\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to create the index. \n      - The name of your index. If you omit the index name, |fts| names the index ``default``.\n\n      .. tabs::\n         :hidden: true\n\n         .. tab:: Create One Search Index\n            :tabid: create-one\n\n         .. tab:: Create Multiple Search Indexes\n            :tabid: create-multiple\n            \n            - The search index definition. To learn more, see :ref:`ref-index-definitions`.\n\n   .. step:: Run the file by using the following command.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-python.rst"
  },
  {
    "code": "            :copyable: true\n\n            .. input::\n               :language: shell\n\n               db.movies.createSearchIndex(\n                   \"example-index\",\n                   { mappings: { dynamic: true } }\n               )\n\n            .. output::\n\n               example-index\n    \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-shell.rst"
  },
  {
    "code": "         :caption: Program.cs\n         :language: csharp\n         :copyable:\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n      \n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-tutorial-csharp.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            dotnet run csharp-create-index.csproj\n\n         .. output::\n\n            default\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-tutorial-csharp.rst"
  },
  {
    "code": "         :caption: create-index.js\n         :language: javascript\n         :copyable:\n      \n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Create the index.\n\n      To create the index, run the following command:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-tutorial-node.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            node create-index.js\n\n         .. output::\n\n            default\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-tutorial-node.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: shell\n\n            db.movies.createSearchIndex(\n               \"default\",\n               { mappings: { dynamic: true } }\n            )\n\n         .. output::\n\n            default\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-create-index-tutorial-shell.rst"
  },
  {
    "code": "                     :language: json\n                     :linenos:  \n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst \n\n                  .. list-table::\n                     :header-rows: 1\n                     :widths: 25 75\n\n                     * - Pipeline Stage\n                       - Query\n\n                     * - ``$search``\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-compass.rst"
  },
  {
    "code": "                     :language: json\n                     :linenos: \n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst\n\n                  .. list-table::\n                     :header-rows: 1\n                     :widths: 25 75\n\n                     * - Pipeline Stage\n                       - Query\n\n                     * - ``$search``\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-compass.rst"
  },
  {
    "code": "                     :language: json\n                     :linenos: \n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst\n\n                  .. list-table::\n                     :header-rows: 1\n                     :widths: 25 75\n\n                     * - Pipeline Stage\n                       - Query\n\n                     * - ``$search``\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-compass.rst"
  },
  {
    "code": "                     :language: json\n                     :linenos:\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-compass.rst"
  },
  {
    "code": "                     :language: csharp\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 9\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :language: csharp\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 9\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. include:: /includes/extracts/fts-csharp-query-desc.rst\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst \n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :language: csharp\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 9\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst \n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :language: csharp\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 9\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: queryString Operator \n            :tabid: querystring\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: AND Query \n                  :tabid: and-query \n                     \n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        dotnet run Program.cs\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-and-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        dotnet run Program.cs\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-or-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        dotnet run Program.cs\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-date-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        dotnet run Program.cs\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-numeric-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-csharp.rst"
  },
  {
    "code": "                     :language: java\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 23\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :language: java\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 23\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. include:: /includes/extracts/fts-java-query-desc.rst\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst \n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :language: java\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 28\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst \n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :language: java\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 28\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Compile and run ``DateNumberToStringQuery.java`` file.\n\n      .. tabs:: \n         :hidden: true\n\n         .. tab:: queryString Operator \n            :tabid: querystring\n\n            .. tabs:: \n               :hidden: true\n\n               .. tab:: AND Query \n                  :tabid: and-query\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n\n                        javac DateNumberToStringQuery.java\n                        java DateNumberToStringQuery\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-and-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n\n                        javac DateNumberToStringQuery.java\n                        java DateNumberToStringQuery\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-or-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n               :hidden: true\n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n\n                        javac DateNumberToStringQuery.java\n                        java DateNumberToStringQuery\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-date-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n\n                        javac DateNumberToStringQuery.java\n                        java DateNumberToStringQuery\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-numeric-java-csharp-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-java.rst"
  },
  {
    "code": "                     :language: kotlin\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 10\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "                     :language: kotlin\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 11\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. include:: /includes/extracts/fts-kotlin-query-desc.rst\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst \n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "                     :language: kotlin\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 10\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst \n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "                     :language: kotlin\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 10\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the ``DateNumberToStringQuery.kt`` file.\n\n      .. tabs:: \n         :hidden: true\n\n         .. tab:: queryString Operator \n            :tabid: querystring\n\n            .. tabs:: \n               :hidden: true\n\n               .. tab:: AND Query \n                  :tabid: and-query\n\n                  When you run the ``DateNumberToStringQuery.kt`` program in your IDE, it prints\n                  the following documents:\n                  \n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "                     :copyable: false\n                  \n                     Document{{lastScrapedDate=2019-03-06, propertyName=Tropical Jungle Oasis, propertyType=Condominium, accommodatesNumber=4, maximumNumberOfNights=1125}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Honolulu 1 BR/1Bath Condo - Hilton Hawaiian, propertyType=Condominium, accommodatesNumber=4, maximumNumberOfNights=7}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Beautiful Apt, Tropical Resort, Steps to the Beach, propertyType=Condominium, accommodatesNumber=4, maximumNumberOfNights=45}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Ocean View in the heart of Waikiki, propertyType=Condominium, accommodatesNumber=4, maximumNumberOfNights=1125}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Aloha, Kihei Bay Surf, New Pool and BBQ, propertyType=Condominium, accommodatesNumber=4, maximumNumberOfNights=1125}}\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  When you run the ``DateNumberToStringQuery.kt`` program in your IDE, it prints\n                  the following documents:\n                  \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "                     :copyable: false\n                  \n                     Document{{lastScrapedDate=2019-03-11, propertyName=This room is perfect for responsible guests, propertyType=House, accommodatesNumber=2, maximumNumberOfNights=30}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Queen Room at Beautiful Upscale Organic Farm, propertyType=House, accommodatesNumber=2, maximumNumberOfNights=30}}\n                     Document{{lastScrapedDate=2019-03-11, propertyName=Incredible space with amazing views, propertyType=House, accommodatesNumber=2, maximumNumberOfNights=30}}\n                     Document{{lastScrapedDate=2019-02-16, propertyName=Varanda Porto, propertyType=House, accommodatesNumber=2, maximumNumberOfNights=30}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Bright, Clean, Quiet, Modern, propertyType=House, accommodatesNumber=2, maximumNumberOfNights=30}}\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n               :hidden: true\n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  When you run the ``DateNumberToStringQuery.kt`` program in your IDE, it prints\n                  the following documents:\n                  \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "                     :copyable: false\n                  \n                     Document{{lastScrapedDate=2019-03-07, propertyName=Deluxe Loft Suite, propertyType=Apartment, accommodatesNumber=4, maximumNumberOfNights=1125}}\n                     Document{{lastScrapedDate=2019-03-11, propertyName=3 chambres au coeur du Plateau, propertyType=Apartment, accommodatesNumber=6, maximumNumberOfNights=1125}}\n                     Document{{lastScrapedDate=2019-02-16, propertyName=Be Happy in Porto, propertyType=Loft, accommodatesNumber=2, maximumNumberOfNights=1125}}\n                     Document{{lastScrapedDate=2019-02-18, propertyName=Cozy house at Beyoğlu, propertyType=Apartment, accommodatesNumber=2, maximumNumberOfNights=1125}}\n                     Document{{lastScrapedDate=2019-02-16, propertyName=Downtown Oporto Inn (room cleaning), propertyType=Hostel, accommodatesNumber=2, maximumNumberOfNights=1125}}\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  When you run the ``DateNumberToStringQuery.kt`` program in your IDE, it prints\n                  the following documents:\n                  \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "                     :copyable: false\n\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Ocean View Waikiki Marina w/prkg, propertyType=Condominium, accommodatesNumber=2, maximumNumberOfNights=365}}\n                     Document{{lastScrapedDate=2019-03-07, propertyName=New York City - Upper West Side Apt, propertyType=Apartment, accommodatesNumber=2, maximumNumberOfNights=360}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=~Ao Lele~ Flying Cloud, propertyType=Treehouse, accommodatesNumber=2, maximumNumberOfNights=30}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Banyan Bungalow, propertyType=Bungalow, accommodatesNumber=2, maximumNumberOfNights=300}}\n                     Document{{lastScrapedDate=2019-03-06, propertyName=Luxury 1-Bdrm in Downtown Brooklyn, propertyType=Apartment, accommodatesNumber=2, maximumNumberOfNights=30}}\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-kotlin.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: sh\n\n            use sample_airbnb \n\n         .. output:: \n            :language: sh\n            :emphasize-lines: 1 \n            :visible: true\n\n            switched to db sample_airbnb\n\n   .. step:: Run the following |fts| queries using the operator for which you created the index.\n\n      .. include:: /includes/extracts/fts-query-intro.rst \n\n      .. tabs:: \n\n         .. tab:: queryString Operator \n            :tabid: querystring\n\n            .. tabs:: \n\n               .. tab:: AND Query \n                  :tabid: and-query \n\n                  .. include:: /includes/extracts/fts-and-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-mongosh.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: json\n\n                        db.airbnb_mat_view.aggregate([\n                          {\n                            \"$search\": { \n                              \"index\": \"date-number-fields-tutorial\",\n                              \"queryString\": { \n                                \"defaultPath\": \"propertyType\",\n                                \"query\": \"propertyType: (Apartment OR Condominium) AND accommodatesNumber: 4 AND lastScrapedDate: 2019\"\n                              }\n                            }\n                          },\n                          { $limit: 5 },\n                          {\n                            $project: {\n                              \"_id\": 0\n                            }\n                          }\n                        ])\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-and-sh-compass-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-mongosh.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: json\n\n                        db.airbnb_mat_view.aggregate([\n                          {\n                            \"$search\": {\n                              \"index\": \"date-number-fields-tutorial\",\n                              \"queryString\": {\n                                \"defaultPath\": \"propertyType\",\n                                \"query\": \"propertyType: House OR accommodatesNumber: 2 OR lastScrapedDate: 2019 OR maximumNumberOfNights: 30\"\n                              }\n                            }\n                          },\n                          { $limit: 5 },\n                          {\n                            $project: {\n                              \"_id\": 0\n                            }\n                          }\n                        ])\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-or-sh-compass-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-mongosh.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: json\n\n                        db.airbnb_mat_view.aggregate([\n                          {\n                            \"$search\": {\n                              \"index\": \"date-number-fields-tutorial\",\n                              \"compound\": {\n                                \"should\": [{\n                                  \"autocomplete\": {\n                                    \"path\": \"lastScrapedDate\",\n                                    \"query\": \"2\"\n                                  }\n                                },\n                                {\n                                  \"autocomplete\": {\n                                    \"path\": \"maximumNumberOfNights\",\n                                    \"query\": \"1\"\n                                  }\n                                }]\n                              }\n                            }\n                          },\n                          { $limit: 5 },\n                          {\n                            $project: {\n                              \"_id\": 0\n                            }\n                          }\n                        ])\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-date-sh-compass-query-results.json\n                        :language: none\n                        :emphasize-lines: 3, 7, 10, 14, 17, 21, 24, 28, 31, 35\n                        :visible: true\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-mongosh.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: json\n\n                        db.airbnb_mat_view.aggregate([\n                          {\n                            \"$search\": {\n                              \"index\": \"date-number-fields-tutorial\",\n                              \"compound\": {\n                                \"should\": [{\n                                  \"autocomplete\": {\n                                    \"path\": \"maximumNumberOfNights\",\n                                    \"query\": \"3\"\n                                  }\n                                },\n                                {\n                                  \"autocomplete\": {\n                                    \"path\": \"accommodatesNumber\",\n                                    \"query\": \"2\"\n                                  }\n                                }]\n                              }\n                            }\n                          },\n                          { $limit: 5 },\n                          {\n                            $project: {\n                              \"_id\": 0\n                            }\n                          }\n                        ])\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-numeric-sh-compass-query-results.json\n                        :language: none\n                        :emphasize-lines: 6-7, 13-14, 20-21, 27-28, 34-35\n                        :visible: true\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-mongosh.rst"
  },
  {
    "code": "                     :language: javascript\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 23\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :language: javascript\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 23\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. include:: /includes/extracts/fts-nodejs-query-desc.rst\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :language: javascript\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 34\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :language: javascript\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 34\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: queryString Operator \n            :tabid: querystring\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: AND Query \n                  :tabid: and-query \n                     \n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        node date-number-to-string-query.js\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-and-node-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        node date-number-to-string-query.js\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-or-node-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        node date-number-to-string-query.js\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-date-node-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell \n                        \n                        node date-number-to-string-query.js\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-numeric-node-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-nodejs.rst"
  },
  {
    "code": "                     :language: python\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 4\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :language: python\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 4\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. include:: /includes/extracts/fts-python-query-desc.rst\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst \n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :language: python\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 4\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst \n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :language: python\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 4\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: queryString Operator \n            :tabid: querystring\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: AND Query \n                  :tabid: and-query \n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        python date-number-to-string-query.py\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-and-py-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        python date-number-to-string-query.py\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-or-py-query-results.json \n                        :language: json \n                        :linenos:\n                        :visible: true\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        python date-number-to-string-query.py\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-date-py-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        python date-number-to-string-query.py\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-numeric-py-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-python.rst"
  },
  {
    "code": "                     :language: go\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 17\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n                  .. include:: /includes/extracts/fts-or-query-desc.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "                     :language: go\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 17\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n                  .. include:: /includes/extracts/fts-date-query-desc.rst \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "                     :language: go\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 22\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n                  .. include:: /includes/extracts/fts-numeric-query-desc.rst \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "                     :language: go\n                     :linenos:\n                     :dedent:\n                     :emphasize-lines: 22\n\n                  .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: queryString Operator \n            :tabid: querystring\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: AND Query \n                  :tabid: and-query \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        go run date-number-to-string-query.go\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-and-go-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: OR Query \n                  :tabid: or-query \n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        go run date-number-to-string-query.go\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/querystring-or-go-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n         .. tab:: autocomplete Operator \n            :tabid: autocomplete\n\n            .. tabs:: \n               :hidden:\n\n               .. tab:: Year Search\n                  :tabid: yearquery\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        go run date-number-to-string-query.go\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-date-go-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n               .. tab:: Number Search\n                  :tabid: numericquery\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "                     :copyable: true \n\n                     .. input:: \n                        :language: shell\n\n                        go run date-number-to-string-query.go\n\n                     .. output:: /includes/fts-tutorial/date-number-to-string/autocomplete-numeric-go-query-results.json\n                        :language: json \n                        :linenos:\n                        :visible: true\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-number-query-query-go.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: js\n            :linenos:\n         \n            [\n              {\n                $search: {\n                  \"index\": \"date-range-tutorial\",\n                  \"compound\": {\n                    \"must\": [{\n                      \"range\": {\n                        \"path\": \"released\",\n                        \"gt\": ISODate(\"2015-01-01T00:00:00.000Z\"),\n                        \"lt\": ISODate(\"2015-12-31T00:00:00.000Z\")\n                      }\n                    }],\n                    \"should\": [{\n                      \"near\": {\n                        \"path\": \"released\",\n                        \"origin\": ISODate(\"2015-07-01T00:00:00.000+00:00\"),\n                        \"pivot\": 2629800000\n                      }\n                    }]\n                  }\n                }\n              }\n            ]\n      \n         .. output::\n            :visible: true\n      \n            SCORE: 2  _id:  \"573a13c4f29313caabd6c383\"\n              fullplot: \"When John Connor (Jason Clarke), leader of the human resistance, sends…\"\n              imdb: Object\n              year: 2015\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 2  _id:  \"573a13d9f29313caabdaa9e2\"\n              fullplot: \"Three years after Mike bowed out of the stripper life at the top of hi…\"\n              imdb: Object\n              year: 2015\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 2  _id:  \"573a13e9f29313caabdcd223\"\n              plot: \"A documentary about the power of transformation told through the eyes …\"\n              genres: Array\n              runtime: 87\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 2  _id:  \"573a13f4f29313caabde1138\"\n              plot: \"Dedicated home care nurse Vlasta lives for her husband Lada, her daugh…\"\n              genres: Array\n              runtime: 92\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 2  _id:  \"573a13f9f29313caabdeb320\"\n              plot: \"For anyone who has not fully understood the controversial Bitcoin yet,…\"\n              genres: Array\n              runtime: 60\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9681909084320068  _id:  \"573a13c2f29313caabd67986\"\n              plot: \"A man wakes up alone in the middle of the desert with a black hood on …\"\n              genres: Array\n              runtime: 90\n              ...\n              released: 2015-07-02T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9681909084320068  _id:  \"573a13f4f29313caabde14cf\"\n              plot: \"In 1836 the Danish romantic visionary Wulff travels to Africa to creat…\"\n              genres: Array\n              runtime: 114\n              ...\n              released: 2015-07-02T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9383430480957031  _id:  \"573a13d6f29313caabd9f77d\"\n              plot: \"The plot of the film has a grandfather telling his grand kids the stor…\"\n              genres: Array\n              runtime: 78\n              ...\n              released: 2015-07-03T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9383430480957031  _id:  \"573a13e3f29313caabdbfb00\"\n              plot: \"The story of Amy Winehouse in her own words, featuring unseen archival…\"\n              genres: Array\n              runtime: 128\n              ...\n              released: 2015-07-02T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9383430480957031  _id:  \"573a13e9f29313caabdcbe1e\"\n              plot:  \"A modern day train hopper fighting to become a successful musician, an…\"\n              genres: Array\n              runtime: 90\n              ...\n              released: 2015-07-02T00:00:00.000+00:00\n              ...\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n      \n      .. include:: /includes/extracts/fts-date-range-results.rst\n      \n   .. step:: Run an |fts| ``compound`` query with three clauses on the ``movies`` collection.\n      \n      The following example adds on to the previous example. \n      \n      .. include:: /includes/extracts/fts-date-range-complex-clauses.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-range-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: js\n            :linenos:\n      \n            [\n              {\n                $search: {\n                  \"index\": \"date-range-tutorial\",\n                  \"compound\": {\n                    \"must\": [{\n                      \"range\": {\n                        \"path\": \"released\",\n                        \"gt\": ISODate(\"2015-01-01T00:00:00.000Z\"),\n                        \"lt\": ISODate(\"2015-12-31T00:00:00.000Z\")\n                      }\n                    }],\n                    \"should\": [{\n                      \"near\": {\n                        \"path\": \"released\",\n                        \"origin\": ISODate(\"2015-07-01T00:00:00.000+00:00\"),\n                        \"pivot\": 2629800000\n                      }\n                    }],\n                    \"mustNot\": [{\n                      \"text\": {\n                        \"query\": \"documentary\",\n                        \"path\": \"genres\"\n                      }\n                    }]\n                  }\n                }\n              }\n              ]\n      \n         .. output::\n            :visible: true\n      \n            SCORE: 2  _id:  \"573a13c4f29313caabd6c383\"\n              fullplot: \"When John Connor (Jason Clarke), leader of the human resistance, sends…\"\n              imdb: Object\n              year: 2015\n              ...\n              genres:\n                0: \"Action\"\n                1: \"Adventure\"\n                2: \"Sci-Fi\"\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 2  _id:  \"573a13d9f29313caabdaa9e2\"\n              fullplot: \"Three years after Mike bowed out of the stripper life at the top of hi…\"\n              imdb: Object\n              year: 2015\n              ...\n              genres:\n                0: \"Comedy\"\n                1: \"Drama\"\n                2: \"Music\"\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 2  _id:  \"573a13f4f29313caabde1138\"\n              plot: \"Dedicated home care nurse Vlasta lives for her husband Lada, her daugh…\"\n              genres:\n                0: \"Comedy\"\n                1: \"Drama\"\n              runtime: 92\n              ...\n              released: 2015-07-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9681909084320068  _id: \"573a13c2f29313caabd67986\"\n              plot:  \"A man wakes up alone in the middle of the desert with a black hood on …\"\n              genres:\n                0: \"Drama\"\n                1: \"Mystery\"\n                2: \"Sci-Fi\"\n              runtime: 90\n              ...\n              released: 2015-07-02T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9681909084320068  _id:  \"573a13f4f29313caabde14cf\"\n              plot: \"In 1836 the Danish romantic visionary Wulff travels to Africa to creat…\"\n              genres:\n                0: \"Drama\"\n                1: \"History\"\n                2: \"Romance\"\n              runtime: 114\n              ...\n              released: 2015-07-02T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9383430480957031  _id:  \"573a13d6f29313caabd9f77d\"\n              plot: \"The plot of the film has a grandfather telling his grand kids the stor…\"\n              genres:\n                0: \"Animation\"\n                1: \"Family\"\n              runtime: 78\n              ...\n              released: 2015-07-03T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9383430480957031  _id:  \"573a13e9f29313caabdcbe1e\"\n              plot: \"A modern day train hopper fighting to become a successful musician, an…\"\n              genres:\n                0: \"Drama\"\n              runtime: 90\n              ...\n              released: 2015-07-03T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9383430480957031  _id:  \"573a13e9f29313caabdccb5b\"\n              plot: \"A fancy garden party turns into upper class prey when a colony of kill…\"\n              genres:\n                0: \"Comedy\"\n                1: \"Horror\"\n              runtime: 87\n              ...\n              released: 2015-07-03T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.9102803468704224  _id:  \"573a13faf29313caabdec74f\"\n              countries: Array\n              genres:\n                0: \"Drama\"\n              runtime: 104\n              ...\n              released: 2015-07-03T00:00:00.000+00:00\n              ...\n      \n            SCORE: 1.8838474750518799  _id:  \"573a13eef29313caabdd531d\"\n              plot: \"A fantasy love story that drifts between this world and heaven. Chasuk…\"\n              genres:\n                0: \"Comdedy\"\n              countries: Array\n              ...\n              released: 2015-06-27T00:00:00.000+00:00\n              ...\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n      \n      .. include:: /includes/extracts/fts-date-range-results.rst     \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-date-range-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :language: c\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to delete an index.\n      - The name of the index that you want to delete.\n\n   .. step:: Compile and run the file using the following commands.\n\n",
    "language": "c",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-c.rst"
  },
  {
    "code": "         :language: cpp\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to retrieve the indexes.\n      - The name of the index that you want to delete.\n\n   .. step:: Compile and run the file using the following commands.\n\n",
    "language": "cpp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-cpp.rst"
  },
  {
    "code": "   :caption: Program.cs \n   :language: csharp\n   :copyable:\n\nTo run the sample application, create a new .NET console project named\n``csharp-delete-index`` and copy the previous code example into the \n``Program.cs`` file. Then, use the following command to run the project:\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-csharp.rst"
  },
  {
    "code": "   :copyable: true\n\n   dotnet run csharp-delete-index.csproj\n\n.. note:: \n\n   The ``DropOne()`` method doesn't return an output. \n   You can use the {+atlas-ui+} to view the \n   :ref:`index status <node-status-ref>`.\n\n.. tip:: API Documentation\n\n   To learn more about the methods on this page, see the \n   `API documentation <https://mongodb.github.io/mongo-csharp-driver/2.21/apidocs/html/Methods_T_MongoDB_Driver_Search_IMongoSearchIndexManager.htm>`__\n   for the .NET/C# driver.\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-csharp.rst"
  },
  {
    "code": "         :language: java\n         :copyable: true \n         :linenos: \n         :emphasize-lines: 10, 14-15, 17\n\n   .. step:: Replace the following values and then save the file.\n\n      - ``<connection-string>`` - Your |service| connection string. To\n        learn more, see :ref:`connect-via-driver`.\n\n        .. note:: \n\n           In your connection string, don't include the\n           :manual:`writeConcern </manual/reference/write-concern/>`\n           setting.\n           \n      - ``<database-name>`` - The name of the database that contains the\n        collection. \n      - ``<collection-name>`` - The name of the collection for which you\n        want to retrieve the index. \n      - ``<index-name>`` - the name of the index to delete.\n\n   .. step:: Compile and run the file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-java.rst"
  },
  {
    "code": "   :caption: drop-index.js\n   :language: javascript\n   :copyable:\n\nTo run the sample application, use the following command.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-node.rst"
  },
  {
    "code": "   :copyable: true\n\n   node drop-index.js\n\n.. note:: \n\n   The ``dropSearchIndex`` method doesn't return an output. \n   You can use the {+atlas-ui+} to view the \n   :ref:`index status <node-status-ref>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-node.rst"
  },
  {
    "code": "         :language: python\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to delete an index.\n      - The name of the index that you want to delete.\n\n   .. step:: Run the file using the following command.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-python.rst"
  },
  {
    "code": "   :copyable: true\n\n   db.<collection>.dropSearchIndex(\"<index-name>\")\n\nExample\n~~~~~~~\n\nThe following command deletes a search\nindex named ``default`` from the ``movies`` collection:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-shell.rst"
  },
  {
    "code": "   :copyable: true\n\n   db.movies.dropSearchIndex(\"default\")\n\n.. note:: \n\n   The ``db.collection.dropSearchIndex()`` command doesn't \n   return an output. You can use the {+atlas-ui+} to\n   view the :ref:`index status <node-status-ref>`.\n   \n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-delete-index-shell.rst"
  },
  {
    "code": "               :linenos:\n         \n               {\n                 \"mappings\": {\n                   \"fields\": {\n                     \"genres\": {\n                       \"type\": \"string\"\n                     },\n                     \"title\": {\n                       \"analyzer\": \"diacriticFolder\",\n                       \"type\": \"string\"\n                     }\n                   }\n                 },\n                 \"analyzers\": [{\n                   \"charFilters\": [],\n                   \"name\": \"diacriticFolder\",\n                   \"tokenizer\": {\n                     \"type\": \"keyword\"\n                   },\n                   \"tokenFilters\": [{\n                     \"type\": \"icuFolding\"\n                   }]\n                 }]\n               }\n      \n            b. Click :guilabel:`Next`.\n      \n   .. step:: Click :guilabel:`Create Search Index`.\n\n   .. step:: Close the :guilabel:`You're All Set!` Modal Window.\n      \n      A modal window appears to let you know your index is building. Click \n      the :guilabel:`Close` button.\n      \n   .. step:: Wait for the index to finish building.\n      \n      The index should take about one minute to build. While it is\n      building, the :guilabel:`Status` column reads ``Build in\n      Progress``. When it is finished building, the\n      :guilabel:`Status` column reads ``Active``.\n      \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-diacritic-insensitive-create-index.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: js\n            :linenos:\n      \n            [\n              {\n                \"$search\" : {\n                  \"index\": \"diacritic-insensitive-tutorial\",\n                  \"compound\" : {\n                    \"must\": [{\n                        \"wildcard\" : {\n                          \"query\" : \"alle*\",\n                          \"path\": \"title\",\n                          \"allowAnalyzedField\": true\n                    }\n                    }],\n                    \"should\": [{\n                      \"text\": {\n                        \"query\" : \"Drama\",\n                        \"path\" : \"genres\"\n                      }\n                    }]\n                  }\n                }\n              }\n            ]\n      \n         .. output::\n            :visible: true\n      \n            SCORE: 1.2084882259368896  _id:  \"573a13a1f29313caabd07bb6\"\n              plot: \"A group of hip retro teenage outsiders become involved in an interscho…\"\n              genres:\n                0: \"Drama\"\n                1: \"Family\"\n                2: \"Sport\"\n              runtime: 103\n              title: \"Alley Cats Strike\"\n      \n            SCORE: 1.179288625717163  _id:  \"573a13b1f29313caabd382a2\"\n              plot: \"Famous pianist Zetterstrèm returns home to his native Denmark, to give…\"\n              genres:\n                0: \"Drama\"\n                1: \"Romance\"\n                2: \"Sci-Fi\"\n              runtime: 88\n              title: \"Allegro\"\n      \n            SCORE: 1  _id:  \"573a1397f29313caabce5f15\"\n              plot: \"An enthusiastic filmmaker thinks he's come up with a totally original …\"\n              genres:\n                0: \"Animation\"\n                1: \"Comedy\"\n                2: \"Fantasy\"\n              runtime: 75\n              title: \"Allegro non troppo\"\n      \n            SCORE: 1  _id:  \"573a13d1f29313caabd8f84b\"\n              plot: \"The eleven year old cycling talent Freddy is the son of a butcher in a…\"\n              genres:\n                0: \"Comedy\"\n              runtime: 100\n              title: \"Allez, Eddy!\"\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n      \n      .. include:: /includes/extracts/fts-diacritic-insensitive-results.rst      \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-diacritic-insensitive-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: false \n\n               title: 'Toy Story',\n               cast: Array (4)\n\n               title: 'Toy Story 2',\n               cast: Array (4)\n\n               cast: Array (4)\n               title: 'From the Earth to the Moon'\n\n               title: \"You've Got Mail\",\n               cast: Array (4)\n\n               cast: Array (4)\n               title: 'Shooting War'\n\n               title: 'Catch Me If You Can',\n               cast: Array (4)\n\n               title: 'The Polar Express',\n               cast: Array (4)\n\n               cast: Array (4)\n               title: 'The Da Vinci Code'\n\n               cast: Array (4)\n               title: 'Toy Story 3'\n\n               cast: Array (4)\n               title: 'Extremely Loud & Incredibly Close'\n            \n         .. tab:: Return Total and Paginate Results\n            :tabid: return-total\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst\n\n            .. include:: /includes/fts-tutorial/divide-results/list-table-compass-facet-query.rst\n\n            If you :compass:`enabled </aggregation-pipeline-builder/#set-the-documents-limit-or-auto-preview-documents>` \n            :guilabel:`Auto Preview`, |compass| displays the following\n            documents next to the ``$project`` pipeline stage: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-compass.rst"
  },
  {
    "code": "               :copyable: false\n\n               rows: Array (10)\n                 0: Object\n                   title: 'Toy Story'\n                   cast: Array (4)\n                   score: 4.617640972137451\n                 1: Object\n                   title: 'Toy Story 2'\n                   cast: Array (4)\n                   score: 4.617640972137451\n                 2: Object\n                   cast: Array (4)\n                   title: 'From the Earth to the Moon',\n                   score: 4.617640972137451\n                 3: Object\n                   title: \"You've Got Mail\"\n                   cast: Array (4)\n                   score: 4.617640972137451\n                 4: Object\n                   cast: Array (4)\n                   title: 'Shooting War'\n                   score: 4.617640972137451\n                 5: Object\n                   title: 'Catch Me If You Can',\n                   cast: Array (4)\n                   score: 4.617640972137451\n                 6: Object\n                   title: 'The Polar Express',\n                   cast: Array (4)\n                   score: 4.617640972137451\n                 7: Object\n                   cast: [ 'Tom Hanks', 'Audrey Tautou', 'Ian McKellen', 'Jean Reno' ],\n                   title: 'The Da Vinci Code',\n                   score: 4.617640972137451\n                 8: Object\n                   cast: [ 'Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Ned Beatty' ],\n                   title: 'Toy Story 3',\n                   score: 4.617640972137451\n                 9: Object\n                   cast: Array (4)\n                   title: 'Extremely Loud & Incredibly Close',\n                   score: 4.617640972137451\n                    \n                 totalRows: Object \n                   count: Object \n                     lowerBound: 435\n\n   .. step:: Expand your query results.\n\n      |compass| might not display all the fields inside objects and all\n      the values inside arrays for the documents it returns in the\n      results. To view all the fields and values, expand the field in\n      the results.  \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-compass.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst \n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 12\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Paginate Results \n            :tabid: basic\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run divide-query-results.csproj\n\n               .. output:: \n                  :language: javascript\n\n                  { \"title\" : \"Toy Story\", \"cast\" : [\"Tom Hanks\", \"Tim Allen\", \"Don Rickles\", \"Jim Varney\"], \"score\" : 4.6176409721374512 }, \n                  { \"title\" : \"Toy Story 2\", \"cast\" : [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Kelsey Grammer\"], \"score\" : 4.6176409721374512 }, \n                  { \"cast\" : [\"Tom Hanks\", \"Nick Searcy\", \"Lane Smith\", \"David Andrews\"], \"title\" : \"From the Earth to the Moon\", \"score\" : 4.6176409721374512 }, \n                  { \"title\" : \"You've Got Mail\", \"cast\" : [\"Tom Hanks\", \"Meg Ryan\", \"Greg Kinnear\", \"Parker Posey\"], \"score\" : 4.6176409721374512 }, \n                  { \"cast\" : [\"Tom Hanks\", \"Stephen Ambrose\", \"Russ Meyer\", \"Walter Rosenblum\"], \"title\" : \"Shooting War\", \"score\" : 4.6176409721374512 }, \n                  { \"title\" : \"Catch Me If You Can\", \"cast\" : [\"Leonardo DiCaprio\", \"Tom Hanks\", \"Christopher Walken\", \"Martin Sheen\"], \"score\" : 4.6176409721374512 }, \n                  { \"title\" : \"The Polar Express\", \"cast\" : [\"Tom Hanks\", \"Leslie Zemeckis\", \"Eddie Deezen\", \"Nona Gaye\"], \"score\" : 4.6176409721374512 }, \n                  { \"cast\" : [\"Tom Hanks\", \"Audrey Tautou\", \"Ian McKellen\", \"Jean Reno\"], \"title\" : \"The Da Vinci Code\", \"score\" : 4.6176409721374512 }, \n                  { \"cast\" : [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Ned Beatty\"], \"title\" : \"Toy Story 3\", \"score\" : 4.6176409721374512 }, \n                  { \"cast\" : [\"Tom Hanks\", \"Thomas Horn\", \"Sandra Bullock\", \"Zoe Caldwell\"], \"title\" : \"Extremely Loud & Incredibly Close\", \"score\" : 4.6176409721374512 }\n\n         .. tab:: Return Total and Paginate Results \n            :tabid: facet\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run divide-query-results.csproj\n\n               .. output:: \n                  :language: javascript\n\n                  { \n                    \"rows\" : [\n                       { \"title\" : \"Toy Story\", \"cast\" : [\"Tom Hanks\", \"Tim Allen\", \"Don Rickles\", \"Jim Varney\"], \"score\" : 4.6176409721374512 }, \n                       { \"title\" : \"Toy Story 2\", \"cast\" : [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Kelsey Grammer\"], \"score\" : 4.6176409721374512 }, \n                       { \"cast\" : [\"Tom Hanks\", \"Nick Searcy\", \"Lane Smith\", \"David Andrews\"], \"title\" : \"From the Earth to the Moon\", \"score\" : 4.6176409721374512 }, \n                       { \"title\" : \"You've Got Mail\", \"cast\" : [\"Tom Hanks\", \"Meg Ryan\", \"Greg Kinnear\", \"Parker Posey\"], \"score\" : 4.6176409721374512 }, \n                       { \"cast\" : [\"Tom Hanks\", \"Stephen Ambrose\", \"Russ Meyer\", \"Walter Rosenblum\"], \"title\" : \"Shooting War\", \"score\" : 4.6176409721374512 }, \n                       { \"title\" : \"Catch Me If You Can\", \"cast\" : [\"Leonardo DiCaprio\", \"Tom Hanks\", \"Christopher Walken\", \"Martin Sheen\"], \"score\" : 4.6176409721374512 }, \n                       { \"title\" : \"The Polar Express\", \"cast\" : [\"Tom Hanks\", \"Leslie Zemeckis\", \"Eddie Deezen\", \"Nona Gaye\"], \"score\" : 4.6176409721374512 }, \n                       { \"cast\" : [\"Tom Hanks\", \"Audrey Tautou\", \"Ian McKellen\", \"Jean Reno\"], \"title\" : \"The Da Vinci Code\", \"score\" : 4.6176409721374512 }, \n                       { \"cast\" : [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Ned Beatty\"], \"title\" : \"Toy Story 3\", \"score\" : 4.6176409721374512 }, \n                       { \"cast\" : [\"Tom Hanks\", \"Thomas Horn\", \"Sandra Bullock\", \"Zoe Caldwell\"], \"title\" : \"Extremely Loud & Incredibly Close\", \"score\" : 4.6176409721374512 }\n                    ], \n                    \"totalRows\" : { \"count\" : { \"lowerBound\" : NumberLong(435) } } \n                  }\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 19\n\n         .. tab:: Return Total and Paginate Results \n            :tabid: facet\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-go.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 19\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`.\n\n   .. step:: Run the command to query your collection.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Basic Example \n            :tabid: basic\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-go.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language: shell\n            \n                  go run divide-query-results.go\n      \n               .. output:: \n                  :language: javascript\n\n                  [{title Toy Story} {cast [Tom Hanks Tim Allen Don Rickles Jim Varney]}]\n                  [{title Toy Story 2} {cast [Tom Hanks Tim Allen Joan Cusack Kelsey Grammer]}]\n                  [{cast [Tom Hanks Nick Searcy Lane Smith David Andrews]} {title From the Earth to the Moon}]\n                  [{title You've Got Mail} {cast [Tom Hanks Meg Ryan Greg Kinnear Parker Posey]}]\n                  [{cast [Tom Hanks Stephen Ambrose Russ Meyer Walter Rosenblum]} {title Shooting War}]\n                  [{title Catch Me If You Can} {cast [Leonardo DiCaprio Tom Hanks Christopher Walken Martin Sheen]}]\n                  [{title The Polar Express} {cast [Tom Hanks Leslie Zemeckis Eddie Deezen Nona Gaye]}]\n                  [{cast [Tom Hanks Audrey Tautou Ian McKellen Jean Reno]} {title The Da Vinci Code}]\n                  [{cast [Tom Hanks Tim Allen Joan Cusack Ned Beatty]} {title Toy Story 3}]\n                  [{cast [Tom Hanks Thomas Horn Sandra Bullock Zoe Caldwell]} {title Extremely Loud & Incredibly Close}]\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-go.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language: shell\n            \n                  go run divide-query-results.go\n      \n               .. output:: \n                  :language: javascript\n\n                  [\n                    {rows [\n                      [{title Toy Story} {cast [Tom Hanks Tim Allen Don Rickles Jim Varney]} {score 4.617640972137451}] \n                      [{title Toy Story 2} {cast [Tom Hanks Tim Allen Joan Cusack Kelsey Grammer]} {score 4.617640972137451}] \n                      [{cast [Tom Hanks Nick Searcy Lane Smith David Andrews]} {title From the Earth to the Moon} {score 4.617640972137451}] \n                      [{title You've Got Mail} {cast [Tom Hanks Meg Ryan Greg Kinnear Parker Posey]} {score 4.617640972137451}] \n                      [{cast [Tom Hanks Stephen Ambrose Russ Meyer Walter Rosenblum]} {title Shooting War} {score 4.617640972137451}] \n                      [{title Catch Me If You Can} {cast [Leonardo DiCaprio Tom Hanks Christopher Walken Martin Sheen]} {score 4.617640972137451}] \n                      [{title The Polar Express} {cast [Tom Hanks Leslie Zemeckis Eddie Deezen Nona Gaye]} {score 4.617640972137451}] \n                      [{cast [Tom Hanks Audrey Tautou Ian McKellen Jean Reno]} {title The Da Vinci Code} {score 4.617640972137451}] \n                      [{cast [Tom Hanks Tim Allen Joan Cusack Ned Beatty]} {title Toy Story 3} {score 4.617640972137451}] \n                      [{cast [Tom Hanks Thomas Horn Sandra Bullock Zoe Caldwell]} {title Extremely Loud & Incredibly Close} {score 4.617640972137451}]\n                    ]} \n                    {totalRows [{count [{lowerBound 435}]}]}\n                  ]\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-go.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 18\n\n         .. tab:: Return Total and Paginate Results\n            :tabid: facet\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst \n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-java.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 13\n\n      .. note:: \n\n         To run the sample code in your Maven environment, add the \n         following code above the import statements in your file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-java.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n\n                  javac DivideQueryResults.java\n                  java DivideQueryResults\n        \n               .. output::\n                  :language: json\n                  :visible: true\n\n                  {\"title\": \"Toy Story\", \"cast\": [\"Tom Hanks\", \"Tim Allen\", \"Don Rickles\", \"Jim Varney\"]}\n                  {\"title\": \"Toy Story 2\", \"cast\": [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Kelsey Grammer\"]}\n                  {\"cast\": [\"Tom Hanks\", \"Nick Searcy\", \"Lane Smith\", \"David Andrews\"], \"title\": \"From the Earth to the Moon\"}\n                  {\"title\": \"You've Got Mail\", \"cast\": [\"Tom Hanks\", \"Meg Ryan\", \"Greg Kinnear\", \"Parker Posey\"]}\n                  {\"cast\": [\"Tom Hanks\", \"Stephen Ambrose\", \"Russ Meyer\", \"Walter Rosenblum\"], \"title\": \"Shooting War\"}\n                  {\"title\": \"Catch Me If You Can\", \"cast\": [\"Leonardo DiCaprio\", \"Tom Hanks\", \"Christopher Walken\", \"Martin Sheen\"]}\n                  {\"title\": \"The Polar Express\", \"cast\": [\"Tom Hanks\", \"Leslie Zemeckis\", \"Eddie Deezen\", \"Nona Gaye\"]}\n                  {\"cast\": [\"Tom Hanks\", \"Audrey Tautou\", \"Ian McKellen\", \"Jean Reno\"], \"title\": \"The Da Vinci Code\"}\n                  {\"cast\": [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Ned Beatty\"], \"title\": \"Toy Story 3\"}\n                  {\"cast\": [\"Tom Hanks\", \"Thomas Horn\", \"Sandra Bullock\", \"Zoe Caldwell\"], \"title\": \"Extremely Loud & Incredibly Close\"}\n\n         .. tab:: Facet Example\n            :tabid: facet\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-java.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n\n                  javac DivideQueryResults.java\n                  java DivideQueryResults\n        \n               .. output::\n                  :language: json\n                  :visible: true\n\n                  {\n                    \"rows\": [\n                      {\"title\": \"Toy Story\", \"cast\": [\"Tom Hanks\", \"Tim Allen\", \"Don Rickles\", \"Jim Varney\"], \"score\": 4.617640972137451}, \n                      {\"title\": \"Toy Story 2\", \"cast\": [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Kelsey Grammer\"], \"score\": 4.617640972137451}, \n                      {\"cast\": [\"Tom Hanks\", \"Nick Searcy\", \"Lane Smith\", \"David Andrews\"], \"title\": \"From the Earth to the Moon\", \"score\": 4.617640972137451}, \n                      {\"title\": \"You've Got Mail\", \"cast\": [\"Tom Hanks\", \"Meg Ryan\", \"Greg Kinnear\", \"Parker Posey\"], \"score\": 4.617640972137451}, \n                      {\"cast\": [\"Tom Hanks\", \"Stephen Ambrose\", \"Russ Meyer\", \"Walter Rosenblum\"], \"title\": \"Shooting War\", \"score\": 4.617640972137451}, \n                      {\"title\": \"Catch Me If You Can\", \"cast\": [\"Leonardo DiCaprio\", \"Tom Hanks\", \"Christopher Walken\", \"Martin Sheen\"], \"score\": 4.617640972137451}, \n                      {\"title\": \"The Polar Express\", \"cast\": [\"Tom Hanks\", \"Leslie Zemeckis\", \"Eddie Deezen\", \"Nona Gaye\"], \"score\": 4.617640972137451}, \n                      {\"cast\": [\"Tom Hanks\", \"Audrey Tautou\", \"Ian McKellen\", \"Jean Reno\"], \"title\": \"The Da Vinci Code\", \"score\": 4.617640972137451}, \n                      {\"cast\": [\"Tom Hanks\", \"Tim Allen\", \"Joan Cusack\", \"Ned Beatty\"], \"title\": \"Toy Story 3\", \"score\": 4.617640972137451}, \n                      {\"cast\": [\"Tom Hanks\", \"Thomas Horn\", \"Sandra Bullock\", \"Zoe Caldwell\"], \"title\": \"Extremely Loud & Incredibly Close\", \"score\": 4.617640972137451}\n                    ], \n                    \"totalRows\": {\"count\": {\"lowerBound\": 435}}\n                  }\n\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-java.rst"
  },
  {
    "code": "               :language: kotlin\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n         .. tab:: Return Total and Paginate Results\n            :tabid: facet\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst \n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :language: kotlin\n               :linenos:\n               :dedent:\n               :emphasize-lines: 7\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`.\n\n   .. step:: Run the ``DivideQueryResults.kt`` file.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Basic Example\n            :tabid: basic\n\n            When you run the ``DivideQueryResults.kt`` program in your IDE, it prints\n            the following documents:\n            \n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :copyable: false\n               \n               Document{{cast=[Tom Hanks, Bruce Dern, Carrie Fisher, Rick Ducommun], title=The 'Burbs}}\n               Document{{title=Sleepless in Seattle, cast=[Tom Hanks, Ross Malinger, Rita Wilson, Victor Garber]}}\n               Document{{cast=[Tom Hanks, Tim Allen, Kristen Schaal, Kevin McKidd], title=Toy Story That Time Forgot}}\n               Document{{title=Catch Me If You Can, cast=[Leonardo DiCaprio, Tom Hanks, Christopher Walken, Martin Sheen]}}\n               Document{{title=The Polar Express, cast=[Tom Hanks, Leslie Zemeckis, Eddie Deezen, Nona Gaye]}}\n               Document{{cast=[Tom Hanks, Audrey Tautou, Ian McKellen, Jean Reno], title=The Da Vinci Code}}\n               Document{{cast=[Keith David, Katharine Phillips, Tom Hanks, Paul Fussell], title=The War}}\n               Document{{cast=[Tom Hanks, Bruce Willis, Melanie Griffith, Kim Cattrall], title=The Bonfire of the Vanities}}\n               Document{{cast=[Tom Hanks, Denzel Washington, Roberta Maxwell, Buzz Kilman], title=Philadelphia}}\n               Document{{title=Apollo 13, cast=[Tom Hanks, Bill Paxton, Kevin Bacon, Gary Sinise]}}\n\n         .. tab:: Facet Example\n            :tabid: facet\n\n            When you run the ``DivideQueryResults.kt`` program in your IDE, it prints\n            the following result:\n            \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :copyable: false\n               \n               Document{{rows=[Document{{cast=[Tom Hanks, Bruce Dern, Carrie Fisher,\n               Rick Ducommun], title=The 'Burbs, score=4.617640972137451}},\n               Document{{title=Sleepless in Seattle, cast=[Tom Hanks, Ross Malinger,\n               Rita Wilson, Victor Garber], score=4.617640972137451}},\n               Document{{cast=[Tom Hanks, Tim Allen, Kristen Schaal, Kevin McKidd],\n               title=Toy Story That Time Forgot, score=4.617640972137451}},\n               Document{{title=Catch Me If You Can, cast=[Leonardo DiCaprio, Tom Hanks,\n               Christopher Walken, Martin Sheen], score=4.617640972137451}},\n               Document{{title=The Polar Express, cast=[Tom Hanks, Leslie Zemeckis,\n               Eddie Deezen, Nona Gaye], score=4.617640972137451}}, Document{{cast=[Tom\n               Hanks, Audrey Tautou, Ian McKellen, Jean Reno], title=The Da Vinci Code,\n               score=4.617640972137451}}, Document{{cast=[Keith David, Katharine\n               Phillips, Tom Hanks, Paul Fussell], title=The War,\n               score=4.617640972137451}}, Document{{cast=[Tom Hanks, Bruce Willis,\n               Melanie Griffith, Kim Cattrall], title=The Bonfire of the Vanities,\n               score=4.617640972137451}}, Document{{cast=[Tom Hanks, Denzel Washington,\n               Roberta Maxwell, Buzz Kilman], title=Philadelphia,\n               score=4.617640972137451}}, Document{{title=Apollo 13, cast=[Tom Hanks,\n               Bill Paxton, Kevin Bacon, Gary Sinise], score=4.617640972137451}}],\n               totalRows=Document{{count=Document{{lowerBound=435}}}}}}\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 27\n\n         .. tab:: Return Total and Paginate Results \n            :tabid: facet\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 42\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Query your collection.\n\n      Run the following command to query your collection: \n  \n      .. tabs:: \n         :hidden:\n\n         .. tab:: Basic Example \n            :tabid: basic\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  node divide-query-results.js\n        \n               .. output::\n                  :language: js\n                  :visible: true\n\n                  {\n                    title: 'Toy Story',\n                    cast: [ 'Tom Hanks', 'Tim Allen', 'Don Rickles', 'Jim Varney' ]\n                  }\n                  {\n                    title: 'Toy Story 2',\n                    cast: [ 'Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Kelsey Grammer' ]\n                  }\n                  {\n                    cast: [ 'Tom Hanks', 'Nick Searcy', 'Lane Smith', 'David Andrews' ],\n                    title: 'From the Earth to the Moon'\n                  }\n                  {\n                    title: \"You've Got Mail\",\n                    cast: [ 'Tom Hanks', 'Meg Ryan', 'Greg Kinnear', 'Parker Posey' ]\n                  }\n                  {\n                    cast: [ 'Tom Hanks', 'Stephen Ambrose', 'Russ Meyer', 'Walter Rosenblum' ],\n                    title: 'Shooting War'\n                  }\n                  {\n                    title: 'Catch Me If You Can',\n                    cast: [ 'Leonardo DiCaprio', 'Tom Hanks', 'Christopher Walken', 'Martin Sheen' ]\n                  }\n                  {\n                    title: 'The Polar Express',\n                    cast: [ 'Tom Hanks', 'Leslie Zemeckis', 'Eddie Deezen', 'Nona Gaye' ]\n                  }\n                  {\n                    cast: [ 'Tom Hanks', 'Audrey Tautou', 'Ian McKellen', 'Jean Reno' ],\n                    title: 'The Da Vinci Code'\n                  }\n                  {\n                    cast: [ 'Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Ned Beatty' ],\n                    title: 'Toy Story 3'\n                  }\n                  {\n                    cast: [ 'Tom Hanks', 'Thomas Horn', 'Sandra Bullock', 'Zoe Caldwell' ],\n                    title: 'Extremely Loud & Incredibly Close'\n                  }\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  node divide-query-results.js\n        \n               .. output::\n                  :language: js\n                  :visible: true\n\n                  {\n                    rows: [\n                      { title: 'Toy Story', cast: [Array], score: 4.617640972137451 },\n                      { title: 'Toy Story 2', cast: [Array], score: 4.617640972137451 },\n                      {\n                        cast: [Array],\n                        title: 'From the Earth to the Moon',\n                        score: 4.617640972137451\n                      },\n                      {\n                        title: \"You've Got Mail\",\n                        cast: [Array],\n                        score: 4.617640972137451\n                      },\n                      { cast: [Array], title: 'Shooting War', score: 4.617640972137451 },\n                      {\n                        title: 'Catch Me If You Can',\n                        cast: [Array],\n                        score: 4.617640972137451\n                      },\n                      {\n                        title: 'The Polar Express',\n                        cast: [Array],\n                        score: 4.617640972137451\n                      },\n                      {\n                        cast: [Array],\n                        title: 'The Da Vinci Code',\n                        score: 4.617640972137451\n                      },\n                      { cast: [Array], title: 'Toy Story 3', score: 4.617640972137451 },\n                      {\n                        cast: [Array],\n                        title: 'Extremely Loud & Incredibly Close',\n                        score: 4.617640972137451\n                      }\n                    ],\n                    totalRows: { count: { lowerBound: 435 } }\n                  }\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n         .. tab:: Return Total and Paginate Results \n            :tabid: facet\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-python.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the command to query your collection.\n\n      .. tabs::\n         :hidden: \n\n         .. tab:: Basic Example \n            :tabid: basic\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n           \n                  python divide-query-results.py\n\n               .. output::\n                  :language: json\n                  :visible: true\n            \n                  {'title': 'Toy Story', 'cast': ['Tom Hanks', 'Tim Allen', 'Don Rickles', 'Jim Varney']}\n                  {'title': 'Toy Story 2', 'cast': ['Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Kelsey Grammer']}\n                  {'cast': ['Tom Hanks', 'Nick Searcy', 'Lane Smith', 'David Andrews'], 'title': 'From the Earth to the Moon'}\n                  {'title': \"You've Got Mail\", 'cast': ['Tom Hanks', 'Meg Ryan', 'Greg Kinnear', 'Parker Posey']}v\n                  {'cast': ['Tom Hanks', 'Stephen Ambrose', 'Russ Meyer', 'Walter Rosenblum'], 'title': 'Shooting War'}\n                  {'title': 'Catch Me If You Can', 'cast': ['Leonardo DiCaprio', 'Tom Hanks', 'Christopher Walken', 'Martin Sheen']}\n                  {'title': 'The Polar Express', 'cast': ['Tom Hanks', 'Leslie Zemeckis', 'Eddie Deezen', 'Nona Gaye']}\n                  {'cast': ['Tom Hanks', 'Audrey Tautou', 'Ian McKellen', 'Jean Reno'], 'title': 'The Da Vinci Code'}\n                  {'cast': ['Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Ned Beatty'], 'title': 'Toy Story 3'}\n                  {'cast': ['Tom Hanks', 'Thomas Horn', 'Sandra Bullock', 'Zoe Caldwell'], 'title': 'Extremely Loud & Incredibly Close'}\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n           \n                  python divide-query-results.py\n\n               .. output::\n                  :language: json\n                  :visible: true\n\n                  {\n                    'rows': [\n                       {'title': 'Toy Story', 'cast': ['Tom Hanks', 'Tim Allen', 'Don Rickles', 'Jim Varney'], 'score': 4.617640972137451}, \n                       {'title': 'Toy Story 2', 'cast': ['Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Kelsey Grammer'], 'score': 4.617640972137451}, \n                       {'cast': ['Tom Hanks', 'Nick Searcy', 'Lane Smith', 'David Andrews'], 'title': 'From the Earth to the Moon', 'score': 4.617640972137451}, \n                       {'title': \"You've Got Mail\", 'cast': ['Tom Hanks', 'Meg Ryan', 'Greg Kinnear', 'Parker Posey'], 'score': 4.617640972137451}, \n                       {'cast': ['Tom Hanks', 'Stephen Ambrose', 'Russ Meyer', 'Walter Rosenblum'], 'title': 'Shooting War', 'score': 4.617640972137451}, \n                       {'title': 'Catch Me If You Can', 'cast': ['Leonardo DiCaprio', 'Tom Hanks', 'Christopher Walken', 'Martin Sheen'], 'score': 4.617640972137451}, \n                       {'title': 'The Polar Express', 'cast': ['Tom Hanks', 'Leslie Zemeckis', 'Eddie Deezen', 'Nona Gaye'], 'score': 4.617640972137451}, \n                       {'cast': ['Tom Hanks', 'Audrey Tautou', 'Ian McKellen', 'Jean Reno'], 'title': 'The Da Vinci Code', 'score': 4.617640972137451}, \n                       {'cast': ['Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Ned Beatty'], 'title': 'Toy Story 3', 'score': 4.617640972137451}, \n                       {'cast': ['Tom Hanks', 'Thomas Horn', 'Sandra Bullock', 'Zoe Caldwell'], 'title': 'Extremely Loud & Incredibly Close', 'score': 4.617640972137451}\n                    ], \n                    'totalRows': {'count': {'lowerBound': 435}}\n                  }\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/fts-tutorial/divide-results/simple-query.json\n                  :language: json\n                  :linenos:\n\n               .. output::\n                  :language: json\n                  :visible: true\n\n                  [\n                    {\n                      title: 'Toy Story',\n                      cast: [ 'Tom Hanks', 'Tim Allen', 'Don Rickles', 'Jim Varney' ]\n                    },\n                    {\n                      title: 'Toy Story 2',\n                      cast: [ 'Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Kelsey Grammer' ]\n                    },\n                    {\n                      cast: [ 'Tom Hanks', 'Nick Searcy', 'Lane Smith', 'David Andrews' ],\n                      title: 'From the Earth to the Moon'\n                    },\n                    {\n                      title: \"You've Got Mail\",\n                      cast: [ 'Tom Hanks', 'Meg Ryan', 'Greg Kinnear', 'Parker Posey' ]\n                    },\n                    {\n                      cast: [\n                        'Tom Hanks',\n                        'Stephen Ambrose',\n                        'Russ Meyer',\n                        'Walter Rosenblum'\n                      ],\n                      title: 'Shooting War'\n                    },\n                    {\n                      title: 'Catch Me If You Can',\n                      cast: [\n                        'Leonardo DiCaprio',\n                        'Tom Hanks',\n                        'Christopher Walken',\n                        'Martin Sheen'\n                      ]\n                    },\n                    {\n                      title: 'The Polar Express',\n                      cast: [ 'Tom Hanks', 'Leslie Zemeckis', 'Eddie Deezen', 'Nona Gaye' ]\n                    },\n                    {\n                      cast: [ 'Tom Hanks', 'Audrey Tautou', 'Ian McKellen', 'Jean Reno' ],\n                      title: 'The Da Vinci Code'\n                    },\n                    {\n                      cast: [ 'Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Ned Beatty' ],\n                      title: 'Toy Story 3'\n                    },\n                    {\n                      cast: [ 'Tom Hanks', 'Thomas Horn', 'Sandra Bullock', 'Zoe Caldwell' ],\n                      title: 'Extremely Loud & Incredibly Close'\n                    }\n                  ]\n            \n         .. tab:: Return Total and Paginate Results\n            :tabid: return-total\n\n            .. include:: /includes/extracts/fts-paginate-results-facet-query-desc.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-shell.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/fts-tutorial/divide-results/facet-query.json\n                  :language: json\n                  :linenos:\n\n               .. output::\n                  :language: json\n\n                  [\n                    {\n                      rows: [\n                        {\n                          title: 'Toy Story',\n                          cast: [ 'Tom Hanks', 'Tim Allen', 'Don Rickles', 'Jim Varney' ],\n                          score: 4.617640972137451\n                        },\n                        {\n                          title: 'Toy Story 2',\n                          cast: [ 'Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Kelsey Grammer' ],\n                          score: 4.617640972137451\n                        },\n                        {\n                          cast: [ 'Tom Hanks', 'Nick Searcy', 'Lane Smith', 'David Andrews' ],\n                          title: 'From the Earth to the Moon',\n                          score: 4.617640972137451\n                        },\n                        {\n                          title: \"You've Got Mail\",\n                          cast: [ 'Tom Hanks', 'Meg Ryan', 'Greg Kinnear', 'Parker Posey' ],\n                          score: 4.617640972137451\n                        },\n                        {\n                          cast: [\n                            'Tom Hanks',\n                            'Stephen Ambrose',\n                            'Russ Meyer',\n                            'Walter Rosenblum'\n                          ],\n                          title: 'Shooting War',\n                          score: 4.617640972137451\n                        },\n                        {\n                          title: 'Catch Me If You Can',\n                          cast: [\n                            'Leonardo DiCaprio',\n                            'Tom Hanks',\n                            'Christopher Walken',\n                            'Martin Sheen'\n                          ],\n                          score: 4.617640972137451\n                        },\n                        {\n                          title: 'The Polar Express',\n                          cast: [ 'Tom Hanks', 'Leslie Zemeckis', 'Eddie Deezen', 'Nona Gaye' ],\n                          score: 4.617640972137451\n                        },\n                        {\n                          cast: [ 'Tom Hanks', 'Audrey Tautou', 'Ian McKellen', 'Jean Reno' ],\n                          title: 'The Da Vinci Code',\n                          score: 4.617640972137451\n                        },\n                        {\n                          cast: [ 'Tom Hanks', 'Tim Allen', 'Joan Cusack', 'Ned Beatty' ],\n                          title: 'Toy Story 3',\n                          score: 4.617640972137451\n                        },\n                        {\n                          cast: [ \n                            'Tom Hanks',\n                            'Thomas Horn',\n                            'Sandra Bullock',\n                            'Zoe Caldwell' ],\n                          title: 'Extremely Loud & Incredibly Close',\n                          score: 4.617640972137451\n                        }\n                      ]\n                      totalRows: { count: { lowerBound: Long(\"435\") } }\n                    }\n                  ]\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-divide-results-tutorial-run-query-shell.rst"
  },
  {
    "code": "         :language: c\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to update an index.\n      - The name of the index that you want to update.\n      - The fields to redefine your search index. To learn more, see :ref:`ref-index-definitions`.\n\n   .. step:: Compile and run the file using the following commands.\n\n",
    "language": "c",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-c.rst"
  },
  {
    "code": "         :language: cpp\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to update an index.\n      - The name of the index that you want to update.\n      - The fields to redefine your search index. To learn more, see :ref:`ref-index-definitions`.\n\n   .. step:: Compile and run the file using the following commands.\n\n",
    "language": "cpp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-cpp.rst"
  },
  {
    "code": "   :caption: Program.cs\n   :language: csharp\n   :copyable:\n\nTo run the sample application, create a new .NET console project named\n``csharp-update-index`` and copy the previous code example into the \n``Program.cs`` file. Then, use the following command to run the project:\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-csharp.rst"
  },
  {
    "code": "   :copyable: true\n   \n   dotnet run csharp-update-index.csproj\n\n.. note:: \n\n   The ``Update()`` method doesn't return an output.\n   You can use the {+atlas-ui+} to view the \n   :ref:`index status <node-status-ref>`.\n\n.. tip:: API Documentation\n\n   To learn more about the methods on this page, see the \n   `API documentation <https://mongodb.github.io/mongo-csharp-driver/2.21/apidocs/html/Methods_T_MongoDB_Driver_Search_IMongoSearchIndexManager.htm>`__\n   for the .NET/C# driver.\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-csharp.rst"
  },
  {
    "code": "         :language: java\n         :copyable: true \n         :linenos: \n         :emphasize-lines: 10, 14-15, 17-20, 22\n\n   .. step:: Replace the following values in the code and then save the file.\n\n      - ``<connection-string>`` - Your |service| connection string. To\n        learn more, see :ref:`connect-via-driver`. \n\n        .. note:: \n\n           In your connection string, don't include the\n           :manual:`writeConcern </manual/reference/write-concern/>`\n           setting. \n\n      - ``<database-name>`` - The name of the database that contains the\n        collection. \n      - ``<collection-name>`` - The name of the collection for which you\n        want to retrieve the index. \n      - ``<analyzer-name>`` - The name of the :ref:`analyzer\n        <analyzers-ref>`.\n      - ``dynamic`` - The flag that indicates whether or not to\n        :ref:`automatically <static-dynamic-mappings>` index the fields.\n      - ``<field-name>`` - The name of the field to index.\n      - ``<field-type>`` - The field data :ref:`type <bson-data-types>`.\n      - ``<index-name>`` - The name of the index.\n\n   .. step:: Compile and run the file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-java.rst"
  },
  {
    "code": "   :caption: update-index.js\n   :language: javascript\n   :copyable:\n\nTo run the sample application, use the following command:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-node.rst"
  },
  {
    "code": "   :copyable: true\n\n   node update-index.js\n\n.. note:: \n\n   The ``updateSearchIndex`` method doesn't return an output.\n   You can use the {+atlas-ui+} to view the \n   :ref:`index status <node-status-ref>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-node.rst"
  },
  {
    "code": "         :language: python\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to update an index.\n      - The name of the index that you want to update.\n      - The fields to redefine your search index. To learn more, see :ref:`ref-index-definitions`.\n\n   .. step:: Run the file using the following command.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-python.rst"
  },
  {
    "code": "   :copyable: true\n\n   db.<collection>.updateSearchIndex(\n        \"<index-name>\",\n        /* updated search index definition */\n   )\n\nExample\n~~~~~~~\n\nThe following command updates a search\nindex named ``default`` from the ``movies`` collection \nto use :ref:`static mappings <static-dynamic-mappings>`:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-shell.rst"
  },
  {
    "code": "   :copyable: true\n\n   db.movies.updateSearchIndex(\n       \"default\",\n       {\n           \"mappings\": {\n           \"dynamic\": false,\n           \"fields\": {\n               \"<field-name>\": {\n                    \"type\": \"<field-type>\"\n               }\n           }\n       }\n   )   \n\n.. note:: \n   \n   The ``db.collection.updateSearchIndex()`` command doesn't \n   return an output. You can use the {+atlas-ui+} to view the \n   :ref:`index status <node-status-ref>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-edit-index-shell.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: json\n            :linenos: \n\n            [\n              {\n                \"$searchMeta\": {\n                  \"index\": \"embedded-documents-tutorial\",\n                  \"facet\": {\n                    \"operator\": {\n                      \"text\":{\n                        \"path\": \"name\",\n                        \"query\": \"High\"\n                      }\n                    },\n                    \"facets\": {\n                      \"gradeFacet\": {\n                        \"type\": \"string\",\n                        \"path\": \"teachers.classes.grade\"\n                      }\n                    }\n                  }\n                }\n              }\n            ]\n      \n         .. output:: /includes/fts-tutorial/embedded-document/facet-ui-query-results.sh\n            :language: js \n         \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-atlas-ui.rst"
  },
  {
    "code": "                :language: shell\n                :linenos:  \n\n             .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-compass.rst"
  },
  {
    "code": "         :language: csharp\n         :linenos:\n         :dedent:\n         :emphasize-lines: 9\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-cs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n        \n            dotnet run embedded-documents-facet-query.csproj\n\n         .. output:: \n            :language: javascript\n\n            { \n              \"count\" : { \"lowerBound\" : NumberLong(3), \"total\" : null }, \n              \"facet\" : { \n                \"gradeFacet\" : { \n                  \"buckets\" : [\n                    { \"_id\" : \"12th\", \"count\" : NumberLong(3) }, \n                    { \"_id\" : \"9th\", \"count\" : NumberLong(3) }, \n                    { \"_id\" : \"10th\", \"count\" : NumberLong(2) }, \n                    { \"_id\" : \"11th\", \"count\" : NumberLong(1) }\n                  ] \n                } \n              } \n            }\n\n      .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-cs.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 14\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the following command to query your collection: \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-go.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell\n\n            go run embedded-documents-facet-query.go\n\n         .. output:: /includes/fts-tutorial/embedded-document/facet-go-query-results.sh \n            :language: json \n            :linenos:\n            :visible: true\n\n      .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-go.rst"
  },
  {
    "code": "         :language: java\n         :linenos:\n         :dedent:\n         :emphasize-lines: 11\n\n      .. note:: \n\n         To run the sample code in your Maven environment, add the \n         following code above the import statements in your file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-java.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell \n\n            javac FacetEmbeddedDocumentsSearch.java\n            java FacetEmbeddedDocumentsSearch\n\n         .. output:: /includes/fts-tutorial/embedded-document/facet-java-query-results.json\n            :language: json \n            :linenos:\n            :visible: true\n\n      .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-java.rst"
  },
  {
    "code": "         :language: kotlin\n         :linenos:\n         :dedent:\n         :emphasize-lines: 7\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`.\n\n   .. step:: Run the ``EmbeddedDocumentsFacetQuery.kt`` file.\n\n      When you run the ``EmbeddedDocumentsFacetQuery.kt`` program in your IDE, it prints\n      the following documents:\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n\n         Document{{\n           count=Document{{lowerBound=3}}, \n           facet=Document{{\n             gradeFacet=Document{{\n               buckets=[\n                 Document{{_id=12th, count=3}}, \n                 Document{{_id=9th, count=3}}, \n                 Document{{_id=10th, count=2}}, \n                 Document{{_id=11th, count=1}}\n               ]\n             }}\n           }}\n         }}\n         \n      .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-kotlin.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: sh\n\n            use local_school_district \n\n         .. output:: \n            :language: sh\n            :emphasize-lines: 1 \n\n            switched to db local_school_district\n\n   .. step:: Run the following |fts| query against the ``schools`` collection.\n\n      .. include:: /includes/extracts/fts-embedded-document-facet-query-intro.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-mongosh.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: /includes/fts-tutorial/embedded-document/facet-mongosh-query.js\n            :linenos:\n            :language: json\n\n         .. output:: /includes/fts-tutorial/embedded-document/facet-mongosh-query-results.js\n            :linenos:\n            :language: sh\n            :visible: true\n\n      .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-mongosh.rst"
  },
  {
    "code": "         :language: javascript \n         :linenos:\n         :dedent:\n         :emphasize-lines: 4\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the following command to query your collection: \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-nodejs.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell\n                        \n            node embedded-documents-facet-query.js\n\n         .. output:: /includes/fts-tutorial/embedded-document/facet-nodejs-query-results.json \n            :language: json \n            :linenos:\n            :visible: true\n\n      .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-nodejs.rst"
  },
  {
    "code": "         :language: python\n         :linenos:\n         :dedent:\n         :emphasize-lines: 4\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the following command to query your collection: \n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-python.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell\n                        \n            python embedded-documents-facet-query.py\n\n         .. output:: /includes/fts-tutorial/embedded-document/facet-py-query-results.js\n            :language: json \n            :linenos:\n            :visible: true\n\n      .. include:: /includes/extracts/fts-embedded-document-facet-query-results.rst\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-facet-query-python.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language: json\n                  :linenos: \n\n                  [\n                    {\n                      \"$search\": {\n                        \"index\": \"embedded-documents-tutorial\",\n                        \"embeddedDocument\": {\n                          \"path\": \"teachers\",\n                          \"operator\": {\n                            \"compound\": {\n                              \"must\": [{\n                                \"text\": {\n                                  \"path\": \"teachers.first\",\n                                  \"query\": \"John\"\n                                }\n                              }],\n                              \"should\":[{\n                                \"text\": {\n                                  \"path\": \"teachers.last\",\n                                  \"query\": \"Smith\"\n                                }\n                              }]\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output:: \n                  :visible: true \n\n                  SCORE: 0.7830756902694702  _id:  \"1\"\n                    name: \"Evergreen High\"\n                    mascot: \"Jaguars\"\n                    teachers: Array \n                      0: Object\n                        first: \"Jane\"\n                        last: \"Earwhacker\"\n                        classes: Array\n                          ...\n                      1: Object\n                        first: \"John\"\n                        last: \"Smith\"\n                        classes: Array\n                          ...\n                    clubs: Object\n                      ...\n\n                  SCORE: 0.468008816242218  _id:  \"2\"\n                    name: \"Lincoln High\"\n                    mascot: \"Sharks\"\n                    teachers: Array\n                      0: Object\n                        first: \"Jane\"\n                        last: \"Smith\"\n                        classes: Array\n                          ...\n                      1: Object\n                        first: \"John\"\n                        last: \"Redman\"\n                        classes: Array\n                          ...\n                    clubs: Object\n                      ...\n\n         .. tab:: Nested Array Within Object\n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language: json\n                  :linenos: \n\n                  [\n                    {\n                      \"$search\": {\n                        \"index\": \"embedded-documents-tutorial\",\n                        \"embeddedDocument\": {\n                          \"path\": \"clubs.sports\",\n                          \"operator\": {\n                            \"queryString\": {\n                              \"defaultPath\": \"clubs.sports.club_name\",\n                              \"query\": \"dodgeball OR frisbee\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output:: \n                  :visible: true \n\n                  score: 0.633669912815094  _id: 2\n                    name: \"Lincoln High\"\n                    mascot: \"Sharks\"\n                    teachers: Array\n                      ...\n                    clubs: Object\n                      sports: Array (2)\n                        0: Object\n                          club_name: \"dodgeball\"\n                          description: \"provides students an opportunity\n                          to play dodgeball by throwing   balls t…\"\n                        1: Object\n                          club_name: \"martial arts\"\n                          description: \"provides students an opportunity to learn self-defense or combat that …\"\n                      stem: Array (2) \n                        ...                 \n\n                  score: 0.481589138507843  _id: 1\n                    name: \"Evergreen High\"\n                    mascot: \"Jaguars\"\n                    teachers: Array\n                      ...\n                    clubs: Object\n                      sports: Array (2)\n                        0: Object\n                          club_name: \"archery\"\n                          description: \"provides students an opportunity to practice and hone the skill of usi…\"\n                        1: Object\n                          club_name: \"ultimate frisbee\"\n                          description: \"provides students an opportunity to play frisbee and learn the basics …\"\n                      stem: Array (2) \n                        ...\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.  \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n            \n               .. input:: \n                  :language: json\n\n                  [\n                    {\n                      $search: {\n                        index: \"embedded-documents-tutorial\",\n                        \"embeddedDocument\": {\n                          \"path\": \"teachers\",\n                          \"operator\": {\n                            \"compound\": {\n                              \"must\": [{\n                                \"embeddedDocument\": {\n                                  \"path\": \"teachers.classes\",\n                                  \"operator\": {\n                                    \"compound\": {\n                                      \"must\": [{\n                                        \"text\": {\n                                          \"path\": \"teachers.classes.grade\",\n                                          \"query\": \"12th\"\n                                        }\n                                      },\n                                      {\n                                        \"text\": {\n                                          \"path\": \"teachers.classes.subject\",\n                                          \"query\": \"science\"\n                                        }\n                                      }]\n                                    }\n                                  }\n                                }\n                              }],\n                              \"should\": [{\n                                \"text\": {\n                                  \"path\": \"teachers.last\",\n                                  \"query\": \"smith\"\n                                }\n                              }]\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n            \n               .. output:: \n                  :visible: true\n\n                  SCORE: 0.9415585994720459\n                    name: \"Springfield High\"\n                    mascot: \"Pumas\"\n                    teachers: Array\n                      0: Object\n                        first: \"Jane\"\n                        last: \"Smith\"\n                        classes: Array\n                          0: Object\n                            subject: \"art of science\"\n                            grade: \"12th\"\n                          1: Object\n                            subject: \"applied science and practical science\"\n                            grade: \"9th\"\n                          2: Object\n                            subject: \"remedial math\"\n                            grade: \"12th\"\n                          3: Object\n                            subject: \"science\"\n                            grade: \"10th\"\n                      1: Object\n                        first: \"Bob\"\n                        last: \"Green\"\n                        classes: Array\n                          0: Object\n                            subject: \"science of art\"\n                            grade: \"11th\"\n                          1: Object\n                            subject: \"art art art\"\n                            grade: \"10th\"\n                    clubs: Object\n                      ...\n\n                  SCORE: 0.7779859304428101  _id:  \"1\"\n                    name: \"Evergreen High\"\n                    mascot: \"Jaguars\"\n                    teachers: Array\n                      0: Object\n                        first: \"Jane\"\n                        last: \"Earwhacker\"\n                        classes: Array\n                          0: Object\n                            subject: \"art\"\n                            grade: \"9th\"\n                          1: Object\n                            subject: \"science\"\n                            grade: \"12th\"\n                      1: Object\n                        first: \"John\"\n                        last: \"Smith\"\n                        classes: Array\n                          0: Object\n                            subject: \"math\"\n                            grade: \"12th\"\n                          1: Object\n                            subject: \"art\"\n                            grade: \"10th\"\n                    clubs: Object \n                      ...\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-atlas-ui.rst"
  },
  {
    "code": "               :language: shell\n               :linenos:  \n\n            .. include:: /includes/extracts/fts-embedded-document-basic-query-results.rst\n\n         .. tab:: Nested Array Within Object\n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n            .. list-table::\n               :header-rows: 1\n               :widths: 15 85\n\n               * - Pipeline Stage\n                 - Query\n\n               * - ``$search``\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-compass.rst"
  },
  {
    "code": "               :language: shell\n               :linenos:  \n\n            .. include:: /includes/extracts/fts-embedded-document-complex-query-results.rst \n\n         .. tab:: Nested Array Within Array \n            :tabid: nestedarray\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n            .. list-table::\n               :header-rows: 1\n               :widths: 15 85\n\n               * - Pipeline Stage\n                 - Query\n\n               * - ``$search``\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-compass.rst"
  },
  {
    "code": "               :language: json\n               :linenos: \n\n            .. include:: /includes/extracts/fts-embedded-document-advanced-query-results.rst\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-compass.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`. \n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-csharp.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 12\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-csharp.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Nested Array \n            :tabid: basic \n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-csharp.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run embedded-documents-query.csproj\n\n               .. output:: \n                  :language: javascript\n\n                  { \n                    \"_id\" : 1, \n                    \"name\" : \"Evergreen High\", \n                    \"mascot\" : \"Jaguars\", \n                    \"teachers\" : [{ \n                      \"first\" : \"Jane\", \n                      \"last\" : \"Earwhacker\",\n                      \"classes\" : [{ \"\n                        subject\" : \"art\", \n                        \"grade\" : \"9th\" \n                      }, { \n                        \"subject\" : \"science\", \n                        \"grade\" : \"12th\" \n                      }] \n                    }, { \n                      \"first\" : \"John\", \n                      \"last\" : \"Smith\", \n                      \"classes\" : [{ \n                        \"subject\" : \"math\", \n                        \"grade\" : \"12th\" \n                      }, { \n                        \"subject\" : \"art\", \n                        \"grade\" : \"10th\" \n                      }] \n                    }], \n                    \"highlights\" : [{ \n                      \"path\" : \"teachers.last\", \n                      \"score\" : 1.4921371936798096, \n                      \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Smith\" }]\n                    }], \n                    \"score\" : 0.78307569026947021 \n                  }\n                  { \n                    \"_id\" : 2, \n                    \"name\" : \"Lincoln High\", \n                    \"mascot\" : \"Sharks\", \n                    \"teachers\" : [{ \n                      \"first\" : \"Jane\", \n                      \"last\" : \"Smith\", \n                      \"classes\" : [{ \n                        \"subject\" : \"science\", \n                        \"grade\" : \"9th\" \n                      }, { \n                        \"subject\" : \"math\", \n                        \"grade\" : \"12th\" \n                      }] \n                    }, { \n                      \"first\" : \"John\", \n                      \"last\" : \"Redman\", \n                      \"classes\" : [{ \n                        \"subject\" : \"art\", \n                        \"grade\" : \"12th\" \n                      }] \n                    }], \n                    \"highlights\" : [{ \n                      \"path\" : \"teachers.last\", \n                      \"score\" : 1.4702850580215454, \n                      \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"Smith\" }] \n                    }], \n                    \"score\" : 0.46800881624221802 \n                  }\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex      \n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-csharp.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run embedded-documents-query.csproj\n\n               .. output:: \n                  :language: javascript\n\n                  { \n                    \"_id\" : 2, \n                    \"name\" : \"Lincoln High\", \n                    \"clubs\" : { \n                      \"sports\" : [{ \n                        \"club_name\" : \"dodgeball\", \n                        \"description\" : \"provides students an opportunity to play dodgeball by throwing balls to eliminate the members of the opposing team while avoiding being hit themselves.\" \n                      }, { \n                        \"club_name\" : \"martial arts\", \n                        \"description\" : \"provides students an opportunity to learn self-defense or combat that utilize physical skill and coordination without weapons.\" \n                      }] \n                    }, \n                    \"score\" : 0.63366991281509399 \n                  }\n                  { \n                    \"_id\" : 1, \n                    \"name\" : \"Evergreen High\", \n                    \"clubs\" : { \n                      \"sports\" : [{ \n                        \"club_name\" : \"archery\", \n                        \"description\" : \"provides students an opportunity to practice and hone the skill of using a bow to shoot arrows in a fun and safe environment.\" \n                      }, { \n                        \"club_name\" : \"ultimate frisbee\", \n                        \"description\" : \"provides students an opportunity to play frisbee and learn the basics of holding the disc and complete passes.\" \n                      }] \n                    }, \n                    \"score\" : 0.48158913850784302 \n                  }\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-csharp.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run embedded-documents-query.csproj\n\n               .. output:: \n                  :language: javascript\n\n                  { \n                    \"_id\" : 0, \n                    \"teachers\" : [{ \n                      \"first\" : \"Jane\", \n                      \"last\" : \"Smith\", \n                      \"classes\" : [{ \n                        \"subject\" : \"art of science\", \n                        \"grade\" : \"12th\" \n                      }, { \n                        \"subject\" : \"applied science and practical\n                        science\", \n                        \"grade\" : \"9th\" \n                      }, { \n                        \"subject\" : \"remedial math\", \n                        \"grade\" : \"12th\" \n                      }, { \n                        \"subject\" : \"science\", \n                        \"grade\" : \"10th\" \n                      }] \n                    }, { \n                      \"first\" : \"Bob\", \n                      \"last\" : \"Green\", \n                      \"classes\" : [{ \n                        \"subject\" : \"science of art\", \n                        \"grade\" : \"11th\" \n                      }, { \n                        \"subject\" : \"art art art\", \n                        \"grade\" : \"10th\" \n                      }] \n                    }], \n                    \"highlights\" : [{ \n                      \"path\" : \"teachers.classes.subject\", \n                      \"score\" : 0.73540401458740234, \n                      \"texts\" : [\n                        { \"type\" : \"Text\", \"value\" : \"art of \"  }, \n                        { \"type\" : \"Hit\", \"value\" : \"science\" }\n                      ] \n                    }, { \n                      \"path\" : \"teachers.classes.subject\", \n                      \"score\" : 0.78713464736938477, \n                      \"texts\" : [\n                        { \"type\" : \"Text\", \"value\" : \"applied \"  }, \n                        { \"type\" : \"Hit\", \"value\" : \"science\" }, \n                        { \"type\" : \"Text\", \"value\" : \" and practical \" }, \n                        { \"type\" : \"Hit\", \"value\" : \"science\" }] \n                    }, { \n                      \"path\" : \"teachers.classes.subject\", \n                      \"score\" : 0.7581484317779541, \n                      \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"science\" }] \n                    }, { \n                      \"path\" : \"teachers.classes.subject\", \n                      \"score\" : 0.7189631462097168, \n                      \"texts\" : [\n                        { \"type\" : \"Hit\", \"value\" : \"science\" }, \n                        { \"type\" : \"Text\", \"value\" : \" of art\" }\n                      ] \n                    }], \n                    \"score\" : 0.9415585994720459 \n                  }\n                  { \n                    \"_id\" : 1, \n                    \"teachers\" : [{ \n                      \"first\" : \"Jane\", \n                      \"last\" : \"Earwhacker\", \n                      \"classes\" : [{ \n                        \"subject\" : \"art\", \n                        \"grade\" : \"9th\" \n                      }, { \n                        \"subject\" : \"science\", \n                        \"grade\" : \"12th\" \n                      }] \n                    }, { \n                      \"first\" : \"John\", \n                      \"last\" : \"Smith\", \n                      \"classes\" : [{ \n                        \"subject\" : \"math\", \n                        \"grade\" : \"12th\" \n                      }, { \n                        \"subject\" : \"art\", \n                        \"grade\" : \"10th\" \n                      }] \n                    }], \n                    \"highlights\" : [{ \n                      \"path\" : \"teachers.classes.subject\", \n                      \"score\" : 1.502043604850769, \n                      \"texts\" : [{ \"type\" : \"Hit\", \"value\" : \"science\" }] \n                    }], \n                    \"score\" : 0.77798593044281006 \n                  }\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-csharp.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 14\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-go.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 14\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-go.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 14\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Nested Array \n            :tabid: basic\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-go.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n\n                  go run basic-embedded-documents-search.go\n\n               .. output:: /includes/fts-tutorial/embedded-document/basic-go-query-results.sh \n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-basic-query-results.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-go.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n\n                  go run complex-embedded-documents-search.go \n\n               .. output:: /includes/fts-tutorial/embedded-document/complex-go-query-results.sh \n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-complex-query-results.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-go.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n\n                  go run nested-embedded-documents-search.go\n\n               .. output:: /includes/fts-tutorial/embedded-document/nested-array-go-query-results.sh \n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-advanced-query-results.rst\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-go.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 41\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-java.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 16\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-java.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 52\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Compile and run the Java file.\n\n      .. tabs:: \n         :hidden: true\n\n         .. tab:: Nested Array  \n            :tabid: basic\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-java.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell \n\n                  javac BasicEmbeddedDocumentsSearch.java\n                  java BasicEmbeddedDocumentsSearch\n\n               .. output:: /includes/fts-tutorial/embedded-document/basic-java-query-results.json\n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-basic-query-results.rst\n\n         .. tab:: Nested Array Within Object\n            :tabid: complex\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-java.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell \n\n                  javac ComplexEmbeddedDocumentQuery.java\n                  java ComplexEmbeddedDocumentQuery\n\n               .. output:: /includes/fts-tutorial/embedded-document/complex-java-query-results.json \n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-complex-query-results.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced \n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-java.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell \n\n                  javac NestedEmbeddedDocumentsSearch.java\n                  java NestedEmbeddedDocumentsSearch\n\n               .. output:: /includes/fts-tutorial/embedded-document/nested-array-java-query-results.json \n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-advanced-query-results.rst\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-java.rst"
  },
  {
    "code": "               :language: kotlin\n               :linenos:\n               :dedent:\n               :emphasize-lines: 10\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-kotlin.rst"
  },
  {
    "code": "               :language: kotlin\n               :linenos:\n               :dedent:\n               :emphasize-lines: 10\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-kotlin.rst"
  },
  {
    "code": "               :language: kotlin\n               :linenos:\n               :dedent:\n               :emphasize-lines: 10\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run each Kotlin file.\n\n      .. tabs:: \n         :hidden: true\n\n         .. tab:: Nested Array  \n            :tabid: basic\n\n            When you run the ``BasicEmbeddedDocumentsSearch.kt`` program in your IDE, it prints\n            the following documents:\n            \n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-kotlin.rst"
  },
  {
    "code": "               :copyable: false\n               \n               Document{{teachers=[Document{{first=Jane, last=Earwhacker, classes=[Document{{subject=art, grade=9th}}, Document{{subject=science, grade=12th}}]}}, Document{{first=John, last=Smith, classes=[Document{{subject=math, grade=12th}}, Document{{subject=art, grade=10th}}]}}], score=0.7830756902694702, highlights=[Document{{score=1.4921371936798096, path=teachers.last, texts=[Document{{value=Smith, type=hit}}]}}]}}\n               Document{{teachers=[Document{{first=Jane, last=Smith, classes=[Document{{subject=science, grade=9th}}, Document{{subject=math, grade=12th}}]}}, Document{{first=John, last=Redman, classes=[Document{{subject=art, grade=12th}}]}}], score=0.468008816242218, highlights=[Document{{score=1.4702850580215454, path=teachers.last, texts=[Document{{value=Smith, type=hit}}]}}]}}\n\n            .. include:: /includes/extracts/fts-embedded-document-basic-query-results.rst\n\n         .. tab:: Nested Array Within Object\n            :tabid: complex\n\n            When you run the ``ComplexEmbeddedDocumentQuery.kt`` program in your IDE, it prints\n            the following documents:\n            \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-kotlin.rst"
  },
  {
    "code": "               :copyable: false\n               \n               Document{{_id=2, name=Lincoln High, clubs=Document{{sports=[Document{{club_name=dodgeball, description=provides students an opportunity to play dodgeball by throwing balls to eliminate the members of the opposing team while avoiding being hit themselves.}}, Document{{club_name=martial arts, description=provides students an opportunity to learn self-defense or combat that utilize physical skill and coordination without weapons.}}]}}, score=0.633669912815094}}\n               Document{{_id=1, name=Evergreen High, clubs=Document{{sports=[Document{{club_name=archery, description=provides students an opportunity to practice and hone the skill of using a bow to shoot arrows in a fun and safe environment.}}, Document{{club_name=ultimate frisbee, description=provides students an opportunity to play frisbee and learn the basics of holding the disc and complete passes.}}]}}, score=0.481589138507843}}\n\n            .. include:: /includes/extracts/fts-embedded-document-complex-query-results.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced \n\n            When you run the ``NestedEmbeddedDocumentsSearch.kt`` program in your IDE, it prints\n            the following documents:\n            \n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-kotlin.rst"
  },
  {
    "code": "               :copyable: false\n               \n               Document{{teachers=[Document{{first=Jane, last=Smith, classes=[Document{{subject=art of science, grade=12th}}, Document{{subject=applied science and practical science, grade=9th}}, Document{{subject=remedial math, grade=12th}}, Document{{subject=science, grade=10th}}]}}, Document{{first=Bob, last=Green, classes=[Document{{subject=science of art, grade=11th}}, Document{{subject=art art art, grade=10th}}]}}], score=0.9415585994720459, highlights=[Document{{score=0.7354040145874023, path=teachers.classes.subject, texts=[Document{{value=art of , type=text}}, Document{{value=science, type=hit}}]}}, Document{{score=0.7871346473693848, path=teachers.classes.subject, texts=[Document{{value=applied , type=text}}, Document{{value=science, type=hit}}, Document{{value= and practical , type=text}}, Document{{value=science, type=hit}}]}}, Document{{score=0.7581484317779541, path=teachers.classes.subject, texts=[Document{{value=science, type=hit}}]}}, Document{{score=0.7189631462097168, path=teachers.classes.subject, texts=[Document{{value=science, type=hit}}, Document{{value= of art, type=text}}]}}]}}\n               Document{{teachers=[Document{{first=Jane, last=Earwhacker, classes=[Document{{subject=art, grade=9th}}, Document{{subject=science, grade=12th}}]}}, Document{{first=John, last=Smith, classes=[Document{{subject=math, grade=12th}}, Document{{subject=art, grade=10th}}]}}], score=0.7779859304428101, highlights=[Document{{score=1.502043604850769, path=teachers.classes.subject, texts=[Document{{value=science, type=hit}}]}}]}}\n\n            .. include:: /includes/extracts/fts-embedded-document-advanced-query-results.rst\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-kotlin.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: sh\n\n            use local_school_district \n\n         .. output:: \n            :language: sh\n            :emphasize-lines: 1 \n\n            switched to db local_school_district\n\n   .. step:: Run the following |fts| queries against the ``schools`` collection.\n\n      To learn more about these queries, see :ref:`embedded-documents-tutorial-queries`.\n\n      .. tabs:: \n\n         .. tab:: Nested Array   \n            :tabid: simple \n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-mongosh.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/fts-tutorial/embedded-document/simple-mongosh-query.json\n                  :linenos:\n                  :language: json\n\n               .. output:: /includes/fts-tutorial/embedded-document/simple-mongosh-query-results.sh\n                  :linenos:\n                  :language: sh\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-basic-query-results.rst\n\n         .. tab:: Nested Array Within Object\n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-mongosh.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/fts-tutorial/embedded-document/complex-mongosh-query.json \n                  :linenos:\n                  :language: json\n\n               .. output:: /includes/fts-tutorial/embedded-document/complex-mongosh-query-results.sh \n                  :linenos:\n                  :language: sh\n                  :emphasize-lines: 7-10, 28-31\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-complex-query-results.rst\n\n         .. tab:: Nested Arrays Within Array  \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-mongosh.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: /includes/fts-tutorial/embedded-document/advanced-mongosh-query.json\n                  :linenos:\n                  :language: json\n\n               .. output:: /includes/fts-tutorial/embedded-document/advanced-mongosh-query-results.json \n                  :linenos:\n                  :language: json\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-advanced-query-results.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-mongosh.rst"
  },
  {
    "code": "               :language: javascript\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`. \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-nodejs.rst"
  },
  {
    "code": "               :language: javascript\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-nodejs.rst"
  },
  {
    "code": "               :language: javascript\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Nested Array \n            :tabid: basic\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n                        \n                  node basic-embedded-documents-query.js\n\n               .. output:: /includes/fts-tutorial/embedded-document/basic-nodejs-query-results.json \n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-basic-query-results.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n                        \n                  node complex-embedded-documents-query.js\n\n               .. output:: /includes/fts-tutorial/embedded-document/complex-nodejs-query-results.js \n                  :language: javascript \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-complex-query-results.rst\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n                        \n                  node nested-embedded-documents-query.js\n\n               .. output:: /includes/fts-tutorial/embedded-document/nested-array-nodejs-query-results.js \n                  :language: javascript \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-advanced-query-results.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-nodejs.rst"
  },
  {
    "code": "               :language: python\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-python.rst"
  },
  {
    "code": "               :language: python\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n            To learn more about this query, see :ref:`embedded-documents-tutorial-queries`.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-python.rst"
  },
  {
    "code": "               :language: python\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n            .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Nested Array \n            :tabid: basic\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n                        \n                  python basic-embedded-documents-query.py\n\n               .. output:: /includes/fts-tutorial/embedded-document/basic-py-query-results.js \n                  :language: json \n                  :linenos:\n                  :visible: true\n\n            .. include:: /includes/extracts/fts-embedded-document-basic-query-results.rst\n\n         .. tab:: Nested Array Within Object \n            :tabid: complex\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n                        \n                  python complex-embedded-documents-query.py\n\n               .. output:: /includes/fts-tutorial/embedded-document/complex-py-query-results.js\n                  :language: json \n                  :linenos:\n                  :visible: true\n\n         .. tab:: Nested Array Within Array \n            :tabid: advanced\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n                        \n                  python advanced-embedded-documents-query.py\n\n               .. output:: /includes/fts-tutorial/embedded-document/nested-array-py-query-results.js\n                  :language: json \n                  :linenos:\n                  :visible: true\n\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-embedded-document-query-python.rst"
  },
  {
    "code": "         :language: js\n         :dedent: \n\n   .. step:: Expand your query results.\n\n      The :guilabel:`Search Tester` might not display all the values for \n      the fields in the results. To view all the values for the fields\n      in the results, expand the fields.\n\n      |fts| displays the following results in the page:\n        \n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-facet-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: false\n        \n         count: Object\n           lowerBound: 20878\n         facet: Object\n           genresFacet: Object\n             buckets: Array (10)\n               0: Object\n                  _id: \"Drama\"\n                  count: 12149\n               1: Object\n                  _id: \"Comedy\"\n                  count: 6436\n               2: Object\n                  _id: \"Romance\"\n                  count: 3274\n               3: Object\n                  _id: \"Crime\"\n                  count: 2429\n               4: Object\n                  _id: \"Thriller\"\n                  count: 2400\n               5: Object\n                  _id: \"Action\"\n                  count: 2349\n               6: Object\n                  _id: \"Adventure\"\n                  count: 1876\n               7: Object\n                  _id: \"Documentary\"\n                  count: 1755\n               8: Object\n                  _id: \"Horror\"\n                  count: 1432\n               9: Object\n                  _id: \"Biography\"\n                  count: 1244\n           yearFacet: Object\n             buckets: Array (3)\n               0: Object\n                  _id: 1910\n                  count: 14\n               1: Object\n                  _id: 1920\n                  count: 47\n               2: Object\n                  _id: 1930\n                  count: 238\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-facet-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: true\n       \n         .. input::\n            :language: json\n      \n            [\n              {\n                \"$search\": {\n                  index: \"null-check-tutorial\",\n                  \"compound\": {\n                    \"must\": {\n                      \"exists\": {\n                        \"path\": \"password\"\n                      }\n                    },\n                    \"mustNot\": {\n                      \"wildcard\": {\n                        \"path\": \"password\",\n                        \"query\": \"*\",\n                        \"allowAnalyzedField\": true\n                      }\n                    }\n                  }\n                }\n              }\n            ]\n      \n         .. output::\n            \n            SCORE: 1  _id:  \"64a6e2e5bceafd4df9153bab\"\n              name: \"Andre Robinson\"\n              email: \"andre.robinson@example.com\"\n              password: null     \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-isnull-tutorial-atlas-ui.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: sh\n\n            use sample_mflix \n\n         .. output:: \n            :language: sh\n            :emphasize-lines: 1 \n\n            switched to db sample_mflix\n\n   .. step:: Run the following |fts| queries against the ``movies`` collection.\n\n      .. tabs:: \n\n         .. tab:: toArray() Method \n            :tabid: toArray\n\n            In the following query, use the :manual:`toArray()\n            </reference/method/cursor.toArray/>` method to iterate the\n            cursor and return the documents that match the query\n            criteria in an array.   \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-iterate-cursor-tutorial-run-query-shell.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: json \n                  :linenos:\n\n                  db.movies.aggregate([\n                    {\n                      \"$search\": {\n                        \"index\": \"iterate-cursor-tutorial\",\n                        \"text\": {\n                          \"query\": \"summer\",\n                          \"path\": \"title\"\n                        }\n                      }\n                   },\n                    {\n                      \"$project\": {\n                        \"_id\": 0,\n                        \"title\": 1\n                      }\n                    }\n                  ]).toArray()\n\n               .. output:: \n                  :language: json\n                  :visible: true\n                  :linenos:\n\n                  [\n                    { title: 'Summer' },\n                    { title: 'Summer Stock' },\n                    { title: 'Violent Summer' },\n                    { title: 'Indian Summer' },\n                    { title: 'Indian Summer' },\n                    { title: 'Summer Rental' },\n                    { title: 'Summer Things' },\n                    { title: 'Wolf Summer' },\n                    { title: 'Summer Storm' },\n                    { title: 'Summer Palace' },\n                    { title: 'Eternal Summer' },\n                    { title: 'Summer Holiday' },\n                    { title: 'Summer Wars' },\n                    { title: 'Summer Games' },\n                    { title: 'Summer Nights' },\n                    { title: 'A Summer Place' },\n                    { title: 'Summer and Smoke' },\n                    { title: 'The Endless Summer' },\n                    { title: \"Summer of '42\" },\n                    { title: 'That Certain Summer' },\n                    { title: 'One Deadly Summer' },\n                    { title: 'Summer Camp Nightmare' },\n                    { title: 'An Unforgettable Summer' },\n                    { title: 'Summer of Sam' },\n                    { title: 'Bullets Over Summer' },\n                    { title: 'Summer in Berlin' },\n                    { title: 'A Plumm Summer' },\n                    { title: 'Summer Heights High' },\n                    { title: 'Summer of Goliath' },\n                    { title: 'Red Hook Summer' },\n                    { title: 'Ping Pong Summer' },\n                    { title: 'Summer of Blood' },\n                    { title: 'The End of Summer' },\n                    { title: 'Summer Wishes, Winter Dreams' },\n                    { title: \"A Summer at Grandpa's\" },\n                    { title: 'Cold Summer of 1953' },\n                    { title: 'A Brighter Summer Day' },\n                    { title: 'Summer of the Monkeys' },\n                    { title: 'A Storm in Summer' },\n                    { title: 'Wet Hot American Summer' },\n                    { title: 'My Summer of Love' },\n                    { title: 'Nasu: Summer in Andalusia' },\n                    { title: 'A Summer in Genoa' },\n                    { title: '(500) Days of Summer' },\n                    { title: 'Summer Days with Coo' },\n                    { title: 'The Kings of Summer' },\n                    { title: 'May in the Summer' },\n                    { title: 'A Horse for Summer' },\n                    { title: 'The Summer of Sangaile' },\n                    { title: 'Smiles of a Summer Night' },\n                    { title: 'Shadows of a Hot Summer' },\n                    { title: 'That Summer of White Roses' },\n                    { title: 'Last Summer in the Hamptons' },\n                    { title: 'A Summer in La Goulette' },\n                    { title: 'A Summer by the River' },\n                    { title: 'Summer in the Golden Valley' },\n                    { title: 'How I Ended This Summer' },\n                    { title: 'And They Call It Summer' },\n                    { title: 'Spring, Summer, Fall, Winter... and Spring' },\n                    { title: 'The Last Summer of La Boyita' },\n                    { title: 'The Mafia Only Kills in Summer' },\n                    { title: 'I Know What You Did Last Summer' },\n                    { title: 'I Know What You Did Last Summer' },\n                    { title: 'Judy Moody and the Not Bummer Summer' },\n                    { title: 'I Still Know What You Did Last Summer' }\n                  ]\n\n         .. tab:: forEach() Method\n            :tabid: foreach\n\n            In the following query, use the :manual:`forEach()\n            </reference/method/cursor.forEach/>` method to iterate the\n            cursor and apply the JavaScript function ``printjson`` to\n            each document. \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-iterate-cursor-tutorial-run-query-shell.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: json \n                  :linenos:\n\n                  db.movies.aggregate([\n                    {\n                      \"$search\": {\n                        \"index\": \"iterate-cursor-tutorial\",\n                        \"text\": {\n                          \"query\": \"summer\",\n                          \"path\": \"title\"\n                        }\n                      }\n                   },\n                    {\n                      \"$project\": {\n                        \"_id\": 0,\n                        \"title\": 1\n                      }\n                    }\n                  ]).forEach(printjson)\n\n               .. output:: \n                  :language: json\n                  :visible: true\n                  :linenos: \n\n                  {\n                    title: 'Summer'\n                  }\n                  {\n                    title: 'Summer Stock'\n                  }\n                  {\n                    title: 'Violent Summer'\n                  }\n                  {\n                    title: 'Indian Summer'\n                  }\n                  {\n                    title: 'Indian Summer'\n                  }\n                  {\n                    title: 'Summer Rental'\n                  }\n                  {\n                    title: 'Summer Things'\n                  }\n                  {\n                    title: 'Wolf Summer'\n                  }\n                  {\n                    title: 'Summer Storm'\n                  }\n                  {\n                    title: 'Summer Palace'\n                  }\n                  {\n                    title: 'Eternal Summer'\n                  }\n                  {\n                    title: 'Summer Holiday'\n                  }\n                  {\n                    title: 'Summer Wars'\n                  }\n                  {\n                    title: 'Summer Games'\n                  }\n                  {\n                    title: 'Summer Nights'\n                  }\n                  {\n                    title: 'A Summer Place'\n                  }\n                  {\n                    title: 'Summer and Smoke'\n                  }\n                  {\n                    title: 'The Endless Summer'\n                  }\n                  {\n                    title: \"Summer of '42\"\n                  }\n                  {\n                    title: 'That Certain Summer'\n                  }\n                  {\n                    title: 'One Deadly Summer'\n                  }\n                  {\n                    title: 'Summer Camp Nightmare'\n                  }\n                  {\n                    title: 'An Unforgettable Summer'\n                  }\n                  {\n                    title: 'Summer of Sam'\n                  }\n                  {\n                    title: 'Bullets Over Summer'\n                  }\n                  {\n                    title: 'Summer in Berlin'\n                  }\n                  {\n                    title: 'A Plumm Summer'\n                  }\n                  {\n                    title: 'Summer Heights High'\n                  }\n                  {\n                    title: 'Summer of Goliath'\n                  }\n                  {\n                    title: 'Red Hook Summer'\n                  }\n                  {\n                    title: 'Ping Pong Summer'\n                  }\n                  {\n                    title: 'Summer of Blood'\n                  }\n                  {\n                    title: 'The End of Summer'\n                  }\n                  {\n                    title: 'Summer Wishes, Winter Dreams'\n                  }\n                  {\n                    title: \"A Summer at Grandpa's\"\n                  }\n                  {\n                    title: 'Cold Summer of 1953'\n                  }\n                  {\n                    title: 'A Brighter Summer Day'\n                  }\n                  {\n                    title: 'Summer of the Monkeys'\n                  }\n                  {\n                    title: 'A Storm in Summer'\n                  }\n                  {\n                    title: 'Wet Hot American Summer'\n                  }\n                  {\n                    title: 'My Summer of Love'\n                  }\n                  {\n                    title: 'Nasu: Summer in Andalusia'\n                  }\n                  {\n                    title: 'A Summer in Genoa'\n                  }\n                  {\n                    title: '(500) Days of Summer'\n                  }\n                  {\n                    title: 'Summer Days with Coo'\n                  }\n                  {\n                    title: 'The Kings of Summer'\n                  }\n                  {\n                    title: 'May in the Summer'\n                  }\n                  {\n                    title: 'A Horse for Summer'\n                  }\n                  {\n                    title: 'The Summer of Sangaile'\n                  }\n                  {\n                    title: 'Smiles of a Summer Night'\n                  }\n                  {\n                    title: 'Shadows of a Hot Summer'\n                  }\n                  {\n                    title: 'That Summer of White Roses'\n                  }\n                  {\n                    title: 'Last Summer in the Hamptons'\n                  }\n                  {\n                    title: 'A Summer in La Goulette'\n                  }\n                  {\n                    title: 'A Summer by the River'\n                  }\n                  {\n                    title: 'Summer in the Golden Valley'\n                  }\n                  {\n                    title: 'How I Ended This Summer'\n                  }\n                  {\n                    title: 'And They Call It Summer'\n                  }\n                  {\n                    title: 'Spring, Summer, Fall, Winter... and Spring'\n                  }\n                  {\n                    title: 'The Last Summer of La Boyita'\n                  }\n                  {\n                    title: 'The Mafia Only Kills in Summer'\n                  }\n                  {\n                    title: 'I Know What You Did Last Summer'\n                  }\n                  {\n                    title: 'I Know What You Did Last Summer'\n                  }\n                  {\n                    title: 'Judy Moody and the Not Bummer Summer'\n                  }\n                  {\n                    title: 'I Still Know What You Did Last Summer'\n                  }\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-iterate-cursor-tutorial-run-query-shell.rst"
  },
  {
    "code": "            :copyable: false \n\n            name: Elizabeth Ray\n            email: arroyocolton@gmail.com\n            active: True\n            accounts: Array (6) \n            purchases: Array (3)\n\n            name: \"Lindsay Cowan\"\n            email: \"cooperalexis@hotmail.com\"\n            accounts: Array (1)\n            purchases: Array (empty)\n\n            name: \"Katherine David\"\n            email: \"timothy78@hotmail.com\"\n            accounts: Array (5)\n            urchases: Array (2)\n\n            name: \"Leslie Martinez\"\n            email: \"tcrawford@gmail.com\"\n            accounts: Array (2)\n            purchases: Array (empty)\n\n            name: \"Brad Cardenas\"\n            email: \"dustin37@yahoo.com\"\n            accounts: Array (5)\n            purchases: Array (2)\n\n   .. step:: Expand your query results.\n\n      |compass| might not display all the fields inside objects and all\n      the values inside arrays for the documents it returns in the\n      results. To view all the fields and values, expand the field in\n      the results.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-compass.rst"
  },
  {
    "code": "         :language: csharp\n         :linenos:\n         :dedent:\n         :emphasize-lines: 15\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-cs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n        \n            dotnet run lookup-with-search.csproj\n\n         .. output:: \n            :language: javascript\n\n            { \n              \"name\" : \"Elizabeth Ray\",\n              \"email\" : \"arroyocolton@gmail.com\", \n              \"active\" : true, \n              \"accounts\" : [371138, 324287, 276528, 332179, 422649,\n              387979], \n              \"purchases\" : [\n                 { \n                   \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee58162402\"), \n                   \"account_id\" : 422649, \n                   \"limit\" : 10000, \n                   \"products\" : [\"CurrencyService\", \"InvestmentStock\"] \n                 }, \n                 { \n                   \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623a9\"), \n                   \"account_id\" : 324287, \n                   \"limit\" : 10000, \n                   \"products\" : [\"Commodity\", \"CurrencyService\", \"Derivatives\", \"InvestmentStock\"] \n                 }, \n                 { \n                   \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee58162400\"), \n                   \"account_id\" : 332179, \n                   \"limit\" : 10000, \n                   \"products\" : [\"Commodity\", \"CurrencyService\", \"InvestmentFund\", \"Brokerage\", \"InvestmentStock\"] \n                 }\n              ] \n            }\n            { \n              \"name\" : \"Lindsay Cowan\", \n              \"email\" : \"cooperalexis@hotmail.com\", \n              \"accounts\" : [116508], \n              \"purchases\" : [] \n            }\n            { \n              \"name\" : \"Katherine David\", \n              \"email\" : \"timothy78@hotmail.com\", \n              \"accounts\" : [462501, 228290, 968786, 515844, 377292], \n              \"purchases\" : [\n                { \n                  \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623c9\"), \n                  \"account_id\" : 228290, \n                  \"limit\" : 10000, \n                  \"products\" : [\"CurrencyService\", \"InvestmentStock\", \"InvestmentFund\", \"Brokerage\"] }, \n                { \n                  \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623cb\"), \n                  \"account_id\" : 515844, \n                  \"limit\" : 10000, \n                  \"products\" : [\"Commodity\", \"CurrencyService\", \"InvestmentFund\", \"Brokerage\", \"InvestmentStock\"] \n                }\n              ] \n            }\n            { \n              \"name\" : \"Leslie Martinez\", \n              \"email\" : \"tcrawford@gmail.com\", \n              \"accounts\" : [170945, 951849], \n              \"purchases\" : [] \n            }\n            { \n              \"name\" : \"Brad Cardenas\", \n              \"email\" : \"dustin37@yahoo.com\", \n              \"accounts\" : [721914, 817222, 973067, 260799, 87389], \n              \"purchases\" : [\n                { \n                  \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623d6\"), \n                  \"account_id\" : 87389, \n                  \"limit\" : 10000, \n                  \"products\" : [\"CurrencyService\", \"InvestmentStock\"] }, \n                { \n                  \"_id\" : ObjectId(\"5ca4bbc7a2dd94ee581623d5\"), \n                  \"account_id\" : 260799, \n                  \"limit\" : 10000, \n                  \"products\" : [\"Brokerage\", \"InvestmentStock\", \"Commodity\", \"CurrencyService\"] \n                }\n              ] \n            }\n        \n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-cs.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 16\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`.\n\n   .. step:: Run the command to query your collection.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-go.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: shell\n            \n            go run lookup-with-search-query.go\n      \n         .. output:: \n            :language: javascript\n\n            [{_id ObjectID(\"5ca4bbcea2dd94ee58162a68\")} {name Elizabeth Ray} {email arroyocolton@gmail.com} {active true} {accounts [371138 324287 276528 332179 422649 387979]} {purchases [[{account_id 422649} {limit 10000} {products [CurrencyService InvestmentStock]}] [{account_id 324287} {limit 10000} {products [Commodity CurrencyService Derivatives InvestmentStock]}] [{account_id 332179} {limit 10000} {products [Commodity CurrencyService InvestmentFund Brokerage InvestmentStock]}]]}]\n            [{_id ObjectID(\"5ca4bbcea2dd94ee58162a69\")} {name Lindsay Cowan} {email cooperalexis@hotmail.com} {accounts [116508]} {purchases []}]\n            [{_id ObjectID(\"5ca4bbcea2dd94ee58162a6a\")} {name Katherine David} {email timothy78@hotmail.com} {accounts [462501 228290 968786 515844 377292]} {purchases [[{account_id 228290} {limit 10000} {products [CurrencyService InvestmentStock InvestmentFund Brokerage]}] [{account_id 515844} {limit 10000} {products [Commodity CurrencyService InvestmentFund Brokerage InvestmentStock]}]]}]\n            [{_id ObjectID(\"5ca4bbcea2dd94ee58162a6b\")} {name Leslie Martinez} {email tcrawford@gmail.com} {accounts [170945 951849]} {purchases []}]\n            [{_id ObjectID(\"5ca4bbcea2dd94ee58162a6c\")} {name Brad Cardenas} {email dustin37@yahoo.com} {accounts [721914 817222 973067 260799 87389]} {purchases [[{account_id 87389} {limit 10000} {products [CurrencyService InvestmentStock]}] [{account_id 260799} {limit 10000} {products [Brokerage InvestmentStock Commodity CurrencyService]}]]}]\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-go.rst"
  },
  {
    "code": "         :language: java\n         :linenos:\n         :dedent:\n         :emphasize-lines: 13\n\n      .. note:: \n\n         To run the sample code in your Maven environment, add the \n         following code above the import statements in your file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-java.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            javac LookupWithSearchQuery.java\n            java LookupWithSearchQuery\n        \n         .. output::\n            :language: json\n            :visible: true\n\n            {\"name\": \"Elizabeth Ray\", \"email\": \"arroyocolton@gmail.com\", \"active\": true, \"accounts\": [371138, 324287, 276528, 332179, 422649, 387979], \"purchases\": [{\"account_id\": 422649, \"limit\": 10000, \"products\": [\"CurrencyService\", \"InvestmentStock\"]}, {\"account_id\": 324287, \"limit\": 10000, \"products\": [\"Commodity\", \"CurrencyService\", \"Derivatives\", \"InvestmentStock\"]}, {\"account_id\": 332179, \"limit\": 10000, \"products\": [\"Commodity\", \"CurrencyService\", \"InvestmentFund\", \"Brokerage\", \"InvestmentStock\"]}]}\n            {\"name\": \"Lindsay Cowan\", \"email\": \"cooperalexis@hotmail.com\", \"accounts\": [116508], \"purchases\": []}\n            {\"name\": \"Katherine David\", \"email\": \"timothy78@hotmail.com\", \"accounts\": [462501, 228290, 968786, 515844, 377292], \"purchases\": [{\"account_id\": 228290, \"limit\": 10000, \"products\": [\"CurrencyService\", \"InvestmentStock\", \"InvestmentFund\", \"Brokerage\"]}, {\"account_id\": 515844, \"limit\": 10000, \"products\": [\"Commodity\", \"CurrencyService\", \"InvestmentFund\", \"Brokerage\", \"InvestmentStock\"]}]}\n            {\"name\": \"Leslie Martinez\", \"email\": \"tcrawford@gmail.com\", \"accounts\": [170945, 951849], \"purchases\": []}\n            {\"name\": \"Brad Cardenas\", \"email\": \"dustin37@yahoo.com\", \"accounts\": [721914, 817222, 973067, 260799, 87389], \"purchases\": [{\"account_id\": 87389, \"limit\": 10000, \"products\": [\"CurrencyService\", \"InvestmentStock\"]}, {\"account_id\": 260799, \"limit\": 10000, \"products\": [\"Brokerage\", \"InvestmentStock\", \"Commodity\", \"CurrencyService\"]}]}\n\n\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-java.rst"
  },
  {
    "code": "         :language: kotlin\n         :linenos:\n         :dedent:\n         :emphasize-lines: 11\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`.\n\n   .. step:: Run the ``LookupWithSearchQuery.kt`` file.\n\n      When you run the ``LookupWithSearchQuery.kt`` program in your IDE, it prints\n      the following documents:\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n\n         Document{{name=Elizabeth Ray, email=arroyocolton@gmail.com, active=true, accounts=[371138, 324287, 276528, 332179, 422649, 387979], purchases=[Document{{account_id=422649, limit=10000, products=[CurrencyService, InvestmentStock]}}, Document{{account_id=324287, limit=10000, products=[Commodity, CurrencyService, Derivatives, InvestmentStock]}}, Document{{account_id=332179, limit=10000, products=[Commodity, CurrencyService, InvestmentFund, Brokerage, InvestmentStock]}}]}}\n         Document{{name=Lindsay Cowan, email=cooperalexis@hotmail.com, accounts=[116508], purchases=[]}}\n         Document{{name=Katherine David, email=timothy78@hotmail.com, accounts=[462501, 228290, 968786, 515844, 377292], purchases=[Document{{account_id=228290, limit=10000, products=[CurrencyService, InvestmentStock, InvestmentFund, Brokerage]}}, Document{{account_id=515844, limit=10000, products=[Commodity, CurrencyService, InvestmentFund, Brokerage, InvestmentStock]}}]}}\n         Document{{name=Leslie Martinez, email=tcrawford@gmail.com, accounts=[170945, 951849], purchases=[]}}\n         Document{{name=Brad Cardenas, email=dustin37@yahoo.com, accounts=[721914, 817222, 973067, 260799, 87389], purchases=[Document{{account_id=87389, limit=10000, products=[CurrencyService, InvestmentStock]}}, Document{{account_id=260799, limit=10000, products=[Brokerage, InvestmentStock, Commodity, CurrencyService]}}]}}\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 56\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Query your collection.\n\n      Run the following command to query your collection: \n  \n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n     \n            node lookup-with-search-query.js\n        \n         .. output::\n            :language: js\n            :visible: true\n\n            {\n              name: 'Elizabeth Ray',\n              email: 'arroyocolton@gmail.com',\n              active: true,\n              accounts: [ 371138, 324287, 276528, 332179, 422649, 387979 ],\n              purchases: [\n                { account_id: 422649, limit: 10000, products: [Array] },\n                { account_id: 324287, limit: 10000, products: [Array] },\n               { account_id: 332179, limit: 10000, products: [Array] }\n              ]\n            }\n            {\n              name: 'Lindsay Cowan',\n              email: 'cooperalexis@hotmail.com',\n              accounts: [ 116508 ],\n              purchases: []\n            }\n            {\n              name: 'Katherine David',\n              email: 'timothy78@hotmail.com',\n              accounts: [ 462501, 228290, 968786, 515844, 377292 ],\n              purchases: [\n                { account_id: 228290, limit: 10000, products: [Array] },\n                { account_id: 515844, limit: 10000, products: [Array] }\n              ]\n            }\n            {\n              name: 'Leslie Martinez',\n              email: 'tcrawford@gmail.com',\n              accounts: [ 170945, 951849 ],\n              purchases: []\n            }\n            {\n              name: 'Brad Cardenas',\n              email: 'dustin37@yahoo.com',\n              accounts: [ 721914, 817222, 973067, 260799, 87389 ],\n              purchases: [\n                { account_id: 87389, limit: 10000, products: [Array] },\n                { account_id: 260799, limit: 10000, products: [Array] }\n              ]\n            }\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the command to query your collection.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-python.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell\n           \n            python lookup-with-search-query.py\n\n         .. output::\n            :language: json\n            :visible: true\n            \n            {'name': 'Elizabeth Ray', 'email': 'arroyocolton@gmail.com', 'active': True, 'accounts': [371138, 324287, 276528, 332179, 422649, 387979], 'purchases': [{'account_id': 422649, 'limit': 10000, 'products': ['CurrencyService', 'InvestmentStock']}, {'account_id': 324287, 'limit': 10000, 'products': ['Commodity', 'CurrencyService', 'Derivatives', 'InvestmentStock']}, {'account_id': 332179, 'limit': 10000, 'products': ['Commodity', 'CurrencyService', 'InvestmentFund', 'Brokerage', 'InvestmentStock']}]}\n            {'name': 'Lindsay Cowan', 'email': 'cooperalexis@hotmail.com', 'accounts': [116508], 'purchases': []}\n            {'name': 'Katherine David', 'email': 'timothy78@hotmail.com', 'accounts': [462501, 228290, 968786, 515844, 377292], 'purchases': [{'account_id': 228290, 'limit': 10000, 'products': ['CurrencyService', 'InvestmentStock', 'InvestmentFund', 'Brokerage']}, {'account_id': 515844, 'limit': 10000, 'products': ['Commodity', 'CurrencyService', 'InvestmentFund', 'Brokerage', 'InvestmentStock']}]}\n            {'name': 'Leslie Martinez', 'email': 'tcrawford@gmail.com', 'accounts': [170945, 951849], 'purchases': []}\n            {'name': 'Brad Cardenas', 'email': 'dustin37@yahoo.com', 'accounts': [721914, 817222, 973067, 260799, 87389], 'purchases': [{'account_id': 87389, 'limit': 10000, 'products': ['CurrencyService', 'InvestmentStock']}, {'account_id': 260799, 'limit': 10000, 'products': ['Brokerage', 'InvestmentStock', 'Commodity', 'CurrencyService']}]}\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query-python.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: sh\n\n            use sample_analytics \n\n         .. output:: \n            :language: sh \n\n            switched to db sample_analytics\n\n   .. step:: Run the following :pipeline:`$lookup` with |fts| :pipeline:`$search` query.\n\n      .. include:: /includes/fts-tutorial/lookup-with-search/query-intro.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: json\n\n            db.customers.aggregate([\n              {\n                $lookup:{\n                  \"from\": \"accounts\",\n                  \"localField\": \"accounts\",\n                  \"foreignField\": \"account_id\",\n                  \"as\": \"purchases\",\n                  \"pipeline\": [{\n                    \"$search\": {\n                      \"index\": \"lookup-with-search-tutorial\",\n                      \"compound\": {\n                        \"must\": [{\n                          \"queryString\": {\n                            \"defaultPath\": \"products\",\n                            \"query\": \"products: (CurrencyService AND InvestmentStock)\"\n                          }\n                        }],\n                        \"should\": [{\n                          \"range\": {\n                            \"path\": \"limit\",\n                            \"gte\": 5000,\n                            \"lte\": 10000\n                          }\n                        }]\n                      }\n                    }\n                  },{\n                    \"$project\": {\n                      \"_id\": 0\n                    }\n                  }]\n                }\n              },{\n                \"$limit\": 5\n              },{\n                \"$project\": {\n                  \"_id\": 0,\n                  \"address\": 0,\n                  \"birthdate\": 0,\n                  \"username\": 0,\n                  \"tier_and_details\": 0\n                }\n              }\n            ]) \n\n         .. output:: \n            :language: json\n\n            [\n              {\n                name: 'Elizabeth Ray',\n                email: 'arroyocolton@gmail.com',\n                active: true,\n                accounts: [ 371138, 324287, 276528, 332179, 422649, 387979 ],\n                purchases: [\n                  {\n                    account_id: 422649,\n                    limit: 10000,\n                    products: [ 'CurrencyService', 'InvestmentStock' ]\n                  },\n                  {\n                    account_id: 324287,\n                    limit: 10000,\n                    products: [\n                      'Commodity',\n                      'CurrencyService',\n                      'Derivatives',\n                      'InvestmentStock'\n                    ]\n                  },\n                  {\n                    account_id: 332179,\n                    limit: 10000,\n                    products: [\n                      'Commodity',\n                      'CurrencyService',\n                      'InvestmentFund',\n                      'Brokerage',\n                      'InvestmentStock'\n                    ]\n                  }\n                ]\n              },\n              {\n                name: 'Lindsay Cowan',\n                email: 'cooperalexis@hotmail.com',\n                accounts: [ 116508 ],\n                purchases: []\n              },\n              {\n                name: 'Katherine David',\n                email: 'timothy78@hotmail.com',\n                accounts: [ 462501, 228290, 968786, 515844, 377292 ],\n                purchases: [\n                  {\n                    account_id: 228290,\n                    limit: 10000,\n                    products: [\n                      'CurrencyService',\n                      'InvestmentStock',\n                      'InvestmentFund',\n                      'Brokerage'\n                    ]\n                  },\n                  {\n                    account_id: 515844,\n                    limit: 10000,\n                    products: [\n                      'Commodity',\n                      'CurrencyService',\n                      'InvestmentFund',\n                      'Brokerage',\n                      'InvestmentStock'\n                    ]\n                  }\n                ]\n              },\n              {\n                name: 'Leslie Martinez',\n                email: 'tcrawford@gmail.com',\n                accounts: [ 170945, 951849 ],\n                purchases: []\n              },\n              {\n                name: 'Brad Cardenas',\n                email: 'dustin37@yahoo.com',\n                accounts: [ 721914, 817222, 973067, 260799, 87389 ],\n                purchases: [\n                  {\n                    account_id: 87389,\n                    limit: 10000,\n                    products: [ 'CurrencyService', 'InvestmentStock' ]\n                  },\n                 {\n                    account_id: 260799,\n                    limit: 10000,\n                    products: [\n                      'Brokerage',\n                      'InvestmentStock',\n                      'Commodity',\n                      'CurrencyService'\n                    ]\n                  }\n                ]\n              }\n            ]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-lookup-tutorial-run-query.rst"
  },
  {
    "code": "         :copyable: true\n       \n         .. input::\n            :language: js\n            :dedent:\n            \n            [ \n              { \n                $search: {\n                  \"index\": \"multilingual-tutorial\",\n                  \"compound\": {\n                    \"must\": [{ \n                      \"text\": { \n                        \"path\": \"fullplot\", \n                        \"query\":  \"coppia\"\n                      }\n                    }], \n                    \"mustNot\": [{ \n                      \"range\": { \n                        \"path\": \"released\", \n                        \"gt\": ISODate(\"2000-01-01T00:00:00.000Z\"), \n                        \"lt\": ISODate(\"2009-01-01T00:00:00.000Z\") \n                      } \n                    }], \n                    \"should\": [{ \n                      \"text\": { \n                        \"query\": \"Drama\", \n                        \"path\": \"genres\" \n                      } \n                    }] \n                  }\n                }\n              }\n            ]\n      \n         .. output::\n            :language: json\n            :visible: true\n      \n            SCORE: 4.606284141540527  _id: \"573a1394f29313caabce0561\"\n              plot: \"In a Japanese slum, various residents play out their lives, dreaming o…\"\n              genres:\n                0: \"Drama\"\n              runtime: 137\n              fullplot: \"Una coppia di gretti usurai gestisce uno squallido dormitorio, nei pre…\"\n              released: 1957-10-01T00:00:00.000+00:00\n            \n            SCORE: 3.9604406356811523  _id: \"573a1395f29313caabce26d2\"\n              plot: \"Sei persone viaggiano in un vagone-letto da Marsiglia a Parigi. All'ar…\"\n              genres:\n                0: \"Mystery\"\n                1: \"Thriller\"\n              runtime: 95\n              fullplot: \"Sei persone viaggiano in un vagone-letto da Marsiglia a Parigi. All'ar…\"\n              released: 1965-11-17T00:00:00.000+00:00\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst    \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-multilingual-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: true\n       \n         .. input::\n            :language: js\n            :dedent:\n            \n            [ \n              { \n                $search: {\n                  \"index\": \"multilingual-tutorial\",\n                  \"compound\": {\n                    \"must\": [{ \n                      \"text\": {\n                        \"query\": \"Bella\",\n                        \"path\": { \"value\": \"fullplot\", \"multi\": \"fullplot_english\" }\n                      }\n                    }], \n                    \"mustNot\": [{ \n                      \"range\": { \n                        \"path\": \"released\", \n                        \"gt\": ISODate(\"1984-01-01T00:00:00.000Z\"), \n                        \"lt\": ISODate(\"2016-01-01T00:00:00.000Z\") \n                      } \n                    }], \n                    \"should\": [{ \n                      \"text\": { \n                        \"query\": \"Comedy\",\n                        \"path\": \"genres\"\n                      } \n                    }] \n                  }\n                }\n              }\n            ]\n      \n         .. output::\n            :language: json\n            :visible: true\n      \n            SCORE: 3.909510850906372  _id: \"573a1397f29313caabce8bad\"\n              plot: \"He is a revenge-obssessed stevedore whose sister was brutally raped an…\"\n              genres:\n                0: \"Drama\"\n              runtime: 137\n              fullplot: \"In Marseilles, a woman commits suicide after she is raped in an alley.…\"\n              released: 1983-05-18T00:00:00.000+00:00\n            \n            SCORE: 3.4253346920013428  _id: \"573a1396f29313caabce5735\"\n              plot: \"Giovanna e' una bella ragazza, ma ha qualche problema con gli uomini: …\"\n              genres:\n                0: \"Comedy\"\n              runtime: 100\n              fullplot: \"Giovanna e' una bella ragazza, ma ha qualche problema con gli uomini: …\"\n              released: 1974-11-15T00:00:00.000+00:00\n            \n            SCORE: 3.363344430923462  _id: \"573a1395f29313caabce13cf\"\n              plot: \"Gerardo è un attore o almeno cerca di esserlo, ma il pubblico non è de…\"\n              genres:\n                0: \"Comedy\"\n              runtime: 95\n              fullplot: \"Gerardo è un attore o almeno cerca di esserlo, ma il pubblico non è de…\"\n              released: 1960-02-10T00:00:00.000+00:00\n            \n            SCORE: 1.9502882957458496  _id: \"573a1396f29313caabce5299\"\n              plot: \"Dr Tremayne is an enigmatic Psychiatrist running a\n              Futuristic asylum h…\"\n              genres:\n                0: \"Horror\"\n              runtime: 90\n              fullplot: \"Dr Tremayne is an enigmatic Psychiatrist running a Futuristic asylum h…\"\n              released: 1973-10-31T00:00:00.000+00:00\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-multilingual-tutorial-run-query-atlas-ui2.rst"
  },
  {
    "code": "         :copyable: true\n       \n         .. input::\n            :language: json\n      \n            [\n              {\n                $search: {\n                  \"index\": \"null-check-tutorial\",\n                  \"compound\": {\n                    \"should\": [{\n                      \"wildcard\": {\n                        \"path\": \"password\",\n                        \"query\": \"*\",\n                        \"allowAnalyzedField\": true\n                        }\n                      },\n                      {\n                        \"compound\": {\n                          \"mustNot\": {\n                            \"exists\": {\n                              \"path\": \"password\"\n                            }\n                          },\n                          \"score\": { \"constant\": { \"value\": 2 } }\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            ]\n      \n         .. output::\n            \n            SCORE: 2  _id:  \"64a6e2f2bceafd4df9153eaf”\n              name: \"Laura Garcia\"\n              email: \"lgarcia@example.net\"\n      \n            SCORE: 1  _id:  \"59b99db4cfa9a34dcd7885b6”\n              name: \"Ned Stark\"\n              email: \"sean_bean@gameofthron.es\"\n              password: \"$2b$12$UREFwsRUoyF0CRqGNK0LzO0HM/jLhgUCNNIJ9RJAqMUQ74crlJ1Vu\"\n      \n            SCORE: 1  _id:  \"59b99db4cfa9a34dcd7885b7”\n              name: \"Robert Baratheon\"\n              email: \"mark_addy@gameofthron.es\"\n              password: \"$2b$12$yGqxLG9LZpXA2xVDhuPnSOZd.VURVkz7wgOLY3pnO0s7u2S1ZO32y\"\n      \n            SCORE: 1  _id:  \"59b99db5cfa9a34dcd7885b8”\n              name: \"Jaime Lannister\"\n              email: \"nikolaj_coster-waldau@gameofthron.es\"\n              password: \"$2b$12$6vz7wiwO.EI5Rilvq1zUc./9480gb1uPtXcahDxIadgyC3PS8XCUK\"\n      \n            SCORE: 1  _id:  \"59b99db5cfa9a34dcd7885b9”\n              name: \"Catelyn Stark\"\n              email: \"michelle_fairley@gameofthron.es\"\n              password: \"$2b$12$fiaTH5Sh1zKNFX2i/FTEreWGjxoJxvmV7XL.qlfqCr8CwOxK.mZWS\"\n      \n            SCORE: 1  _id:  \"59b99db6cfa9a34dcd7885ba”\n              name: \"Cersei Lannister\"\n              email: \"lena_headey@gameofthron.es\"\n              password: \"$2b$12$FExjgr7CLhNCa.oUsB9seub8mqcHzkJCFZ8heMc8CeIKOZfeTKP8m\"\n      \n            SCORE: 1  _id:  \"59b99db6cfa9a34dcd7885bb”\n              name: \"Daenerys Targaryen\"\n              email: \"emilia_clarke@gameofthron.es\"\n              password: \"$2b$12$NzpbWHdMytemLtTfFKduHenr2NZ.rvxIKuYM4AWLTFaUShxbJ.G3q\"\n      \n            SCORE: 1  _id:  \"59b99db6cfa9a34dcd7885bc”\n              name: \"Jorah Mormont\"\n              email: \"iain_glen@gameofthron.es\"\n              password: \"$2b$12$K8bKkwnpkrjsBPzASZxO/.yj7d9kvupiVtO6JA3Xl106AKXr3pXFK\"\n      \n            SCORE: 1  _id:  \"59b99db7cfa9a34dcd7885bd”\n              name: \"Petyr Baelish\"\n              email: \"aidan_gillen@gameofthron.es\"\n              password: \"$2b$12$qM.YvmiekyYYY7p7phpK3OicbRCDkN7ESwYAnG/o9YnfHC0Mhkmbi\"\n      \n            SCORE: 1  _id:  \"59b99db8cfa9a34dcd7885be”\n              name: \"Viserys Targaryen\"\n              email: \"harry_lloyd@gameofthron.es\"\n              password: \"$2b$12$cpwVmU4DyuQxgwpdrVJhaudzbKOXlHRbf.tpCuHjpAqonuoyvvEG6\"     \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-not-null-tutorial-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: js\n                  :linenos:\n      \n                  [\n                    {\n                      \"$search\": {\n                        \"index\": \"partial-match-tutorial\",\n                        \"autocomplete\": {\n                          \"path\": \"plot\",\n                          \"query\": \"new purchase\",\n                          \"tokenOrder\": \"any\",\n                          \"fuzzy\": {\n                            \"maxEdits\": 2,\n                            \"prefixLength\": 1,\n                            \"maxExpansions\": 256\n                          }\n                        },\n                        \"highlight\": { \n                            \"path\": \"plot\"\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n      \n                  SCORE: 3  _id:  \"573a13a4f29313caabd112f0\"\n                    A divorced woman and her diabetic daughter take refuge in their newly-purchased house's safe room, when three men break-in, searching for a missing fortune.\n                    Matching fields: plot\n                  \n                  SCORE: 3  _id:  \"573a13d1f29313caabd8e209\"\n                    A lonely writer develops an unlikely relationship with his newly purchased operating system that's designed to meet his every need.\n                    Matching fields: plot\n                  \n                  SCORE: 2  _id:  \"573a13bef29313caabd5b62d\"\n                    Set in the near future when artificial organs can be bought on credit, it revolves around a man who struggles to make the payments on a heart he has purchased. He must\n                    Matching fields: plot\n                  \n                  SCORE: 2  _id:  \"573a13b3f29313caabd3c91e\"\n                    He is \"purchased\" by a wealthy television producer and taken to a desolate island where he must fight to the death against nine other condemned killers from all corners of the world, with freedom going to the sole survivor.\n                    Matching fields: plot\n      \n                  SCORE: 2  _id:  \"573a1398f29313caabceb931\"\n                    A country boy becomes the head of a gang through the purchase of some lucky roses from an old lady.\n                    Matching fields: plot, plot\n      \n                  SCORE: 1  _id:  \"573a13a7f29313caabd1b5ab\"\n                    An illegal Nigerian immigrant discovers the unpalatable side of London life.\n                    Matching fields: plot\n      \n                  SCORE: 1  _id:  \"573a13a7f29313caabd1b5c0\"\n                    A young dropout falls in love with a nightclub dancer...\n                    Matching fields: plot\n      \n                  SCORE: 1  _id:  \"573a13a7f29313caabd1b62f\"\n                    In 1990, to protect his fragile mother from a fatal shock after a long coma, a young man must keep her from learning that her beloved nation of East Germany as she knew it has disappeared.\n                    Matching fields: plot\n      \n                  SCORE: 1  _id:  \"573a13a7f29313caabd1b6af\"\n                    Gadget once again has to fight his arch nemesis, Claw.\n                    Matching fields: plot\n      \n         .. tab:: phrase\n            :tabid: phrase \n      \n            .. include:: /includes/extracts/fts-partial-match-phrase-query-desc.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-partial-match-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: js\n                  :linenos:\n      \n                  [\n                    {\n                      \"$search\": {\n                        \"index\": \"partial-match-tutorial\",\n                        \"phrase\": {\n                          \"path\": \"plot\",\n                          \"query\": \"new purpose\",\n                          \"slop\": 5\n                        },\n                        \"highlight\": {\n                          \"path\": \"plot\"\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n      \n                  SCORE: 3.7209534645080566  _id:  \"573a13b1f29313caabd37ae6\"\n                    The true story of Richard Pimentel, a brilliant public speaker with a troubled past, who returns from Vietnam severely hearing -impaired and finds a new purpose in his landmark efforts on the behalf of Americans with disabilities.\n                    Matching fields: plot\n      \n                  SCORE: 1.1507558822631836  _id:  \"573a13bdf29313caabd58a26\"\n                    But without a hero, he loses all purpose and must find new meaning to his life.\n                    Matching fields: plot\n      \n                  SCORE: 1.0041160583496094  _id:  \"573a1396f29313caabce5197\"\n                    An aging Pat Garrett is hired as a lawman on behalf of a group of wealthy New Mexico cattle barons--his sole purpose being to bring down his old friend Billy the Kid.\n                    Matching fields: plot\n      \n         .. tab:: regex\n            :tabid: regex \n      \n            .. include:: /includes/extracts/fts-partial-match-regex-query-desc.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-partial-match-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: js\n                  :linenos:\n      \n                  [\n                    {\n                      \"$search\": {\n                        \"index\": \"partial-match-tutorial\",\n                        \"regex\": {\n                          \"path\": \"plot\",\n                          \"query\": \"(.*)new(.*) pur(.*)\"\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n      \n                  SCORE: 1  _id:  \"573a1397f29313caabce77d9\"\n                    fullplot: \"After the Rebel base on the icy planet Hoth is taken over by the empir…\"\n                    imdb: Object\n                    year: 1980\n      \n                  SCORE: 1  _id:  \"573a1398f29313caabceb893\"\n                    plot: \"The new owner of the Cleveland Indians puts together a purposely horri…\"\n                    genres: Array\n                    runtime: 107\n      \n                  SCORE: 1  _id:  \"573a13b1f29313caabd37ae6\"\n                    plot: \"The true story of Richard Pimentel, a brilliant public speaker with a …\"\n                    genres: Array\n                    runtime: 94\n      \n                  SCORE: 1  _id:  \"573a13d1f29313caabd8e209\"\n                    fullplot: \"Theodore is a lonely man in the final stages of his divorce. When he's…\"\n                    imdb: Object\n                    year: 2013\n      \n                  SCORE: 1  _id:  \"573a13dcf29313caabdb107a\"\n                    plot: \"An adrenaline junkie walks away from a whirlwind romance and embraces …\"\n                    genres: Array\n                    runtime: 146\n      \n         .. tab:: wildcard\n            :tabid: wildcard \n      \n            .. include:: /includes/extracts/fts-partial-match-wildcard-query-desc.rst\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-partial-match-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input::\n                  :language: js\n                  :linenos:\n      \n                  [\n                    {\n                      \"$search\": {\n                        \"index\": \"partial-match-tutorial\",\n                        \"wildcard\": {\n                          \"path\": \"plot\",\n                          \"query\": \"*new* pur*\"\n                        }\n                      }\n                    }\n                  ]\n      \n               .. output::\n                  :visible: true\n      \n                  SCORE: 1  _id:  \"573a1397f29313caabce77d9\"\n                    fullplot: \"After the Rebel base on the icy planet Hoth is taken over by the empir…\"\n                    imdb: Object\n                    year: 1980\n      \n                  SCORE: 1  _id:  \"573a1398f29313caabceb893\"\n                    plot: \"The new owner of the Cleveland Indians puts together a purposely horri…\"\n                    genres: Array\n                    runtime: 107\n      \n                  SCORE: 1  _id:  \"573a13b1f29313caabd37ae6\"\n                    plot: \"The true story of Richard Pimentel, a brilliant public speaker with a …\"\n                    genres: Array\n                    runtime: 94\n      \n                  SCORE: 1  _id:  \"573a13d1f29313caabd8e209\"\n                    fullplot: \"Theodore is a lonely man in the final stages of his divorce. When he's…\"\n                    imdb: Object\n                    year: 2013\n      \n                  SCORE: 1  _id:  \"573a13dcf29313caabdb107a\"\n                    plot: \"An adrenaline junkie walks away from a whirlwind romance and embraces …\"\n                    genres: Array\n                    runtime: 146\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst    \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-partial-match-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "                  :copyable: true \n      \n                  {\n                    \"mappings\": {\n                      \"dynamic\": false,\n                      \"fields\": {\n                        \"awards\": {\n                          \"dynamic\": false,\n                          \"fields\": {\n                            \"wins\": [\n                              {\n                                \"type\": \"number\"\n                              }\n                            ]\n                          },\n                          \"type\": \"document\"\n                        },\n                        \"released\": [\n                          {\n                            \"type\": \"date\"\n                          }\n                        ],\n                        \"title\": [{\n                          \"type\": \"token\"\n                        }, {\n                          \"type\": \"string\",\n                          \"analyzer\": \"lucene.keyword\",\n                          \"searchAnalyzer\": \"lucene.keyword\"\n                        }]\n                      }\n                    }\n                  }\n      \n            #. Click :guilabel:`Next`.\n      \n   .. step:: Click :guilabel:`Create Search Index`.\n\n   .. step:: Close the :guilabel:`You're All Set!` Modal Window.\n      \n      A modal window appears to let you know your index is building. Click \n      the :guilabel:`Close` button.\n      \n   .. step:: Wait for the index to finish building.\n      \n      The index should take about one minute to build. While it is\n      building, the :guilabel:`Status` column reads ``Build in\n      Progress``. When it is finished building, the\n      :guilabel:`Status` column reads ``Active``.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-create-index.rst"
  },
  {
    "code": "         :copyable: true \n      \n         .. input::\n            :language: json\n      \n            [\n              {\n                $search: {\n                  \"index\": \"sort-tutorial\",\n                  \"compound\": {\n                    \"filter\": [{\n                      \"wildcard\": {\n                        \"query\": \"Summer*\",\n                        \"path\": \"title\"\n                      }\n                    }],\n                    \"must\": [{\n                      \"near\": {\n                        \"pivot\": 13149000000,\n                        \"path\": \"released\",\n                        \"origin\": ISODate(\"2014-04-18T00:00:00.000+00:00\")\n                      }\n                    }]\n                  },\n                  \"sort\": {\n                    \"released\": -1,\n                    \"title\": 1\n                  }\n                }\n              }\n            ]\n            \n         .. output::\n            :visible: true\n      \n            SCORE: 0.348105788230896  _id:  \"573a13f0f29313caabddaf7a\"\n              countries: Array\n              runtime: 104\n              cast: Array\n              ...\n              title: \"Summer Nights\"\n              ...\n              released: 2015-01-28T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.5917375683784485  _id:  \"573a13e6f29313caabdc673b\"\n              plot: \"25-year-old Iiris and Karoliina have been best friends since childhood…\"\n              genres: Array\n              runtime: 90\n              ...\n              title: \"Summertime\"\n              ...\n              released: 2014-08-01T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.9934720396995544  _id:  \"573a13eff29313caabdd760c\"\n              plot: \"Erik Sparrow is one of the lucky ones. He's got a good job. He's in a …\"\n              genres: Array\n              runtime: 86\n              ...\n              title: \"Summer of Blood\"\n              ...\n              released: 2014-04-17T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.15982933342456818  _id:  \"573a13cff29313caabd8ab74\"\n              plot: \"The story of an adult and a teenage couple during a brief summer holid…\"\n              genres: Array\n              countries: Array\n              ...\n              title: \"Summer Games\"\n              ...\n              released: 2012-02-08T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.13038821518421173  _id:  \"573a13cef29313caabd87f4e\"\n              plot: \"Summer of Goliath is a documentary/fiction hybrid that narrates variou…\"\n              genres: Array\n              runtime: 78\n              ...\n              title: \"Summer of Goliath\"\n              ...\n              released: 2011-07-08T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.08124520629644394  _id:  \"573a13c7f29313caabd7608d\"\n              plot: \"A student tries to fix a problem he accidentally caused in OZ, a digit…\"\n              genres: Array\n              runtime: 114\n              ...\n              title: \"Summer Wars\"\n              ...\n              released: 2009-08-01T00:00:00.000+00:00\n      \n            SCORE: 0.0711759403347969  _id:  \"573a13bbf29313caabd54ee6\"\n              plot: \"The life of a public school epitomized by disobedient student Jonah Ta…\"\n              genres: Array\n              runtime: 30\n              ...\n              title: \"Summer Heights High\"\n              ...\n              released: 2008-11-09T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.06951779872179031  _id:  \"573a13bff29313caabd5f935\"\n              plot: \"On his spring break at the seaside, with his wife and his four year ol…\"\n              genres: Array\n              runtime: 102\n              ...\n              title: \"Summer Holiday\"\n              ...\n              released: 2008-09-19T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.05834990739822388  _id:  \"573a13c0f29313caabd628ac\"\n              plot: \"Kochi Uehara is a fourth grade student living in the suburb of Tokyo. …\"\n              genres: Array\n              runtime: 138\n              ...\n              title: \"Summer Days with Coo\"\n              ...\n              released: 2007-07-28T00:00:00.000+00:00\n              ...\n      \n            SCORE: 0.056174591183662415  _id:  \"573a13b8f29313caabd4c1d0\"\n              fullplot: \"Country girl Yu Hong leaves her village, her family and her lover to s…\"\n              genres: Array\n              runtime: 158\n              ...\n              title: \"Summer Palace\"\n              ...\n              released: 2007-04-18T00:00:00.000+00:00\n              ...\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst    \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-date-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 15\n\n      .. note:: \n         \n         .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-date-tutorial-run-query-go.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            go run sort-by-date.go\n     \n         .. output::\n            :language: none\n            :visible: true\n\n            [{title Summer Nights} {released 1422403200000} {score 0.348105788230896}]\n            [{title Summertime} {released 1406851200000} {score 0.5917375683784485}]\n            [{title Summer of Blood} {released 1397692800000} {score 0.9934720396995544}]\n            [{title Summer Games} {released 1328659200000} {score 0.15982933342456818}]\n            [{title Summer of Goliath} {released 1310083200000} {score 0.13038821518421173}]\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-date-tutorial-run-query-go.rst"
  },
  {
    "code": "         :language: javascript\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5\n\n      .. note:: \n        \n        .. include:: /includes/fact-fts-driver-connection-string.rst\n          \n   .. step:: Run the following command to query your collection: \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-date-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            node sort-by-date.js\n\n         .. output::\n            :language: javascript\n            :visible: true\n\n            {\n              title: 'Summer Nights',\n              released: 2015-01-28T00:00:00.000Z,\n              score: 0.348105788230896\n            }\n            {\n              title: 'Summertime',\n              released: 2014-08-01T00:00:00.000Z,\n              score: 0.5917375683784485\n            }\n            {\n              title: 'Summer of Blood',\n              released: 2014-04-17T00:00:00.000Z,\n              score: 0.9934720396995544\n            }\n            {\n              title: 'Summer Games',\n              released: 2012-02-08T00:00:00.000Z,\n              score: 0.15982933342456818\n            }\n            {\n              title: 'Summer of Goliath',\n              released: 2011-07-08T00:00:00.000Z,\n              score: 0.13038821518421173\n            }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-date-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "         :language: python\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5\n\n      .. note:: \n        \n        .. include:: /includes/fact-fts-driver-connection-string.rst\n          \n   .. step:: Run the following command to query your collection: \n  \n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-date-tutorial-run-query-python.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n        \n            python sort-date-for-speed.py\n\n         .. output::\n            :language: python\n            :visible: true\n        \n            {'title': 'Summer Nights', 'released': datetime.datetime(2015, 1, 28, 0, 0), 'score': 0.348105788230896}\n            {'title': 'Summertime', 'released': datetime.datetime(2014, 8, 1, 0, 0), 'score': 0.5917375683784485}\n            {'title': 'Summer of Blood', 'released': datetime.datetime(2014, 4, 17, 0, 0), 'score': 0.9934720396995544}\n            {'title': 'Summer Games', 'released': datetime.datetime(2012, 2, 8, 0, 0), 'score': 0.15982933342456818}\n            {'title': 'Summer of Goliath', 'released': datetime.datetime(2011, 7, 8, 0, 0), 'score': 0.13038821518421173}\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-date-tutorial-run-query-python.rst"
  },
  {
    "code": "         :copyable: true \n      \n         .. input::\n            :language: json\n      \n            [\n              { \n                $search: { \n                  \"index\": \"sort-tutorial\",\n                  \"compound\": {\n                    \"should\": [{\n                      \"wildcard\": {\n                        \"query\": [\"Prance*\"],\n                        \"path\": \"title\",\n                        \"allowAnalyzedField\": true\n                      }\n                    },\n                    {\n                      \"wildcard\": {\n                        \"query\": [\"Prince*\"],\n                        \"path\": \"title\",\n                        \"allowAnalyzedField\": true\n                      }\n                    }]\n                  },\n                  \"sort\": {\n                    \"title\": 1\n                  }\n                }\n              }\n            ]\n            \n         .. output::\n            :visible: true\n            \n            SCORE: 1  _id:  \"573a1398f29313caabceb98e\"\n              plot: \"A farm girl nurses a wounded reindeer she believes is one of Santa's, …\"\n              genres: Array\n              runtime: 103\n              ...\n              title: \"Prancer\"\n              ...\n      \n            SCORE: 1  _id:  \"573a13a5f29313caabd14f54\"\n              plot: \"Preteen brothers from a broken marriage live with their mother, Denise…\"\n              genres: Array\n              runtime: 91\n              ...\n              title: \"Prancer Returns\"\n              ...\n      \n            SCORE: 1  _id:  \"573a13f5f29313caabde3755\"\n              plot: \"A troubled teenager attempts to conquer the love of his life by becomi…\"\n              genres: Array\n              runtime: 78\n              ...\n              title: \"Prince\"\n              ...\n      \n            SCORE: 1  _id:  \"573a13d8f29313caabda665f\"\n              fullplot: \"Two highway road workers spend the summer of 1988 away from their city…\"\n              imdb: Object\n              year: 2013\n              ...\n              title: \"Prince Avalanche\"\n              ...\n      \n            SCORE: 1  _id:  \"573a13bdf29313caabd5898a\"\n              plot: \"A New York street drama about the lives of immigrants in America seeki…\"\n              genres: Array\n              runtime: 70\n              ...\n              title: \"Prince of Broadway\"\n              ...\n      \n            SCORE: 1  _id:  \"573a1398f29313caabcea967\"\n              fullplot: \"A sinister secret has been kept in the basement of an abandoned Los An…\"\n              imdb: Object\n              year: 1987\n              ...\n              title: \"Prince of Darkness\"\n              ...\n      \n            SCORE: 1  _id:  \"573a1393f29313caabcde40d\"\n              plot: \"An unscrupulous agent for the Borgias suffers a change of heart when a…\"\n              genres: Array\n              runtime: 107\n              ...\n              title: \"Princess of Foxes\"\n              ...\n      \n            SCORE: 1  _id:  \"573a13b5f29313caabd43816\"\n              plot: \"A young fugitive prince and princess must stop a villain who unknowing…\"\n              genres: Array\n              runtime: 116\n              ...\n              title: \"Prince of Persia: The Sands of Time\"\n              ...\n      \n            SCORE: 1  _id:  \"573a1397f29313caabce8081\"\n              plot: \"A New York City narcotics detective reluctantly agrees to cooperate wi…\"\n              genres: Array\n              runtime: 167\n              ...\n              title: \"Prince of the City\"\n              ...\n      \n            SCORE: 1  _id:  \"573a13a2f29313caabd0a767\"\n              plot: \"Six old-style funny silhouetted fairy tales for not so-old-style peopl…\"\n              genres: Array\n              runtime: 70\n              ...\n              title: \"Princes and Princesses\"\n              ...\n      \n      .. include:: /includes/extracts/fts-sort-by-string-results.rst\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst  \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-string-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 14\n\n      .. note::  \n         \n         .. include:: /includes/fact-fts-driver-connection-string.rst\n            \n   .. step::  Run the following command to query your collection: \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-string-tutorial-run-query-go.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            go run sort-by-strings.go\n\n         .. output::\n            :language: none\n            :visible: true\n\n            [{title Prancer} {score 1}]\n            [{title Prancer Returns} {score 1}]\n            [{title Prince} {score 1}]\n            [{title Prince Avalanche} {score 1}]\n            [{title Prince of Broadway} {score 1}]\n\n      .. include:: /includes/extracts/fts-sort-by-string-results.rst\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-string-tutorial-run-query-go.rst"
  },
  {
    "code": "         :language: javascript\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5\n\n      .. note:: \n         \n         .. include:: /includes/fact-fts-driver-connection-string.rst\n            \n   .. step:: Run the following command to query your collection: \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-string-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            node sort-by-strings.js\n\n         .. output::\n            :language: javascript\n            :visible: true\n\n            { title: 'Prancer', score: 1 }\n            { title: 'Prancer Returns', score: 1 }\n            { title: 'Prince', score: 1 }\n            { title: 'Prince Avalanche', score: 1 }\n            { title: 'Prince of Broadway', score: 1 }\n\n      .. include:: /includes/extracts/fts-sort-by-string-results.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-string-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "         :language: python\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5\n\n      .. note::\n        \n         .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n  \n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-string-tutorial-run-query-python.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n     \n            python sort-by-strings.py\n\n         .. output::\n            :language: python\n            :visible: true\n\n            {'title': 'Prancer', 'score': 1.0}\n            {'title': 'Prancer Returns', 'score': 1.0}\n            {'title': 'Prince', 'score': 1.0}\n            {'title': 'Prince Avalanche', 'score': 1.0}\n            {'title': 'Prince of Broadway', 'score': 1.0}\n\n      .. include:: /includes/extracts/fts-sort-by-string-results.rst\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-sort-string-tutorial-run-query-python.rst"
  },
  {
    "code": "                     :copyable: true\n      \n                     .. input::\n                        :language: json\n      \n                        [\n                          {\n                            $search: {\n                              index: \"synonyms-tutorial\",\n                              text: {\n                                path: \"title\",\n                                query: \"automobile\",\n                                synonyms: \"transportSynonyms\"\n                              }\n                            }\n                          }\n                        ]\n      \n                     .. output::\n                        :visible: true\n      \n                        SCORE: 4.197734832763672  _id:  “573a13a9f29313caabd1f18a”\n                          fullplot: \"While traveling to California for the dispute of the final race of the…\"\n                          imdb: Object\n                          year: 2006\n                          ...\n                          title: \"Cars\"\n      \n                        SCORE: 3.8511905670166016  _id:  “573a1398f29313caabcea94c”\n                          plot: \"A man must struggle to travel home for Thanksgiving with an obnoxious …\"\n                          genres: Array\n                          runtime: 93\n                          ...\n                          title: \"Planes, Trains, and Automobiles\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a1397f29313caabce5fb0”\n                          plot: \"Car Wash is about a close-knit group of employees who one day have all…\"\n                          genres: Array\n                          runtime: 97\n                          ...\n                          title: \"Car Wash\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a1397f29313caabce7bd2”\n                          plot: \"When the owner of a struggling used car lot is killed, it's up to the …\"\n                          genres: Array\n                          runtime: 113\n                          ...\n                          title: \"Used Cars\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a13a6f29313caabd18bfe”\n                          fullplot: \"Gifted 18-year-old Meg has been abandoned by her father and neglected …\"\n                          imdb: Object\n                          year: 2002\n                          ...\n                          title: \"Blue Car\"\n            \n                        SCORE: 3.39473032951355  _id:  “573a13c1f29313caabd64e3d”\n                          fullplot: \"After Mater gets his best friend, star race car Lightning McQueen, a s…\"\n                          imdb: Object\n                          year: 2011\n                          ...\n                          title: \"Cars 2\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a13eaf29313caabdce62c”\n                          plot: \"A rebellious teenager navigates his way through the juvenile court sys…\"\n                          genres: Array\n                          runtime: 94\n                          ...\n                          title: \"Stealing Cars\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a13f1f29313caabddc93f”\n                          plot: \"A small town sheriff sets out to find the two kids who have taken his …\"\n                          genres: Array\n                          runtime: 86\n                          ...\n                          title: \"Cop Car\"\n      \n                        SCORE: 2.8496146202087402  _id:  “573a1396f29313caabce5480”\n                          plot: \"The small town of Paris, Australia deliberately causes car accidents, …\"\n                          genres: Array\n                          runtime: 91\n                          ...\n                          title: \"The Cars That Eat People\"\n      \n                        SCORE: 2.8496146202087402  _id:  “573a139df29313caabcf9636”\n                          plot: \"Military doctor General Klenski is arrested in Stalin's Russia in 1953…\"\n                          genres: Array\n                          runtime: 137\n                          ...\n                          title: \"Khrustalyov, My Car!\"\n      \n                  .. include:: /includes/extracts/fts-synonyms-tutorial-equivalent-query-output.rst\n      \n               .. tab:: explicit Mapping Type\n                  :tabid: explicit\n      \n                  The query searches the ``title`` field for ``boat`` and \n                  uses the ``transportSynonyms`` synonym mapping definition \n                  to search for the synonyms of ``boat`` that you \n                  configured in the ``transport_synonyms`` synonyms source \n                  collection.\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-synonyms-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "                     :copyable: true\n      \n                     .. input::\n                        :language: json\n      \n                        [\n                          {\n                            $search: {\n                              index: \"synonyms-tutorial\",\n                              text: {\n                                path: \"title\",\n                                query: \"boat\",\n                                synonyms: \"transportSynonyms\"\n                              }\n                            }\n                          }\n                        ]\n      \n                     .. output::\n                        :visible: true\n      \n                        SCORE: 5.373150825500488  _id:  “573a13e9f29313caabdcd013”\n                          plot: \"A fearless sea captain sails a ship through loopholes in international…\"\n                          genres: Array\n                          runtime: 90\n                          ...\n                          title: \"Vessel\"\n      \n                        SCORE: 4.589139938354492  _id:  “573a13e8f29313caabdc9e72”\n                          countries: Array\n                          genres: Array\n                          runtime: 7\n                          ...\n                          title: \"Boats\"\n      \n                        SCORE: 4.3452959060668945  _id:  “573a1398f29313caabce90b6”\n                          plot: \"In 1914, a luxury ship leaves Italy in order to scatter the ashes of a…\"\n                          genres: Array\n                          runtime: 128\n                          ...\n                          title: \"And the Ship Sails On\"\n      \n                        SCORE: 4.3452959060668945  _id:  “573a139cf29313caabcf7c75”\n                          plot: \"A young Pennsylvania man moves to Los Angeles to begin work for an amb…\"\n                          genres: Array\n                          runtime: 90\n                          ...\n                          title: \"Broken Vessels\"\n      \n                        SCORE: 4.3452959060668945  _id:   “573a13f0f29313caabdda2dd”\n                          plot: \"A young man struggling with the death of his parents meets an extrover…\"\n                          genres: Array\n                          runtime: 80\n                          ...\n                          title: \"Sailing to Paradise\"\n            \n                        SCORE: 3.711261749267578  _id:  “573a1397f29313caabce8796”\n                          plot: \"A Japanese photojournalist revisits Vietnam after the Liberation and l…\"\n                          genres: Array\n                          runtime: 109\n                          ...\n                          title: \"Boat People\"\n      \n                        SCORE: 3.711261749267578  _id:  “573a13a6f29313caabd17a98”\n                          plot: \"Two straight men mistakenly end up on a \"gays only\" cruise.\"\n                          genres: Array\n                          runtime: 94\n                          ...\n                          title: \"Boat Trip\"\n      \n                        SCORE: 3.1153182983398438  _id:  “573a1394f29313caabce036c”\n                          plot: \"Three London gentlemen take vacation rowing down the Thames, encounter…\"\n                          genres: Array\n                          runtime: 84\n                          ...\n                          title: \"Three Men in a Boat\"\n      \n                        SCORE: 3.1153182983398438  _id:  “573a1395f29313caabce2c28”\n                          plot: \"After a series of misunderstandings, the head of an aerospace research…\"\n                          genres: Array\n                          runtime: 110\n                          ...\n                          title: \"The Glass Bottom Boat\"\n      \n                        SCORE: 3.1153182983398438  _id:  “573a13c2f29313caabd68772”\n                          fullplot: \"Jack is a shy and awkward man who drives a limo and lives an unassumin…\"\n                          imdb: Object\n                          runtime: 2010\n                          ...\n                          title: \"Jack Goes Boating\"\n      \n                  .. include:: /includes/extracts/fts-synonyms-tutorial-explicit-query-output.rst\n      \n         .. tab:: Advanced Example \n            :tabid: advanced\n      \n            |fts| query results vary based on the type of word mapping \n            defined in the synonyms source collection. \n      \n            .. tabs:: \n      \n               .. tab:: equivalent Mapping Type\n                  :tabid: equivalent\n      \n                  The query searches the ``title`` field for ``automobile`` \n                  and uses the ``transportSynonyms`` synonym mapping \n                  definition to search for the synonyms of \n                  ``automobile`` that you configured in the \n                  ``transport_synonyms`` synonyms source collection. Also, \n                  the query searches the ``title`` field for ``attire`` and \n                  uses the ``attireSynonyms`` synonym mapping definition to \n                  search for the synonyms of ``attire`` that you configured \n                  in the ``attire_synonyms`` synonyms source collection.\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-synonyms-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "                     :copyable: true\n      \n                     .. input::\n                        :language: json\n      \n                        [\n                          {\n                            $search: {\n                              \"index\": \"synonyms-tutorial\",\n                              \"compound\": {\n                                \"should\": [{\n                                  \"text\": {\n                                    \"path\": \"title\",\n                                    \"query\": \"automobile\",\n                                    \"synonyms\": \"transportSynonyms\"\n                                  }\n                                },\n                                {\n                                  \"text\": {\n                                    \"path\": \"title\",\n                                    \"query\": \"attire\",\n                                    \"synonyms\": \"attireSynonyms\"\n                                  }\n                                }]\n                              }\n                            }\n                          }\n                        ]\n      \n                     .. output::\n                        :visible: true\n      \n                        SCORE: 4.812004089355469  _id:  “573a139af29313caabcf003f”\n                          plot: \"The Dress is a tale filled with sex, violence, comedy and drama as it …\"\n                          genres: Array\n                          runtime: 103\n                          ...\n                          title: \"The Dress\"\n                        \n                        SCORE: 4.197734832763672  _id:  “573a13a9f29313caabd1f18a”\n                          fullplot: \"While traveling to California for the dispute of the final race of the…\"\n                          imdb: Object\n                          year: 2006\n                          ...\n                          title: \"Cars\"\n      \n                        SCORE: 3.891493320465088  _id:  “573a1397f29313caabce77cd”\n                          plot: \"A mysterious blonde woman kills one of a psychiatrist's patients, and …\"\n                          genres: Array\n                          runtime: 105\n                          ...\n                          title: \"Dressed to Kill\"\n      \n                        SCORE: 3.891493320465088  _id:  “573a13bcf29313caabd57e07”\n                          fullplot: \"Two things about Jane: she never says no to her friends (she's been a …\"\n                          imdb Object\n                          year: 2008\n                          ...\n                          title: \"27 Dresses\"\n      \n                        SCORE: 3.8511905670166016  _id:  “573a1398f29313caabcea94c”\n                          plot: \"A man must struggle to travel home for Thanksgiving with an obnoxious …\"\n                          genres: Array\n                          runtime: 93\n                          ...\n                          title: \"Planes, Trains, and Automobiles\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a1397f29313caabce5fb0”\n                          plot: \"Car Wash is about a close-knit group of employees who one day have all…\"\n                          genres: Array\n                          runtime: 97\n                          ...\n                          title: \"Car Wash\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a1397f29313caabce7bd2”\n                          plot: \"When the owner of a struggling used car lot is killed, it's up to the …\"\n                          genres: Array\n                          runtime: 113\n                          ...\n                          title: \"Used Cars\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a13a6f29313caabd18bfe”\n                          fullplot: \"Gifted 18-year-old Meg has been abandoned by her father and neglected …\"\n                          imdb: Object\n                          year: 2002\n                          ...\n                          title: \"Blue Car\"\n            \n                        SCORE: 3.39473032951355  _id:  “573a13c1f29313caabd64e3d”\n                          fullplot: \"After Mater gets his best friend, star race car Lightning McQueen, a s…\"\n                          imdb: Object\n                          year: 2011\n                          ...\n                          title: \"Cars 2\"\n      \n                        SCORE: 3.39473032951355  _id:  “573a13eaf29313caabdce62c”\n                          plot: \"A rebellious teenager navigates his way through the juvenile court sys…\"\n                          genres: Array\n                          runtime: 94\n                          ...\n                          title: \"Stealing Cars\"\n      \n                  .. include:: /includes/extracts/fts-synonyms-tutorial-equivalent-advanced-query-output.rst\n      \n               .. tab:: explicit Mapping Type\n                  :tabid: explicit\n      \n                  The query searches the ``title`` field for ``boat`` and \n                  uses the ``transportSynonyms`` synonym mapping definition \n                  to search for the synonyms of ``boat`` that you \n                  configured in the ``transport_synonyms`` synonyms source \n                  collection. Also, the query searches the ``title`` field \n                  for ``hat`` and uses the ``attireSynonyms`` synonym \n                  mapping definition to search for the synonyms of ``hat`` \n                  that you configured in the ``attire_synonyms`` synonyms \n                  source collection.\n      \n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-synonyms-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "                     :copyable: true\n      \n                     .. input::\n                        :language: json\n      \n                        [\n                          {\n                            $search: {\n                              index: \"synonyms-tutorial\",\n                              compound: {\n                                should: [{\n                                  text: {\n                                    path: \"title\",\n                                    query: \"boat\",\n                                    synonyms: \"transportSynonyms\"\n                                  }\n                                },\n                                {\n                                  text: {\n                                    path: \"title\",\n                                    query: \"hat\",\n                                    synonyms: \"attireSynonyms\"\n                                  }\n                                }]\n                              }\n                            }\n                          }\n                        ]\n      \n                     .. output::\n                        :visible: true\n      \n                        SCORE: 5.673145294189453  _id:  “573a1397f29313caabce6bed”\n                          plot: \"Down-on-his-luck Hollywood producer Barry 'Dutch' Detweiler attempts t…\"\n                          genres: Array\n                          runtime: 114\n                          ...\n                          title: \"Fedora\"\n                        \n                        SCORE: 5.373150825500488  _id:  “573a13e9f29313caabdcd013”\n                          plot: \"A fearless sea captain sails a ship through loopholes in international…\"\n                          genres: Array\n                          runtime: 90\n                          ...\n                          title: \"Vessel\"\n      \n                        SCORE: 4.589139938354492  _id:  “573a13e8f29313caabdc9e72”\n                          countries: Array\n                          genres: Array\n                          runtime: 7\n                          ...\n                          title: \"Boats\"\n      \n                        SCORE: 4.3452959060668945  _id:  “573a1398f29313caabce90b6”\n                          plot: \"In 1914, a luxury ship leaves Italy in order to scatter the ashes of a…\"\n                          genres: Array\n                          runtime: 128\n                          ...\n                          title: \"And the Ship Sails On\"\n      \n                        SCORE: 4.3452959060668945  _id:  “573a139cf29313caabcf7c75”\n                          plot: \"A young Pennsylvania man moves to Los Angeles to begin work for an amb…\"\n                          genres: Array\n                          runtime: 90\n                          ...\n                          title: \"Broken Vessels\"\n      \n                        SCORE: 4.3452959060668945  _id:   “573a13f0f29313caabdda2dd”\n                          plot: \"A young man struggling with the death of his parents meets an extrover…\"\n                          genres: Array\n                          runtime: 80\n                          ...\n                          title: \"Sailing to Paradise\"\n      \n                        SCORE: 4.066137313842773  _id:  “573a1392f29313caabcdaae8”\n                          plot: \"An American dancer comes to Britain and falls for a model whom he init…\"\n                          genres: Array\n                          runtime: 101\n                          ...\n                          title: \"Top Hat\"\n            \n                        SCORE: 4.066137313842773  _id:  “573a1394f29313caabce05e8”\n                          plot: \"A Korean War veteran's morphine addiction wreaks havoc upon his family…\"\n                          genres: Array\n                          runtime: 109\n                          ...\n                          title: \"A Hatful of Rain\"\n                        \n                        SCORE: 3.711261749267578  _id:  “573a1397f29313caabce8796”\n                          plot: \"A Japanese photojournalist revisits Vietnam after the Liberation and l…\"\n                          genres: Array\n                          runtime: 109\n                          ...\n                          title: \"Boat People\"\n      \n                        SCORE: 3.711261749267578  _id:  “573a13a6f29313caabd17a98”\n                          plot: \"Two straight men mistakenly end up on a \"gays only\" cruise.\"\n                          genres: Array\n                          runtime: 94\n                          ...\n                          title: \"Boat Trip\"\n      \n                  .. include:: /includes/extracts/fts-synonyms-tutorial-explicit-advanced-query-output.rst\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-synonyms-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "                  :language: json\n                  :copyable: true \n                  :linenos:\n\n            .. tab:: Bury Specified Documents \n               :tabid: bury-id\n\n               The query uses the :pipeline:`$search` ``compound``\n               operator ``should`` clause to nest ``compound`` operator\n               queries that perform the following actions:  \n\n               - Searches for movies that contain the term ``ghost`` in\n                 the plot or title (``must`` clause), but doesn't have\n                 the specified ObjectIds (``mustNot`` clause). \n               - Searches for movies that contain the term ``ghost`` in\n                 the plot or title (``must`` clause), but reduces\n                 (``boost``) the score by 50% (``0.5``) for movies with\n                 the specified ObjectIds (``filter`` clause). \n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-atlas-ui.rst"
  },
  {
    "code": "                  :language: json\n                  :copyable: true \n                  :linenos:\n         \n      #. Click the :guilabel:`Search` button in the :guilabel:`Query Editor`. \n\n         .. tabs:: \n            :hidden:\n            \n            .. tab:: Bury by Genre \n               :tabid: bury-genre\n\n",
    "language": "json",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-atlas-ui.rst"
  },
  {
    "code": "                  :language: shell\n                  :copyable: true \n                  :linenos:\n\n               .. include:: /includes/extracts/fts-compound-bury-genre-results.rst\n\n            .. tab:: Bury by ID \n               :tabid: bury-id\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-atlas-ui.rst"
  },
  {
    "code": "                  :language: shell\n                  :copyable: true \n                  :linenos:\n\n               .. include:: /includes/extracts/fts-compound-bury-id-results.rst\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-atlas-ui.rst"
  },
  {
    "code": "                  :language: shell \n                  :linenos: \n                  :copyable: false\n\n               .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n            .. tab:: Bury Specified Documents \n               :tabid: bury-id\n\n               .. include:: /includes/fts-tutorial/custom-score/list-table-bury-documents-query.rst\n\n               If you :compass:`enabled </aggregation-pipeline-builder/#set-the-documents-limit-or-auto-preview-documents>` \n               :guilabel:`Auto Preview`, |compass| displays the following \n               documents next to the ``$project`` pipeline stage:\n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-compass.rst"
  },
  {
    "code": "                  :language: shell \n                  :linenos: \n                  :copyable: false\n\n               .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n\n",
    "language": "shell",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-compass.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n            .. include:: /includes/extracts/fts-compound-bury-id-stages.rst\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-cs.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n      .. tabs:: \n            \n         .. tab:: Bury Documents in a Category \n            :tabid: bury-genre\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-cs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run compound-bury-results.csproj\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-category-csharp-results.json\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-cs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run compound-bury-results.csproj\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-documents-csharp-results.json\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n        \n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-cs.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 23\n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n            .. include:: /includes/extracts/fts-compound-bury-id-stages.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-go.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 25\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the command to query your collection.\n\n      .. tabs:: \n            \n         .. tab:: Bury Documents in a Category \n            :tabid: bury-genre\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-go.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  go run compound-bury-results.go\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-category-go-results.sh\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-go.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  go run compound-bury-results.go\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-documents-go-results.sh\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-go.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 39\n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n            .. include:: /includes/extracts/fts-compound-bury-id-stages.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-java.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 43\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``CompoundBuryQuery.java`` file.\n        \n      .. tabs:: \n         :hidden:\n            \n         .. tab:: Bury Documents in a Category \n            :tabid: bury-genre\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-java.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  javac CompoundBuryQuery.java\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-category-java-results.json\n                  :language: json\n\n            .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-java.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  javac CompoundBuryQuery.java\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-documents-java-results.json\n                  :language: json\n\n            .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-java.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 39\n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n            .. include:: /includes/extracts/fts-compound-bury-id-stages.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-kotlin.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 43\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the ``CompoundBuryQuery.kt`` file.\n\n      When you run the ``CompoundBuryQuery.kt`` program in your IDE, it prints\n      the following documents:\n\n      .. tabs:: \n         :hidden:\n            \n         .. tab:: Bury Documents in a Category \n            :tabid: bury-genre\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-kotlin.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run compound-bury-results.csproj\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-category-kotlin-results.js\n                  :language: json\n\n            .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-kotlin.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run compound-bury-results.csproj\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-documents-kotlin-results.js\n                  :language: json\n\n            .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-kotlin.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: js\n\n            use sample_mflix\n\n         .. output:: \n            :language: shell \n\n            switched to db sample_mflix\n\n   .. step:: Run the following |fts| ``compound`` operator queries on the ``movies`` collection.\n\n      .. tabs:: \n            \n         .. tab:: Bury Documents in a Category \n            :tabid: bury-genre\n\n            .. include:: /includes/extracts/fts-compound-bury-category-stages.rst \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-mongosh.rst"
  },
  {
    "code": "               :copyable: true\n                \n               .. input:: /includes/fts-tutorial/custom-score/bury-category-mongosh.json \n                  :language: json\n                  :linenos:\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-category-mongosh-results.sh\n                  :language: shell \n                  :linenos: \n                  :visible: false\n\n            .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n            .. include:: /includes/extracts/fts-compound-bury-id-stages.rst \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-mongosh.rst"
  },
  {
    "code": "               :copyable: true\n                \n               .. input:: /includes/fts-tutorial/custom-score/bury-documents-mongosh.json\n                  :language: json\n                  :linenos:\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-documents-mongosh-results.sh\n                  :language: shell \n                  :linenos: \n                  :visible: false\n\n            .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-mongosh.rst"
  },
  {
    "code": "               :language: js\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n            .. include:: /includes/extracts/fts-compound-bury-id-stages.rst\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-nodejs.rst"
  },
  {
    "code": "               :language: js\n               :linenos:\n               :dedent:\n               :emphasize-lines: 5\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Query your collection.\n\n      Run the following command to query your collection: \n\n      .. tabs:: \n         :hidden:\n            \n         .. tab:: Bury Documents in a Category \n            :tabid: bury-genre\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  node compound-bury-results.js\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-category-nodejs-results.sh\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  node compound-bury-results.js\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-documents-nodejs-results.sh\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-nodejs.rst"
  },
  {
    "code": "               :language: python\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n            .. include:: /includes/extracts/fts-compound-bury-id-stages.rst\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-python.rst"
  },
  {
    "code": "               :language: python\n               :linenos:\n               :dedent:\n               :emphasize-lines: 5\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the command to query your collection.\n\n      .. tabs:: \n         :hidden:\n            \n         .. tab:: Bury Documents in a Category \n            :tabid: bury-genre\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-python.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  python compound-bury-results.csproj\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-category-py-results.sh\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-genre-results.rst \n\n         .. tab:: Bury Specified Documents \n            :tabid: bury-id\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-python.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  python compound-bury-results.csproj\n\n               .. output:: /includes/fts-tutorial/custom-score/bury-documents-py-results.sh\n                  :language: javascript\n\n            .. include:: /includes/extracts/fts-compound-bury-id-results.rst \n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-bury-results-query-python.rst"
  },
  {
    "code": "                   :copyable: true \n\n                   {\n                     mappings: { dynamic: true }\n                   }\n\n      #. Click :guilabel:`Create Search Index`.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-create-index-compass.rst"
  },
  {
    "code": "                  :copyable: true \n                  :linenos: \n\n                  {\n                    \"mappings\": {\n                      \"dynamic\": false,\n                      \"fields\": {\n                        \"title\": [{\n                          \"type\": \"token\",\n                          \"normalizer\": \"lowercase\"\n                        },{\n                          \"type\": \"string\"\n                        }]\n                      }\n                    }\n                  }\n\n            #. Click :guilabel:`Next`.\n\n   .. step:: Click :guilabel:`Create Search Index`.\n\n      A modal window displays to let you know that your index is building.\n\n   .. step:: Close the :guilabel:`You're All Set!` modal window by clicking :guilabel:`Close` and wait for the index to finish building. \n\n      The index should take about one minute to build. While it is\n      building, the :guilabel:`Status` column reads :guilabel:`Initial\n      Sync`. When it is finished building, the :guilabel:`Status` column\n      reads :guilabel:`Active`. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-create-index.rst"
  },
  {
    "code": "                  :copyable: true\n                  :linenos:\n               \n                  {\n                     \"genres\": [ \"Action\", \"Drama\", \"Thriller\" ],\n                     \"title\": \"atomic train\",\n                     \"awards\": { \"wins\": 1, \"nominations\": 1 }\n                  }\n                  \n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-load-data.rst"
  },
  {
    "code": "                  :copyable: true\n                  :linenos:  \n\n                  {\n                     \"genres\": [ \"Animation\", \"Adventure\", \"Family\" ],\n                     \"title\": \"how to train your dragon\",\n                     \"awards\": { \"wins\": 32, \"nominations\": 51 }\n                  }\n\n         .. tab:: mongosh \n            :tabid: mongosh \n\n            a. Click :guilabel:`Connect` for the {+database-deployment+} to which you\n               want to connect. \n\n            #. Select :guilabel:`Shell` and\n               complete the steps to connect to your {+cluster+} through\n               {+mongosh+}.\n\n               To learn more, see :ref:`connect-mongo-shell`.\n\n            #. Switch to the ``sample_mflix`` database in {+mongosh+}. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-load-data.rst"
  },
  {
    "code": "                  :copyable: true\n      \n                  .. input::\n                     :language: shell\n\n                     use sample_mflix\n      \n                  .. output:: \n                     :language: shell\n      \n                     switched to db sample_mflix \n\n            #. Run the following command in {+mongosh+} to load the\n               collection to the selected database:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-load-data.rst"
  },
  {
    "code": "                  :copyable: true\n               \n                  .. input:: /includes/fts-tutorial/case-insensitive/sample-collection.sh\n                     :language: json\n                     :linenos: \n               \n                  .. output:: \n                     :language: shell\n\n                     { acknowledged: true, insertedIds: { '0': 1, '1': 2 } }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-load-data.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: json\n\n            [\n              {\n                \"$search\": {\n                  \"index\": \"sort-tutorial\",\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"train\",\n                  },\n                  \"sort\": {\n                    \"title\": 1\n                  }\n                }\n              }\n            ]\n      \n         .. output:: \n            :language: shell\n                \n            SCORE: 3.317898988723755  _id: \"573a139cf29313caabcf662c\"\n            plot: \"A train filled with atomic devices threatens to destroy the city of De…\"\n            genres: Array\n            runtime: 122\n\n            SCORE: 3.317898988723755  _id: \"64de50ae2932de4dd3203061\"\n            genres: Array\n            title: \"atomic train\"\n            awards: Object\n\n            SCORE: 2.228306293487549  _id: \"573a13bbf29313caabd52ff4\"\n            fullplot: \"Long ago up North on the Island of Berk, the young Viking, Hiccup, wan…\"\n            imdb: Object\n            year: 2010\n                \n            SCORE: 2.228306293487549  _id: \"64de50da2932de4dd3204393\"\n            genres: Array\n            title: \"how to train your dragon\"\n            awards: Object\n\n            SCORE: 2.008449077606201  _id: \"573a13ccf29313caabd83281\"\n            plot: \"When Hiccup and Toothless discover an ice cave that is home to hundred…\"\n            genres: Array\n            runtime: 102\n\n            SCORE: 1.4400973320007324  _id: \"573a13b1f29313caabd36490\"\n            plot: \"The life and times of Howard Zinn: the historian, activist, and author…\"\n            genres: Array\n            runtime: 78\n\n            SCORE: 2.228306293487549  _id: \"573a1394f29313caabce0fb4\"\n            plot: \"A marshal tries to bring the son of an old friend, an autocratic cattl…\"\n            genres: Array\n            runtime: 95\n\n            SCORE: 2.8528976440429688  _id: \"573a13c8f29313caabd78a6b\"\n            plot: \"A couple embarks on a journey home for Chinese new year along with 130…\"\n            genres: Array\n            runtime: 85\n\n            SCORE: 2.502213716506958  _id: \"573a13baf29313caabd50811\"\n            plot: \"Two thugs from the Perth suburb of Midland catch the last train to Fre…\"\n            genres: Array\n            runtime: 89\n\n            SCORE: 2.502213716506958  _id: \"573a13a7f29313caabd1b667\"\n            fullplot: \"A teacher and a gangster meet by chance in a small town pharmacy. As a…\"\n            imdb: Object\n            year: 2002\n\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: false \n                \n         SCORE: 3.317898988723755  _id: \"573a139cf29313caabcf662c\"\n         plot: \"A train filled with atomic devices threatens to destroy the city of De…\"\n         genres: Array\n         runtime: 122\n\n         SCORE: 2.2382168769836426  _id: \"573a13bbf29313caabd52ff4\"\n         fullplot: \"Long ago up North on the Island of Berk, the young Viking, Hiccup, wan…\"\n         imdb: object\n         year: 2010\n\n         SCORE: 2.008449077606201  _id: \"573a13ccf29313caabd83281\"\n         plot: \"When Hiccup and Toothless discover an ice cave that is home to hundred…\"\n         genres: Array\n         runtime: 102\n\n         SCORE: 1.4400973320007324  _id: \"573a13b1f29313caabd36490\"\n         plot: \"The life and times of Howard Zinn: the historian, activist, and author…\"\n         genres: Array\n         runtime: 78\n\n         SCORE: 2.8528976440429688  _id: \"573a13c8f29313caabd78a6b\"\n         plot: \"A couple embarks on a journey home for Chinese new year along with 130…\"\n         genres: Array\n         runtime: 85\n\n         SCORE: 2.228306293487549  _id: \"573a1394f29313caabce0fb4\"\n         plot: \"A marshal tries to bring the son of an old friend, an autocratic cattl…\"\n         genres: Array\n         runtime: 95\n\n         SCORE: 2.502213716506958  _id: \"573a13baf29313caabd50811\"\n         plot: \"Two thugs from the Perth suburb of Midland catch the last train to Fre…\"\n         genres: Array\n         runtime: 89\n\n         SCORE: 2.502213716506958  _id: \"573a13a7f29313caabd1b667\"\n         fullplot: \"A teacher and a gangster meet by chance in a small town pharmacy. As a…\"\n         imdb: Object\n         year: 2002\n\n         SCORE: 3.3326687812805176  _id: \"573a139af29313caabcef573\"\n         plot: \"A vengeful New York transit cop decides to steal a trainload of subway…\"\n         genres: Array\n         runtime: 110\n                \n         SCORE: 3.3326687812805176  _id: \"573a1398f29313caabceb8f2\"\n         plot: \"Three stories are connected by a Memphis hotel and the spirit of Elvis…\"\n         genres: Array\n         runtime: 110\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst \n\n   .. step:: Expand your query results.\n\n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-atlas-ui.rst"
  },
  {
    "code": "                   :copyable: true \n\n                    {\n                      \"index\": \"case-insensitive-sort\",\n                      \"text\": {\n                        \"path\": \"title\",\n                        \"query\": \"train\",\n                      },\n                      \"sort\": {\n                        \"title\": 1,\n                      }\n                    }\n\n            * - ``$limit``\n              - ``5``\n\n            * - ``$project``\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-compass.rst"
  },
  {
    "code": "                   :copyable: true \n\n                   {\n                     \"_id\": 1,\n                     \"title\": 1,\n                     \"awards\": 1,\n                     \"score\": { $meta: \"searchScore\" }\n                   }\n                 \n         If you :compass:`enabled </aggregation-pipeline-builder/#set-the-documents-limit-or-auto-preview-documents>` \n         :guilabel:`Auto Preview`, |compass| displays the following\n         documents next to the ``$project`` pipeline stage: \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-compass.rst"
  },
  {
    "code": "            :copyable: false \n\n            _id: ObjectId('573a139cf29313caabcf662c')\n            title: 'Atomic Train'\n            awards: Object\n            score: 3.317898988723755\n\n            _id:  ObjectId(\"64de50ae2932de4dd3203061\")\n            title: 'atomic train'\n            awards: Object\n            score: 3.317898988723755\n\n            _id: ObjectId('573a13bbf29313caabd52ff4')\n            title: 'How to Train Your Dragon'\n            awards: Object\n            score: 2.228306293487549\n\n            _id: ObjectId(\"64de50da2932de4dd3204393\"),\n            title: 'how to train your dragon'\n            awards: \n            score: 2.228306293487549\n\n            _id: ObjectId('573a13ccf29313caabd83281')\n            title: 'How to Train Your Dragon 2'\n            awards: object\n            score: 2.0173802375793457        \n\n         .. include:: /includes/extracts/fts-normalized-sort-query-results.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-compass.rst"
  },
  {
    "code": "            :copyable: false \n\n            _id: ObjectId('573a139cf29313caabcf662c')\n            title: 'Atomic Train'\n            awards: Object\n            score: 3.317898988723755\n\n            _id: ObjectId('573a13bbf29313caabd52ff4')\n            title: 'How to Train Your Dragon'\n            awards: Object\n            score: 2.228306293487549\n\n            _id: ObjectId('573a13ccf29313caabd83281')\n            title: 'How to Train Your Dragon 2'\n            awards: \n            score: 2.0173802375793457\n\n            _id: ObjectId('573a13b1f29313caabd36490')\n            title: 'Howard Zinn: You Can't Be Neutral on a Moving Train'\n            awards: Object\n            score: 1.446497917175293\n\n            _id: ObjectId('573a13c8f29313caabd78a6b')\n            title: 'Last Train Home'\n            awards: Object\n            score: 2.8655927181243896\n\n         .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst \n\n   .. step:: Expand your query results.\n\n      |compass| might not display all the fields inside objects and all\n      the values inside arrays for the documents it returns in the\n      results. To view all the fields and values, expand the field in\n      the results. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-compass.rst"
  },
  {
    "code": "         :language: csharp\n         :linenos:\n         :dedent:\n         :emphasize-lines: 10, 20\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-cs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n        \n            dotnet run case-insensitive-sort.csproj\n\n         .. output:: \n            :language: javascript\n\n            { \"_id\" : ObjectId(\"573a139cf29313caabcf662c\"), \"title\" : \"Atomic Train\", \"awards\" : { \"wins\" : 1, \"nominations\" : 1 }, \"score\" : 3.3035578727722168 }\n            { \"_id\" : ObjectId(\"64de50ae2932de4dd3203061\"), \"title\" : \"atomic train\", \"awards\" : { \"wins\" : 1, \"nominations\" : 1 }, \"score\" : 3.3035578727722168 }\n            { \"_id\" : ObjectId(\"573a13bbf29313caabd52ff4\"), \"title\" : \"How to Train Your Dragon\", \"awards\" : { \"wins\" : 32, \"nominations\" : 51 }, \"score\" : 2.2186923027038574 }\n            { \"_id\" : ObjectId(\"64de50da2932de4dd3204393\"), \"title\" : \"how to train your dragon\", \"awards\" : { \"wins\" : 32, \"nominations\" : 51 }, \"score\" : 2.2186923027038574 }\n            { \"_id\" : ObjectId(\"573a13ccf29313caabd83281\"), \"title\" : \"How to Train Your Dragon 2\", \"awards\" : { \"wins\" : 18, \"nominations\" : 52 }, \"score\" : 1.9997868537902832 }\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst \n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-cs.rst"
  },
  {
    "code": "         :copyable: false \n\n         { \"_id\" : ObjectId(\"573a139cf29313caabcf662c\"), \"title\" : \"Atomic Train\", \"awards\" : { \"wins\" : 1, \"nominations\" : 1 }, \"score\" : 3.3035225868225098 }\n         { \"_id\" : ObjectId(\"573a13bbf29313caabd52ff4\"), \"title\" : \"How to Train Your Dragon\", \"awards\" : { \"wins\" : 32, \"nominations\" : 51 }, \"score\" : 2.2186522483825684 }\n         { \"_id\" : ObjectId(\"573a13ccf29313caabd83281\"), \"title\" : \"How to Train Your Dragon 2\", \"awards\" : { \"wins\" : 18, \"nominations\" : 52 }, \"score\" : 1.9997482299804688 }\n         { \"_id\" : ObjectId(\"573a13b1f29313caabd36490\"), \"title\" : \"Howard Zinn: You Can't Be Neutral on a Moving Train\", \"awards\" : { \"wins\" : 1, \"nominations\" : 0 }, \"score\" : 1.4338588714599609 }\n         { \"_id\" : ObjectId(\"573a13c8f29313caabd78a6b\"), \"title\" : \"Last Train Home\", \"awards\" : { \"wins\" : 14, \"nominations\" : 9 }, \"score\" : 2.8405368328094482 }\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst \n        \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-cs.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 14, 21\n\n   .. step:: Replace the following in the query and then save the file.\n\n      - ``<connection-string>`` (on line 14) with your |service|\n        connection string. Ensure that your connection string includes\n        your database user's credentials. To learn more, see\n        :ref:`connect-via-driver`. \n      - ``<database-name>`` (on line 21) with the name of the database\n        where you added the collection.\n\n   .. step:: Run the command to query your collection.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-go.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: shell\n            \n            go run case-insensitive-query.go\n      \n         .. output:: \n            :language: javascript\n\n            [{_id ObjectID(\"573a139cf29313caabcf662c\")} {title Atomic Train} {awards [{wins 1} {nominations 1} {text 1 win & 1 nomination.}]} {score 3.317898988723755}]\n            [{_id ObjectId(\"64de50ae2932de4dd3203061\")} {title atomic train} {awards [{wins 1} {nominations 1}]} {score 3.317898988723755}]\n            [{_id ObjectID(\"573a13bbf29313caabd52ff4\")} {title How to Train Your Dragon} {awards [{wins 32} {nominations 51} {text Nominated for 2 Oscars. Another 30 wins & 51 nominations.}]} {score 2.228306293487549}]\n            [{_id ObjectId(\"64de50da2932de4dd3204393\")} {title how to train your dragon} {awards [{wins 32} {nominations 51}]} {score 2.228306293487549}]\n            [{_id ObjectID(\"573a13ccf29313caabd83281\")} {title How to Train Your Dragon 2} {awards [{wins 18} {nominations 52} {text Nominated for 1 Oscar. Another 17 wins & 52 nominations.}]} {score 2.008449077606201}]\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst \n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-go.rst"
  },
  {
    "code": "         :copyable: false \n\n         [{_id ObjectID(\"573a139cf29313caabcf662c\")} {title Atomic Train} {awards [{wins 1} {nominations 1} {text 1 win & 1 nomination.}]} {score 3.3326687812805176}]\n         [{_id ObjectID(\"573a13bbf29313caabd52ff4\")} {title How to Train Your Dragon} {awards [{wins 32} {nominations 51} {text Nominated for 2 Oscars. Another 30 wins & 51 nominations.}]} {score 2.2382168769836426}]\n         [{_id ObjectID(\"573a13ccf29313caabd83281\")} {title How to Train Your Dragon 2} {awards [{wins 18} {nominations 52} {text Nominated for 1 Oscar. Another 17 wins & 52 nominations.}]} {score 2.0173802375793457}]\n         [{_id ObjectID(\"573a13b1f29313caabd36490\")} {title Howard Zinn: You Can't Be Neutral on a Moving Train} {awards [{wins 1} {nominations 0} {text 1 win.}]} {score 1.446497917175293}]\n         [{_id ObjectID(\"573a13c8f29313caabd78a6b\")} {title Last Train Home} {awards [{wins 14} {nominations 9} {text 14 wins & 9 nominations.}]} {score 2.8655927181243896}]\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-go.rst"
  },
  {
    "code": "         :language: java\n         :linenos:\n         :dedent:\n         :emphasize-lines: 24,28\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``CaseInsensitiveQuery.java`` file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-java.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            javac CaseInsensitiveQuery.java\n            java CaseInsensitiveQuery\n        \n         .. output::\n            :language: json\n            :visible: true\n\n            {\"_id\": {\"$oid\": \"573a139cf29313caabcf662c\"}, \"title\": \"Atomic Train\", \"awards\": {\"wins\": 1, \"nominations\": 1, \"text\": \"1 win & 1 nomination.\"}, \"score\": 3.317898988723755}\n            {\"_id\": {\"$oid\": \"64de50ae2932de4dd3203061\"}, \"title\": \"atomic train\", \"awards\": {\"wins\": 1, \"nominations\": 1}, \"score\": 3.317898988723755}\n            {\"_id\": {\"$oid\": \"573a13bbf29313caabd52ff4\"}, \"title\": \"How to Train Your Dragon\", \"awards\": {\"wins\": 32, \"nominations\": 51, \"text\": \"Nominated for 2 Oscars. Another 30 wins & 51 nominations.\"}, \"score\": 2.228306293487549}\n            {\"_id\": {\"$oid\": \"64de50da2932de4dd3204393\"}, \"title\": \"how to train your dragon\", \"awards\": {\"wins\": 32, \"nominations\": 51}, \"score\": 2.228306293487549}\n            {\"_id\": {\"$oid\": \"573a13ccf29313caabd83281\"}, \"title\": \"How to Train Your Dragon 2\", \"awards\": {\"wins\": 18, \"nominations\": 52, \"text\": \"Nominated for 1 Oscar. Another 17 wins & 52 nominations.\"}, \"score\": 2.008449077606201}\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-java.rst"
  },
  {
    "code": "         :copyable: false \n\n         {\"_id\": {\"$oid\": \"573a139cf29313caabcf662c\"}, \"title\": \"Atomic Train\", \"awards\": {\"wins\": 1, \"nominations\": 1, \"text\": \"1 win & 1 nomination.\"}, \"score\": 3.3326687812805176}\n         {\"_id\": {\"$oid\": \"573a13bbf29313caabd52ff4\"}, \"title\": \"How to Train Your Dragon\", \"awards\": {\"wins\": 32, \"nominations\": 51, \"text\": \"Nominated for 2 Oscars. Another 30 wins & 51 nominations.\"}, \"score\": 2.2382168769836426}\n         {\"_id\": {\"$oid\": \"573a13ccf29313caabd83281\"}, \"title\": \"How to Train Your Dragon 2\", \"awards\": {\"wins\": 18, \"nominations\": 52, \"text\": \"Nominated for 1 Oscar. Another 17 wins & 52 nominations.\"}, \"score\": 2.0173802375793457}\n         {\"_id\": {\"$oid\": \"573a13b1f29313caabd36490\"}, \"title\": \"Howard Zinn: You Can't Be Neutral on a Moving Train\", \"awards\": {\"wins\": 1, \"nominations\": 0, \"text\": \"1 win.\"}, \"score\": 1.446497917175293}\n         {\"_id\": {\"$oid\": \"573a13c8f29313caabd78a6b\"}, \"title\": \"Last Train Home\", \"awards\": {\"wins\": 14, \"nominations\": 9, \"text\": \"14 wins & 9 nominations.\"}, \"score\": 2.8655927181243896}\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-java.rst"
  },
  {
    "code": "         :language: kotlin\n         :linenos:\n         :dedent:\n         :emphasize-lines: 10\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the ``CaseInsensitiveQuery.kt`` file.\n\n      When you run the ``CaseInsensitiveQuery.kt`` program in your IDE, it prints\n      the following documents:\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-kotlin.rst"
  },
  {
    "code": "         :copyable: false\n\n         Document{{title=atomic train, awards=Document{{wins=1, nominations=1}}, score=3.3326687812805176}}\n         Document{{title=Atomic Train, awards=Document{{wins=1, nominations=1, text=1 win & 1 nomination.}}, score=3.3326687812805176}}\n         Document{{title=how to train your dragon, awards=Document{{wins=32, nominations=51}}, score=2.2382168769836426}}\n         Document{{title=How to Train Your Dragon, awards=Document{{wins=32, nominations=51, text=Nominated for 2 Oscars. Another 30 wins & 51 nominations.}}, score=2.2382168769836426}}\n         Document{{title=How to Train Your Dragon 2, awards=Document{{wins=18, nominations=52, text=Nominated for 1 Oscar. Another 17 wins & 52 nominations.}}, score=2.0173802375793457}}\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-kotlin.rst"
  },
  {
    "code": "         :copyable: false \n\n         Document{{title=Atomic Train, awards=Document{{wins=1, nominations=1, text=1 win & 1 nomination.}}, score=3.3326687812805176}}\n         Document{{title=How to Train Your Dragon, awards=Document{{wins=32, nominations=51, text=Nominated for 2 Oscars. Another 30 wins & 51 nominations.}}, score=2.2382168769836426}}\n         Document{{title=How to Train Your Dragon 2, awards=Document{{wins=18, nominations=52, text=Nominated for 1 Oscar. Another 17 wins & 52 nominations.}}, score=2.0173802375793457}}\n         Document{{title=Howard Zinn: You Can't Be Neutral on a Moving Train, awards=Document{{wins=1, nominations=0, text=1 win.}}, score=1.446497917175293}}\n         Document{{title=Last Train Home, awards=Document{{wins=14, nominations=9, text=14 wins & 9 nominations.}}, score=2.8655927181243896}}\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-kotlin.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: shell\n\n            use sample_mflix\n      \n         .. output:: \n            :language: shell\n      \n            switched to db sample_mflix\n\n   .. step:: Run an |fts| query against the indexed field and sort the results.\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-desc.rst \n\n      .. include:: /includes/extracts/fts-normalized-sort-query-stages.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-mongosh.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input:: \n            :language: json\n\n            db.movies.aggregate(\n              {\n                \"$search\": {\n                  \"index\": \"case-insensitive-sort\",\n                  \"text\": {\n                    \"path\": \"title\",\n                    \"query\": \"train\",\n                  },\n                  \"sort\": {\n                    \"title\": 1\n                  }\n                }\n              },\n              {\n                \"$limit\": 5\n              },\n              {\n                \"$project\": {\n                  \"_id\": 1,\n                  \"title\": 1,\n                  \"awards\": 1,\n                  \"score\": { $meta: \"searchScore\" }\n                }\n              }\n            )\n      \n         .. output:: \n            :language: javascript\n\n            [\n              {\n                _id: ObjectId(\"573a139cf29313caabcf662c\"),\n                title: 'Atomic Train',\n                awards: { wins: 1, nominations: 1, text: '1 win & 1 nomination.' },\n                score: 3.317898988723755\n              },\n              {\n                _id: ObjectId(\"64de50ae2932de4dd3203061\"),\n                title: 'atomic train',\n                awards: { wins: 1, nominations: 1 },\n                score: 3.317898988723755\n              },\n              {\n                _id: ObjectId(\"573a13bbf29313caabd52ff4\"),\n                title: 'How to Train Your Dragon',\n                awards: {\n                  wins: 32,\n                  nominations: 51,\n                  text: 'Nominated for 2 Oscars. Another 30 wins & 51 nominations.'\n                },\n                score: 2.228306293487549\n              },\n              {\n                _id: ObjectId(\"64de50da2932de4dd3204393\"),\n                title: 'how to train your dragon',\n                awards: { wins: 32, nominations: 51 },\n                score: 2.228306293487549\n              },\n              {\n                _id: ObjectId(\"573a13ccf29313caabd83281\"),\n                title: 'How to Train Your Dragon 2',\n                awards: {\n                  wins: 18,\n                  nominations: 52,\n                  text: 'Nominated for 1 Oscar. Another 17 wins & 52 nominations.'\n                },\n                score: 2.008449077606201\n              }\n            ]\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-mongosh.rst"
  },
  {
    "code": "         :copyable: false \n\n         [\n           {\n             _id: ObjectId(\"573a139cf29313caabcf662c\"),\n             title: 'Atomic Train',\n             awards: { wins: 1, nominations: 1, text: '1 win & 1 nomination.' },\n             score: 3.3326687812805176\n           },\n          {\n             _id: ObjectId(\"573a13bbf29313caabd52ff4\"),\n             title: 'How to Train Your Dragon',\n             awards: {\n               wins: 32,\n               nominations: 51,\n               text: 'Nominated for 2 Oscars. Another 30 wins & 51 nominations.'\n             },\n             score: 2.2382168769836426\n           },\n           {\n             _id: ObjectId(\"573a13ccf29313caabd83281\"),\n             title: 'How to Train Your Dragon 2',\n             awards: {\n               wins: 18,\n              nominations: 52,\n               text: 'Nominated for 1 Oscar. Another 17 wins & 52 nominations.'\n             },\n             score: 2.0173802375793457\n           },\n           {\n             _id: ObjectId(\"573a13b1f29313caabd36490\"),\n             title: \"Howard Zinn: You Can't Be Neutral on a Moving Train\",\n             awards: { wins: 1, nominations: 0, text: '1 win.' },\n             score: 1.446497917175293\n           },\n           {\n             _id: ObjectId(\"573a13c8f29313caabd78a6b\"),\n             title: 'Last Train Home',\n             awards: { wins: 14, nominations: 9, text: '14 wins & 9 nominations.' },\n             score: 2.8655927181243896\n           }\n         ]  \n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-mongosh.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5, 14\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Query your collection.\n\n      Run the following command to query your collection: \n  \n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-nodejs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n     \n            node case-insensitive-query.js\n        \n         .. output::\n            :language: json\n            :visible: true\n\n            {\n              _id: new ObjectId(\"573a139cf29313caabcf662c\"),\n              title: 'Atomic Train',\n              awards: { wins: 1, nominations: 1, text: '1 win & 1 nomination.' },\n              score: 3.317898988723755\n            }\n            {\n              _id: new ObjectId(\"64de50ae2932de4dd3203061\"),\n              title: 'atomic train',\n              awards: { wins: 1, nominations: 1 },\n             score: 3.317898988723755\n            }\n            {\n              _id: new ObjectId(\"573a13bbf29313caabd52ff4\"),\n              title: 'How to Train Your Dragon',\n              awards: {\n                wins: 32,\n                nominations: 51,\n                text: 'Nominated for 2 Oscars. Another 30 wins & 51 nominations.'\n              },\n              score: 2.228306293487549\n            }\n            {\n              _id: new ObjectId(\"64de50da2932de4dd3204393\"),\n              title: 'how to train your dragon',\n              awards: { wins: 32, nominations: 51 },\n              score: 2.228306293487549\n            }\n            {\n              _id: new ObjectId(\"573a13ccf29313caabd83281\"),\n              title: 'How to Train Your Dragon 2',\n              awards: {\n                wins: 18,\n                nominations: 52,\n                text: 'Nominated for 1 Oscar. Another 17 wins & 52 nominations.'\n              },\n              score: 2.008449077606201\n            }\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst \n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-nodejs.rst"
  },
  {
    "code": "         :copyable: false \n\n         {\n           _id: new ObjectId(\"573a139cf29313caabcf662c\"),\n           title: 'Atomic Train',\n           awards: { wins: 1, nominations: 1, text: '1 win & 1 nomination.' },\n           score: 3.3326687812805176\n         }\n         {\n           _id: new ObjectId(\"573a13bbf29313caabd52ff4\"),\n           title: 'How to Train Your Dragon',\n           awards: {\n             wins: 32,\n             nominations: 51,\n             text: 'Nominated for 2 Oscars. Another 30 wins & 51 nominations.'\n           },\n           score: 2.2382168769836426\n         }\n         {\n           _id: new ObjectId(\"573a13ccf29313caabd83281\"),\n           title: 'How to Train Your Dragon 2',\n           awards: {\n             wins: 18,\n             nominations: 52,\n             text: 'Nominated for 1 Oscar. Another 17 wins & 52 nominations.'\n           },\n           score: 2.0173802375793457\n         }\n         {\n           _id: new ObjectId(\"573a13b1f29313caabd36490\"),\n           title: \"Howard Zinn: You Can't Be Neutral on a Moving Train\",\n           awards: { wins: 1, nominations: 0, text: '1 win.' },\n           score: 1.446497917175293\n         }\n         {\n           _id: new ObjectId(\"573a13c8f29313caabd78a6b\"),\n           title: 'Last Train Home',\n           awards: { wins: 14, nominations: 9, text: '14 wins & 9 nominations.' },\n           score: 2.8655927181243896\n         }\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-nodejs.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5, 21\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the command to query your collection.\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-python.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: shell\n           \n            python case-insensitive-query.py\n\n         .. output::\n            :language: json\n            :visible: true\n            \n            {'_id': ObjectId('573a139cf29313caabcf662c'), 'title': 'Atomic Train', 'awards': {'wins': 1, 'nominations': 1, 'text': '1 win & 1 nomination.'}, 'score': 3.317898988723755}\n            {'_id': ObjectId('64de50ae2932de4dd3203061'), 'title': 'atomic train', 'awards': {'wins': 1, 'nominations': 1}, 'score': 3.317898988723755}\n            {'_id': ObjectId('573a13bbf29313caabd52ff4'), 'title': 'How to Train Your Dragon', 'awards': {'wins': 32, 'nominations': 51, 'text': 'Nominated for 2 Oscars. Another 30 wins & 51 nominations.'}, 'score': 2.228306293487549}\n            {'_id': ObjectId('64de50da2932de4dd3204393'), 'title': 'how to train your dragon', 'awards': {'wins': 32, 'nominations': 51}, 'score': 2.228306293487549}\n            {'_id': ObjectId('573a13ccf29313caabd83281'), 'title': 'How to Train Your Dragon 2', 'awards': {'wins': 18, 'nominations': 52, 'text': 'Nominated for 1 Oscar. Another 17 wins & 52 nominations.'}, 'score': 2.008449077606201}\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-results.rst\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-python.rst"
  },
  {
    "code": "         :copyable: false \n\n         {'_id': ObjectId('573a139cf29313caabcf662c'), 'title': 'Atomic Train', 'awards': {'wins': 1, 'nominations': 1, 'text': '1 win & 1 nomination.'}, 'score': 3.3326687812805176}\n         {'_id': ObjectId('573a13bbf29313caabd52ff4'), 'title': 'How to Train Your Dragon', 'awards': {'wins': 32, 'nominations': 51, 'text': 'Nominated for 2 Oscars. Another 30 wins & 51 nominations.'}, 'score': 2.2382168769836426}\n         {'_id': ObjectId('573a13ccf29313caabd83281'), 'title': 'How to Train Your Dragon 2', 'awards': {'wins': 18, 'nominations': 52, 'text': 'Nominated for 1 Oscar. Another 17 wins & 52 nominations.'}, 'score': 2.0173802375793457}\n         {'_id': ObjectId('573a13b1f29313caabd36490'), 'title': \"Howard Zinn: You Can't Be Neutral on a Moving Train\", 'awards': {'wins': 1, 'nominations': 0, 'text': '1 win.'}, 'score': 1.446497917175293}\n         {'_id': ObjectId('573a13c8f29313caabd78a6b'), 'title': 'Last Train Home', 'awards': {'wins': 14, 'nominations': 9, 'text': '14 wins & 9 nominations.'}, 'score': 2.8655927181243896}\n\n      .. include:: /includes/extracts/fts-normalized-sort-query-run-query.rst \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-normalized-sort-run-query-python.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: shell\n\n            use sample_mflix\n      \n         .. output:: \n            :language: shell\n      \n            switched to db sample_mflix\n\n   .. step:: Copy, paste, and run the queries. \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-pagination-run-query-mongosh.rst"
  },
  {
    "code": "         :copyable: true \n      \n         .. input:: \n            :language: json \n      \n            [\n              {\n                \"$search\": {\n                  \"index\": \"geo-json-tutorial\",\n                  \"compound\": {\n                    \"must\": [{\n                      \"geoWithin\": {\n                        \"geometry\": {\n                          \"type\": \"Polygon\",\n                            \"coordinates\": [[[ -161.323242, 22.512557 ],\n                                 [ -152.446289, 22.065278 ],\n                                 [ -156.09375, 17.811456 ],\n                                 [ -161.323242, 22.512557 ]]]\n                        },\n                        \"path\": \"address.location\"\n                      }\n                    }],\n                    \"should\": [{\n                      \"text\": {\n                        \"path\": \"property_type\",\n                        \"query\": \"Condominium\"\n                      }\n                    }]\n                  }\n                }\n              }\n            ]\n      \n         .. output:: \n            :linenos:  \n      \n            SCORE: 2.238388776779175  _id:  \"1001265\"\n              listing_url: \"https://www.airbnb.com/rooms/1001265\"\n              name: \"Ocean View Waikiki Marina w/prkg\"\n              summary: \"A short distance from Honolulu's billion dollar mall,\n              and the same dis…\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Honolulu, HI, United States\"\n                suburb: \"Oʻahu\"\n                government_area: \"Primary Urban Center\"\n                market: \"Oahu\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -157.83919\n                    1: 21.28634\n                  is_location_exact: true\n              ...\n           \n            SCORE: 2.238388776779175  _id:  \"10227000\"\n              listing_url: \"https://www.airbnb.com/rooms/10227000\"\n              name: \"LAHAINA, MAUI! RESORT/CONDO BEACHFRONT!! SLEEPS 4!\"\n              summary: \"THIS IS A VERY SPACIOUS 1 BEDROOM FULL CONDO (SLEEPS 4) AT THE BEAUTIF…\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Lahaina, HI, United States\"\n                suburb: \"Maui\"\n                government_area: \"Lahaina\"\n                market: \"Maui\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -156.68012\n                    1: 20.96996\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"10266175\"\n              listing_url: \"https://www.airbnb.com/rooms/10266175\"\n              name: \"Makaha Valley Paradise with OceanView\"\n              summary: \"A beautiful and comfortable 1 Bedroom Air Conditioned Condo in Makaha …\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Waianae, HI, United States\"\n                suburb: \"Leeward Side\"\n                government_area: \"Waianae\"\n                market: \"Oahu\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -158.20291\n                    1: 21.4818\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"1042446\"\n              listing_url: \"https://www.airbnb.com/rooms/1042446\"\n              name: \"March 2019 availability! Oceanview on Sugar Beach!\"\n              summary: \"\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Kihei, HI, United States\"\n                suburb: \"Maui\"\n                government_area: \"Kihei-Makena\"\n                market: \"Maui\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -156.46881\n                    1: 20.78621\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"10527243\"\n              listing_url: \"https://www.airbnb.com/rooms/10527243\"\n              name: \"Tropical Jungle Oasis\"\n              summary: \"2 bedrooms, one with a queen sized bed, one with 2 single beds. 1 and …\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Hilo, HI, United States\"\n                suburb: \"Island of Hawaiʻi\"\n                government_area: \"South Hilo\"\n                market: \"The Big Island\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -155.09259\n                    1: 19.73108\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"1104768\"\n              listing_url: \"https://www.airbnb.com/rooms/1104768\"\n              name: \"2 Bdrm/2 Bath  Family Suite Ocean View\"\n              summary: \"This breathtaking 180 degree view of Waikiki is one of a kind. You wil…\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Honolulu, HI, United States\"\n                suburb: \"Waikiki\"\n                government_area: \"Primary Urban Center\"\n                market: \"Oahu\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -157.82696\n                    1: 21.27971\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"11207193\"\n              listing_url: \"https://www.airbnb.com/rooms/11207193\"\n              name: \"302 Kanai A Nalu Ocean front/view\"\n              summary: \"Welcome to Kana'i A Nalu a quiet resort that sits on the ocean away fr…\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Wailuku, HI, United States\"\n                suburb: \"Maui\"\n                government_area: \"Kihei-Makena\"\n                market: \"Maui\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -156.5039\n                    1: 20.79664\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"11319047\"\n              listing_url: \"https://www.airbnb.com/rooms/11319047\"\n              name: \"Sugar Beach Resort 1BR Ground Floor Condo !\"\n              summary: \"The Sugar Beach Resort enjoys a beachfront setting fit for a postcard.\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Kihei, HI, United States\"\n                suburb: \"Maui\"\n                government_area: \"Kihei-Makena\"\n                market: \"Maui\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -156.46697\n                    1: 20.78484\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"11695887\"\n              listing_url: \"https://www.airbnb.com/rooms/11695887\"\n              name: \"2 BR Oceanview - Great Location!\"\n              summary: \"Location, location, location... This is a great 2 bed, 2 bath condo is…\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Kihei, HI, United States\"\n                suburb: \"Kihei/Wailea\"\n                government_area: \"Kihei-Makena\"\n                market: \"Maui\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -156.44917\n                    1: 20.73013\n                  is_location_exact: true\n              ...\n      \n            SCORE: 2.238388776779175  _id:  \"11817249\"\n              listing_url: \"https://www.airbnb.com/rooms/11817249\"\n              name: \"PALMS AT WAILEA #905-2BR-REMODELED-LARGE LANAI-AC\"\n              summary: \"Book with confidence this stunning 2 bedroom, 2 bathroom condo at the …\"\n              ...\n              property_type: \"Condominium\"\n              ...\n              address: Object\n                street: \"Kihei, HI, United States\"\n                suburb: \"Maui\"\n                government_area: \"Kihei-Makena\"\n                market: \"Maui\"\n                country: \"United States\"\n                country_code: \"US\"\n                location: Object\n                  type: \"Point\"\n                  coordinates: Array\n                    0: -156.4409\n                    1: 20.69735\n                  is_location_exact: true\n              ...     \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-run-geo-query-atlas-ui.rst"
  },
  {
    "code": "         :copyable: true\n      \n         .. input::\n            :language: json\n      \n            [\n              {\n                $search: {\n                  index: \"default\",\n                  text: {\n                    query: \"baseball\",\n                    path: \"plot\"\n                  }\n                }\n              }\n            ]\n      \n         .. output::\n            :visible: true\n               \n            SCORE: 3.8531038761138916  _id:  \"573a13b3f29313caabd3b409\"\n              fullplot: \"Three guys, all their lives, have been living in the shadow of bullies…\"\n              imdb: Object\n              year: 2006 \n      \n            SCORE: 3.6254453659057617  _id:  \"573a1399f29313caabcee801\"\n              plot: \"A young boy is bequeathed the ownership of a professional baseball tea...\"\n              genres: Array\n              runtime: 119\n      \n            SCORE: 3.6254453659057617  _id:  \"573a139af29313caabcefe18\"\n              plot: \"A trained chimpanzee plays third base for a minor-league baseball team...\"\n              genres: Array\n              runtime: 94\n      \n            SCORE: 3.489243507385254  _id:  \"573a1393f29313caabcdca79\"\n              plot: \"The story of the life and career of the famed baseball player, Lou Geh...\"\n              genres: Array\n              runtime: 128\n      \n            SCORE: 3.489243507385254  _id:  \"573a1399f29313caabcecef1\"\n              plot: \"Babe Ruth becomes a baseball legend but is unheroic to those who know ...\" \n              genres: Array\n              runtime: 115\n            \n            SCORE: 3.4249095916748047  _id:  \"573a1398f29313caabcebccf\"\n              plot: \"Two disquieted junior baseball players seek revenge on the local yakuz…\"\n              genres: Array\n              runtime: 96\n      \n            SCORE: 3.4249095916748047  _id:  \"573a13bdf29313caabd5813d\"\n              plot: \"Dominican baseball star Miguel \"Sugar\" Santos is recruited to play in …\"\n              genres: Array\n              runtime: 114\n      \n            SCORE: 3.3629050254821777  _id:  \"573a139af29313caabcefe79\"\n              plot: \"An all star baseball player becomes the unhealthy focus of a down on h…\"\n              genres: Array\n              runtime: 116\n      \n            SCORE: 3.303105354309082  _id:  \"573a1399f29313caabced370\"\n              plot: \"A fading baseball player is traded to a Japanese team and has trouble …\"\n              genres: Array\n              runtime: 108\n      \n            SCORE: 3.303105354309082  _id:  \"573a13a0f29313caabd05773\"\n              fullplot: \"The story of Baseball Hall-of-Famer Hank Greenberg is told through arc…\"\n              imdb: Object\n              year: 1998\n      \n      To learn more about the :ref:`$search <query-syntax-ref>`\n      pipeline stage, see its reference page. For complete aggregation\n      pipeline documentation, see the :manual:`MongoDB Server Manual\n      </aggregation>`.\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst\n      \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-run-query-atlas-ui.rst"
  },
  {
    "code": "                  :copyable: true \n                  :linenos: \n\n                  {\n                    \"mappings\": {\n                      \"dynamic\": false,\n                      \"fields\": {\n                        \"title\": {\n                          \"type\": \"string\"\n                        },\n                        \"genres\": {\n                          \"type\": \"stringFacet\"\n                        },\n                        \"released\": {\n                          \"type\": \"date\"\n                        }\n                      }\n                    }\n                  }\n\n            #. Click :guilabel:`Next`.\n\n   .. step:: Click :guilabel:`Create Search Index`.\n\n      A modal window displays to let you know that your index is building.\n\n   .. step:: Close the :guilabel:`You're All Set!` modal window by clicking :guilabel:`Close` and wait for the index to finish building. \n\n      The index should take about one minute to build. While it is\n      building, the :guilabel:`Status` column reads :guilabel:`Initial\n      Sync`. When it is finished building, the :guilabel:`Status` column\n      reads :guilabel:`Active`. \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sequential-pagination-index.rst"
  },
  {
    "code": "         :copyable: true \n      \n         .. input::\n            :language: json\n      \n            [\n              {\n                \"$search\": {\n                  \"index\": \"sort-tutorial\",\n                  \"range\": {\n                    \"path\": \"awards.wins\",\n                    \"gte\": 10\n                  },\n                  \"sort\": {\n                    \"awards.wins\": -1,\n                  }\n                }\n              }\n            ]\n            \n         .. output::\n            :visible: true\n            :emphasize-lines: 8, 19, 30, 41, 52, 63, 74, 85, 96, 107\n            \n            SCORE: 1  _id:  \"573a13d5f29313caabd9cae7\"\n              fullplot: \"Based on an incredible true story of one man's fight for survival and …\"\n              imdb: Object\n                ...\n              year: 2013\n              ...\n              awards: Object\n                wins: 267\n                ...\n              ...\n      \n            SCORE: 1  _id:  \"573a13c7f29313caabd74a4d\"\n              fullplot: \"Dr. Ryan Stone (Sandra Bullock) is a brilliant medical engineer on her…\"\n              imdb: Object\n                ...\n              year: 2013\n              ...\n              awards: Object\n                wins: 231\n                ...\n              ...\n      \n            SCORE: 1  _id:  \"573a13cbf29313caabd808d2\"\n              fullplot: \"Dr. Ryan Stone (Sandra Bullock) is a brilliant medical engineer on her…\"\n              imdb: Object\n                ...\n              year: 2013\n              ...\n              awards: Object\n                wins: 231\n                ...\n              ...\n      \n            SCORE: 1  _id:  “573a13dff29313caabdb7adb”\"\n              fullplot: \"Actor Riggan Thomson is most famous for his movie role from over twent…\"\n              imdb: Object\n                ...\n              year: 2014\n              ...\n              awards: Object\n                wins: 210\n                ...\n              ...\n      \n            SCORE: 1  _id:  \"573a13bef29313caabd5c06c\"\n              plot: \"The life of Mason, from early childhood to his arrival at college.\"\n              imdb: Object\n                ...\n              runtime: 165\n              ...\n              awards: Object\n                wins: 185\n                ...\n              ...\n      \n            SCORE: 1  _id:  \"573a139ef29313caabcfbd6a\"\n              fullplot: \"While Frodo & Sam continue to approach Mount Doom to destroy the One R…\"\n              imdb: Object\n                ...\n              year: 2003\n              ...\n              awards: Object\n                wins: 175\n                ...\n              ...\n            \n            SCORE: 1  _id:  \"573a13b5f29313caabd447f5\"\n              plot: \"In rural Texas, welder and hunter Llewelyn Moss discovers the remains …\"\n              imdb: Object\n                ...\n              year: 2007\n              ...\n              awards: Object\n                wins: 172\n                ...\n              ...\n      \n            SCORE: 1  _id:  \"573a13c3f29313caabd68d9f\"\n              plot: \"On a fall night in 2003, Harvard undergrad and computer programming ge…\"\n              imdb: Object\n                ...\n              year: 2010\n              ...\n              awards: Object\n                wins: 171\n                ...\n              ...\n      \n            SCORE: 1  _id:  \"573a13c5f29313caabd6ee61\"\n              fullplot: \"Dom Cobb is a skilled thief, the absolute best in the dangerous art of…\"\n              imdb: Object\n                ...\n              year: 2010\n              ...\n              awards: Object\n                wins: 162\n                ...\n              ...\n      \n            SCORE: 1  _id:  \"573a13bdf29313caabd58fd3\"\n              plot: \"The story of Jamal Malik, an 18 year-old orphan from the slums of Mumb…\"\n              imdb: Object\n                ...\n              year: 2008\n              ...\n              awards: Object\n                wins: 161\n                ...\n              ...\n      \n   .. step:: Expand your query results.\n      \n      .. include:: /includes/fact-fts-expand-search-tester-results.rst  \n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sort-numbers-run-query-atlas-ui.rst"
  },
  {
    "code": "         :language: go\n         :linenos:\n         :dedent:\n         :emphasize-lines: 14\n\n      .. note:: \n      \n         .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sort-numbers-run-query-go.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            go run sort-by-numbers.go\n     \n         .. output::\n            :language: none\n            :visible: true\n\n            [{title 12 Years a Slave} {awards [{wins 267}]}]\n            [{title Gravity} {awards [{wins 231}]}]\n            [{title Gravity} {awards [{wins 231}]}]\n            [{title Birdman: Or (The Unexpected Virtue of Ignorance)} {awards [{wins 210}]}]\n            [{title Boyhood} {awards [{wins 185}]}]\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sort-numbers-run-query-go.rst"
  },
  {
    "code": "         :language: javascript\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5\n\n      .. note::\n      \n         .. include:: /includes/fact-fts-driver-connection-string.rst\n\n   .. step:: Run the following command to query your collection: \n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sort-numbers-run-query-nodejs.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n\n            node sort-by-numbers.js\n\n         .. output::\n            :language: javascript\n            :visible: true\n\n            { title: '12 Years a Slave', awards: { wins: 267 } }\n            { title: 'Gravity', awards: { wins: 231 } }\n            { title: 'Gravity', awards: { wins: 231 } }\n            {\n              title: 'Birdman: Or (The Unexpected Virtue of Ignorance)',\n              awards: { wins: 210 }\n            }\n            { title: 'Boyhood', awards: { wins: 185 } }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sort-numbers-run-query-nodejs.rst"
  },
  {
    "code": "         :language: python\n         :linenos:\n         :dedent:\n         :emphasize-lines: 5\n\n      .. note:: \n        \n         .. include:: /includes/fact-fts-driver-connection-string.rst\n         \n   .. step:: Run the following command to query your collection: \n  \n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sort-numbers-run-query-python.rst"
  },
  {
    "code": "         :copyable: true\n\n         .. input::\n            :language: bash\n        \n            python sort-by-numbers.py\n\n         .. output::\n            :language: python\n            :visible: true\n        \n            {'title': '12 Years a Slave', 'awards': {'wins': 267}}\n            {'title': 'Gravity', 'awards': {'wins': 231}}\n            {'title': 'Gravity', 'awards': {'wins': 231}}\n            {'title': 'Birdman: Or (The Unexpected Virtue of Ignorance)', 'awards': {'wins': 210}}\n            {'title': 'Boyhood', 'awards': {'wins': 185}}\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-tutorial-sort-numbers-run-query-python.rst"
  },
  {
    "code": "                  :copyable: false \n\n                  name: \"XLR8 Mobile\"\n                  number_of_employees: 21\n                  founded_year: 2006\n                  score: 2.0815043449401855\n                  source: \"companies\"\n            \n                  name: \"Pulse Mobile\"\n                  number_of_employees: null\n                  founded_year: null\n                  score: 2.0815043449401855\n                  source: \"companies\"\n\n                  name: \"T-Mobile\"\n                  number_of_employees: null\n                  founded_year: null\n                  score: 2.0815043449401855\n                  source: \"companies\"\n\n                  business_name: \"T. MOBILE\"\n                  address: Object\n                  source: \"inspections\"\n                  score: 2.900916337966919\n\n                  business_name: \"BOOST MOBILE\"\n                  address: Object\n                  source: \"inspections\"\n                  score: 2.900916337966919\n\n                  business_name: \"SPRING MOBILE\"\n                  address: Object\n                  source: \"inspections\"\n                  score: 2.900916337966919\n\n            .. tab:: Facet Example \n               :tabid: facet\n\n               .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst\n\n               .. include:: /includes/fts-tutorial/search-with-unionwith/list-table-compass-facet-query.rst \n                 \n               If you :compass:`enabled </aggregation-pipeline-builder/#set-the-documents-limit-or-auto-preview-documents>` \n               :guilabel:`Auto Preview`, |compass| displays the following\n               documents next to the ``$project`` pipeline stage: \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-run-query-compass.rst"
  },
  {
    "code": "                  :copyable: false \n\n                  allDocs: Array (6)\n                    0: Object\n                      name: \"XLR8 Mobile\"\n                      number_of_employees: 21\n                      founded_year: 2006\n                      score: 3.33040714263916\n                      source: \"companies\"\n                      source_count: 52\n\n                    1: Object\n                      name: \"Pulse Mobile\"\n                      number_of_employees: null\n                      founded_year: null\n                      score: 3.33040714263916\n                      source: \"companies\"\n                      source_count: 52\n\n                    2: Object\n                      name: \"T-Mobile\"\n                      number_of_employees: null\n                      founded_year: null\n                      score: 3.33040714263916\n                      source: \"companies\"\n                      source_count: 52\n\n                    3: Object\n                      business_name: \"T. MOBILE\"\n                      address: Object\n                      score: 2.900916337966919\n                      source: \"inspections\"\n                      source_count: 456\n\n                    4: Object\n                      business_name: \"BOOST MOBILE\"\n                      address: Object\n                      score: 2.900916337966919\n                      source: \"inspections\"\n                      source_count: 456\n\n                    5: Object\n                      business_name: \"SPRING MOBILE\"\n                      address: Object\n                      score: 2.900916337966919\n                      source: \"inspections\"\n                      source_count: 456\n\n                  totalCount: Array (2)\n                    0: Object\n                      _id: \"companies\"\n                      totalCount: 52\n\n                    1: Object\n                      _id: \"inspections\"\n                      totalCount: 456\n\n   .. step:: Expand your query results.\n\n      |compass| might not display all the fields inside objects and all\n      the values inside arrays for the documents it returns in the\n      results. To view all the fields and values, expand the field in\n      the results.  \n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-run-query-compass.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 10\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n            .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst \n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :language: csharp\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Compile and run the ``Program.cs`` file.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Basic Example \n            :tabid: basic\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run search-with-unionwith.csproj\n\n               .. output:: \n                  :language: javascript\n\n                  { \"name\" : \"XLR8 Mobile\", \"number_of_employees\" : 21, \"founded_year\" : 2006, \"score\" : 2.0815043449401855, \"source\" : \"companies\" }\n                  { \"name\" : \"Pulse Mobile\", \"number_of_employees\" : null, \"founded_year\" : null, \"score\" : 2.0815043449401855, \"source\" : \"companies\" }\n                  { \"name\" : \"T-Mobile\", \"number_of_employees\" : null, \"founded_year\" : null, \"score\" : 2.0815043449401855, \"source\" : \"companies\" }\n                  { \"business_name\" : \"T. MOBILE\", \"address\" : { \"city\" : \"BROOKLYN\", \"zip\" : 11209, \"street\" : \"86TH ST\", \"number\" : 440 }, \"source\" : \"inspections\", \"score\" : 2.9009163379669189 }\n                  { \"business_name\" : \"BOOST MOBILE\", \"address\" : { \"city\" : \"BRONX\", \"zip\" : 10458, \"street\" : \"E FORDHAM RD\", \"number\" : 261 }, \"source\" : \"inspections\", \"score\" : 2.9009163379669189 }\n                  { \"business_name\" : \"SPRING MOBILE\", \"address\" : { \"city\" : \"SOUTH RICHMOND HILL\", \"zip\" : 11419, \"street\" : \"LIBERTY AVE\", \"number\" : 12207 }, \"source\" : \"inspections\", \"score\" : 2.9009163379669189 }\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n        \n                  dotnet run search-with-unionwith.csproj\n\n               .. output:: \n                  :language: javascript\n\n                  { \n                    \"allDocs\" : [\n                      { \"name\" : \"XLR8 Mobile\", \"number_of_employees\" : 21, \"founded_year\" : 2006, \"score\" : 3.3304071426391602, \"source\" : \"companies\", \"source_count\" : NumberLong(52) }, \n                      { \"name\" : \"Pulse Mobile\", \"number_of_employees\" : null, \"founded_year\" : null, \"score\" : 3.3304071426391602, \"source\" : \"companies\", \"source_count\" : NumberLong(52) }, \n                      { \"name\" : \"T-Mobile\", \"number_of_employees\" : null, \"founded_year\" : null, \"score\" : 3.3304071426391602, \"source\" : \"companies\", \"source_count\" : NumberLong(52) }, \n                      { \"business_name\" : \"T. MOBILE\", \"address\" : { \"city\" : \"BROOKLYN\", \"zip\" : 11209, \"street\" : \"86TH ST\", \"number\" : 440 }, \"score\" : 2.9009163379669189, \"source\" : \"inspections\", \"source_count\" : NumberLong(456) }, \n                      { \"business_name\" : \"BOOST MOBILE\", \"address\" : { \"city\" : \"BRONX\", \"zip\" : 10458, \"street\" : \"E FORDHAM RD\", \"number\" : 261 }, \"score\" : 2.9009163379669189, \"source\" : \"inspections\", \"source_count\" : NumberLong(456) }, \n                      { \"business_name\" : \"SPRING MOBILE\", \"address\" : { \"city\" : \"SOUTH RICHMOND HILL\", \"zip\" : 11419, \"street\" : \"LIBERTY AVE\", \"number\" : 12207 }, \"score\" : 2.9009163379669189, \"source\" : \"inspections\", \"source_count\" : NumberLong(456) }\n                    ], \n                    \"totalCount\" : [\n                       { \"_id\" : \"companies\", \"totalCount\" : NumberLong(52) }, \n                       { \"_id\" : \"inspections\", \"totalCount\" : NumberLong(456) }\n                    ] \n                  }\n\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-cs.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 16\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n            .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-go.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 16\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`.\n\n   .. step:: Run the command to query your collection.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Basic Example \n            :tabid: basic\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-go.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language: shell\n            \n                  go run search-with-unionwith-query.go\n      \n               .. output:: \n                  :language: javascript\n\n                  [{name XLR8 Mobile} {number_of_employees 21} {founded_year 2006} {score 3.33040714263916} {source companies} {source_count 52}]\n                  [{name Pulse Mobile} {number_of_employees <nil>} {founded_year <nil>} {score 3.33040714263916} {source companies} {source_count 52}]\n                  [{name T-Mobile} {number_of_employees <nil>} {founded_year <nil>} {score 3.33040714263916} {source companies} {source_count 52}]\n                  [{business_name T. MOBILE} {address [{city BROOKLYN} {zip 11209} {street 86TH ST} {number 440}]} {score 2.900916337966919} {source inspections} {source_count 456}]\n                  [{business_name BOOST MOBILE} {address [{city BRONX} {zip 10458} {street E FORDHAM RD} {number 261}]} {score 2.900916337966919} {source inspections} {source_count 456}]\n                  [{business_name SPRING MOBILE} {address [{city SOUTH RICHMOND HILL} {zip 11419} {street LIBERTY AVE} {number 12207}]} {score 2.900916337966919} {source inspections} {source_count 456}]\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-go.rst"
  },
  {
    "code": "               :copyable: true\n      \n               .. input:: \n                  :language: shell\n            \n                  go run search-with-unionwith-query.go\n      \n               .. output:: \n                  :language: javascript\n\n                  [\n                    {allDocs [\n                      [{name XLR8 Mobile} {number_of_employees 21} {founded_year 2006} {score 3.33040714263916} {source companies} {source_count 52}] \n                      [{name Pulse Mobile} {number_of_employees <nil>} {founded_year <nil>} {score 3.33040714263916} {source companies} {source_count 52}] \n                      [{name T-Mobile} {number_of_employees <nil>} {founded_year <nil>} {score 3.33040714263916} {source companies} {source_count 52}] \n                      [{business_name T. MOBILE} {address [{city BROOKLYN} {zip 11209} {street 86TH ST} {number 440}]} {score 2.900916337966919} {source inspections} {source_count 456}] \n                      [{business_name BOOST MOBILE} {address [{city BRONX} {zip 10458} {street E FORDHAM RD} {number 261}]} {score 2.900916337966919} {source inspections} {source_count 456}] \n                      [{business_name SPRING MOBILE} {address [{city SOUTH RICHMOND HILL} {zip 11419} {street LIBERTY AVE} {number 12207}]} {score 2.900916337966919} {source inspections} {source_count 456}]\n                    ]} \n                    {totalCount [\n                      [{_id inspections} {totalCount 456}] \n                      [{_id companies} {totalCount 52}]\n                    ]}\n                  ]\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-go.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 12\n\n         .. tab:: Facet Example\n            :tabid: facet\n\n            .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-java.rst"
  },
  {
    "code": "               :language: java\n               :linenos:\n               :dedent:\n               :emphasize-lines: 9\n\n      .. note:: \n\n         To run the sample code in your Maven environment, add the \n         following code above the import statements in your file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-java.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n\n                  javac SearchWithUnionwithQuery.java\n                  java SearchWithUnionwithQuery\n        \n               .. output::\n                  :language: json\n                  :visible: true\n\n                  {\"name\": \"XLR8 Mobile\", \"number_of_employees\": 21, \"founded_year\": 2006, \"score\": 2.0815043449401855, \"source\": \"companies\"}\n                  {\"name\": \"Pulse Mobile\", \"number_of_employees\": null, \"founded_year\": null, \"score\": 2.0815043449401855, \"source\": \"companies\"}\n                  {\"name\": \"T-Mobile\", \"number_of_employees\": null, \"founded_year\": null, \"score\": 2.0815043449401855, \"source\": \"companies\"}\n                  {\"business_name\": \"T. MOBILE\", \"address\": {\"city\": \"BROOKLYN\", \"zip\": 11209, \"street\": \"86TH ST\", \"number\": 440}, \"source\": \"inspections\", \"score\": 2.900916337966919}\n                  {\"business_name\": \"BOOST MOBILE\", \"address\": {\"city\": \"BRONX\", \"zip\": 10458, \"street\": \"E FORDHAM RD\", \"number\": 261}, \"source\": \"inspections\", \"score\": 2.900916337966919}\n                  {\"business_name\": \"SPRING MOBILE\", \"address\": {\"city\": \"SOUTH RICHMOND HILL\", \"zip\": 11419, \"street\": \"LIBERTY AVE\", \"number\": 12207}, \"source\": \"inspections\", \"score\": 2.900916337966919}\n\n         .. tab:: Facet Example\n            :tabid: facet\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-java.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n\n                  javac SearchWithUnionwithQuery.java\n                  java SearchWithUnionwithQuery\n        \n               .. output::\n                  :language: json\n                  :visible: true\n\n                  {\n                    \"allDocs\": [\n                      {\"name\": \"XLR8 Mobile\", \"number_of_employees\": 21, \"founded_year\": 2006, \"score\": 3.33040714263916, \"source\": \"companies\", \"source_count\": 52}, \n                      {\"name\": \"Pulse Mobile\", \"number_of_employees\": null, \"founded_year\": null, \"score\": 3.33040714263916, \"source\": \"companies\", \"source_count\": 52}, \n                      {\"name\": \"T-Mobile\", \"number_of_employees\": null, \"founded_year\": null, \"score\": 3.33040714263916, \"source\": \"companies\", \"source_count\": 52}, \n                      {\"business_name\": \"T. MOBILE\", \"address\": {\"city\": \"BROOKLYN\", \"zip\": 11209, \"street\": \"86TH ST\", \"number\": 440}, \"score\": 2.900916337966919, \"source\": \"inspections\", \"source_count\": 456}, \n                      {\"business_name\": \"BOOST MOBILE\", \"address\": {\"city\": \"BRONX\", \"zip\": 10458, \"street\": \"E FORDHAM RD\", \"number\": 261}, \"score\": 2.900916337966919, \"source\": \"inspections\", \"source_count\": 456}, \n                      {\"business_name\": \"SPRING MOBILE\", \"address\": {\"city\": \"SOUTH RICHMOND HILL\", \"zip\": 11419, \"street\": \"LIBERTY AVE\", \"number\": 12207}, \"score\": 2.900916337966919, \"source\": \"inspections\", \"source_count\": 456}\n                    ], \n                    \"totalCount\": [\n                      {\"_id\": \"companies\", \"totalCount\": 52}, \n                      {\"_id\": \"inspections\", \"totalCount\": 456}\n                    ]\n                  }\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-java.rst"
  },
  {
    "code": "               :language: kotlin\n               :linenos:\n               :dedent:\n               :emphasize-lines: 7\n\n         .. tab:: Facet Example\n            :tabid: facet\n\n            .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :language: kotlin\n               :linenos:\n               :dedent:\n               :emphasize-lines: 8\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`.\n\n   .. step:: Run the ``SearchWithUnionwithQuery.kt`` file.\n\n      .. tabs:: \n         :hidden:\n\n         .. tab:: Basic Example\n            :tabid: basic\n\n            When you run the ``SearchWithUnionwithQuery.kt`` program in your IDE, it prints\n            the following documents:\n\n",
    "language": "kotlin",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :copyable: false\n\n               Document{{name=XLR8 Mobile, number_of_employees=21, founded_year=2006, score=2.0815043449401855, source=companies}}\n               Document{{name=Pulse Mobile, number_of_employees=null, founded_year=null, score=2.0815043449401855, source=companies}}\n               Document{{name=Mobile Trend, number_of_employees=null, founded_year=2003, score=2.0815043449401855, source=companies}}\n               Document{{business_name=T-MOBILE, address=Document{{city=BROOKLYN, zip=11229, street=AVENUE U, number=1616}}, source=inspections, score=2.900916337966919}}\n               Document{{business_name=BOOST MOBILE, address=Document{{city=BRONX, zip=10458, street=E FORDHAM RD, number=261}}, source=inspections, score=2.900916337966919}}\n               Document{{business_name=SPRING MOBILE, address=Document{{city=SOUTH RICHMOND HILL, zip=11419, street=LIBERTY AVE, number=12207}}, source=inspections, score=2.900916337966919}}\n\n         .. tab:: Facet Example\n            :tabid: facet\n\n            When you run the ``SearchWithUnionwithQuery.kt`` program in your IDE, it prints\n            the following result:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :copyable: false\n\n               Document{{allDocs=[Document{{name=XLR8 Mobile,\n               number_of_employees=21, founded_year=2006,\n               score=3.33040714263916, source=companies,\n               source_count=52}}, Document{{name=Pulse Mobile,\n               number_of_employees=null, founded_year=null,\n               score=3.33040714263916, source=companies,\n               source_count=52}}, Document{{name=Mobile Trend,\n               number_of_employees=null, founded_year=2003,\n               score=3.33040714263916, source=companies,\n               source_count=52}}, Document{{business_name=T-MOBILE,\n               address=Document{{city=BROOKLYN, zip=11229, street=AVENUE\n               U, number=1616}}, score=2.900916337966919,\n               source=inspections, source_count=456}},\n               Document{{business_name=BOOST MOBILE,\n               address=Document{{city=BRONX, zip=10458, street=E FORDHAM\n               RD, number=261}}, score=2.900916337966919,\n               source=inspections, source_count=456}},\n               Document{{business_name=SPRING MOBILE,\n               address=Document{{city=SOUTH RICHMOND HILL, zip=11419,\n               street=LIBERTY AVE, number=12207}},\n               score=2.900916337966919, source=inspections,\n               source_count=456}}],\n               totalCount=[Document{{_id=inspections, totalCount=456}},\n               Document{{_id=companies, totalCount=52}}]}}\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-kotlin.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 44\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n            .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 59\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Query your collection.\n\n      Run the following command to query your collection: \n  \n      .. tabs:: \n         :hidden:\n\n         .. tab:: Basic Example \n            :tabid: basic\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  node unionwith-with-search-query.js\n        \n               .. output::\n                  :language: js\n                  :visible: true\n\n                  {\n                    name: 'SoftBank Mobile',\n                    number_of_employees: null,\n                    founded_year: null,\n                    score: 2.0815043449401855,\n                    source: 'companies'\n                  }\n                  {\n                    name: 'Mobile Factory',\n                    number_of_employees: 53,\n                    founded_year: 2001,\n                    score: 2.0815043449401855,\n                    source: 'companies'\n                  }\n                  {\n                    name: 'ZOOZ Mobile',\n                    number_of_employees: 5,\n                    founded_year: 2008,\n                    score: 2.0815043449401855,\n                    source: 'companies'\n                  }\n                  {\n                    business_name: 'T. MOBILE',\n                    address: { city: 'BROOKLYN', zip: 11209, street: '86TH ST', number: 440 },\n                    source: 'inspections',\n                    score: 2.900916337966919\n                  }\n                  {\n                    business_name: 'BOOST MOBILE',\n                    address: { city: 'BRONX', zip: 10458, street: 'E FORDHAM RD', number: 261 },\n                    source: 'inspections',\n                    score: 2.900916337966919\n                  }\n                  {\n                    business_name: 'T-MOBILE',\n                    address: { city: 'BROOKLYN', zip: 11229, street: 'AVENUE U', number: 1616 },\n                    source: 'inspections',\n                    score: 2.900916337966919\n                  }\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :copyable: true\n\n               .. input::\n                  :language: bash\n     \n                  node unionwith-with-search-query.js\n        \n               .. output::\n                  :language: js\n                  :visible: true\n\n                  {\n                    allDocs: [\n                      {\n                        name: 'XLR8 Mobile',\n                        number_of_employees: 21,\n                        founded_year: 2006,\n                        score: 3.33040714263916,\n                        source: 'companies',\n                        source_count: 52\n                      },\n                      {\n                        name: 'Pulse Mobile',\n                        number_of_employees: null,\n                        founded_year: null,\n                        score: 3.33040714263916,\n                        source: 'companies',\n                        source_count: 52\n                      },\n                      {\n                        name: 'T-Mobile',\n                        number_of_employees: null,\n                        founded_year: null,\n                        score: 3.33040714263916,\n                        source: 'companies',\n                        source_count: 52\n                      },\n                      {\n                        business_name: 'T. MOBILE',\n                        address: [Object],\n                        score: 2.900916337966919,\n                        source: 'inspections',\n                        source_count: 456\n                      },\n                      {\n                        business_name: 'BOOST MOBILE',\n                        address: [Object],\n                        score: 2.900916337966919,\n                        source: 'inspections',\n                        source_count: 456\n                      },\n                      {\n                        business_name: 'SPRING MOBILE',\n                        address: [Object],\n                        score: 2.900916337966919,\n                        source: 'inspections',\n                        source_count: 456\n                      }\n                    ],\n                    totalCount: [\n                      { _id: 'companies', totalCount: 52 },\n                      { _id: 'inspections', totalCount: 456 }\n                    ]\n                  }\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-nodejs.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n            .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-python.rst"
  },
  {
    "code": "               :language: go\n               :linenos:\n               :dedent:\n               :emphasize-lines: 4\n\n   .. step:: Replace the ``<connection-string>`` in the query and then save the file.\n\n      Ensure that your connection string includes your database user's\n      credentials. To learn more, see :ref:`connect-via-driver`. \n\n   .. step:: Run the command to query your collection.\n\n      .. tabs::\n         :hidden: \n\n         .. tab:: Basic Example \n            :tabid: basic\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n           \n                  python search-with-unionwith-query.py\n\n               .. output::\n                  :language: json\n                  :visible: true\n            \n                  {'name': 'XLR8 Mobile', 'number_of_employees': 21, 'founded_year': 2006, 'score': 2.0815043449401855, 'source': 'companies'}\n                  {'name': 'Pulse Mobile', 'number_of_employees': None, 'founded_year': None, 'score': 2.0815043449401855, 'source': 'companies'}\n                  {'name': 'T-Mobile', 'number_of_employees': None, 'founded_year': None, 'score': 2.0815043449401855, 'source': 'companies'}\n                  {'business_name': 'T. MOBILE', 'address': {'city': 'BROOKLYN', 'zip': 11209, 'street': '86TH ST', 'number': 440}, 'source': 'inspections', 'score': 2.900916337966919}\n                  {'business_name': 'BOOST MOBILE', 'address': {'city': 'BRONX', 'zip': 10458, 'street': 'E FORDHAM RD', 'number': 261}, 'source': 'inspections', 'score': 2.900916337966919}\n                  {'business_name': 'SPRING MOBILE', 'address': {'city': 'SOUTH RICHMOND HILL', 'zip': 11419, 'street': 'LIBERTY AVE', 'number': 12207}, 'source': 'inspections', 'score': 2.900916337966919}\n\n         .. tab:: Facet Example \n            :tabid: facet\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-python.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: shell\n           \n                  python search-with-unionwith-query.py\n\n               .. output::\n                  :language: json\n                  :visible: true\n\n                  {\n                    'allDocs': [\n                      {'name': 'XLR8 Mobile', 'number_of_employees': 21, 'founded_year': 2006, 'score': 3.33040714263916, 'source': 'companies', 'source_count': 52}, \n                      {'name': 'Pulse Mobile', 'number_of_employees': None, 'founded_year': None, 'score': 3.33040714263916, 'source': 'companies', 'source_count': 52}, \n                      {'name': 'T-Mobile', 'number_of_employees': None, 'founded_year': None, 'score': 3.33040714263916, 'source': 'companies', 'source_count': 52}, \n                      {'business_name': 'T. MOBILE', 'address': {'city': 'BROOKLYN', 'zip': 11209, 'street': '86TH ST', 'number': 440}, 'score': 2.900916337966919, 'source': 'inspections', 'source_count': 456}, \n                      {'business_name': 'BOOST MOBILE', 'address': {'city': 'BRONX', 'zip': 10458, 'street': 'E FORDHAM RD', 'number': 261}, 'score': 2.900916337966919, 'source': 'inspections', 'source_count': 456}, \n                      {'business_name': 'SPRING MOBILE', 'address': {'city': 'SOUTH RICHMOND HILL', 'zip': 11419, 'street': 'LIBERTY AVE', 'number': 12207}, 'score': 2.900916337966919, 'source': 'inspections', 'source_count': 456}\n                    ], \n                    'totalCount': [\n                      {'_id': 'companies', 'totalCount': 52}, \n                      {'_id': 'inspections', 'totalCount': 456}\n                    ]\n                  }\n\n",
    "language": "go",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query-python.rst"
  },
  {
    "code": "         :copyable: true \n\n         .. input:: \n            :language: sh\n\n            use sample_training \n\n         .. output:: \n            :language: sh \n\n            switched to db sample_training\n\n   .. step:: Run the following :pipeline:`$unionWith` with an |fts| :pipeline:`$search` query.\n\n      .. include:: /includes/extracts/search-with-unionwith-query-desc.rst\n\n      .. tabs:: \n\n         .. tab:: Basic Example \n            :tabid: basic\n\n            .. include:: /includes/extracts/search-with-unionwith-basic-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: json\n\n                  db.companies.aggregate([\n                  {\n                    \"$search\": {\n                      \"text\": {\n                        \"query\": \"Mobile\", \n                        \"path\": \"name\"\n                      }\n                    }\n                  }, {\n                    \"$project\": {\n                      \"score\": {\n                        \"$meta\": \"searchScore\"\n                      },\n                      \"_id\": 0,\n                      \"number_of_employees\": 1,\n                      \"founded_year\": 1,\n                      \"name\": 1\n                    }\n                  }, {\n                    \"$set\": {\n                      \"source\": \"companies\"\n                    }\n                  }, {\n                    \"$limit\": 3\n                  }, {\n                    \"$unionWith\": {\n                      \"coll\": \"inspections\", \n                      \"pipeline\": [\n                        {\n                          \"$search\": {\n                            \"text\": {\n                              \"query\": \"Mobile\", \n                              \"path\": \"business_name\"\n                            }\n                          }\n                        }, {\n                          \"$set\": {\n                            \"source\": \"inspections\"\n                          }\n                        }, {\n                          \"$project\": {\n                            \"score\": {\n                              \"$meta\": \"searchScore\"\n                            }, \n                            \"source\": 1,\n                            \"_id\": 0,\n                            \"business_name\": 1,\n                            \"address\": 1\n                          }\n                        },  {\n                          \"$limit\": 3\n                        }, {\n                          \"$sort\": {\n                            \"score\": -1\n                          }\n                        }\n                      ]\n                    }\n                  }\n                  ])\n\n               .. output::\n                  :language: json\n\n                  [\n                    {\n                      name: 'XLR8 Mobile',\n                      number_of_employees: 21,\n                      founded_year: 2006,\n                      score: 2.0815043449401855,\n                      source: 'companies'\n                    },\n                    {\n                      name: 'Pulse Mobile',\n                      number_of_employees: null,\n                      founded_year: null,\n                      score: 2.0815043449401855,\n                      source: 'companies'\n                    },\n                    {\n                      name: 'T-Mobile',\n                      number_of_employees: null,\n                      founded_year: null,\n                      score: 2.0815043449401855,\n                      source: 'companies'\n                    },\n                    {\n                      business_name: 'T. MOBILE',\n                      address: { city: 'BROOKLYN', zip: 11209, street: '86TH ST', number: 440 },\n                      score: 2.900916337966919,\n                      source: 'inspections'\n                    },\n                    {\n                      business_name: 'BOOST MOBILE',\n                      address: { city: 'BRONX', zip: 10458, street: 'E FORDHAM RD', number: 261 },\n                      score: 2.900916337966919,\n                      source: 'inspections'\n                    },\n                    {\n                      business_name: 'SPRING MOBILE',\n                      address: {\n                        city: 'SOUTH RICHMOND HILL',\n                        zip: 11419,\n                        street: 'LIBERTY AVE',\n                        number: 12207\n                      },\n                      score: 2.900916337966919,\n                      source: 'inspections'\n                    }\n                  ]\n\n         .. tab:: Facet Example \n            :tabid: facet \n\n            .. include:: /includes/extracts/search-with-unionwith-facet-query-desc.rst\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query.rst"
  },
  {
    "code": "               :copyable: true \n\n               .. input:: \n                  :language: json\n\n                  db.companies.aggregate([\n                  {\n                    \"$search\": {\n                      \"text\": {\n                        \"query\": \"mobile\", \n                        \"path\": \"name\", \n                        \"score\": {\n                          \"boost\": {\n                            \"value\": 1.6\n                          }\n                        }\n                      }\n                    }\n                  }, {\n                    \"$project\": {\n                      \"score\": {\n                        \"$meta\": \"searchScore\"\n                      },\n                      \"_id\": 0,\n                      \"number_of_employees\": 1,\n                      \"founded_year\": 1,\n                      \"name\": 1\n                    }\n                  }, {\n                    \"$addFields\": {\n                      \"source\": \"companies\", \n                      \"source_count\": \"$$SEARCH_META.count.lowerBound\"\n                    }\n                  }, {\n                    \"$limit\": 3\n                  }, {\n                    \"$unionWith\": {\n                      \"coll\": \"inspections\", \n                      \"pipeline\": [\n                        {\n                          \"$search\": {\n                            \"text\": {\n                              \"query\": \"mobile\", \n                              \"path\": \"business_name\"\n                            }\n                          }\n                        }, {\n                          \"$project\": {\n                            \"score\": {\n                              \"$meta\": \"searchScore\"\n                            }, \n                            \"business_name\": 1, \n                            \"address\": 1,\n                            \"_id\": 0\n                          }\n                        }, {\n                          \"$limit\": 3\n                        }, {\n                          \"$set\": {\n                            \"source\": \"inspections\", \n                            \"source_count\": \"$$SEARCH_META.count.lowerBound\"\n                          }\n                        }, {\n                          \"$sort\": {\n                            \"score\": -1\n                          }\n                        }\n                      ]\n                    }\n                  }, {\n                    \"$facet\": {\n                      \"allDocs\": [], \n                      \"totalCount\": [\n                        {\n                          \"$group\": {\n                            \"_id\": \"$source\", \n                            \"firstCount\": {\n                              \"$first\": \"$source_count\"\n                            }\n                          }\n                        }, {\n                          \"$project\": {\n                            \"totalCount\": {\n                              \"$sum\": \"$firstCount\"\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }               \n                  ])\n\n               .. output::\n                  :language: json\n\n                  [\n                    {\n                      allDocs: [\n                        {\n                          name: 'XLR8 Mobile',\n                          number_of_employees: 21,\n                          founded_year: 2006,\n                          score: 3.33040714263916,\n                          source: 'companies',\n                          source_count: Long(\"52\")\n                        },\n                        {\n                          name: 'Pulse Mobile',\n                          number_of_employees: null,\n                          founded_year: null,\n                          score: 3.33040714263916,\n                          source: 'companies',\n                          source_count: Long(\"52\")\n                        },\n                        {\n                          name: 'T-Mobile',\n                          number_of_employees: null,\n                          founded_year: null,\n                          score: 3.33040714263916,\n                          source: 'companies',\n                          source_count: Long(\"52\")\n                        },\n                        {\n                          business_name: 'T. MOBILE',\n                          address: {\n                            city: 'BROOKLYN',\n                            zip: 11209,\n                            street: '86TH ST',\n                            number: 440\n                          },\n                          score: 2.900916337966919,\n                          source: 'inspections',\n                          source_count: Long(\"456\")\n                        },\n                        {\n                          business_name: 'BOOST MOBILE',\n                          address: {\n                            city: 'BRONX',\n                            zip: 10458,\n                            street: 'E FORDHAM RD',\n                            number: 261\n                          },\n                          score: 2.900916337966919,\n                          source: 'inspections',\n                          source_count: Long(\"456\")\n                        },\n                        {\n                          business_name: 'SPRING MOBILE',\n                          address: {\n                            city: 'SOUTH RICHMOND HILL',\n                            zip: 11419,\n                            street: 'LIBERTY AVE',\n                            number: 12207\n                          },\n                          score: 2.900916337966919,\n                          source: 'inspections',\n                          source_count: Long(\"456\")\n                        }\n                      ],\n                      totalCount: [\n                        { _id: 'companies', totalCount: Long(\"52\") },\n                        { _id: 'inspections', totalCount: Long(\"456\") }\n                      ]\n                    }\n                  ]\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-unionwith-tutorial-run-query.rst"
  },
  {
    "code": "         :language: c\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to retrieve the indexes.\n\n   .. step:: Compile and run the file by using the following commands.\n\n",
    "language": "c",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-c.rst"
  },
  {
    "code": "   :caption: Program.cs\n   :language: csharp\n   :copyable:\n\nTo run the sample application, create a new .NET console project named\n``csharp-list-indexes`` and copy the previous code example into the \n``Program.cs`` file. Then, use the following command to run the project:\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-csharp.rst"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: shell\n\n      dotnet run csharp-list-indexes.csproj\n\n   .. output::\n\n      <indexes for this collection>\n\n.. tip:: API Documentation\n\n   To learn more about the methods on this page, see the \n   `API documentation <https://mongodb.github.io/mongo-csharp-driver/2.21/apidocs/html/Methods_T_MongoDB_Driver_Search_IMongoSearchIndexManager.htm>`__\n   for the .NET/C# driver.\n",
    "language": "csharp",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-csharp.rst"
  },
  {
    "code": "         :language: cpp\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to retrieve the indexes.\n\n   .. step:: Compile and run the file using the following commands.\n\n",
    "language": "cpp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-cxx.rst"
  },
  {
    "code": "         :language: java\n         :copyable: true \n         :linenos: \n         :emphasize-lines: 10, 13-14\n\n   .. step:: Replace the following values and then save the file.\n\n      - ``<connection-string>`` - Your |service| connection string. To\n        learn more, see :ref:`connect-via-driver`.\n      - ``<database-name>`` - The name of the database that contains the\n        collection. \n      - ``<collection-name>`` - The name of the collection for which you\n        want to retrieve the index. \n\n   .. step:: Compile and run the file.\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-java.rst"
  },
  {
    "code": "   :caption: list-indexes.js\n   :language: javascript\n   :copyable:\n\nTo run the sample application, use the following command.\nYour results should resemble the example output:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-node.rst"
  },
  {
    "code": "   :copyable: true\n\n   .. input::\n      :language: shell\n\n      node list-indexes.js\n\n   .. output::\n      :language: json\n\n      [\n         {\n            id: '648b4ad4d697b73bf9d2e5e0',\n            name: 'default',\n            status: 'READY',\n            queryable: true,\n            latestDefinition: { mappings: { dynamic: true } }\n         },\n         {\n            id: '648b4ad4d697b73bf9d2e5e1',\n            name: 'example-index',\n            status: 'PENDING',\n            queryable: false,\n            latestDefinition: {\n               mappings: { dynamic: false, fields: { text: { type: 'string' } } }\n            }\n         }\n      ]\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-node.rst"
  },
  {
    "code": "         :language: python\n         :copyable: true\n\n   .. step:: Specify the following values and save the file.\n\n      - Your |service| connection string. To learn more, see :ref:`connect-via-driver`.\n      - The database and collection for which you want to retrieve the indexes.\n\n   .. step:: Run the file by using the following command.\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-python.rst"
  },
  {
    "code": "   :copyable: true \n\n   .. input::\n      :language: shell\n\n      db.movies.getSearchIndexes(\"default\")\n\n   .. output::\n      :language: json\n\n      [\n         {\n            id: '648b4ad4d697b73bf9d2e5e0',\n            name: 'default',\n            status: 'READY',\n            queryable: true,\n            latestDefinition: { mappings: { dynamic: true } }\n         }\n      ]\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-fts-view-index-shell.rst"
  },
  {
    "code": "         :language: javascript\n\n      For example, your code may include the following lines that\n      specify a database named ``synthetic-data-db`` and\n      a collection named ``synthetic-data-collection``:\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-generate-synthetic-data.rst"
  },
  {
    "code": "         :copyable: false\n      \n         MongoDB Enterprise GettingStarted-shard-0:PRIMARY>\n      \n      .. important:: Connection Troubleshooting\n      \n         If you are having trouble connecting to your cluster, double check\n         that you have added your IP address to your :ref:`IP access list\n         <gswa-access-list>` and that you are specifying the correct\n         :ref:`database user credentials <gswa-user>`. If you have\n         forgotten your database user credentials, you can always\n         :ref:`create a new database user <mongodb-users>`.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-getting-started-shell-connect.rst"
  },
  {
    "code": "         :copyable: false\n      \n         0.14.0    \n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-getting-started-shell-install.rst"
  },
  {
    "code": "            :language: csharp\n            :linenos:\n            :emphasize-lines: 7\n      \n      #. To run your application, use the following command:\n      \n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-gswa-driver-connect-csharp.rst"
  },
  {
    "code": "            :language: go\n            :linenos:\n            :emphasize-lines: 15\n      \n      #. To run your application, use the following command:\n         \n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-gswa-driver-connect-go.rst"
  },
  {
    "code": "         :language: java\n         :linenos:\n         :emphasize-lines: 16\n      \n      Compile and run the ``Connect.java`` file by using\n      an IDE or the following commands:\n      \n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-gswa-driver-connect-java.rst"
  },
  {
    "code": "         :language: javascript\n         :linenos:\n         :emphasize-lines: 4\n      \n      To run the sample application, use the following command:\n      \n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-gswa-driver-connect-node.rst"
  },
  {
    "code": "                  :copyable: false\n      \n                  mongodb-site-verification=<32-character string>\n      \n            #. Log in to your domain name provider (such as GoDaddy.com or\n               networksolutions.com).\n      \n            #. Add the TXT record that |service| provides to your domain.\n      \n            #. Return to |service| and click :guilabel:`Finish`.\n      \n   .. step:: Verify your domain.\n      \n      The :guilabel:`Domains` screen displays both unverified and verified\n      domains you've mapped to your |idp|. To verify your domain, click the\n      target domain's :guilabel:`Verify` button. |service| shows whether\n      the verification succeeded in a banner at the top of the screen.\n      \n",
    "language": "ini",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-manage-domain-mapping.rst"
  },
  {
    "code": "            :copyable: false\n      \n            mongodb://<db_username>:<db_password>@\n            00.foo.mongodb.net:27017,\n            01.foo.mongodb.net:27017,\n            02.foo.mongodb.net:27017/test?\n            ssl=true&replicaSet=myAtlasRS&authSource=admin\n      \n      #. In a text editor, paste the value of ``replicaSet``, add a forward slash \n         (``/``), and then append the host list as comma-separated values, as shown \n         in the following example:\n      \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-migrate-using-mongomirror-run.rst"
  },
  {
    "code": "            :copyable: false\n      \n            myAtlasRS/00.foo.mongodb.net:27017,01.foo.mongodb.net:27017,02.foo.mongodb.net:27017\n      \n      Use this value for :option:`--destination <--destination>` in the next step.\n      \n   .. step:: Start ``mongomirror``.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-migrate-using-mongomirror-run.rst"
  },
  {
    "code": "                :copyable: false\n      \n                mongorestore --uri \"mongodb://username:password@00.foo.mongodb.net:27017,01.foo.mongodb.net:27017,02.foo.mongodb.net:27017/?replicaSet=myRepl&authSource=admin\" \\\n                             --archive \\\n                             --ssl \\\n                             --nsExclude \"admin.system.*\"\n      \n          .. tab:: With a DNS seed list connection string\n             :tabid: dns_seed_list_connection\n      \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-migrate-using-mongorestore.rst"
  },
  {
    "code": "                :copyable: false\n      \n                mongorestore --uri \"mongodb+srv://username:password@cluster1.example.mongodb.net\" \\\n                             --archive \\\n                             --nsExclude \"admin.system.*\"\n      \n   .. step:: Run |mongodump| and |mongorestore|.\n      \n      .. important::\n      \n         Ensure that the host where you are running |mongodump| and\n         |mongorestore| is in the project :ref:`IP Access List\n         <security-ip-access-list>`.\n      \n         To review your project IP access list, click :guilabel:`Network\n         Access` in the :guilabel:`Security` section of the sidebar. The\n         :guilabel:`IP Access List` tab displays. To learn more, see :ref:`security-ip-access-list`. \n      \n      In your preferred text editor, use the pipe ``|`` operator to\n      separate the |mongodump| and |mongorestore| commands. Based on the type of connection string you use, the final\n      command should resemble one of the following:\n      \n      .. tabs::\n      \n         .. tab:: With a standard connection string\n            :tabid: standard_connection\n      \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-migrate-using-mongorestore.rst"
  },
  {
    "code": "         :caption: mongodump Syntax \n\n         mongodump --archive=\"archive file name\" --db=\"db name\"\n\n      To learn more, see the following resources: \n      \n      - :binary:`~bin.mongodump`\n      - :dbtools:`Example </mongodump/mongodump-examples/#output-to-an-archive-file>`\n\n   .. step:: Load the exported data back to your |service| {+cluster+}.\n\n      Use ``mongorestore`` to load data from the binary database dump\n      created by ``mongodump``. \n      \n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-restore-archived-data-with-dbtools.rst"
  },
  {
    "code": "         :caption: mongodump Syntax \n\n         mongorestore --archive=\"archive file name\" \n      \n      To learn more, see the following resources:\n\n      - :binary:`~bin.mongorestore`\n      - :dbtools:`Example </mongorestore/mongorestore-examples/#restore-from-an-archive-file>`\n\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-restore-archived-data-with-dbtools.rst"
  },
  {
    "code": "               :copyable: false\n      \n               projects/my-project-0/locations/us-east4/keyRings/my-key-ring-0/cryptoKeys/my-key-0/cryptoKeyVersions/1\n      \n         The encryption key **must** belong to the |gcp| Service Account Key\n         configured for your |service| project. Click the :guilabel:`Service\n         Account Key` section to view the currently configured Service \n         Account Key for the project.\n      \n      #. Click :guilabel:`Update Credentials`.\n      \n      |service| displays a banner in the |service| console during the \n      Key Identifier rotation process.\n      \n      .. warning::\n      \n         Do not delete or disable the original Key Version Resource ID until\n         your changes have deployed.\n      \n      If the cluster uses :ref:`backup-cloud-provider`, do **not** delete\n      or disable the original Key Version Resource ID until you\n      ensure that no snapshots used that key for encryption.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/steps-rotate-gcp-encryption-key.rst"
  },
  {
    "code": "   :emphasize-lines: 2\n\n   {\n     \"access_token\": \"<access_token>\",\n     \"refresh_token\": \"<refresh_token>\",\n     \"user_id\": \"<user_id>\",\n     \"device_id\": \"<device_id>\"\n   }\n\nThe ``access_token`` grants access to the App Services Admin API. You\nmust include it as a Bearer token in the ``Authorization`` header for\nall App Services Admin API requests.\n\n.. seealso::\n\n   :admin-api-endpoint:`App Services Admin API Authentication\n   <section/Get-Authentication-Tokens>` documentation\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/app-services/api-authenticate-instructions.rst"
  },
  {
    "code": "   :caption: The JSON schema for store.items\n   \n   {\n     \"title\": \"Item\",\n     \"required\": [\"_id\", \"name\", \"quantity\", \"reviews\"],\n     \"properties\": {\n       \"_id\": { \"bsonType\": \"objectId\" },\n       \"name\": { \"bsonType\": \"string\" },\n       \"quantity\": { \"bsonType\": \"int\" },\n       \"reviews\": {\n         \"bsonType\": \"array\",\n         \"items\": {\n           \"bsonType\": \"object\",\n           \"required\": [\"username\", \"comment\"],\n           \"properties\": {\n             \"username\": { \"bsonType\": \"string\" },\n             \"comment\": { \"bsonType\": \"string\" }\n           }\n         }\n       }\n     }\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/data-model.rst"
  },
  {
    "code": "   :emphasize-lines: 9\n\n   // Find the first document that has a quantity greater than 25\n   const query = { \"quantity\": { \"$gte\": 25 } };\n   // Sort the documents in order of descending quantity before\n   // deleting the first one.\n   const options = {\n     \"sort\": { \"quantity\": -1 }\n   }\n\n   return itemsCollection.findOneAndDelete(query, options)\n     .then(deletedDocument => {\n       if(deletedDocument) {\n         console.log(`Successfully deleted document that had the form: ${deletedDocument}.`)\n       } else {\n         console.log(\"No document matches the provided query.\")\n       }\n       return deletedDocument\n     })\n     .catch(err => console.error(`Failed to find and delete document: ${err}`))\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/findOneAndDelete.rst"
  },
  {
    "code": "   :emphasize-lines: 12\n\n   // Find the document that describes \"lego\"\n   const query = { \"name\": \"lego\" };\n   // Replace it with a new document\n   const replacement = {\n       \"name\": \"blocks\",\n       \"price\": 20.99,\n       \"category\": \"toys\"\n   };\n   // Return the original document as it was before being replaced\n   const options = { \"returnNewDocument\": false };\n\n   return itemsCollection.findOneAndReplace(query, replacement, options)\n     .then(replacedDocument => {\n       if(replacedDocument) {\n         console.log(`Successfully replaced the following document: ${replacedDocument}.`)\n       } else {\n         console.log(\"No document matches the provided query.\")\n       }\n       return updatedDocument\n     })\n     .catch(err => console.error(`Failed to find and replace document: ${err}`))\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/findOneAndReplace.rst"
  },
  {
    "code": "   :emphasize-lines: 14\n\n   // Find the document that describes \"lego\"\n   const query = { \"name\": \"lego\" };\n   // Set some fields in that document\n   const update = {\n     \"$set\": {\n       \"name\": \"blocks\",\n       \"price\": 20.99,\n       \"category\": \"toys\"\n     }\n   };\n   // Return the updated document instead of the original document\n   const options = { returnNewDocument: true };\n\n   return itemsCollection.findOneAndUpdate(query, update, options)\n     .then(updatedDocument => {\n       if(updatedDocument) {\n         console.log(`Successfully updated document: ${updatedDocument}.`)\n       } else {\n         console.log(\"No document matches the provided query.\")\n       }\n       return updatedDocument\n     })\n     .catch(err => console.error(`Failed to find and update document: ${err}`))\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/findOneAndUpdate.rst"
  },
  {
    "code": "   :caption: The JSON schema for store.items\n   \n   {\n     \"title\": \"Item\",\n     \"required\": [\"_id\", \"name\", \"quantity\", \"reviews\"],\n     \"properties\": {\n       \"_id\": { \"bsonType\": \"objectId\" },\n       \"name\": { \"bsonType\": \"string\" },\n       \"quantity\": { \"bsonType\": \"int\" },\n       \"reviews\": {\n         \"bsonType\": \"array\",\n         \"items\": {\n           \"bsonType\": \"object\",\n           \"required\": [\"username\", \"comment\"],\n           \"properties\": {\n             \"username\": { \"bsonType\": \"string\" },\n             \"comment\": { \"bsonType\": \"string\" }\n           }\n         }\n       }\n     }\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/functions/data-model.rst"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   exports = function() {\n     const mongodb = context.services.get(\"mongodb-atlas\");\n     const itemsCollection = mongodb.db(\"store\").collection(\"items\");\n     const purchasesCollection = mongodb.db(\"store\").collection(\"purchases\");\n     // ... paste snippet here ...\n   }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/functions/setup.rst"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   const query = { \"name\": \"board games\" };\n   const update = { \"$inc\": { \"quantity\": 5 } };\n   const options = { \"upsert\": true };\n\n   itemsCollection.updateOne(query, update, options)\n     .then(result => {\n       const { matchedCount, modifiedCount, upsertedId } = result;\n       if(upsertedId) {\n         console.log(`Document not found. Inserted a new document with _id: ${upsertedId}`)\n       } else {\n         console.log(`Successfully increased ${query.name} quantity by ${update.$inc.quantity}`)\n       }\n     })\n     .catch(err => console.error(`Failed to upsert document: ${err}`))\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/functions/snippets/updateOneUpsert.rst"
  },
  {
    "code": "   :copyable: false\n\n   // Invalid:\n   // You can't simultaneously include `name` \n   // and exclude `address`\n   { \"name\": 1, \"address\": 0 }\n\n   // Valid:\n   { \"_id\": 0, \"name\": 1 }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/parameter-projection.rst"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   exports = function() {\n     const mongodb = context.services.get(\"mongodb-atlas\");\n     const itemsCollection = mongodb.db(\"store\").collection(\"items\");\n     const purchasesCollection = mongodb.db(\"store\").collection(\"purchases\");\n     // ... paste snippet here ...\n   }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/setup.rst"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   const query = { \"name\": \"board games\" };\n   const update = { \"$inc\": { \"quantity\": 5 } };\n   const options = { \"upsert\": true };\n\n   itemsCollection.updateOne(query, update, options)\n     .then(result => {\n       const { matchedCount, modifiedCount, upsertedId } = result;\n       if(upsertedId) {\n         console.log(`Document not found. Inserted a new document with _id: ${upsertedId}`)\n       } else {\n         console.log(`Successfully increased ${query.name} quantity by ${update.$inc.quantity}`)\n       }\n     })\n     .catch(err => console.error(`Failed to upsert document: ${err}`))\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/triggers/updateOneUpsert.rst"
  },
  {
    "code": "        :language: go\n        :linenos:\n        :emphasize-lines: 6,20,21\n\n   .. tab::\n      :tabid: java-sync\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/uri-encoding/encode.rst"
  },
  {
    "code": "        :language: java\n        :linenos:\n        :emphasize-lines: 7,14,15\n\n   .. tab::\n      :tabid: nodejs\n\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/uri-encoding/encode.rst"
  },
  {
    "code": "        :language: javascript\n        :linenos:\n        :emphasize-lines: 3,4\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/uri-encoding/encode.rst"
  },
  {
    "code": "        :language: python\n        :linenos:\n        :emphasize-lines: 2,4,5\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/includes/uri-encoding/encode.rst"
  },
  {
    "code": "         :start-after: // Start AWS Lambda Example 2\n         :end-before: // End AWS Lambda Example 2\n         :language: csharp\n         :copyable:\n         :dedent:\n\n      Other Authentication\n      ````````````````````\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: // Start AWS Lambda Example 1\n         :end-before: // End AWS Lambda Example 1\n         :language: csharp\n         :copyable:\n         :dedent:\n\n   .. tab::\n      :tabid: go\n\n",
    "language": "csharp",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: // Start AWS Lambda Example 1\n         :end-before: // End AWS Lambda Example 1\n         :language: go\n         :copyable:\n         :dedent:\n   \n   .. tab::\n      :tabid: java-sync\n\n",
    "language": "go",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: // Start AWS Lambda Example 1\n         :end-before: // End AWS Lambda Example 1\n         :language: java\n         :copyable:\n         :dedent:\n\n   .. tab::\n      :tabid: nodejs\n\n      |aws| IAM Authentication\n      ````````````````````````\n",
    "language": "java",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: // begin lambda connection\n         :end-before: // end lambda connection\n         :language: js\n         :copyable:\n         :dedent:\n\n      Other Authentication\n      ````````````````````\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: // begin lambda connection\n         :end-before: // end lambda connection\n         :language: js\n         :copyable:\n         :dedent:\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "js",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: # Start AWS Lambda Example 1\n         :end-before: # End AWS Lambda Example 1\n         :language: python\n         :copyable:\n         :dedent:\n\n   .. tab::\n      :tabid: ruby\n\n      |aws| IAM Authentication\n      ````````````````````````\n\n",
    "language": "python",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: # Start AWS Lambda Example 2\n         :end-before: # End AWS Lambda Example 2\n         :language: ruby\n         :copyable:\n         :dedent:\n\n      Other Authentication\n      ````````````````````\n\n",
    "language": "ruby",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: # Start AWS Lambda Example 1\n         :end-before: # End AWS Lambda Example 1\n         :language: ruby\n         :copyable:\n         :dedent:\n\n   .. tab::\n      :tabid: rust\n\n      AWS IAM Authentication\n      ````````````````````````\n\n",
    "language": "ruby",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: // begin lambda connection example 2\n         :end-before: // end lambda connection example 2\n         :language: rust\n         :copyable:\n         :dedent:\n\n      Other Authentication\n      ```````````````````````\n\n",
    "language": "rust",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "         :start-after: // begin lambda connection example 1\n         :end-before: // end lambda connection example 1\n         :language: rust\n         :copyable:\n         :dedent:\n\n",
    "language": "rust",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-aws-lambda.txt"
  },
  {
    "code": "   :language: javascript\n   :copyable:\n",
    "language": "javascript",
    "type": "literalinclude",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/manage-connections-google-cloud.txt"
  },
  {
    "code": "         :emphasize-lines: 4\n\n         curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n              --header \"Content-Type: application/json\" \\\n              --include \\\n              --request POST \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/performanceAdvisor/autoIndexing?enable=true\" \n\nOnce you enable auto-index creation, |service| begins to automatically\ncreate any suggested high-impact indexes.\n\nDisable Auto-Index Creation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. tabs::\n\n   .. tab:: Atlas Console\n      :tabid: ui\n\n      To disable auto-index creation for your {+serverless-instance+} with\n      the {+atlas-ui+}, complete the following steps:\n\n      .. procedure::\n         :style: normal\n\n         .. include:: /includes/steps-open-performance-advisor.rst\n\n         .. step:: In the :guilabel:`Create Indexes` panel, toggle :guilabel:`Turn on Auto-Create Suggested Indexes` to off.\n\n   .. tab:: {+atlas-admin-api+}\n      :tabid: api\n\n      To disable auto-index creation for a {+serverless-instance+}, send a \n      ``POST`` request to the :oas-atlas-op:`Set Serverless Auto\n      Indexing  </setServerlessAutoIndexing>` endpoint and set the value\n      for the ``enable`` query parameter to ``false``.\n\n      The following example request disables auto-index creation for a\n      {+serverless-instance+}:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/performance-advisor/auto-index-serverless.txt"
  },
  {
    "code": "         :emphasize-lines: 4\n\n         curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n              --header \"Content-Type: application/json\" \\\n              --include \\\n              --request POST \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/performanceAdvisor/autoIndexing?enable=false\" \n\nAfter you disable auto-index creation, |service| stops automatically\ncreating any suggested high-impact indexes.\n\nReview Automatically Created Indexes\n------------------------------------\n\n.. include:: /includes/fact-review-auto-indexes.rst\n\nDrop Automatically Created Indexes\n----------------------------------\n\n.. include:: /includes/fact-drop-auto-indexes.rst\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/performance-advisor/auto-index-serverless.txt"
  },
  {
    "code": "         :emphasize-lines: 8-11\n\n         curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n              --header \"Content-Type: application/json\" \\\n              --include \\\n              --request POST \"https://cloud.mongodb.com/api/atlas/v1.0/groups/{GROUP-ID}/clusters?pretty=true\" \\\n              --data '\n                {\n                  \"name\": \"SingleRegionCluster\",\n                  \"autoScaling\": {\n                    \"autoIndexingEnabled\": true\n                  }\n                  \"diskSizeGB\": 100,\n                  \"numShards\": 1,\n                  \"providerSettings\": {\n                  \"providerName\": \"AWS\",\n                  \"diskIOPS\": 300,\n                  \"instanceSizeName\": \"M40\",\n                  \"regionName\": \"US_EAST_1\"\n                  },\n                  \"clusterType\" : \"REPLICASET\",\n                  \"replicationFactor\": 3,\n                  \"replicationSpecs\": [{\n                    \"numShards\": 1,\n                    \"regionsConfig\": {\n                      \"US_EAST_1\": {\n                        \"analyticsNodes\": 0,\n                        \"electableNodes\": 3,\n                        \"priority\": 7,\n                        \"readOnlyNodes\": 0\n                      }\n                    },\n                    \"zoneName\": \"Zone 1\"\n                  }],\n                  \"backupEnabled\": false,\n                  \"providerBackupEnabled\" : true,\n                  \"autoScaling\": {\n                  \"diskGBEnabled\": true\n                  }\n                }'\n\nReview Automatically Created Indexes\n------------------------------------\n\n.. include:: /includes/fact-review-auto-indexes.rst\n\nDrop Automatically Created Indexes\n----------------------------------\n\n.. include:: /includes/fact-drop-auto-indexes.rst\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/performance-advisor/autopilot.txt"
  },
  {
    "code": "   :copyable: false\n\n   { a : 1 }\n   { a : 1, b : 1 }\n\nSince ``{ a : 1 }`` is a prefix of ``{ a : 1, b : 1 }``, |pa|\nsuggests only ``{ a : 1, b : 1 }``. To learn more about index prefixes,\nsee :manual:`Prefixes </core/index-compound/#prefixes>`.\n\nExample: New York City Taxi Data\n--------------------------------\n\nThis example uses a database named ``cab-db`` that contains information \nabout New York City taxi rides, with fields for the times of pickup and \ndropoff, ride distance, and a breakdown of ride costs. A typical \ndocument in the collection ``yellow`` looks like the following example:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/performance-advisor/index-ranking.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n    \t\"_id\" : ObjectId(\"5db9daab0b2a17b7706cd6a3\"),\n    \t\"pickup_datetime\" : \"2014-06-30 02:09:23\",\n    \t\"dropoff_datetime\" : \"2014-06-30 02:20:36\",\n    \t\"passenger_count\" : 2,\n    \t\"trip_distance\" : 3,\n    \t\"fare_amount\" : 12,\n    \t\"tip_amount\" : 2.6,\n    \t\"total_amount\" : 15.6\n   }\n\nThe collection contains more than 10 million documents, so an \napplication that needs to run queries based on specific field data will \ngenerate some very inefficient operations unless you properly index the \ncollection.\n\nTypical queries for this application search for documents that contain\na specific dropoff time, combined with one or more other fields. For\nexample:\n\n.. _taxi-example-query:\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/performance-advisor/index-ranking.txt"
  },
  {
    "code": "   :copyable: false\n\n   db.yellow.find({ \"dropoff_datetime\": \"2014-06-19 21:45:00\",\n                    \"passenger_count\": 1,\n                    \"trip_distance\": {\"$gt\": 3 }\n                  })\n\nThe |pa| recommends the following indexes to improve performance:\n\n.. figure:: /images/suggested-indexes.png\n   :figwidth: 700px\n   :alt: Screen shot of suggested indexes\n\n.. note::\n\n   By default, the |pa| shows index recommendations for all collections\n   in your cluster. To narrow the recommendations down to a specific\n   collection, select one from the :guilabel:`Collection` dropdown\n   menu.\n\nThe |pa| lists recommended indexes in order of performance impact, from\ngreatest to least.\n\nThe first recommendation is for an index on three fields:\n\n- ``passenger_count``\n- ``dropoff_datetime``\n- ``trip_distance``\n\nClick the :guilabel:`Create Index` button to create the index with\nany desired additional options. To learn more about creating an index\nin the |pa|, see :ref:`pa-create-suggested-indexes`.\n\nIf you create this index, you remove the need for the database engine \nto scan the entire collection to find documents that match the query, \nwhich improves performance. Queries with the shape shown in the \n:ref:`example <taxi-example-query>` return results in 50 milliseconds \nor less on the indexed collection, as opposed to several seconds on the \nunindexed collection.\n\n.. note::\n\n   You can also create indexes with the :ref:`{+atlas-ui+} \n   <atlas-ui-indexes>`.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/performance-advisor/index-ranking.txt"
  },
  {
    "code": "   :linenos:\n   :emphasize-lines: 8-10, 23\n      \n   db.movies.aggregate([\n     {\n       \"$search\": {\n         \"text\": {\n           \"path\": \"plot\",\n           \"query\": \"poet\"\n         },\n         \"highlight\": {\n           \"path\": \"plot\"\n         }\n       }\n     },\n     {\n       \"$limit\": 1\n     },\n     {\n       \"$project\": {\n         \"_id\": 0,\n         \"title\": 1,\n         \"genres\": 1,\n         \"plot\": 1,\n         \"year\": 1,\n         \"highlights\": { \"$meta\": \"searchHighlights\" }\n       }\n     }\n   ])\n\nThe results of the above query include the ``highlights`` field, which \ncontains both the context in which all matches occurred, and relevance \nscores for each. For example, the following shows the ``highlights`` \nfield for the first document in the ``$search`` results.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/performance-advisor/recommend-search-text.txt"
  },
  {
    "code": "      :copyable: false\n\n      <Timestamp> COMMAND  <query>\n      planSummary: COLLSCAN keysExamined:0 \n      docsExamined: 10000 cursorExhausted:1 numYields:234 \n      nreturned:4  protocol:op_query 358ms\n\n   This query scanned 10,000 documents and returned only 4 for a ratio\n   of 2500, which is highly inefficient. No index keys were examined, so\n   MongoDB scanned all documents in the collection, known as a\n   :term:`collection scan`.\n\nCommon Triggers\n---------------\n\nThe query targeting alert typically occurs when there is no index to\nsupport a query or queries or when an existing index only partially\nsupports a query or queries.\n\n.. include:: /includes/fact-query-targeting-mongot.rst\n\nFix the Immediate Problem\n-------------------------\n\nAdd one or more indexes to better serve the inefficient queries.\n\nThe :doc:`Performance Advisor </performance-advisor>` provides the\neasiest and quickest way to create an index. The Performance Advisor\nmonitors queries that MongoDB considers slow and recommends indexes to\nimprove performance. |service| dynamically adjusts your slow query\nthreshold based on the execution time of operations across your\ncluster.\n\nClick :guilabel:`Create Index` on a slow query for instructions on how\nto create the recommended index.\n\n.. note::\n    \n   It is possible to receive a Query Targeting alert for an\n   inefficient query without receiving index suggestions from the\n   Performance Advisor if the query exceeds the slow query threshold and\n   the ratio of scanned to returned documents is greater than the\n   threshold specified in the alert.\n\nIn addition, you can use the following resources to determine which \nquery generated the alert:\n\n- The :doc:`Real-Time Performance Panel </real-time-performance-panel/>`\n  monitors and displays current network traffic and database operations\n  on machines hosting MongoDB in your |service| clusters.\n\n- The :ref:`MongoDB logs <mongodb-logs>` maintain an account of \n  activity,\n  including queries, for each ``mongod`` instance in your |service|\n  clusters.\n\n- The :manual:`cursor.explain() </reference/method/cursor.explain/>`\n  command for {+mongosh+} provides performance details for\n  all queries.\n\n- :ref:`Namespace Insights <namespace-insights>` monitors \n  collection-level query latency.\n\n- The |service| :ref:`Query Profiler <query-profiler>` records \n  operations that |service| considers slow when compared to average \n  execution time for all operations on your cluster.\n\nImplement a Long-Term Solution\n------------------------------\n\nRefer to the following for more information on query performance:\n\n- :manual:`MongoDB Indexing Strategies </applications/indexes>`\n- :manual:`Query Optimization </core/query-optimization>`\n- :manual:`Analyze Query Plan </tutorial/analyze-query-plan/>`\n\nMonitor Your Progress\n---------------------\n\n|service| provides the following methods to visualize query targeting:\n\n- Query Targeting\n  :ref:`metrics <monitor-cluster-metrics>`, which highlight high ratios\n  of objects scanned to objects returned.\n\n- :ref:`Namespace Insights <namespace-insights>`, which monitors \n  collection-level query latency.\n\n- The :ref:`Query Profiler <query-profiler>`, which describes specific\n  inefficient queries executed on the cluster.\n\nQuery Targeting Metrics\n~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can view historical metrics to help you visualize the query\nperformance of your cluster. To view :guilabel:`Query Targeting`\nmetrics in the {+atlas-ui+}:\n\n.. procedure::\n   :style: normal\n\n   .. include:: /includes/nav/steps-db-deployments-page.rst\n\n   .. step:: View :guilabel:`Query Targeting` metrics.\n\n      a. Click :guilabel:`View Monitoring` on the dashboard for the \n         {+database-deployment+}.\n\n      #. On the :guilabel:`Metrics` page, click the \n         :guilabel:`Add Chart` dropdown menu and select \n         :guilabel:`Query Targeting`.\n\nThe :guilabel:`Query Targeting` chart displays the following metrics\nfor queries executed on the server:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 20 40\n\n   * - Metric\n     - Description\n\n   * - :guilabel:`Scanned Objects / Returned` \n     - Indicates the average number of documents examined relative to  \n       the average number of returned documents.\n\n   * - :guilabel:`Scanned / Returned`\n     - Indicates the number of index keys\n       examined to fulfill a query relative to the actual number of\n       returned documents.\n\n.. include:: /includes/fact-query-targeting-mongot.rst\n\nIf either of these metrics exceed the\n:doc:`user-defined threshold </configure-alerts>`, |service| generates\nthe corresponding\n:alert:`Query Targeting: Scanned Objects / Returned` or\n:alert:`Query Targeting: Scanned / Returned` alert.\n\n.. note::\n\n   You can also view :guilabel:`Query Targeting` ratios of operations in\n   real-time using the\n   :ref:`Real-Time Performance Panel <real-time-metrics-status-tab>`.\n\nNamespace Insights\n~~~~~~~~~~~~~~~~~~\n\n:ref:`Namespace Insights <namespace-insights>` monitors \ncollection-level :manual:`query latency </reference/operator/aggregation/collStats/#latencystats-document>`. You can view query \nlatency metrics and statistics for certain hosts and operation types. \nManage pinned namespaces and choose up to five namespaces to show in \nthe corresponding query latency charts.\n\nTo access Namespace Insights:\n\n.. procedure::\n   :style: normal\n\n   .. include:: /includes/nav/steps-db-deployments-page.rst\n\n   .. step:: Go to the :guilabel:`Namespace Insights` tab.\n   \n      a. Click :guilabel:`View Monitoring` on the dashboard for the \n         {+database-deployment+}.\n\n      #. Click the :guilabel:`Query Insights` tab.\n\n      #. Click the :guilabel:`Namespace Insights` tab.\n\nQuery Profiler\n~~~~~~~~~~~~~~\n\nThe :ref:`Query Profiler <query-profiler>` contains several metrics\nyou can use to pinpoint specific inefficient queries. You can\nvisualize up to the past 24 hours of query operations. The Query\nProfiler can show the :guilabel:`Examined : Returned Ratio` (index keys \nexamined to documents returned) of logged queries, which might help you \nidentify the queries that triggered a \n:alert:`Query Targeting: Scanned / Returned` alert. The chart shows the \nnumber of index keys examined to fulfill a query relative to the actual \nnumber of returned documents.\n\n.. note::\n\n   The :ref:`default <default-alert-settings>`\n   :alert:`Query Targeting: Scanned Objects / Returned` \n   alert ratio differs slightly. The ratio of the average number of \n   documents scanned to the average number of documents returned during \n   a sampling period triggers this alert.\n\n|service| might not :ref:`log <mongodb-logs>` the individual operations \nthat contribute to the Query Targeting ratios due to automatically set \nthresholds. However, you can still use the Query Profiler and \n:guilabel:`Query Targeting` metrics to analyze and optimize query \nperformance.\n\nTo access the Query Profiler:\n\n.. procedure::\n   :style: normal\n\n   .. include:: /includes/nav/steps-db-deployments-page.rst\n\n   .. step:: Go to the :guilabel:`Query Profiler` tab.\n\n      a. Click :guilabel:`View Monitoring` on the dashboard for the \n         {+database-deployment+}.\n\n      #. Click the :guilabel:`Query Insights` tab.\n\n      #. Click the :guilabel:`Query Profiler` tab.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/alert-resolutions/query-targeting.txt"
  },
  {
    "code": "     :copyable: false\n\n     We are too stale to use <node>:27017 as a sync source.\n\n- An |service| node is reporting a state of :manual:`STARTUP2\n  </reference/replica-states/#mongodb-replstate-replstate.STARTUP2>` and\n  :manual:`RECOVERING \n  </reference/replica-states/#mongodb-replstate-replstate.RECOVERING>`\n  for an extended period of time.\n\n  Typically, this indicates that the node has \"fallen off the oplog\"\n  and is unable to keep up with the oplog data being generated by\n  the primary node. In this case, the node will require an\n  :ref:`initial sync <replica-set-initial-sync>` in order to recover\n  and ensure that the data is consistent across all nodes. \n  You can check the state of a node using the :method:`rs.status()\n  <rs.status>` shell method.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/alert-resolutions/replication-oplog.txt"
  },
  {
    "code": "   :copyable: false\n\n   mongodb://pl-0-us-east-1a.ab123.mongodb.net:1024\n   mongodb+srv://pl-0-us-east-1a.ab123.mongodb.net\n\nIf you enable the :ref:`regionalized private endpoint\n<atlas_regionalized-pl>` setting, {+aws-pl+} connection strings follow\nthis format:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/faq/connection-changes.txt"
  },
  {
    "code": "   :copyable: false\n\n   mongodb://pl-0-us-west-1.ab123.mongodb.net:1024\n   mongodb+srv://cluster0-pl-0-us-west-1.ab123.mongodb.net\n\n|uri|\\s using this format can be reachable via the |aws| |vpc| where\nsomeone configured PrivateLink, though access can be transitive from\nother |vpc|\\s peered in turn.\n\n|azure| Private Link Connection Strings\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n:ref:`Azure Private Link <private-endpoint-connection-strings>`\nconnection strings follow this format:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/faq/connection-changes.txt"
  },
  {
    "code": "   :copyable: false\n\n   mongodb://pl-0-eastus2.ab123.mongodb.net:1024\n   mongodb+srv://pl-0-eastus2.ab123.mongodb.net\n\nIf you enable the :ref:`regionalized private endpoint\n<atlas_regionalized-pl>` setting, {+az-pl+} connection strings follow\nthis format:\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/faq/connection-changes.txt"
  },
  {
    "code": "   :copyable: false\n\n   mongodb://pl-0-eastus2.ab123.mongodb.net:1024\n   mongodb+srv://cluster0-pl-0-eastus2.ab123.mongodb.net\n\n|uri|\\s using this format can be reachable via the |azure| VNet where\nsomeone configured Private Link, though access can be transitive from\nother VNets peered in turn.\n\n.. _connstring-legacy:\n.. _atlas-faq-connstring-legacy:\n\nLegacy Connection Strings\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBefore 31 March 2020, you wrote |service| connection strings as\nfollows:\n\n.. list-table::\n   :widths: 30 70\n   :stub-columns: 1\n\n   * - |aws|\n     -\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/faq/connection-changes.txt"
  },
  {
    "code": "          :copyable: false\n\n          foo-shard-00-00-ab123.mongodb.net\n          foo-ab123.mongodb.net\n\n   * - |azure|\n     -\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/faq/connection-changes.txt"
  },
  {
    "code": "          :copyable: false\n\n          foo-shard-00-00-ab123.azure.mongodb.net\n          foo-ab123.azure.mongodb.net\n\n   * - |gcp|\n     -\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/faq/connection-changes.txt"
  },
  {
    "code": "          :copyable: false\n\n          foo-shard-00-00-ab123.gcp.mongodb.net\n          foo-ab123.gcp.mongodb.net\n\nIf you enabled **Private Only** mode, these hostnames resolve to peered\nnetwork IP addresses. If you disabled that mode, hostnames resolve to\npublic IP addresses.\n\nIf your application uses a legacy connection string in **Peering Only**\nmode, switch to\n:ref:`Private IP for Peering connection strings <connstring-private>`.\n\n.. _atlas-faq-migrate-providers:\n.. _tenant-to-tenant:\n\nDo I have to update my connection string when migrating to a different cloud provider from a ``M0``, ``M2``, or ``M5`` {+cluster+} to another?\n----------------------------------------------------------------------------------------------------------------------------------------------\n\nIf you have a :ref:`legacy connection string\n<atlas-faq-connstring-legacy>` and you want to change cloud \nproviders, your connection string must include ``.gcp`` or ``.azure``\nand you want to do one of the following:\n\n- Move to |gcp| or |azure|\n- Move off of |gcp| or |azure|\n\n  .. note::\n\n     Either operation may change your connection string. In the\n     {+atlas-ui+}, click :guilabel:`Connect` on your {+cluster+} after\n     the upgrade completes for an updated connection string. \n\n.. _dedicated-to-dedicated:\n\nDo I have to update my connection string when migrating to a different cloud provider from a {+dedicated-cluster+} to another?\n------------------------------------------------------------------------------------------------------------------------------\n\nIt depends on the following:\n\n- which cloud provider your current cluster uses\n- when you created the cluster\n\nGCP or Azure {+Clusters+} Created Before November 3, 2020\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you created your cluster before multi-cloud clusters were introduced\non November 3, 2020, **and** your cluster runs on |gcp| or |azure|:\n\n1. Open the cluster builder.\n\n#. Edit the cluster.\n\n#. Add read-only nodes from your target cloud provider.\n\n   .. note::\n   \n      If you are using legacy backups, keep one node in your current cloud provider,\n      and move the rest to your target cloud provider.\n\n#. Review and submit the changes.\n\n#. Copy the resulting comma-delimited |uri| connection string.\n\n#. Replace the connection string in your application with this new\n   :ref:`standard connection string <atlas-faq-connstring-standard>`.\n\n   This allows your application to connect to nodes from multiple cloud\n   providers.\n\n#. Restart your application.\n\n#. Make sure that your application can connect to |service|.\n\n#. After the first change completes, reconfigure your cluster:\n\n   - Remove all electable nodes using the original cloud provider.\n   - Remove the read-only nodes for the target cloud provider.\n   - Add the same number of electable nodes using the target cloud\n     provider.\n\n   .. note::\n   \n      If you are using legacy backups, wait until new backups are taken,\n      then move the remaining node to your target cloud provider.\n\n#. Review and submit the changes.\n\n#. Copy the resulting comma-delimited |uri| connection string.\n\n#. Replace the |uri| connection string in your application with this\n   new |uri| connection string.\n\n#. Restart your application.\n\n#. Make sure that your application can connect to |service|.\n\nAWS and {+Clusters+} Created After November 2, 2020\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf your cluster runs on |aws| **or** runs on any provider and was\ncreated after November 2, 2020, your connection string doesn't change\nand you don't experience {+cluster+} downtime. \n\n1. Open the cluster builder.\n\n#. Edit the cluster.\n\n#. Change the cloud provider.\n\n#. Review and submit the changes.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/faq/connection-changes.txt"
  },
  {
    "code": "          :copyable: false\n\n          command <cmd name> is not allowed in this Atlas tier\n          (Unauthorized) not authorized on <db name> to execute command <cmd name>\n\n   * - Database Logs\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} don't\n       allow you to download logs.\n\n   * - Data Recovery\n     - .. include:: //includes/fact-backup-shared-tier-limitations.rst\n\n   * - Data Transfer Limits\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} limit\n       the total data transferred into or out of the {+cluster+} in a\n       rolling seven-day period. The rate limits vary by {+cluster+} tier as\n       follows:\n\n       - ``M0``: 10 GB in and 10 GB out per period\n\n       - ``M2``: 20 GB in and 20 GB out per period\n\n       - ``M5``: 50 GB in and 50 GB out per period\n\n       |service| handles {+clusters+} that exceed the rate limit as follows:\n\n       - |service| throttles the network speed of the cluster.\n       - |service| triggers a one second cooldown period before resuming\n         the cluster's operations on a given connection. If the queue is\n         greater than the operations per second limit, operations might\n         wait for more than a second in the queue.\n       - If the amount of transferred data drops below the rate limit\n         threshold, |service| resumes processing of the queued data\n         transfers on each connection before processing any new data\n         transfers on that connection.\n\n   * - Data Storage\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} limit\n       the maximum total data storage space as follows:\n\n       - ``M0``: 0.5 GB\n\n       - ``M2``: 2 GB\n\n       - ``M5``: 5 GB\n\n       Data storage space includes the number of bytes of all\n       uncompressed BSON documents stored in all collections, plus the\n       bytes stored in their associated indexes.\n\n   * - JavaScript\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} don't\n       support server-side JavaScript. For example,\n       :manual:`$where </reference/operator/query/where>` and\n       :manual:`map-reduce </core/map-reduce>` are unsupported.\n\n   * - Namespaces and Database Names\n     - ``M0`` {+free-cluster+} and ``M2/M5`` {+shared-cluster+} namespaces\n       are limited to 95 bytes. Database names are limited to 38 bytes.\n\n   * - Number of {+Free-Clusters+}\n     - You can deploy at most *one* ``M0`` {+free-cluster+} per |service|\n       project. However if you have sales contracts with MongoDB, you might be able to deploy\n       more ``M0`` {+clusters+} per project. To learn more, contact a\n       MongoDB sales representative. \n\n   * - Performance Advisor\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} don't\n       provide access to the :doc:`Performance Advisor </performance-advisor>`. \n\n   * - Query Utilization\n     - The percentage of time that a query is running over any five\n       minute period must remain under 100% on ``M0`` {+free-clusters+}\n       and ``M2/M5`` {+shared-clusters+}.\n\n   * - Real-Time Performance Panel\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} don't\n       provide access to the :doc:`Real-Time Performance Panel </real-time-performance-panel>`.\n\n   * - Sort in Memory\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+}\n       sort in memory limit is 32 MB.\n\n   * - Throughput\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} limit\n       the number of read and write operations per second. The rate limits \n       vary by {+cluster+} tier as follows:\n\n       - ``M0``: 100 operations per second\n       - ``M2``: 200 operations per second\n       - ``M5``: 500 operations per second\n\n       |service| handles {+clusters+} that exceed the operations per second\n       rate limit as follows:\n\n       - |service| throttles the network speed of the cluster.\n       - |service| triggers a one second cooldown period before resuming\n         the cluster's operations on a given connection. If the queue is\n         greater than the operations per second limit, operations might\n         wait for more than a second in the queue.\n       - If the number of operations per second drops below the rate limit\n         threshold, |service| resumes processing of the queued operations\n         on each connection before processing any new operations on that\n         connection.\n\n   * - Automatic Pause of Idle Clusters\n     - |service| automatically pauses ``M0`` {+free-clusters+} after\n       60 days of inactivity where there are zero connections to the\n       cluster. \n       \n       .. include:: /includes/fact-resume-free-cluster.rst\n\n.. _shared-limits-drivers:\n\nDriver Minimum Requirements\n---------------------------\n\n.. list-table::\n   :widths: 30 70\n   :header-rows: 1\n   :stub-columns: 1\n\n   * - Driver\n     - Description\n\n   * - Drivers that use a |jre| or |jdk|\n     - Due to an issue with |tls| 1.3 support in the Java |jdk|\n       (`JDK-8236039 <https://bugs.openjdk.java.net/browse/JDK-8236039>`__),\n       upgrade the |jdk| that supports the driver you use to connect to\n       |service|.\n\n       Minimum versions of the |jdk| include:\n\n       .. list-table::\n          :widths: 40 60\n          :stub-columns: 1\n\n          * - 14u-cpu\n            - `JDK-8249107 <https://bugs.openjdk.java.net/browse/JDK-8249107>`__\n          * - 14.0.2\n            - `JDK-8247954 <https://bugs.openjdk.java.net/browse/JDK-8247954>`__\n          * - 13.0.3\n            - `JDK-8241515 <https://bugs.openjdk.java.net/browse/JDK-8241515>`__\n          * - 11.0.8-oracle\n            - `JDK-8238504 <https://bugs.openjdk.java.net/browse/JDK-8238504>`__\n          * - 11.0.7\n            - `JDK-8237387 <https://bugs.openjdk.java.net/browse/JDK-8237387>`__\n          * - 8u261\n            - `JDK-8243759 <https://bugs.openjdk.java.net/browse/JDK-8243759>`__\n          * - emb-8u261\n            - `JDK-8247097 <https://bugs.openjdk.java.net/browse/JDK-8247097>`__\n\n       To learn more about support for |tls| 1.3 in Java-based languages,\n       libraries, and drivers, see:\n\n       - `MongoDB Java, Reactive Streams, and Scala Drivers <https://mongodb.github.io/mongo-java-driver/>`__\n       - `Scala <https://docs.scala-lang.org/overviews/jdk-compatibility/overview.html>`__\n       - `Kafka <https://kafka.apache.org/documentation/#java>`__\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/reference/free-shared-limitations.txt"
  },
  {
    "code": "         :copyable: false\n\n         {\n             \"name\": : \"MongoError\",\n             \"message\": \"E11000 duplicate key error collection on: <db>.<collection> ... \",\n             ...\n         }\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/resilient-application.txt"
  },
  {
    "code": "         :emphasize-lines: 9-11\n\n         ...\n         collection.insertOne({\n             _id: 1,\n             body: \"I'm a goofball trying to insert a duplicate _id\"\n         })\n         .then(result => {\n             response.sendStatus(200) // send \"OK\" message to the client\n         },\n         err => {\n             response.sendStatus(400); // send \"Bad Request\" message to the client\n         });\n\n   .. tab::\n      :tabid: python\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/resilient-application.txt"
  },
  {
    "code": "         :linenos:\n         :emphasize-lines: 5, 14, 33, 47\n\n         const express = require('express');\n         const bodyParser = require('body-parser');\n\n         // Use the latest drivers by installing & importing them\n         const MongoClient = require('mongodb').MongoClient;\n\n         const app = express();\n         app.use(bodyParser.json());\n         app.use(bodyParser.urlencoded({ extended: true }));\n\n         const uri = \"mongodb+srv://<db_username>:<db_password>@cluster0-111xx.mongodb.net/test?retryWrites=true&w=majority\";\n\n         const client = new MongoClient(uri, {\n             useNewUrlParser: true,\n             useUnifiedTopology: true\n         });\n\n         // ----- API routes ----- //\n         app.get('/', (req, res) => res.send('Welcome to my API!'));\n\n         app.get('/users', (req, res) => {\n             const collection = client.db(\"test\").collection(\"users\");\n\n             collection\n             .find({})\n             .maxTimeMS(5000)\n             .toArray((err, data) => {\n                 if (err) {\n                     res.send(\"The request has timed out. Please check your connection and try again.\");\n                 }\n                 return res.json(data);\n             });\n         });\n\n         app.post('/users', (req, res) => {\n             const collection = client.db(\"test\").collection(\"users\");\n             collection.insertOne({ name: req.body.name })\n             .then(result => {\n                 res.send(\"User successfully added!\");\n             }, err => {\n                 res.send(\"An application error has occurred. Please try again.\");\n             })\n         });\n         // ----- End of API routes ----- //\n\n         app.listen(3000, () => {\n             console.log(`Listening on port 3000.`);\n             client.connect(err => {\n                 if (err) {\n                     console.log(\"Not connected: \", err);\n                     process.exit(0);\n                 }\n                 console.log('Connected.');\n             });\n         });\n        \n   .. tab::\n      :tabid: python\n\n      .. note::\n         The following web application uses `FastAPI \n         <https://github.com/tiangolo/fastapi>`__. To create a new application,\n         use the `FastAPI sample file \n         <https://github.com/tiangolo/fastapi#example>`__ structure.\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/resilient-application.txt"
  },
  {
    "code": "         :linenos:\n\n         # File: main.py\n\n         from fastapi import FastAPI, Body, Request, Response, HTTPException, status\n         from fastapi.encoders import jsonable_encoder\n\n         from typing import List\n         from models import User\n\n         import pymongo\n         from pymongo import MongoClient\n         from pymongo import errors\n \n         # Replace the uri string with your |service| connection string\n         uri = \"<atlas-connection-string>\"\n         db = \"test\"\n\n         app = FastAPI()\n\n         @app.on_event(\"startup\")\n         def startup_db_client():\n             app.mongodb_client = MongoClient(uri)\n             app.database = app.mongodb_client[db]\n\n         @app.on_event(\"shutdown\")\n         def shutdown_db_client():\n             app.mongodb_client.close()\n\n         ##### API ROUTES #####\n         @app.get(\"/users\", response_description=\"List all users\", response_model=List[User])\n         def list_users(request: Request):\n             try: \n                 users = list(request.app.database[\"users\"].find().max_time_ms(5000))\n                 return users\n             except pymongo.errors.ExecutionTimeout: \n                 raise HTTPException(status_code=status.HTTP_503_SERVICE_UNAVAILABLE, detail=\"The request has timed out. Please check your connection and try again.\")\n\n         @app.post(\"/users\", response_description=\"Create a new user\", status_code=status.HTTP_201_CREATED)\n         def new_user(request: Request, user: User = Body(...)):\n             user = jsonable_encoder(user)\n             try: \n                 new_user = request.app.database[\"users\"].insert_one(user)\n                 return {\"message\":\"User successfully added!\"}\n             except pymongo.errors.DuplicateKeyError:\n                 raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=\"Could not create user due to existing '_id' value in the collection. Try again with a different '_id' value.\")\n                \n\n   .. tab::\n      :tabid: java-sync\n\n      .. note::\n         The following server application uses\n         `NanoHTTPD <https://github.com/NanoHttpd/nanohttpd>`__ and\n         `json <https://mvnrepository.com/artifact/org.json/json>`__ \n         which you need to add to your project as dependencies before you \n         can run it.\n\n",
    "language": "python",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/resilient-application.txt"
  },
  {
    "code": "         :linenos:\n\n         // File: App.java\n\n         import java.util.Map;\n         import java.util.logging.Logger;\n\n         import org.bson.Document;\n         import org.json.JSONArray;\n\n         import com.mongodb.MongoException;\n         import com.mongodb.client.MongoClient;\n         import com.mongodb.client.MongoClients;\n         import com.mongodb.client.MongoCollection;\n         import com.mongodb.client.MongoDatabase;\n\n         import fi.iki.elonen.NanoHTTPD;\n\n         public class App extends NanoHTTPD {\n             private static final Logger LOGGER = Logger.getLogger(App.class.getName());\n\n             static int port = 3000;\n             static MongoClient client = null;\n\n             public App() throws Exception {\n                 super(port);\n\n                 // Replace the uri string with your MongoDB deployment's connection string\n                 String uri = \"<atlas-connection-string>\";\n                 client = MongoClients.create(uri);\n\n                 start(NanoHTTPD.SOCKET_READ_TIMEOUT, false);\n                 LOGGER.info(\"\\nStarted the server: http://localhost:\" + port + \"/ \\n\");\n             }\n\n             public static void main(String[] args) {\n                 try {\n                     new App();\n                 } catch (Exception e) {\n                     LOGGER.severe(\"Couldn't start server:\\n\" + e);\n                 }\n             }\n\n             @Override\n             public Response serve(IHTTPSession session) {\n                 StringBuilder msg = new StringBuilder();\n                 Map<String, String> params = session.getParms();\n\n                 Method reqMethod = session.getMethod();\n                 String uri = session.getUri();\n\n                 if (Method.GET == reqMethod) {\n                     if (uri.equals(\"/\")) {\n                         msg.append(\"Welcome to my API!\");\n                     } else if (uri.equals(\"/users\")) {\n                         msg.append(listUsers(client));\n                     } else {\n                         msg.append(\"Unrecognized URI: \").append(uri);\n                     }\n                 } else if (Method.POST == reqMethod) {\n                     try {\n                         String name = params.get(\"name\");\n                         if (name == null) {\n                             throw new Exception(\"Unable to process POST request: 'name' parameter required\");\n                         } else {\n                             insertUser(client, name);\n                             msg.append(\"User successfully added!\");\n                         }\n                     } catch (Exception e) {\n                         msg.append(e);\n                     }\n                 }\n\n                 return newFixedLengthResponse(msg.toString());\n             }\n\n             static String listUsers(MongoClient client) {\n                 MongoDatabase database = client.getDatabase(\"test\");\n                 MongoCollection<Document> collection = database.getCollection(\"users\");\n\n                 final JSONArray jsonResults = new JSONArray();\n                 collection.find().forEach((result) -> jsonResults.put(result.toJson()));\n\n                 return jsonResults.toString();\n             }\n\n             static String insertUser(MongoClient client, String name) throws MongoException {\n                 MongoDatabase database = client.getDatabase(\"test\");\n                 MongoCollection<Document> collection = database.getCollection(\"users\");\n\n                 collection.insertOne(new Document().append(\"name\", name));\n                 return \"Successfully inserted user: \" + name;\n             }\n         }\n\n\n",
    "language": "java",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/resilient-application.txt"
  },
  {
    "code": "   :copyable: false\n   \n   {\n     \"_id\": \"10006546\",\n     \"listing_url\": \"https://www.airbnb.com/rooms/10006546\",\n     \"name\": \"Ribeira Charming Duplex\",\n     \"summary\": \"Fantastic duplex apartment with three bedrooms, located in the historic area of Porto, Ribeira (Cube)...\",\n     \"interaction\": \"Cot - 10 € / night Dog - € 7,5 / night\",\n     \"house_rules\": \"Make the house your home...\",\n     \"property_type\": \"House\",\n     \"room_type\": \"Entire home/apt\",\n     \"bed_type\": \"Real Bed\",\n     \"minimum_nights\": \"2\",\n     \"maximum_nights\": \"30\",\n     \"cancellation_policy\": \"moderate\",\n     \"last_scraped\": {\n       \"$date\": {\n         \"$numberLong\": \"1550293200000\"\n       }\n     },\n     \"calendar_last_scraped\": {\n       \"$date\": {\n         \"$numberLong\": \"1550293200000\"\n       }\n     },\n     \"first_review\": {\n       \"$date\": {\n         \"$numberLong\": \"1451797200000\"\n       }\n     },\n     \"last_review\": {\n       \"$date\": {\n         \"$numberLong\": \"1547960400000\"\n       }\n     },\n     \"accommodates\": {\n       \"$numberInt\": \"8\"\n     },\n     \"bedrooms\": {\n       \"$numberInt\": \"3\"\n     },\n     \"beds\": {\n       \"$numberInt\": \"5\"\n     },\n     \"number_of_reviews\": {\n       \"$numberInt\": \"51\"\n     },\n     \"bathrooms\": {\n       \"$numberDecimal\": \"1.0\"\n     },\n     \"amenities\": [\n       \"TV\",\n       \"Cable TV\",\n       \"Wifi\",\n       \"Kitchen\",\n       \"Paid parking off premises\",\n       \"Smoking allowed\",\n       \"Pets allowed\",\n       \"Buzzer/wireless intercom\",\n       \"Heating\",\n       \"Family/kid friendly\",\n       \"Washer\",\n       \"First aid kit\",\n       \"Fire extinguisher\",\n       \"Essentials\",\n       \"Hangers\",\n       \"Hair dryer\",\n       \"Iron\",\n       \"Pack ’n Play/travel crib\",\n       \"Room-darkening shades\",\n       \"Hot water\",\n       \"Bed linens\",\n       \"Extra pillows and blankets\",\n       \"Microwave\",\n       \"Coffee maker\",\n       \"Refrigerator\",\n       \"Dishwasher\",\n       \"Dishes and silverware\",\n       \"Cooking basics\",\n       \"Oven\",\n       \"Stove\",\n       \"Cleaning before checkout\",\n       \"Waterfront\"\n     ],\n     \"price\": {\n       \"$numberDecimal\": \"80.00\"\n     },\n     \"security_deposit\": {\n       \"$numberDecimal\": \"200.00\"\n     },\n     \"cleaning_fee\": {\n       \"$numberDecimal\": \"35.00\"\n     },\n     \"extra_people\": {\n       \"$numberDecimal\": \"15.00\"\n     },\n     \"guests_included\": {\n       \"$numberDecimal\": \"6\"\n     },\n     \"images\": {\n       \"thumbnail_url\": \"\",\n       \"medium_url\": \"\",\n       \"picture_url\": \"https://a0.muscache.com/im/pictures/e83e702f-ef49-40fb-8fa0-6512d7e26e9b.jpg?aki_policy=large\",\n       \"xl_picture_url\": \"\"\n     },\n     \"host\": {\n       \"host_id\": \"51399391\",\n       \"host_url\": \"https://www.airbnb.com/users/show/51399391\",\n       \"host_name\": \"Ana&Gonçalo\",\n       \"host_location\": \"Porto, Porto District, Portugal\",\n       \"host_about\": \"Gostamos de passear, de viajar, de conhecer pessoas e locais novos, gostamos de desporto e animais! Vivemos na cidade mais linda do mundo!!!\",\n       \"host_response_time\": \"within an hour\",\n       \"host_thumbnail_url\": \"https://a0.muscache.com/im/pictures/fab79f25-2e10-4f0f-9711-663cb69dc7d8.jpg?aki_policy=profile_small\",\n       \"host_picture_url\": \"https://a0.muscache.com/im/pictures/fab79f25-2e10-4f0f-9711-663cb69dc7d8.jpg?aki_policy=profile_x_medium\",\n       \"host_neighbourhood\": \"\",\n       \"host_response_rate\": {\n         \"$numberInt\": \"100\"\n       },\n       \"host_is_superhost\": false,\n       \"host_has_profile_pic\": true,\n       \"host_identity_verified\": true,\n       \"host_listings_count\": {\n         \"$numberInt\": \"3\"\n       },\n       \"host_total_listings_count\": {\n         \"$numberInt\": \"3\"\n       },\n       \"host_verifications\": [\n         \"email\",\n         \"phone\",\n         \"reviews\",\n         \"jumio\",\n         \"offline_government_id\",\n         \"government_id\"\n       ]\n     },\n     \"address\": {\n       \"street\": \"Porto, Porto, Portugal\",\n       \"suburb\": \"\",\n       \"government_area\": \"Cedofeita, Ildefonso, Sé, Miragaia, Nicolau, Vitória\",\n       \"market\": \"Porto\",\n       \"country\": \"Portugal\",\n       \"country_code\": \"PT\",\n       \"location\": {\n         \"type\": \"Point\",\n         \"coordinates\": [\n           {\n             \"$numberDouble\": \"-8.61308\"\n           },\n           {\n             \"$numberDouble\": \"41.1413\"\n           }\n         ],\n         \"is_location_exact\": false\n       }\n     },\n     \"availability\": {\n       \"availability_30\": {\n         \"$numberInt\": \"28\"\n       },\n       \"availability_60\": {\n         \"$numberInt\": \"47\"\n       },\n       \"availability_90\": {\n         \"$numberInt\": \"74\"\n       },\n       \"availability_365\": {\n         \"$numberInt\": \"239\"\n       }\n     },\n     \"review_scores\": {\n       \"review_scores_accuracy\": {\n         \"$numberInt\": \"9\"\n       },\n       \"review_scores_cleanliness\": {\n         \"$numberInt\": \"9\"\n       },\n       \"review_scores_checkin\": {\n         \"$numberInt\": \"10\"\n       },\n       \"review_scores_communication\": {\n         \"$numberInt\": \"10\"\n       },\n       \"review_scores_location\": {\n         \"$numberInt\": \"10\"\n       },\n       \"review_scores_value\": {\n         \"$numberInt\": \"9\"\n       },\n       \"review_scores_rating\": {\n         \"$numberInt\": \"89\"\n       }\n     },\n     \"reviews\": [\n       {\n         \"_id\": \"362865132\",\n         \"date\": {\n           \"$date\": {\n             \"$numberLong\": \"1545886800000\"\n           }\n         },\n         \"listing_id\": \"10006546\",\n         \"reviewer_id\": \"208880077\",\n         \"reviewer_name\": \"Thomas\",\n         \"comments\": \"Very helpful hosts. Cooked traditional...\"\n       },\n       {\n         \"_id\": \"364728730\",\n         \"date\": {\n           \"$date\": {\n             \"$numberLong\": \"1546232400000\"\n           }\n         },\n         \"listing_id\": \"10006546\",\n         \"reviewer_id\": \"91827533\",\n         \"reviewer_name\": \"Mr\",\n         \"comments\": \"Ana & Goncalo were great on communication...\"\n       },\n       {\n         \"_id\": \"403055315\",\n         \"date\": {\n           \"$date\": {\n             \"$numberLong\": \"1547960400000\"\n           }\n         },\n         \"listing_id\": \"10006546\",\n         \"reviewer_id\": \"15138940\",\n         \"reviewer_name\": \"Milo\",\n         \"comments\": \"The house was extremely well located...\"\n       }\n     ]\n   }\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-airbnb.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"account_id\": 470650,\n     \"limit\": 10000,\n     \"products\": [\n       \"CurrencyService\",\n       \"Commodity\",\n       \"InvestmentStock\"\n     ]\n   }\n\n.. _analytics-customers:\n\n``sample_analytics.customers``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains customers details including what accounts they\nhold :ref:`users <analytics-accounts>`. Each document contains username,\nname, address, birth date, email address, a list of the accounts held,\nand details on the tiers and related benefits they are entitled to.\n\nIndexes\n```````\n\nThe ``sample_analytics.customers`` collection contains the following\nindexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-analytics.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n    \"username\": \"lejoshua\",\n    \"name\": \"Michael Johnson\",\n    \"address\": \"15989 Edward Inlet\\nLake Maryton, NC 39545\",\n    \"birthdate\": {\"$date\": 54439275000},\n    \"email\": \"courtneypaul@example.com\",\n    \"accounts\": [\n      470650,\n      443178\n    ],\n    \"tier_and_details\": {\n      \"b5f19cb532fa436a9be2cf1d7d1cac8a\": {\n         \"tier\": \"Silver\",\n         \"benefits\": [\n           \"dedicated account representative\"\n         ],\n         \"active\": true,\n         \"id\": \"b5f19cb532fa436a9be2cf1d7d1cac8a\"\n         }\n    }\n   }\n\n.. _analytics-transactions:\n\n``sample_analytics.transactions``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains transactions details for\n:ref:`users <analytics-accounts>`. Each document contains an account id, a\ncount of how many transactions are in this set, the start and end dates for\ntransactions covered by this document, and a list of sub documents. Each sub\ndocument represents a single transaction and the related information for that\ntransaction.\n\nIndexes\n```````\n\nThe ``sample_analytics.transactions`` collection contains the following\nindexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-analytics.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"account_id\": 794875,\n     \"transaction_count\": 6,\n     \"bucket_start_date\": {\"$date\": 693792000000},\n     \"bucket_end_date\": {\"$date\": 1473120000000},\n     \"transactions\": [\n       {\n         \"date\": {\"$date\": 1325030400000},\n         \"amount\": 1197,\n         \"transaction_code\": \"buy\",\n         \"symbol\": \"nvda\",\n         \"price\": \"12.7330024299341033611199236474931240081787109375\",\n         \"total\": \"15241.40390863112172326054861\"\n       },\n       {\n          \"date\": {\"$date\": 1465776000000},\n          \"amount\": 8797,\n          \"transaction_code\": \"buy\",\n          \"symbol\": \"nvda\",\n          \"price\": \"46.53873172406391489630550495348870754241943359375\",\n          \"total\": \"409401.2229765902593427995271\"\n       },\n       {\n          \"date\": {\"$date\": 1472601600000},\n          \"amount\": 6146,\n          \"transaction_code\": \"sell\",\n          \"symbol\": \"ebay\",\n          \"price\": \"32.11600884852845894101847079582512378692626953125\",\n          \"total\": \"197384.9903830559086514995215\"\n       },\n       {\n          \"date\": {\"$date\": 1101081600000},\n          \"amount\": 253,\n          \"transaction_code\": \"buy\",\n          \"symbol\": \"amzn\",\n          \"price\": \"37.77441226157566944721111212857067584991455078125\",\n          \"total\": \"9556.926302178644370144411369\"\n       },\n       {\n          \"date\": {\"$date\": 1022112000000},\n          \"amount\": 4521,\n          \"transaction_code\": \"buy\",\n          \"symbol\": \"nvda\",\n          \"price\": \"10.763069758141103449133879621513187885284423828125\",\n          \"total\": \"48659.83837655592869353426977\"\n       },\n       {\n          \"date\": {\"$date\": 936144000000},\n          \"amount\": 955,\n          \"transaction_code\": \"buy\",\n          \"symbol\": \"csco\",\n          \"price\": \"27.992136535152877030441231909207999706268310546875\",\n          \"total\": \"26732.49039107099756407137647\"\n       }\n     ]\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-analytics.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"578f6fa2df35c7fbdbaed8c6\"\n     },\n     \"recrd\": \"\",\n     \"vesslterms\": \"\",\n     \"feature_type\": \"Wrecks - Submerged, dangerous\",\n     \"chart\": \"US,U1,graph,DNC H1409860\",\n     \"latdec\": {\n       \"$numberDouble\": \"9.3560572\"\n     },\n     \"londec\": {\n       \"$numberDouble\": \"-79.9074173\"\n     },\n     \"gp_quality\": \"\",\n     \"depth\": \"\",\n     \"sounding_type\": \"\",\n     \"history\": \"\",\n     \"quasou\": \"depth unknown\",\n     \"watlev\": \"always under water/submerged\",\n     \"coordinates\": [\n       {\n         \"$numberDouble\": \"-79.9074173\"\n       },\n       {\n         \"$numberDouble\": \"9.3560572\"\n       }\n     ]\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-geospatial.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     _id: new ObjectId(\"6220f6b78a733c51b416c80e\"),\n     name: 'Uranus',\n     orderFromSun: 7,\n     hasRings: true,\n     mainAtmosphere: [ 'H2', 'He', 'CH4' ],\n     surfaceTemperatureC: { min: null, max: null, mean: -197.2 }\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-guides.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"5a9427648b0beebeb69579cc\"\n     },\n     \"name\": \"Andrea Le\",\n     \"email\": \"andrea_le@fakegmail.com\",\n     \"movie_id\": {\n       \"$oid\": \"573a1390f29313caabcd418c\"\n     },\n     \"text\": \"Rem officiis eaque repellendus amet eos doloribus. Porro    \n       dolor voluptatum voluptates neque culpa molestias. Voluptate unde    \n       nulla temporibus ullam.\",\n     \"date\": {\n       \"$date\": {\n         \"$numberLong\": \"1332804016000\"\n       }\n     }\n   }\n\n.. _mflix-embedded_movies:\n\n``sample_mflix.embedded_movies``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains details on movies with ``genres`` of ``Western``, \n``Action``, or ``Fantasy``. Each document contains a single movie, and \ninformation such as its title, release year, and cast.\n\nIn addition, documents in this collection include a ``plot_embedding``\nfield that contains embeddings created using OpenAI's\n``text-embedding-ada-002`` embedding model that you can use with the\n|fts| vector search feature.\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n.. note::\n\n   The number of dimensions in the sample have been truncated for\n   readability.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-mflix.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"573a1396f29313caabce582d\"\n     },\n     \"plot\": \"A young swordsman comes to Paris and faces villains, romance, adventure and intrigue with three Musketeer friends.\",\n     \"genres\": [\"Action\", \"Adventure\", \"Comedy\"],\n     \"runtime\": {\n       \"$numberInt\": \"106\"\n     },\n     \"rated\": \"PG\",\n     \"cast\": [\"Oliver Reed\", \"Raquel Welch\", \"Richard Chamberlain\", \"Michael York\"],\n     \"num_mflix_comments\": {\n       \"$numberInt\": \"0\"\n     },\n     \"poster\": \"https://m.media-amazon.com/images/M/MV5BODQwNmI0MDctYzA5Yy00NmJkLWIxNGMtYzgyMDBjMTU0N2IyXkEyXkFqcGdeQXVyMjI4MjA5MzA@._V1_SY1000_SX677_AL_.jpg\",\n     \"title\": \"The Three Musketeers\",\n     \"lastupdated\": \"2015-09-16 06:21:07.210000000\",\n     \"languages\": [\"English\"],\n     \"released\": {\n       \"$date\": {\n         \"$numberLong\": \"133747200000\"\n       }\n     },\n     \"directors\": [\"Richard Lester\"],\n     \"writers\": [\"George MacDonald Fraser (screenplay)\", \"Alexandre Dumas père (novel)\"],\n     \"awards\": {\n       \"wins\": {\n         \"$numberInt\": \"4\"\n       },\n       \"nominations\": {\n         \"$numberInt\": \"7\"\n       },\n       \"text\": \"Won 1 Golden Globe. Another 3 wins & 7 nominations.\"\n     },\n     \"year\": {\n       \"$numberInt\": \"1973\"\n     },\n     \"imdb\": {\n       \"rating\": {\n         \"$numberDouble\": \"7.3\"\n       },\n       \"votes\": {\n         \"$numberInt\": \"11502\"\n       },\n       \"id\": {\n         \"$numberInt\": \"72281\"\n       }\n     },\n     \"countries\": [\"Spain\", \"USA\", \"Panama\", \"UK\"],\n     \"type\": \"movie\",\n     \"tomatoes\": {\n       \"viewer\": {\n         \"rating\": {\n           \"$numberDouble\": \"3.5\"\n         },\n         \"numReviews\": {\n           \"$numberInt\": \"9600\"\n         },\n         \"meter\": {\n           \"$numberInt\": \"78\"\n         }\n       },\n       \"dvd\": {\n         \"$date\": {\n           \"$numberLong\": \"982022400000\"\n         }\n       },\n       \"critic\": {\n         \"rating\": {\n           \"$numberDouble\": \"7.1\"\n         },\n         \"numReviews\": {\n           \"$numberInt\": \"11\"\n         },\n         \"meter\": {\n           \"$numberInt\": \"82\"\n         }\n       },\n       \"lastUpdated\": {\n         \"$date\": {\n           \"$numberLong\": \"1441307415000\"\n         }\n       },\n       \"rotten\": {\n         \"$numberInt\": \"2\"\n       },\n       \"production\": \"Live Home Video\",\n       \"fresh\": {\n         \"$numberInt\": \"9\"\n       }\n     },\n     \"plot_embedding\": [\n       -0.004237316,\n       -0.022958077,\n       -0.005921211,\n       -0.020323543,\n       0.010051459\n     ]\n   }\n\n.. _mflix-movies:\n\n``sample_mflix.movies``\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains details on movies. Each document contains\na single movie, and information such as its title, release year, and\ncast.\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n     - Properties\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n     - \n\n   * - ``cast_text_fullplot_text_genres_text_title_text``\n     - ``{ \n       \"_fts\": \"text\",\n       \"_ftsx\": 1\n       }``\n     - :manual:`Text index </core/index-text/>` on the \n       ``cast``, ``fullplot``, ``genres``, and ``title`` fields.\n     - :manual:`Sparse </core/index-sparse/>`\n\n\nSample Document\n```````````````\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-mflix.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"573a1390f29313caabcd413b\"\n     },\n     \"title\": \"The Arrival of a Train\",\n     \"year\": {\n       \"$numberInt\": \"1896\"\n     },\n     \"runtime\": {\n       \"$numberInt\": \"1\"\n     },\n     \"released\": {\n       \"$date\": {\n         \"$numberLong\": \"-2335219200000\"\n       }\n     },\n     \"poster\": \"http://ia.media-imdb.com/images/M/MV5BMjEyNDk5MDYzOV5BMl5BanBnXkFtZTgwNjIxMTEwMzE@._V1_SX300.jpg\",\n     \"plot\": \"A group of people are standing in a straight line along the\n       platform of a railway station, waiting for a train, which is seen\n       coming at some distance. When the train stops at the platform, ...\",\n     \"fullplot\": \"A group of people are standing in a straight line along\n       the platform of a railway station, waiting for a train, which is\n       seen coming at some distance. When the train stops at the platform,\n       the line dissolves. The doors of the railway-cars open, and people\n       on the platform help passengers to get off.\",\n     \"lastupdated\": \"2015-08-15 00:02:53.443000000\",\n     \"type\": \"movie\",\n     \"directors\": [\n       \"Auguste Lumière\",\n       \"Louis Lumière\"\n     ],\n     \"imdb\": {\n       \"rating\": {\n         \"$numberDouble\": \"7.3\"\n       },\n       \"votes\": {\n         \"$numberInt\": \"5043\"\n       },\n       \"id\": {\n         \"$numberInt\": \"12\"\n       }\n     },\n     \"cast\": [\n       \"Madeleine Koehler\"\n     ],\n     \"countries\": [\n       \"France\"\n     ],\n     \"genres\": [\n       \"Documentary\",\n       \"Short\"\n     ],\n     \"tomatoes\": {\n       \"viewer\": {\n         \"rating\": {\n           \"$numberDouble\": \"3.7\"\n         },\n         \"numReviews\": {\n           \"$numberInt\": \"59\"\n         }\n       },\n       \"lastUpdated\": {\n         \"$date\": {\n           \"$numberLong\": \"1441993589000\"\n         }\n       }\n     },\n     \"num_mflix_comments\": {\n       \"$numberInt\": \"1\"\n     }\n   }\n\n.. _mflix-sessions:\n   \n``sample_mflix.sessions``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains metadata about\n:ref:`users <mflix-users>`. Each document contains a user and\ntheir corresponding `JSON Web Token\n<https://en.wikipedia.org/wiki/JSON_Web_Token>`__\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n     - Properties\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n     -\n\n   * - ``user_id_1``\n     - ``{ \"user_id\" : 1}``\n     - Ascending index on the ``user_id`` field.\n     - :manual:`Unique </core/index-unique/>`\n\nSample Document\n```````````````\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-mflix.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"5a98348755593fdf68350932\"\n     },\n     \"user_id\": \"bfb9vc1zz@xhasq.5h9\",\n     \"jwt\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n   }\n\n.. _mflix-theaters:\n\n``sample_mflix.theaters``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains movie theater locations. Each document\ncontains a single movie theater and its location in\nboth string and :manual:`GeoJSON </reference/geojson/>` forms.\n\nIndexes\n```````\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n     - Properties\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n     -\n\n   * - ``geo index``\n     - ``{ \"location.geo\": \"2dsphere\" }``\n     - :manual:`Geospatial index\n       </geospatial-queries/#geospatial-indexes>` on the\n       ``location.geo`` field.\n     - :manual:`Sparse </core/index-sparse/>`\n\nSample Document\n```````````````\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-mflix.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"59a47286cfa9a3a73e51e72c\"\n     },\n     \"theaterId\": {\n       \"$numberInt\": \"1000\"\n     },\n     \"location\": {\n       \"address\": {\n         \"street1\": \"340 W Market\",\n         \"city\": \"Bloomington\",\n         \"state\": \"MN\",\n         \"zipcode\": \"55425\"\n       },\n       \"geo\": {\n         \"type\": \"Point\",\n         \"coordinates\": [\n           {\n             \"$numberDouble\": \"-93.24565\"\n           },\n           {\n             \"$numberDouble\": \"44.85466\"\n           }\n         ]\n       }\n     }\n   }\n\n.. _mflix-users:\n\n``sample_mflix.users``\n~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains information on ``mflix`` users. Each\ndocument contains a single user, and their name, email, and\npassword.\n\nIndexes\n```````\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n     - Properties\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n     -\n\n   * - ``email_1``\n     - ``{ \"email: 1 }``\n     - Unique, ascending index on the ``email`` field.\n     - :manual:`Unique </core/index-unique/>`\n\nSample Document\n```````````````\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-mflix.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"59b99db4cfa9a34dcd7885b6\"\n     },\n     \"name\": \"Ned Stark\",\n     \"email\": \"sean_bean@gameofthron.es\",\n     \"password\": \"$2b$12$UREFwsRUoyF0CRqGNK0LzO0HM/jLhgUCNNIJ9RJAqMUQ74crlJ1Vu\"\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-mflix.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n    \"address\": {\n      \"building\": \"8825\",\n      \"coord\": [-73.8803827, 40.7643124],\n      \"street\": \"Astoria Boulevard\",\n      \"zipcode\": \"11369\"\n    },\n    \"borough\": \"Queens\",\n    \"cuisine\": \"American\",\n    \"grades\": [ {\n      \"date\": {\"$date\": \"2014-11-15T00:00:00.000Z\"},\n      \"grade\": \"Z\",\n      \"score\": 38\n    },\n    {\n      \"date\": {\"$date\": \"2014-05-02T00:00:00.000Z\"},\n      \"grade\": \"A\",\n      \"score\": 10\n    },\n    {\n      \"date\": {\"$date\": \"2013-03-02T00:00:00.000Z\"},\n      \"grade\": \"A\",\n      \"score\": 7\n    },\n    {\n      \"date\": {\"$date\": \"2012-02-10T00:00:00.000Z\"},\n      \"grade\": \"A\",\n      \"score\": 13\n    }],\n      \"name\": \"Brunos On The Boulevard\",\n      \"restaurant_id\": \"40356151\"\n   }\n\n.. _restaurants-neighborhoods:\n\n``sample_restaurants.neighborhoods``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection contains details on the various neighborhoods of New\nYork City neighborhoods. Each document contains the name of the\nneighborhood, and a geometry sub-document which contains the shape of\nthe neighborhood.\n\nThese arrays of coordinates are typically used with the\n:query:`$geoWithin` operator to query data that exists within a\nspecified boundary.\n\nIndexes\n```````\n\nThe ``sample_restaurants.neighborhoods`` collection contains the\nfollowing indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-restaurants.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n    \"geometry\": {\n      \"coordinates\": [[\n        [-73.94193078816193, 40.70072523469547],\n        [-73.9443878859649, 40.70042452378256],\n        [-73.94424286147482, 40.69969927964773],\n        [-73.94409591260093, 40.69897295461309],\n        [-73.94394947271304, 40.69822127983908],\n        ...\n        [-73.94193078816193, 40.70072523469547]\n      ]]},\n    \"name\":\"Bedford\"\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-restaurants.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"5bd761dcae323e45a93ccfe8\"\n     },\n     \"saleDate\": {\n       \"$date\": {\n         \"$numberLong\": \"1427144809506\"\n       }\n     },\n     \"items\": [\n       {\n         \"name\": \"notepad\",\n         \"tags\": [\n           \"office\",\n           \"writing\",\n           \"school\"\n         ],\n         \"price\": {\n           \"$numberDecimal\": \"35.29\"\n         },\n         \"quantity\": {\n           \"$numberInt\": \"2\"\n         }\n       },\n       {\n         \"name\": \"pens\",\n         \"tags\": [\n           \"writing\",\n           \"office\",\n           \"school\",\n           \"stationary\"\n         ],\n         \"price\": {\n           \"$numberDecimal\": \"56.12\"\n         },\n         \"quantity\": {\n           \"$numberInt\": \"5\"\n         }\n       },\n       {\n         \"name\": \"envelopes\",\n         \"tags\": [\n           \"stationary\",\n           \"office\",\n           \"general\"\n         ],\n         \"price\": {\n           \"$numberDecimal\": \"19.95\"\n         },\n         \"quantity\": {\n           \"$numberInt\": \"8\"\n         }\n       },\n       {\n         \"name\": \"binder\",\n         \"tags\": [\n           \"school\",\n           \"general\",\n           \"organization\"\n         ],\n         \"price\": {\n           \"$numberDecimal\": \"14.16\"\n         },\n         \"quantity\": {\n           \"$numberInt\": \"3\"\n         }\n       }\n     ],\n     \"storeLocation\": \"Denver\",\n     \"customer\": {\n       \"gender\": \"M\",\n       \"age\": {\n         \"$numberInt\": \"42\"\n       },\n       \"email\": \"cauho@witwuta.sv\",\n       \"satisfaction\": {\n         \"$numberInt\": \"4\"\n       }\n     },\n     \"couponUsed\": true,\n     \"purchaseMethod\": \"Online\"\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-supplies.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n         \"$oid\": \"52cdef7c4bab8bd675298291\"\n     },\n     \"acquisition\": null,\n     \"acquisitions\": [],\n     \"alias_list\": null,\n     \"blog_feed_url\": \"http://mobiance.wordpress.com/feed/\",\n     \"blog_url\": \"http://mobiance.wordpress.com/\",\n     \"category_code\": \"web\",\n     \"competitions\": [],\n     \"created_at\": \"Tue Feb 12 17:31:58 UTC 2008\",\n     \"crunchbase_url\": \"http://www.crunchbase.com/company/mobiance\",\n     \"deadpooled_day\": null,\n     \"deadpooled_month\": null,\n     \"deadpooled_url\": null,\n     \"deadpooled_year\": null,\n     \"description\": null,\n     \"email_address\": \"info@mobiance.com\",\n     \"external_links\": [],\n     \"founded_day\": {\n         \"$numberInt\": \"1\"\n     },\n     \"founded_month\": {\n         \"$numberInt\": \"10\"\n     },\n     \"founded_year\": {\n         \"$numberInt\": \"2004\"\n     },\n     \"funding_rounds\": [],\n     \"homepage_url\": \"http://www.mobiance.com\",\n     \"image\": {\n         \"attribution\": null,\n         \"available_sizes\": [\n             [\n                 [\n                     {\n                         \"$numberInt\": \"150\"\n                     },\n                     {\n                         \"$numberInt\": \"43\"\n                     }\n                 ],\n                 \"assets/images/resized/0001/1859/11859v1-max-150x150.png\"\n             ],\n             [\n                 [\n                     {\n                         \"$numberInt\": \"208\"\n                     },\n                     {\n                         \"$numberInt\": \"60\"\n                     }\n                 ],\n                 \"assets/images/resized/0001/1859/11859v1-max-250x250.png\"\n             ],\n             [\n                 [\n                     {\n                         \"$numberInt\": \"208\"\n                     },\n                     {\n                         \"$numberInt\": \"60\"\n                     }\n                 ],\n                 \"assets/images/resized/0001/1859/11859v1-max-450x450.png\"\n             ]\n         ]\n     },\n     \"investments\": [],\n     \"ipo\": null,\n     \"milestones\": [],\n     \"name\": \"Mobiance\",\n     \"number_of_employees\": {\n         \"$numberInt\": \"5\"\n     },\n     \"offices\": [\n         {\n             \"address1\": \"BC-3, Atrium Business Center,\",\n             \"address2\": \"Coles Road, Frazer Town,\",\n             \"city\": \"Bangalore\",\n             \"country_code\": \"IND\",\n             \"description\": null,\n             \"latitude\": null,\n             \"longitude\": null,\n             \"state_code\": null,\n             \"zip_code\": \"560005\"\n         }\n     ],\n     \"overview\": \"<p>Mobiance provides the technology to track cell phones ...\",\n     \"partners\": [],\n     \"permalink\": \"mobiance\",\n     \"phone_number\": \"+91-80- 41264756\",\n     \"products\": [],\n     \"providerships\": [],\n     \"relationships\": [\n         {\n             \"is_past\": true,\n             \"person\": {\n                 \"first_name\": \"Ritesh\",\n                 \"last_name\": \"Ambastha\",\n                 \"permalink\": \"ritesh-ambastha\"\n             },\n             \"title\": \"Product Manager\"\n         }\n     ],\n     \"screenshots\": [],\n     \"tag_list\": null,\n     \"total_money_raised\": \"$0\",\n     \"twitter_username\": null,\n     \"updated_at\": \"Thu Dec 01 07:37:10 UTC 2011\",\n     \"video_embeds\": []\n   }\n\n.. _training-grades:\n\n``sample_training.grades``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis collection has randomly generated student grades.\nEach document contains a ``class_id`` that identifies the class and a\n``student_id`` that identifies the student.\nAll student class exam scores are stored in the ``scores`` array, which contains\nsubdocuments with two fields representing the type of assessment and the student\nscore for that assessment.\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-training.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n       \"_id\": {\n           \"$oid\": \"56d5f7eb604eb380b0d8d8fa\"\n       },\n       \"class_id\": {\n           \"$numberDouble\": \"173\"\n       },\n       \"scores\": [\n           {\n               \"score\": {\n                   \"$numberDouble\": \"19.81430597438296\"\n               },\n               \"type\": \"exam\"\n           },\n           {\n               \"score\": {\n                   \"$numberDouble\": \"16.851404299968642\"\n               },\n               \"type\": \"quiz\"\n           },\n           {\n               \"score\": {\n                   \"$numberDouble\": \"60.108751761488186\"\n               },\n               \"type\": \"homework\"\n           },\n           {\n               \"score\": {\n                   \"$numberDouble\": \"22.886167083915776\"\n               },\n               \"type\": \"homework\"\n           }\n       ],\n       \"student_id\": {\n           \"$numberDouble\": \"4\"\n       }\n   }\n\n\n.. _training-inspections:\n\n``sample_training.inspections``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``inspections`` collection was taken from the `NYC OpenData`_ dataset.\nEach ``inspections`` document contains information about:\n\n- The inspected business name, sector and address,\n- Inspection id, result, date and certificate number.\n\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-training.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n      \"_id\": {\n        \"$oid\": \"56d61033a378eccde8a8357e\"\n      },\n      \"address\": {\n          \"city\": \"LAWRENCE\",\n          \"number\": 1,\n          \"street\": \"BAY BLVD\",\n          \"zip\": 11559\n      },\n      \"business_name\": \"SPRAGUE OPERATING RESOURCES LLC.\",\n      \"certificate_number\": 3019422,\n      \"date\": \"Mar  3 2015\",\n      \"id\": \"11247-2015-ENFO\",\n      \"result\": \"Fail\",\n      \"sector\": \"Fuel Oil Dealer - 814\"\n   }\n\n\n.. _training-posts:\n\n``sample_airbnb.listingsAndReviews``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``posts`` collection is a set of randomly generated blog posts created\nusing US Senate speeches as the seed for the document body field.\nOn each document you will find:\n\n- Information on the blog posts like body text, author, permalink, date and\n  title,\n- Randomly generated list of tags,\n- Randomly generated list of comment subdocuments.\n\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-training.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n       \"_id\": {\n         \"$oid\": \"50ab0f8bbcf1bfe2536dc3f9\"\n       },\n       \"author\": \"machine\",\n       \"body\": \"Amendment I\\n<p>Congress shall make no law respecting ...  \",\n       \"comments\": [\n           {\n               \"author\": \"Santiago Dollins\",\n               \"body\": \"Lorem ipsum dolor sit amet, consectetur adipisicing...\",\n               \"email\": \"HvizfYVx@pKvLaagH.com\"\n           },\n           {\n               \"author\": \"Jaclyn Morado\",\n               \"body\": \"Lorem ipsum dolor sit amet, consectetur adipisicing...\",\n               \"email\": \"WpOUCpdD@hccdxJvT.com\"\n           }\n           ...\n       ],\n       \"date\": {\n         \"$date\": {\n           \"$numberLong\": \"1332804016000\"\n         }\n       },\n       \"permalink\": \"aRjNnLZkJkTyspAIoRGe\",\n       \"tags\": [\n           \"watchmaker\",\n           \"santa\",\n           \"xylophone\",\n           \"math\",\n           \"handsaw\",\n           \"dream\",\n           \"undershirt\",\n           \"dolphin\",\n           \"tanker\",\n           \"action\"\n       ],\n       \"title\": \"Bill of Rights\"\n   }\n\n\n.. _training-routes:\n\n``sample_training.routes``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``routes`` collection data was sourced from the `Open Flights`_ data.\nThe documents of this collection have information on airline routes between\nairports.\n\nEach document contains information about:\n\n- Airline data in subdocument containing the name, alias, unique\n  identifier and the IATA airline code,\n- The source and destination airports, identified their `IATA airport\n  code <https://www.iata.org/publications/Pages/code-search.aspx>`__,\n- Route codeshare and the number of stops.\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-training.txt"
  },
  {
    "code": "  :copyable: false\n\n   {\n       \"_id\": {\n         \"$oid\": \"56e9b39b732b6122f877fa5c\"\n       },\n       \"airline\": {\n           \"alias\": \"2G\",\n           \"iata\": \"CRG\",\n           \"id\": 1654,\n           \"name\": \"Cargoitalia\"\n       },\n       \"airplane\": \"A81\",\n       \"codeshare\": \"\",\n       \"dst_airport\": \"OVB\",\n       \"src_airport\": \"BTK\",\n       \"stops\": 0\n   }\n\n\n.. _training-trips:\n\n``sample_training.trips``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``trips`` collection contains bike trips data from the New York City Citibike\nservice.\nThe documents are composed of:\n\n- Bicycle unique identifier,\n- Trip start and stop time and date,\n- Trip start and end stations names and geospatial location,\n- User information such as gender, year of birth and service type (Customer or Subscriber).\n\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-training.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n       \"_id\": {\n         \"$oid\": \"572bb8222b288919b68abf82\"\n       },\n       \"bikeid\": 14785,\n       \"birth year\": 1977,\n       \"end station id\": 433,\n       \"end station location\": {\n           \"coordinates\": [\n               -73.98057249,\n               40.72955361\n           ],\n           \"type\": \"Point\"\n       },\n       \"end station name\": \"E 13 St & Avenue A\",\n       \"gender\": 1,\n       \"start station id\": 518,\n       \"start station location\": {\n           \"coordinates\": [\n               -73.9734419,\n               40.74780373\n           ],\n           \"type\": \"Point\"\n       },\n       \"start station name\": \"E 39 St & 2 Ave\",\n       \"start time\": {\n         \"$date\": {\n           \"$numberLong\": \"1332804016000\"\n         }\n       },\n       \"stop time\": {\n         \"$date\": {\n           \"$numberLong\": \"1352114016000\"\n         }\n       },\n       \"tripduration\": 812,\n       \"usertype\": \"Subscriber\"\n   }\n\n\n.. _training-zips:\n\n``sample_training.zips``\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``zips`` collection contains information of US cities and their area\npostal/zip code.\nDocuments contain information on the city name, area zip code, city center\ngeo coordinates (latitude and longitude), state and population.\n\nThis dataset is used to explore :manual:`2d Index </core/2d/>` creation and\nqueries.\n\nIndexes\n```````\n\nThis collection contains the following indexes:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - Index\n     - Description\n\n   * - ``_id_``\n     - ``{ \"_id\": 1 }``\n     - Primary key index on the ``_id`` field.\n\nSample Document\n```````````````\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-training.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"5c8eccc1caa187d17ca6ed29\"\n     },\n     \"city\": \"CLEVELAND\",\n     \"loc\": {\n         \"x\": 86.559355,\n         \"y\": 33.992106\n     },\n     \"pop\": 2369,\n     \"state\": \"AL\",\n     \"zip\": \"35049\"\n   }\n\n",
    "language": "js",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-training.txt"
  },
  {
    "code": "   :copyable: false\n\n   {\n     \"_id\": {\n       \"$oid\": \"5553a998e4b02cf7151190c9\"\n     },\n     \"st\": \"x+51900+003200\",\n     \"ts\": {\n       \"$date\": {\n         \"$numberLong\": \"447354000000\"\n       }\n     },\n     \"position\": {\n       \"type\": \"Point\",\n       \"coordinates\": [\n         {\n           \"$numberDouble\": \"3.2\"\n         },\n         {\n           \"$numberDouble\": \"51.9\"\n         }\n       ]\n     },\n     \"elevation\": {\n       \"$numberInt\": \"9999\"\n     },\n     \"callLetters\": \"PLAT\",\n     \"qualityControlProcess\": \"V020\",\n     \"dataSource\": \"4\",\n     \"type\": \"FM-13\",\n     \"airTemperature\": {\n       \"value\": {\n         \"$numberDouble\": \"4.8\"\n       },\n       \"quality\": \"1\"\n     },\n     \"dewPoint\": {\n       \"value\": {\n         \"$numberDouble\": \"4.6\"\n       },\n       \"quality\": \"1\"\n     },\n     \"pressure\": {\n       \"value\": {\n         \"$numberDouble\": \"1032.6\"\n       },\n       \"quality\": \"1\"\n     },\n     \"wind\": {\n       \"direction\": {\n         \"angle\": {\n           \"$numberInt\": \"170\"\n         },\n         \"quality\": \"1\"\n       },\n       \"type\": \"N\",\n       \"speed\": {\n         \"rate\": {\n           \"$numberDouble\": \"0.5\"\n         },\n         \"quality\": \"1\"\n       }\n     },\n     \"visibility\": {\n       \"distance\": {\n         \"value\": {\n           \"$numberInt\": \"999999\"\n         },\n         \"quality\": \"9\"\n       },\n       \"variability\": {\n         \"value\": \"N\",\n         \"quality\": \"9\"\n       }\n     },\n     \"skyCondition\": {\n       \"ceilingHeight\": {\n         \"value\": {\n           \"$numberInt\": \"99999\"\n         },\n         \"quality\": \"9\",\n         \"determination\": \"9\"\n       },\n       \"cavok\": \"N\"\n     },\n     \"sections\": [\n       \"AG1\",\n       \"MD1\",\n       \"OA1\",\n       \"SA1\"\n     ],\n     \"precipitationEstimatedObservation\": {\n       \"discrepancy\": \"2\",\n       \"estimatedWaterDepth\": {\n         \"$numberInt\": \"999\"\n       }\n     },\n     \"atmosphericPressureChange\": {\n       \"tendency\": {\n         \"code\": \"2\",\n         \"quality\": \"1\"\n       },\n       \"quantity3Hours\": {\n         \"value\": {\n           \"$numberDouble\": \"1.2\"\n         },\n         \"quality\": \"1\"\n       },\n       \"quantity24Hours\": {\n         \"value\": {\n           \"$numberDouble\": \"99.9\"\n         },\n         \"quality\": \"9\"\n       }\n     },\n     \"seaSurfaceTemperature\": {\n       \"value\": {\n         \"$numberDouble\": \"5.5\"\n       },\n       \"quality\": \"9\"\n     }\n   }\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sample-data/sample-weather.txt"
  },
  {
    "code": "   :emphasize-lines: 3\n\n   // publishers collection\n   {\n     \"_id\": \"oreilly\",\n     \"name\": \"O'Reilly Media\",\n     \"founded\": 1980,\n     \"location\": \"CA\"\n   }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/avoid-unbounded-arrays.txt"
  },
  {
    "code": "   :emphasize-lines: 9,19\n   \n   // books collection\n   {\n     \"_id\": 123456789,\n     \"title\": \"MongoDB: The Definitive Guide\",\n     \"author\": [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n     \"published_date\": ISODate(\"2010-09-24\"),\n     \"pages\": 216,\n     \"language\": \"English\",\n     \"publisher_id\": \"oreilly\"\n   }\n\n   {\n     \"_id\": 234567890,\n     \"title\": \"50 Tips and Tricks for MongoDB Developer\",\n     \"author\": \"Kristina Chodorow\",\n     \"published_date\": ISODate(\"2011-05-06\"),\n     \"pages\": 68,\n     \"language\": \"English\",\n     \"publisher_id\": \"oreilly\"\n   }   \n\nThis updated schema removes the unbounded array in the ``publishers``\ncollection and places a reference to the publisher in each book document\nusing the ``publisher_id`` field. This ensures that each document has a\nmanageable size, and there is no risk of a document field growing\nabnormally large.\n\nDocument References May Require ``$lookups``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis approach works especially well if your application loads the book\nand publisher information separately. If your application requires the\nbook and information together, it needs to perform a :pipeline:`$lookup`\noperation to join the data from the ``publishers`` and ``books``\ncollections. :pipeline:`$lookup` operations are not very performant, but\nin this scenario may be worth the trade off to avoid unbounded arrays.\n\nLearn More\n----------\n\n- To learn more about Data Modeling in MongoDB and the flexible schema\n  model, see :manual:`Data Modeling Introduction\n  </core/data-modeling-introduction/>`.\n\n- To learn how to model relationships with document references,\n  see :manual:`Model One-to-Many Relationships with Document References\n  </tutorial/model-referenced-one-to-many-relationships-between-documents/>`\n\n- To learn how to query arrays in MongoDB, see\n  :manual:`Query an Array </tutorial/query-arrays/>`.\n\n- MongoDB also offers a free MongoDB University Course on Data Modeling:\n  :mdbu-course:`Data Modeling for MongoDB </learning-paths/data-modeling-for-mongodb>`.\n\nMongoDB.live 2020 Presentations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. include:: /includes/extracts/mongodb-live-2020-data-model-methodology.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/avoid-unbounded-arrays.txt"
  },
  {
    "code": "   :copyable: false\n\n   { \"_id\" : 2, \"first_name\" : \"Michael\", \"last_name\" : \"Hughes\", \"dept\" : \"Security\" }\n   { \"_id\" : 4, \"first_name\" : \"MICHAEL\", \"last_name\" : \"FLORES\", \"dept\" : \"Sales\" }\n\nAlthough this query does return the expected documents, case-insensitive\nregex queries with no index support are not very performant. To improve\nperformance, :ref:`create an Atlas Search index <ref-create-index>`:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/case-insensitive-regex.txt"
  },
  {
    "code": "   :copyable: false\n\n   // movies collection\n\n   {\n       \"_id\": 123,\n       \"title\": \"2001: A Space Odyssey\",\n       \"poster\": <url>,\n       \"director\": \"Stanley Kubrick\",\n       \"release_year\": 1968,\n       \"box_office_usd\": 146000000,\n       \"countries_released\": [\n           \"United States\",\n           ...\n       ],\n       \"cast\": [\n           \"Keir Dullea\",\n           ...\n       ],\n       \"crew\": [\n            \"Ray Lovejoy\",\n            ...\n       ],\n       ...\n\n   }\n\n.. note::\n   Whenever possible, you should host images outside of your MongoDB \n   deployment and reference them with URLs. If you store images in \n   your database, you are much more likely to reach the document size \n   limit.\n\nIn this example, the most frequent query the website performs is to \nfind the 50 most recent movies' ``title`` and ``poster``. Instead of \nquerying for all movie information, consider breaking up the ``movie`` \ncollection into two separate collections, ``movies`` and \n``movie_metadata``. The collections are linked with the ``_id`` of \n``movie`` documents:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-document-size.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 4\n\n   // movies collection\n\n   {\n       \"_id\": 123,\n       \"title\": \"2001: A Space Odyssey\",\n       \"poster\": <url>\n   }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-document-size.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 5 \n\n   // movie_metadata collection\n\n   {\n       \"_id\": <object_id>,\n       \"movie_id\": 123, // reference to a movies document\n       \"director\": \"Stanley Kubrick\",\n       \"release_year\": 1968,\n       \"box_office_usd\": 146000000,\n       \"countries_released\": [\n           \"United States\",\n           ...\n       ],\n       \"cast\": [\n           \"Keir Dullea\",\n           ...\n       ],\n       \"crew\": [\n            \"Ray Lovejoy\",\n            ...\n       ],\n       ...\n\n   }\n\nThis way, when the website queries for the 50 most recent movies \nand their posters, it only loads information that it needs. If a user \nclicks on a movie, the site performs another query to find the \n``movie_metadata`` document associated with that movie. This new schema \nis more performant than the original because the most frequent query \nreturns much smaller documents.\n\nConsider your use case, especially the operations you most frequently \nperform, and design a schema that efficiently uses your working set.\n\nLearn More\n----------\n\n- To learn more about Data Modeling in MongoDB and the flexible schema\n  model, see :manual:`Data Modeling Introduction\n  </core/data-modeling-introduction/>`.\n\n- To learn more about using references to model your schema, see \n  :manual:`Model One-to-Many Relationships with Document References </tutorial/model-referenced-one-to-many-relationships-between-documents/>`.\n\n- MongoDB also offers a free MongoDB University Course on Data Modeling:\n  `Data Modeling for MongoDB <https://learn.mongodb.com/learning-paths/data-modeling-for-mongodb>`__.\n\nDesign Patterns\n~~~~~~~~~~~~~~~\n\n.. include:: /includes/fact-document-size-design-patterns.rst\n\nMongoDB.live 2020 Presentations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. include:: /includes/extracts/mongodb-live-2020-data-model-methodology.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-document-size.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 6, 13\n   \n   // inventory collection\n\n   {\n      \"name\": \"Pear\",\n      \"stock\": 20,\n      \"nutrition_id\": 123, // reference to a nutrition_fact document\n      ...\n   }\n\n   {\n      \"name\": \"Candy Bar\",\n      \"stock\": 26,\n      \"nutrition_id\": 456,\n      ...\n   }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-lookup-operations.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 4, 12\n\n   // nutrition_facts collection\n\n   {\n      \"_id\": 123,\n      \"calories\": 100,\n      \"grams_sugar\": 17,\n      \"grams_protein\": 1,\n      ...\n   }\n\n   {\n      \"_id\": 456,\n      \"calories\": 250,\n      \"grams_sugar\": 27,\n      \"grams_protein\": 4,\n      ...\n   }\n\nIf an application requests the nutrition facts for an inventory \nitem by ``name``, this schema structure requires a \n:pipeline:`$lookup` of the ``nutrition_facts`` collection to find \nan entry that matches the inventory item's ``nutrition_id``.\n\nInstead, you can embed the nutrition information inside the \n``inventory`` collection:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-lookup-operations.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 6\n   \n   // inventory collection\n\n   {\n      \"name\": \"Pear\",\n      \"stock\": 20,\n      \"nutrition_facts\": {\n         \"calories\": 100,\n         \"grams_sugar\": 17,\n         \"grams_protein\": 1,\n         ...\n      }\n      ...\n   }\n\n   {\n      \"name\": \"Candy Bar\",\n      \"stock\": 26,\n      \"nutrition_facts\": {\n         \"calories\": 250,\n         \"grams_sugar\": 27,\n         \"grams_protein\": 4,\n         ...\n      }\n      ...\n   }\n\nThis way, when you query for an item in ``inventory``, the nutrition \nfacts are included in the result without the need for another query or \na ``$lookup`` operation. Consider embedding documents when data across\ncollections has a one-to-one relationship.\n\n.. _use-arrays:\n\nUse Arrays\n~~~~~~~~~~\n\nConsider the following example where documents in a baseball league's \n``players`` collection reference documents in a ``teams`` \ncollection, similar to a tabular database:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-lookup-operations.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 4\n   \n   // players collection\n\n   {\n      \"team_id\": 1, // reference to a team document\n      \"name\": \"Nick\",\n      \"position\": \"Pitcher\"\n      ...\n   }\n   \n   {\n      \"team_id\": 1,\n      \"name\": \"Anuj\",\n      \"position\": \"Shortstop\"\n      ...\n   }\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-lookup-operations.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 4\n\n   // teams collection\n\n   {\n      \"_id\": 1,\n      \"name\": \"Danbury Dolphins\"\n      ...\n   }\n\nIf an application requests a list of players on a team, this schema \nstructure requires a :pipeline:`$lookup` of the ``players`` collection \nto find each player that matches a ``team_id``.\n\nInstead, you can list the ``players`` in an array on the \nteam document itself:\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-lookup-operations.txt"
  },
  {
    "code": "   :copyable: false\n   :emphasize-lines: 6\n\n   // teams collection\n\n   {\n       \"_id\": 1,\n       \"name\": \"Danbury Dolphins\",\n       \"players\": [\n          {\n             \"name\": \"Nick\",\n             \"position\": \"Pitcher\"\n             ...\n          },\n          {\n             \"name\": \"Anuj\",\n             \"position\": \"Shortstop\"\n             ...\n          }\n       ]\n   }\n\nBy using arrays to hold related data, an application can retrieve \ncomplete ``team`` information, including that team's players, \nwithout ``$lookup`` operations or indexes on other collections. \nIn this case, using arrays is more performant than storing the \ninformation in separate collections.\n\n.. note::\n   In the example above, the baseball teams have a set number of\n   players and there is no risk of arrays becoming exceedingly large.\n\nArray Considerations\n````````````````````\n\nThe performance cost of reading and writing to large arrays can\noutweigh the benefit gained by avoiding :pipeline:`$lookup`\noperations. If your arrays are unbounded or exceedingly large, those \narrays may degrade read and write performance.\n\nIf you create an index on an array, each element in the array is \nindexed. If you write to that array frequently, the performance cost of \nindexing or re-indexing a potentially large array field may be \nsignificant.\n\n.. seealso::\n   :ref:`unbounded-arrays-anti-pattern`\n\n.. _anti-pattern-denormalization:\n\nDenormalization\n---------------\n\nDenormalizing your schema is the process of duplicating fields or \nderiving new fields from existing ones. Denormalization can improve \nread performance in a variety of cases, such as:\n\n- A recurring query requires a few fields from a large document in \n  another collection. You may choose to maintain a copy of those fields \n  in an embedded document in the collection that the recurring query \n  targets to avoid merging two distinct collections or performing \n  frequent ``$lookup`` operations.\n\n- An average value of some field in a collection is frequently \n  requested. You may choose to create a derived field in a separate \n  collection that is updated as part of your writes and maintains a \n  running average for that field.\n\nWhile embedding documents or arrays without duplication is \npreferred for grouping related data, denormalization can improve read \nperformance when separate collections must be maintained.\n\n.. note::\n   When you denormalize your schema, it becomes your responsibility to \n   maintain consistent duplicated data.\n\nLearn More\n----------\n\nThe best structure for your schema depends on your application context. \nThe following resources provide detailed information on data modeling \nand additional example use cases for embedded documents and arrays:\n\nData Models\n~~~~~~~~~~~\n\n- To learn more about Data Modeling in MongoDB and the flexible schema\n  model, see :manual:`Data Modeling Introduction\n  </core/data-modeling-introduction/>`.\n\n- To learn more about the tradeoffs between embedded and normalized\n  data models, see :manual:`Data Modeling </data-modeling>`.\n\n- MongoDB also offers a free MongoDB University Course on Data Modeling:\n  :mdbu-course:`Data Modeling for MongoDB </learning-paths/data-modeling-for-mongodb>`.\n\nMongoDB.live 2020 Data Modeling Presentations\n`````````````````````````````````````````````\n\n.. include:: /includes/extracts/mongodb-live-2020-data-model-methodology.rst\n\nArrays\n~~~~~~\n\nTo learn more about how to query arrays in MongoDB, see\n:manual:`Query an Array </tutorial/query-arrays/>`.\n\nDesign Patterns\n~~~~~~~~~~~~~~~\n\n.. include:: /includes/fact-array-design-patterns.rst\n\nDenormalized Schemas\n~~~~~~~~~~~~~~~~~~~~\n\n.. include:: /includes/fact-denormalization-design-patterns.rst\n\n",
    "language": "javascript",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/schema-suggestions/reduce-lookup-operations.txt"
  },
  {
    "code": "         :copyable: false \n\n         http://169.254.170.2 + AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\n\n      ``AWS_CONTAINER_CREDENTIALS_RELATIVE_URI`` is an environment variable. \n      To learn more, see :aws:`IAM Roles for Tasks\n      </AmazonECS/latest/developerguide/task-iam-roles.html>`. \n\n      |aws| EC2 gets the credentials from Instance Metadata Service V2 at the \n      following |url|: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security/aws-iam-authentication.txt"
  },
  {
    "code": "         :copyable: false\n\n         http://169.254.169.254/latest/meta-data/iam/security-credentials/\n\n      To learn more, see :aws:`Launch an instance with an IAM role\n      </AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#attach-iam-role>`. \n\n   .. tab:: AWS ECS Fargate\n      :tabid: aws-ecs-fargate\n\n      To learn how to configure an AWS IAM role for authentication with \n      |aws| ECS Fargate, see the :aws:`AWS documentation \n      </AmazonECS/latest/developerguide/task_execution_IAM_role.html>`.\n\n   .. tab:: AWS EKS \n      :tabid: aws eks\n\n      For |aws| :abbr:`EKS (Elastic Kubernetes Service)`, you must first\n      assign the |iam| role to your pod to set up the following environment \n      variables in that pod:\n\n      - ``AWS_WEB_IDENTITY_TOKEN_FILE`` - contains the path to the web \n        identity token file.\n      - ``AWS_ROLE_ARN`` - contains the |iam| role used to connect to\n        your {+database-deployment+}. \n\n      For information on assigning an |iam| role to your pod, see the \n      :aws:`AWS documentation\n      </eks/latest/userguide/specify-service-account-role.html>`.\n\n      After you assign the |iam| role to your pod, you must manually\n      assume the |iam| role to connect to your {+database-deployment+}.\n\n      To assume the role manually: \n\n      1. Use the |aws| :aws-docs:`SDK <AWSJavaScriptSDK/latest/>` to \n         call :aws-docs:`AssumeRoleWithWebIdentity <STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html>`.\n\n         .. tip::\n\n            - Omit the ``ProviderID`` parameter.\n            - Find the value of the ``WebIdentityToken`` parameter in the file\n              described in your pod's ``AWS_WEB_IDENTITY_TOKEN_FILE`` \n              environment variable.\n\n      #. Pass the credentials that you received in the previous step to the\n         MongoDB driver. See your :driver:`driver's documentation </>` for \n         details.\n\nGrant Database Access to AWS IAM Roles \n--------------------------------------\n\nTo grant database access to the |aws| |iam| role, complete the steps\ndescribed in the :ref:`mongodb-users` section for |aws| |iam|. For\nmore information on granting database access using {+atlas-cli+},\n{+atlas-admin-api+}, or {+atlas-ui+}, see :ref:`add-mongodb-users`. \n\nConnect to |service| {+Cluster+} Using AWS IAM\n----------------------------------------------\n\nTo connect to |service| with your |aws| |iam| credentials using\n{+mongosh+}, provide :ref:`a connection string that specifies the\nMONGODB-AWS authentication mechanism\n<connections-string-example-mongodb-aws>`. This connection string\nformat applies to all AWS IAM authentication mechanisms. \n\n.. important::\n\n   You must configure authentication using one of the\n   methods described in the :ref:`passwordless-auth-aws-no-saml` before\n   you can use this connection string format.\n\n.. include:: /includes/aws-iam-connection-string-example.rst\n\n.. seealso:: \n\n   :aws-docs:`IAM roles for service accounts <eks/latest/userguide/iam-roles-for-service-accounts.html>`\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security/aws-iam-authentication.txt"
  },
  {
    "code": "      :emphasize-lines: 8\n\n      {\n        \"azureKeyVault\": {\n          \"azureEnvironment\": \"AZURE\",\n          \"clientID\": \"5e4ea010-a908-45a1-a70b-ebd2e4feb055\",\n          \"enabled\": true,\n          \"keyIdentifier\": \"https://EXAMPLEKeyVault.vault.azure.net/keys/EXAMPLEKey/d891821e3d364e9eb88fbd3d11807b86\",\n          \"keyVaultName\": \"string\",\n          \"requirePrivateNetworking\": false,\n          \"resourceGroupName\": \"string\",\n          \"secret\": \"string\",\n          \"subscriptionID\": \"d0dd68eb-7e97-448c-b361-f7a7213dc7e2\",\n          \"tenantID\": \"f95ac700-4c8f-4a38-a8d1-1582733edd5b\"\n        }\n      }\n\n.. _azure-remove-reject-pvt-endpoint:\n\nReject or Remove Private Endpoint Connection\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo successfully remove a private endpoint, send a ``DELETE`` request to\nthe {+atlas-admin-api+} :oas-atlas-op:`endpoint\n</requestEncryptionAtRestPrivateEndpointDeletion>` and specify the ID of\nthe project and of the private endpoint that you want to delete. \n\n.. example:: \n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security/azure-kms-over-private-endpoint.txt"
  },
  {
    "code": "      :copyable: true\n\n      \n      curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" --digest \\\n      --header \"Accept: application/json\" \\\n      --header \"Content-Type: application/json\" \\\n      --include \\\n      --request GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/encryptionAtRest/AZURE/privateEndpoints/\"      \n      \nWhile |service| attempts to create a new private endpoint, the status of\nthe private endpoint that you rejected or removed transitions to\n``PENDING_RECREATION`` and the new endpoint that |service| attempts to\ncreate is in ``INITIATING`` state. You must approve the new private\nendpoint after it is created. \n\nRevoke Access to an Encryption Key \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can revoke |service|'s access to an encryption key from within\n|akv| to freeze your data. |service| automatically pauses your\n{+clusters+} when you revoke access to the encryption key.\n\nRotate your Azure Key Identifier\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. meta::\n   :keywords: encryption\n\n.. include:: /includes/unavailable-serverless-m0-m2-m5-clusters.rst\n\nBefore you begin, learn :ref:`azure-kms-rotate-key`.\n\nYou must create a new key in the |akv| associated with your\n|service| project. The following procedure documents how to rotate your\n|service| project Key Identifier by specifying a new key identifier in\n|service|. \n\n.. include:: /includes/steps-rotate-azure-encryption-key.rst\n\nRelated Topics\n--------------\n\n- To enable Encryption at Rest using your Key Management when deploying\n  an |service| cluster, see :ref:`create-cluster-enable-encryption`.\n\n- To enable Encryption at Rest using your Key Management for an\n  existing |service| cluster, see\n  :ref:`scale-cluster-enable-encryption`.\n\n- To learn more about Encryption at Rest using your Key Management in\n  |service|, see :ref:`security-kms-encryption`.\n\n- To learn more about MongoDB Encryption at Rest, see\n  :manual:`Encryption at Rest </core/security-encryption-at-rest/>` in\n  the MongoDB server documentation.\n\n- To learn more about Encryption at Rest with {+Cloud-Backup+}s, see :ref:`encrypted-cloud-provider-snapshot`.\n\n",
    "language": "json",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security/azure-kms-over-private-endpoint.txt"
  },
  {
    "code": "   :copyable: false\n\n   ldapsearch -H 'ldaps://ldap.aadds.example.com' -b 'DC=aadds,DC=example,DC=com' -s sub -D 'CN=LDAP Bind User,OU=AADDC Users,DC=aadds,DC=example,DC=com' -w '<REDACTED>' '(&(objectCategory=user)(memberOf=CN=Atlas read only,OU=AADDC Users,DC=aadds,DC=example,DC=com))'\n\n.. note::\n    \n    Other query templates may also work.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security-ldaps-azure.txt"
  },
  {
    "code": "   :copyable: false\n\n   ldapsearch -H 'ldaps://mdb-example.ldap.okta.com' -D \"uid=jane@example.com,dc=mdb-example,dc=okta,dc=com\" -w \"REDACTED\" -b 'ou=groups,dc=mdb-example,dc=okta,dc=com' '(&(objectClass=groupofUniqueNames)(uniqueMember=uid=jane@example.com,ou=users,dc=mdb-example,dc=okta,dc=com))'\n\n.. note::\n    \n    Other query templates may also work. Using the default template of \n    ``{USER}?memberOf?base`` may result in longer search times.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security-ldaps-okta.txt"
  },
  {
    "code": "   :copyable: false\n\n   ldapsearch -H 'ldaps://ldap.us.onelogin.com:636' -D 'cn=jane@example.com,ou=users,dc=mdb-example,dc=onelogin,dc=com' -w '<REDACTED>' -b 'dc=mdb-example,dc=onelogin,dc=com' -s sub\n\n.. note::\n     \n   Other query templates may also work.\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security-ldaps-onelogin.txt"
  },
  {
    "code": "         :copyable: false\n\n         There are no more regions supported with your existing configuration. Try changing to\n         a different cluster tier or changing your region configuration.\n\n      To resolve this error, follow this general process:\n\n      1. :ref:`Remove all clusters from the Google Cloud container <terminate-cluster>`.\n\n      #. Delete the |gcp| container using the {+atlas-admin-api+}. See :oas-atlas-op:`Remove One \n         Network Peering Container </deletePeeringContainer>`.\n\n      #. Create a new |gcp| container without restricted regions with an Atlas CIDR block of \n         at least ``/18`` using the {+atlas-admin-api+}. See :oas-atlas-op:`Create a New Network \n         Peering Container </createPeeringContainer>`.\n\n   .. tab::\n      :tabid: azure\n\n      .. note::\n\n         Effective March 31, 2020, |service| has removed the\n         **Peering-Only Mode** limitations for all existing and new\n         Azure clusters. To learn how to use these new features, see\n         the :ref:`FAQ on changes to Azure network peering \n         <atlas-faq-azure-gcp-peering-only>`\n\n      Azure Roles Required to Configure a Network Peering Connection\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      To learn the |azure| roles that you need to create a Network\n      Peering connection, see the :azure:`Azure documentation\n      </virtual-network/virtual-network-manage-peering#permissions>`.\n\n      Configure Network Peering for an Azure-backed Cluster\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n      To configure Network Peering for an |azure|-backed cluster:\n\n      .. include:: /includes/steps-network-peering-azure.rst\n\n      You must add the |cidr| block address (or subset)\n      associated with the peer VNet to the\n      :ref:`whitelist <access-list>` before your network peer\n      can connect to your |service| cluster. When connecting to your \n      cluster, you must use the new :ref:`private connection string \n      <atlas-faq-connstring-private>` to utilize the peering.\n\nView |service| Network Peering Connections\n------------------------------------------\n\n.. tabs::\n\n   .. tab:: {+atlas-cli+}\n      :tabid: atlascli\n\n      .. include:: /includes/extracts/atlas-networking-peering-list.rst\n\n   .. tab:: {+atlas-ui+}\n      :tabid: ui\n\n      To view your network peering connections using the {+atlas-ui+}:\n\n      .. procedure::\n         :style: normal\n\n         .. include:: /includes/nav/steps-network-access.rst\n\n         .. step:: Click the :guilabel:`Peering` tab.\n            \n            |service| displays your network peering connections.\n\nRemove an |service| Network Peering Connection\n----------------------------------------------\n\n.. tabs::\n\n   .. tab:: {+atlas-cli+}\n      :tabid: atlascli\n\n      .. include:: /includes/extracts/atlas-networking-peering-delete.rst\n\n   .. tab:: {+atlas-ui+}\n      :tabid: ui\n\n      To remove your network peering connection using the {+atlas-ui+}:\n\n      .. procedure::\n         :style: normal\n\n         .. include:: /includes/nav/steps-network-access.rst\n\n         .. step:: Click the :guilabel:`Peering` tab.\n            \n            |service| displays your network peering connections.\n\n         .. step:: Remove the network peering connection.\n\n            a. Click :guilabel:`TERMINATE` next to the network peering \n               connection that you want to remove.\n            \n            #. Click :guilabel:`Yes, Terminate` to confirm the removal.\n\n",
    "language": "",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/security-vpc-peering.txt"
  },
  {
    "code": "   :copyable: false\n\n   Obtaining stats for sample_airbnb\n   Obtaining stats for sample_geospatial\n   Obtaining stats for sample_mflix\n   Obtaining stats for sample_supplies\n   Obtaining stats for sample_training\n   Obtaining stats for sample_weatherdata\n   Total data size in GB: 0.32\n   Total index size in GB: 0.02\n\nTo run these databases completely in memory, you would need a minimum\nof 0.68 GB of physical RAM, as WiredTiger uses 50% of the physical RAM\nand we need at least 0.34 GB to fit the working set in memory.\n\nA realistic production cluster would have a much higher data and index\nsize and it may not be practical, or not a business or performance\nrequirement, to run the complete data set and indexes in memory. Let’s\nlook at another scenario.\n\nExample: Mobile App\n~~~~~~~~~~~~~~~~~~~\n\nA popular mobile game has 512 GB of data and 32 GB of indexes. The\ngame’s internal system data occupies 16 GB, and the rest is player\nprofile data. A player's profile is required to be in memory while the\nplayer is active in the game. About 25% of all players are active at\nany point in time. The system data is used constantly and it must fit\ncompletely in RAM for optimal game performance. All indexes must also\nfit in RAM for the fastest query response time. The memory sizing is as\nfollows:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Data\n     - RAM Requirements\n     - RAM for WiredTiger Cache\n\n   * - System: 16 GB\n     - 100% in RAM\n     - 16 GB\n\n   * - Index: 32 GB\n     - 100% in RAM\n     - 32 GB\n\n   * - Player Profiles: 496 GB\n     - 25% in RAM\n     - 124 GB\n\nGiven these requirements, you can expect an average \n:manual:`working set </reference/glossary/#term-working-set>` to \nrequire 172 GB of RAM.\n\nWiredTiger dedicates 50% of physical RAM to the WiredTiger cache, so \nthe minimum total physical RAM required to accommodate your working set \nis twice the working set.\n\nIn this example, you need at least 344 GB of physical RAM to \naccommodate the WiredTiger cache and a 172 GB working set. The \nfollowing table lists suitable |service| cluster tiers:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 15 30 55\n\n   * - Service Provider\n     - Possible Cluster Tiers\n     - Notes\n\n   * - AWS\n\n     - - ``M300`` 384 GB RAM\n       - ``M400`` 488 GB RAM\n       - ``M700`` 768 GB RAM\n\n     - ``M300`` has sufficient RAM, and there is room to scale \n       vertically to higher cluster tiers.\n\n   * - GCP\n     - - ``M300`` 360 GB RAM\n     - ``M300`` has sufficient RAM, but there are no higher tiers \n       available if vertical scaling is required.\n\n   * - Azure \n     - - ``M300`` 384 GB RAM\n       - ``M400`` 432 GB RAM\n     - ``M300`` has sufficient RAM, and there is room to scale \n       vertically to a higher cluster tier.\n\n.. note::\n\n   If you select a cluster tier without sufficient RAM, such as an \n   Azure ``M200`` with 256 GB RAM, :manual:`sharding </sharding/>` is \n   required.\n\nNetwork Traffic\n---------------\n\nAll network traffic between cluster nodes and between clients consuming\ndata from your |service| cluster impact network bandwidth. For purposes\nof cluster sizing, consider the maximum traffic that any node on your\ncluster will bear and use this as the basis for selecting an adequate\n|service| cluster tier.\n\nDownstream data transfer rates from your cluster to client applications\ncan be calculated as the sum of the total documents returned over a\nperiod of time. If you are reading only from the\n:manual:`primary node </core/replica-set-primary/>`, this is the only\ncalculation you need to do. If your applications read from\n:manual:`secondary nodes </core/replica-set-secondary/>` as well, you\ncan divide this number by the number of nodes that can serve read\noperations.\n\nYou can find the average document size for a database with the\n:method:`db.stats()` method. Multiply the average\ndocument size (``avgObjSize``) by the number of documents served per second to estimate\nyour bandwidth requirements.\n\n.. example::\n\n   10 KB average document size\n\n   100,000 documents per second served\n\n   10 KB * 100,000 = 1 GB per second\n\n|service| instances provide faster bandwidth speeds at the higher\ntiers. Instances which are backed by\n:doc:`AWS </reference/amazon-aws/>` provide up to 10 gigabits per\nsecond at the ``M30`` level, while the ``M200`` level provides up to\n25 gigabits per second.\n\nConnections\n~~~~~~~~~~~\n\nAn |service| cluster can support a number of client connections which\nis determined by its cluster tier. For example, ``M30`` clusters support up to 3000\nsimultaneous connections and ``M200`` clusters support up to 128,000\nsimultaneous connections. To learn more, see \n:ref:`Connection Limits and Cluster Tier <connection-limits>`.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/sizing-tier-selection.txt"
  },
  {
    "code": "   :copyable: false\n\n   DNSHostNotFound: Failed to look up service \"<MongoDB service name>\"\n\nThis error may occur when using the default |dns| server that your\n|isp| provides. That |dns| server might not support |srv| lookups that\nthe |dns| seed list connection string format uses.\n\nTo resolve the issue, you can try changing your |dns| configuration to\nuse a :wikipedia:`public DNS server <Public_recursive_name_server>`.\n\n.. This might introduce issues using services that your |isp| provides.\n.. The |isp|'s |dns| servers may advertise these unique services to\n.. users of those |dns| services. Verify that |isp| services that you\n.. use regularly still work as expected if you change |dns| servers.\n\n.. example::\n\n   You can configure your network settings to\n   :google:`use Google Public DNS </speed/public-dns/docs/using>`\n   instead of your |isp|'s |dns| servers.\n\nAfter you update your network settings to use a public |dns| server,\n:ref:`connect to the {+database-deployment+} <connect-to-database-deployment>`.\n\nConnection String Error with DB Tools on Ubuntu 18.04\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf running Ubuntu 18.04 and using the\n:ref:`DNS seed list connection string <connections-dns-seedlist>`\nformat (``mongodb+srv://``) to connect to |service| from one of\nthe :dbtools:`MongoDB Database Tools </>`\n(``mongodump``, ``mongorestore``, etc), you might see the following\nerror:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/troubleshoot-connection.txt"
  },
  {
    "code": "   :copyable: false\n\n   lookup nta8e.mongodb.net on 123.45.67.8:27017: cannot unmarshal DNS message\n\nIf so, use one of the following connection options instead:\n\n- use the ``--uri`` option with a\n  :ref:`non-SRV connection string <connections-standard-connection-string-format>` (``mongodb://``).\n- use the ``--host`` option to specify the host to connect.\n\n.. _atlas-connection-refused-srv:\n\nConnection Refused using SRV Connection String\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen using the\n:ref:`DNS seed list connection string <connections-dns-seedlist>`\nformat (``mongodb+srv://``) with a driver or Compass, you may\nreceive in the following error:\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/troubleshoot-connection.txt"
  },
  {
    "code": "   :copyable: false\n\n   Error: querySrv ECONNREFUSED _mongodb._tcp.<SRV Record>\n\nTo remedy this issue, select an older version of the driver or Compass\nto use the :ref:`Standard Connection String format\n<connections-standard-connection-string-format>`. With Compass, don't\nset the **SRV Record** value, set the **Hostname** and **Port** values\ninstead.\n\n",
    "language": "none",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/troubleshoot-connection.txt"
  },
  {
    "code": "            :copyable: false \n\n            mongodump --uri\n            mongodb+srv://{username}:<PASSWORD>@test.jca5k.mongodb.net/<DATABASE> \n            \n      To learn more, see :ref:`command-line-tools`.\n\n   .. step:: Run the |mongodump| command in a terminal to retrieve the data. \n\n      To run the |mongodump| command that you copied, do the\n      following in a terminal: \n\n      a. Paste the ``mongodump`` command that you copied into the terminal.\n      \n      #. Replace the ``<PASSWORD>`` in the string with the password of\n         the user.\n\n      #. Replace the ``<DATABASE>`` in the string with the name of the\n         database that you want to migrate to the {+dedicated-cluster+}.\n\n      #. Run the |mongodump| command.\n\n         When you run |mongodump|, the command copies the contents of\n         the specified database into the ``dump/`` sub-directory of the \n         current directory. If the ``dump`` directory doesn't already\n         exist, the command creates the directory and copies the data\n         into that directory.\n\n      #. Repeat these steps for each database that you want to migrate to the\n         {+dedicated-cluster+}.\n\n   .. include:: /includes/nav/steps-db-deployments-page.rst\n\n   .. step:: Connect to your {+dedicated-cluster+} using |mongorestore| to migrate the data to that {+cluster+}.\n\n      To connect to your {+dedicated-cluster+} and migrate the data,\n      do the following in the {+atlas-ui+}:\n\n      a. Click the :icon-mms:`ellipsis` (ellipsis) for the\n         {+dedicated-cluster+} and select :guilabel:`Command Line\n         Tools` from the dropdown. \n\n         The :guilabel:`Cmd Line Tools` tab displays.\n\n      #. In the :guilabel:`Binary Import and Export Tools` section, copy\n         the ``mongorestore`` command to create a new database or add\n         data to an existing database. \n\n         For example:\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/tutorial/convert-serverless-to-dedicated.txt"
  },
  {
    "code": "            :copyable: false \n\n            mongorestore --uri\n            mongodb+srv://{username}:<PASSWORD>@test.jca5k.mongodb.net\n            \n      To learn more, see :ref:`command-line-tools`.\n            \n   .. step:: Run the |mongorestore| command in a terminal to retrieve the data. \n\n      To run the |mongorestore| command that you copied, do the\n      following in a terminal: \n\n      a. Paste the ``mongorestore`` command that you copied into the terminal.\n      \n      #. Replace the ``<PASSWORD>`` in the string with the password of\n         the user.\n\n      #. Run the |mongorestore| command.\n\n         When you run |mongorestore|, by default, the command copies the\n         contents of the ``dump/`` sub-directory of the current\n         directory to the {+cluster+}. If you stored the data in a\n         different directory, see |mongorestore| syntax for the\n         command options to specify a different location. \n\n      #. (Optional) If you are migrating each database individually,\n         repeat these steps for each database that you want to migrate to the \n         {+dedicated-cluster+}.\n\n   .. include:: /includes/nav/steps-db-deployments-page.rst\n\n   .. step:: (Optional) Confirm that you've successfully migrated data to the {+dedicated-cluster+}.\n\n      To confirm that you've successfully migrated your data, do the\n      following in the {+atlas-ui+}.\n\n      a. Do one of the following on the {+dedicated-cluster+} where you\n         copied the data:  \n       \n         - Review the {+atlas-ui+}:\n\n           i. .. include:: /includes/nav/list-data-explorer\n            \n           #. Visually verify that data has been migrated to the \n              {+cluster+}  \n\n         - Click :guilabel:`Connect` to connect to your {+cluster+} and\n           run queries against the data.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/tutorial/convert-serverless-to-dedicated.txt"
  },
  {
    "code": "               :copyable: false\n\n                chmod +x <executable-filename>\n      \n         .. tab:: MacOS (Intel)\n            :tabid: macosintel\n            \n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/tutorial/transition-bic-to-atlas-sql.txt"
  },
  {
    "code": "               :copyable: false\n\n                chmod +x <executable-filename>\n      \n         .. tab:: Ubuntu\n            :tabid: ubuntu\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/tutorial/transition-bic-to-atlas-sql.txt"
  },
  {
    "code": "               :copyable: false\n\n                chmod +x <executable-filename>\n      \n         .. tab:: Windows\n            :tabid: windows\n\n   .. step:: (Optional) Download and decompress your {+abic+} logs.\n\n      Providing your {+abic+} logs enables the Readiness Report Tool to \n      report on the following information:\n      \n      - Historical query data, such as volume and frequency.\n      - Query syntax that will fail in {+asql+}.\n      - Collection fields with data types\n        unknown to relational databases.\n\n      To download your {+abic+} logs:\n      \n      a. In the {+atlas-ui+}, go to the |service| cluster with the \n         BI connection that you want to analyze. \n      \n      #. From your cluster's options (:icon-mms:`ellipsis`), \n         select :guilabel:`Download Logs`.\n         \n      #. Download ``mongosql.gz``.\n\n      #. Create a new directory,\n         then decompress ``mongosql.gz`` into it.\n   \n   .. step:: (Optional) Copy your cluster URI.\n\n      Providing your |service| cluster |uri| enables the Readiness Report Tool \n      analyze your collection schemas and identify fields that \n      contain data types unknown to SQL tools.\n\n      To find your cluster |uri|:\n      \n      a. In the {+atlas-ui+}, go to the\n         cluster with the collections that you\n         want to analyze.\n      \n      #. Click :guilabel:`Connect`.\n\n      #. Select :guilabel:`Shell` from the list of connection options.\n\n      #. Copy only your connection |uri|.\n\n         The connection |uri| resembles: ``mongodb+srv://bicluster.example.mongodb.net/``.\n         Exclude the shell executable, ``mongosh``, and any shell-specific\n         command line options.\n\n   .. step:: Generate a report.\n\n      In a terminal, run the Readiness Report Tool executable, providing\n      your downloaded logs or your cluster |uri|.\n\n      - You must include your database username. \n      - You must include either ``--input``, ``--uri``, or both. \n        If you include your |uri|, the Readiness Report Tool prompts you \n        for your database user password.\n      - You can specify an ``--output`` destination for your generated\n        report. If you don't, it's generated in your current\n        directory.\n      - You can specify a ``--resolver`` to choose a |dns| resolver for network requests. \n        Possible values are: ``cloudflare``, ``google``, and ``quad9``.\n      - You can use ``--include`` or ``--exclude`` to narrow your list of namespaces.\n        Glob syntax is supported. By default, all namespaces are included.    \n      \n      The ``--help`` option returns the full list of \n      Readiness Report Tool options:\n      \n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/tutorial/transition-bic-to-atlas-sql.txt"
  },
  {
    "code": "         :copyable: false\n\n         <executable-filename> --help\n         Options:\n              -i, --input <INPUT>        Sets the input file or directory to analyze BIC logs (optional). One of `--input` or `--uri` must be provided, or both\n              -o, --output <OUTPUT>      Sets the output directory (optional). If not specified, the current directory is used\n                  --uri <URI>            The Atlas cluster URI to analyze schema (optional). One of `--input` or `--uri` must be provided, or both\n              -u, --username <USERNAME>  Username for authentication (optional). This is required if the username and password is not provided in the URI\n                  --quiet                Enables quiet mode for less output\n                  --resolver <RESOLVER>  The specified resolver (optional) [possible values: cloudflare, google, quad9]\n                  --include <INCLUDE>    A list of namespaces to include (optional). If not provided, all namespaces are included. Glob syntax is supported\n                  --exclude <EXCLUDE>    A list of namespaces to exclude (optional). If not provided, no namespaces are excluded\n              -h, --help                 Print help (see more with '--help')\n              -V, --version              Print version\n\n      The Readiness Report Tool organizes the output and generates a clickable index file \n      so you can easily navigate the report.\n\nTransition to {+asql+}\n-----------------------\n\nThe underlying architecture of {+asql+} is different from {+abic+} \nand you might need to adapt your schema or your queries.\n\nTo transition to {+asql+}, identify existing {+abic+}\nqueries that fail on {+asql+} and update your schema or their syntax\nto fix them.\n\n.. warning::\n   \n   MongoDB recommends testing the full transition process in a sandbox environment\n   before you make changes to your production environment. Transitioning from the {+abic+}\n   to {+asql+} without adapting your schema or your queries\n   might cause breaking changes.\n\n.. procedure::\n   :style: normal\n\n   .. step:: Enable {+asql+} for your {+fdi+}.\n\n      To learn more about enabling and using {+asql+},\n      see :ref:`enable-sql-interface`.\n\n   .. step:: Connect to your data with the {+asql+} Interface.\n\n      To learn more about connecting with {+asql+},\n      see :ref:`sql-connect`.\n\n   .. step:: Test your queries.\n      \n      Test your queries with your new {+asql+} connection to ensure\n      they run and return the results you expect.\n\n      To learn more about querying with {+asql+},\n      see :ref:`asql-write-asql-queries`.\n\n   .. step:: View your schema and adapt it if necessary.\n      \n      To learn more about schemas in {+asql+}, see\n      :ref:`sql-schema-management`.\n\n   .. step:: Adapt any failing queries.\n\n      Some query syntax might need to be changed when you\n      transition from the {+abic+} to {+asql+}.\n\n      To learn more about {+asql+} query syntax, see :ref:`sql-reference`.\n\nTroubleshoot {+asql+}\n----------------------\n\nThe following MongoDB resources can help you \ntroubleshoot your {+asql+} configuration:\n\n- The `Community Forum <https://www.mongodb.com/community/forums/>`__\n- `Support <https://www.mongodb.com/services/support>`__\n- `Professional Services <https://www.mongodb.com/services/consulting>`__\n- Your \n  `Customer Success <https://www.mongodb.com/services/customer-success-program>`__ \n  team\n\n",
    "language": "sh",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/tutorial/transition-bic-to-atlas-sql.txt"
  },
  {
    "code": "      :copyable: false\n      \n       <$command> is not allowed or the syntax is incorrect, \n       see the Atlas documentation for more information. \n\n   To learn more about valid syntax, see :manual:`Database Commands\n   </reference/command>`\n\n.. _free-shard-commands-with-limits:\n\nLimited Commands\n~~~~~~~~~~~~~~~~\n\nYou can run the following commands with limits in |starter|\\s:\n\n.. list-table::\n   :header-rows: 1\n   :widths: 15 85\n\n   * - Command\n     - Limit\n\n   * - :dbcommand:`aggregate`\n     -\n\n       - Limits the ``maxTimeMs`` parameter to 300 seconds\n         (``300000``).\n       - Ignores the ``allowDiskUsage`` parameter.\n       - Doesn't support :manual:`$accumulator \n         </reference/operator/aggregation/accumulator/>` and \n         :manual:`$function </reference/operator/aggregation/function/>` \n         operators.\n\n   * - :dbcommand:`count`\n     -\n\n       - Doesn't support the :query:`$where` operator.\n       - Limits the :dbcommand:`count` operation on the ``local`` database\n         to the ``system.replset`` and  ``oplog.rs`` collections.\n\n   * - :dbcommand:`dbStats`\n     - ``M0`` {+free-clusters+} and ``M2/M5`` {+shared-clusters+} don't \n       allow the :dbcommand:`dbStats` command on the ``local`` and \n       ``config`` databases.\n      \n       To learn more, see :ref:`shared-limits-ops`. \n   \n   * - :dbcommand:`distinct`\n     - Doesn't support :query:`$where` operator.\n\n   * - :dbcommand:`find`\n\n     -\n\n       - Doesn't support the :query:`$where` operator.\n       - Limits the :dbcommand:`find` operation on the ``local`` database\n         to the ``oplog.rs`` collection.\n       - Limits the :dbcommand:`find` operation to using an equality condition\n         when querying the ``ns`` field in the ``oplog.rs`` collection on\n         the ``local`` database.\n\n",
    "language": "shell",
    "type": "code-block",
    "id": "",
    "path": "/Users/kyle.rollins/Documents/GitHub/cloud-docs/source/unsupported-commands.txt"
  }
]
