For this query, the ``$project`` pipeline stage excludes all 
document fields except ``_id`` and adds a ``score`` field, which
displays the document's relevance score.

.. io-code-block:: 
    :copyable: true 
    
    .. input:: 
      :language: javascript
      :linenos:

      db.fruit.aggregate([
        {
          "$search": {
            "compound": {
              "must": [{
                "text": {
                  "query": "varieties",
                  "path": "description"
                }
              }],
              "should": [{
                "text": {
                  "query": "Fuji",
                  "path": "description"
                }
              }]
            }
          }
        },
        {
          "$project": {
            "score": { "$meta": "searchScore" }
          }
        }
      ])

    .. output:: 
      :language: javascript
      :visible: false

      { "_id" : 1, "score" : 0.6425117254257202 }
      { "_id" : 3, "score" : 0.21649497747421265 }

The document with ``_id: 1`` has a higher score because its
``description`` field contains the word ``Fuji``, satisfying the
``should`` clause.